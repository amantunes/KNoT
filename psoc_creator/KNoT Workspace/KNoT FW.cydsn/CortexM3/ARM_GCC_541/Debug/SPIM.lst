ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPIM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	SPIM_initVar
  20              		.bss
  21              		.type	SPIM_initVar, %object
  22              		.size	SPIM_initVar, 1
  23              	SPIM_initVar:
  24 0000 00       		.space	1
  25              		.comm	SPIM_swStatusTx,1,1
  26              		.comm	SPIM_swStatusRx,1,1
  27              		.section	.text.SPIM_Init,"ax",%progbits
  28              		.align	2
  29              		.global	SPIM_Init
  30              		.thumb
  31              		.thumb_func
  32              		.type	SPIM_Init, %function
  33              	SPIM_Init:
  34              	.LFB0:
  35              		.file 1 "Generated_Source\\PSoC5\\SPIM.c"
   1:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/SPIM.c **** * File Name: SPIM.c
   3:Generated_Source\PSoC5/SPIM.c **** * Version 2.50
   4:Generated_Source\PSoC5/SPIM.c **** *
   5:Generated_Source\PSoC5/SPIM.c **** * Description:
   6:Generated_Source\PSoC5/SPIM.c **** *  This file provides all API functionality of the SPI Master component.
   7:Generated_Source\PSoC5/SPIM.c **** *
   8:Generated_Source\PSoC5/SPIM.c **** * Note:
   9:Generated_Source\PSoC5/SPIM.c **** *  None.
  10:Generated_Source\PSoC5/SPIM.c **** *
  11:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
  12:Generated_Source\PSoC5/SPIM.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/SPIM.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/SPIM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/SPIM.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/SPIM.c **** 
  18:Generated_Source\PSoC5/SPIM.c **** #include "SPIM_PVT.h"
  19:Generated_Source\PSoC5/SPIM.c **** 
  20:Generated_Source\PSoC5/SPIM.c **** #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_txBuffer[SPIM_TX_BUFFER_SIZE];
  22:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_txBufferFull;
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 2


  23:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_txBufferRead;
  24:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_txBufferWrite;
  25:Generated_Source\PSoC5/SPIM.c **** #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  26:Generated_Source\PSoC5/SPIM.c **** 
  27:Generated_Source\PSoC5/SPIM.c **** #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  28:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE];
  29:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_rxBufferFull;
  30:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_rxBufferRead;
  31:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_rxBufferWrite;
  32:Generated_Source\PSoC5/SPIM.c **** #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  33:Generated_Source\PSoC5/SPIM.c **** 
  34:Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_initVar = 0u;
  35:Generated_Source\PSoC5/SPIM.c **** 
  36:Generated_Source\PSoC5/SPIM.c **** volatile uint8 SPIM_swStatusTx;
  37:Generated_Source\PSoC5/SPIM.c **** volatile uint8 SPIM_swStatusRx;
  38:Generated_Source\PSoC5/SPIM.c **** 
  39:Generated_Source\PSoC5/SPIM.c **** 
  40:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
  41:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Init
  42:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
  43:Generated_Source\PSoC5/SPIM.c **** *
  44:Generated_Source\PSoC5/SPIM.c **** * Summary:
  45:Generated_Source\PSoC5/SPIM.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:Generated_Source\PSoC5/SPIM.c **** *
  47:Generated_Source\PSoC5/SPIM.c **** * Parameters:
  48:Generated_Source\PSoC5/SPIM.c **** *  None.
  49:Generated_Source\PSoC5/SPIM.c **** *
  50:Generated_Source\PSoC5/SPIM.c **** * Return:
  51:Generated_Source\PSoC5/SPIM.c **** *  None.
  52:Generated_Source\PSoC5/SPIM.c **** *
  53:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
  54:Generated_Source\PSoC5/SPIM.c **** *  When this function is called it initializes all of the necessary parameters
  55:Generated_Source\PSoC5/SPIM.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:Generated_Source\PSoC5/SPIM.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:Generated_Source\PSoC5/SPIM.c **** *  clearing the FIFO and Status Register.
  58:Generated_Source\PSoC5/SPIM.c **** *
  59:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
  60:Generated_Source\PSoC5/SPIM.c **** *  No.
  61:Generated_Source\PSoC5/SPIM.c **** *
  62:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
  63:Generated_Source\PSoC5/SPIM.c **** void SPIM_Init(void) 
  64:Generated_Source\PSoC5/SPIM.c **** {
  36              		.loc 1 64 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC5/SPIM.c ****     /* Initialize the Bit counter */
  66:Generated_Source\PSoC5/SPIM.c ****     SPIM_COUNTER_PERIOD_REG = SPIM_BITCTR_INIT;
  46              		.loc 1 66 0
  47 0004 134B     		ldr	r3, .L2
  48 0006 0F22     		movs	r2, #15
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 3


  49 0008 1A70     		strb	r2, [r3]
  67:Generated_Source\PSoC5/SPIM.c **** 
  68:Generated_Source\PSoC5/SPIM.c ****     /* Init TX ISR  */
  69:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
  70:Generated_Source\PSoC5/SPIM.c ****         CyIntDisable         (SPIM_TX_ISR_NUMBER);
  50              		.loc 1 70 0
  51 000a 134B     		ldr	r3, .L2+4
  52 000c 0222     		movs	r2, #2
  53 000e 1A60     		str	r2, [r3]
  71:Generated_Source\PSoC5/SPIM.c ****         CyIntSetPriority     (SPIM_TX_ISR_NUMBER,  SPIM_TX_ISR_PRIORITY);
  54              		.loc 1 71 0
  55 0010 0721     		movs	r1, #7
  56 0012 0120     		movs	r0, #1
  57 0014 FFF7FEFF 		bl	CyIntSetPriority
  72:Generated_Source\PSoC5/SPIM.c ****         (void) CyIntSetVector(SPIM_TX_ISR_NUMBER, &SPIM_TX_ISR);
  58              		.loc 1 72 0
  59 0018 1049     		ldr	r1, .L2+8
  60 001a 0120     		movs	r0, #1
  61 001c FFF7FEFF 		bl	CyIntSetVector
  73:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
  74:Generated_Source\PSoC5/SPIM.c **** 
  75:Generated_Source\PSoC5/SPIM.c ****     /* Init RX ISR  */
  76:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
  77:Generated_Source\PSoC5/SPIM.c ****         CyIntDisable         (SPIM_RX_ISR_NUMBER);
  62              		.loc 1 77 0
  63 0020 0D4B     		ldr	r3, .L2+4
  64 0022 0122     		movs	r2, #1
  65 0024 1A60     		str	r2, [r3]
  78:Generated_Source\PSoC5/SPIM.c ****         CyIntSetPriority     (SPIM_RX_ISR_NUMBER,  SPIM_RX_ISR_PRIORITY);
  66              		.loc 1 78 0
  67 0026 0721     		movs	r1, #7
  68 0028 0020     		movs	r0, #0
  69 002a FFF7FEFF 		bl	CyIntSetPriority
  79:Generated_Source\PSoC5/SPIM.c ****         (void) CyIntSetVector(SPIM_RX_ISR_NUMBER, &SPIM_RX_ISR);
  70              		.loc 1 79 0
  71 002e 0C49     		ldr	r1, .L2+12
  72 0030 0020     		movs	r0, #0
  73 0032 FFF7FEFF 		bl	CyIntSetVector
  80:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
  81:Generated_Source\PSoC5/SPIM.c **** 
  82:Generated_Source\PSoC5/SPIM.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:Generated_Source\PSoC5/SPIM.c ****     SPIM_ClearFIFO();
  74              		.loc 1 83 0
  75 0036 FFF7FEFF 		bl	SPIM_ClearFIFO
  84:Generated_Source\PSoC5/SPIM.c **** 
  85:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  86:Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferFull  = 0u;
  87:Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferRead  = 0u;
  88:Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferWrite = 0u;
  89:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  90:Generated_Source\PSoC5/SPIM.c **** 
  91:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  92:Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferFull  = 0u;
  93:Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferRead  = 0u;
  94:Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferWrite = 0u;
  95:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  96:Generated_Source\PSoC5/SPIM.c **** 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 4


  97:Generated_Source\PSoC5/SPIM.c ****     (void) SPIM_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  76              		.loc 1 97 0
  77 003a FFF7FEFF 		bl	SPIM_ReadTxStatus
  98:Generated_Source\PSoC5/SPIM.c ****     (void) SPIM_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  78              		.loc 1 98 0
  79 003e FFF7FEFF 		bl	SPIM_ReadRxStatus
  99:Generated_Source\PSoC5/SPIM.c **** 
 100:Generated_Source\PSoC5/SPIM.c ****     /* Configure TX and RX interrupt mask */
 101:Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = SPIM_TX_INIT_INTERRUPTS_MASK;
  80              		.loc 1 101 0
  81 0042 084B     		ldr	r3, .L2+16
  82 0044 0422     		movs	r2, #4
  83 0046 1A70     		strb	r2, [r3]
 102:Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_MASK_REG = SPIM_RX_INIT_INTERRUPTS_MASK;
  84              		.loc 1 102 0
  85 0048 074B     		ldr	r3, .L2+20
  86 004a 2022     		movs	r2, #32
  87 004c 1A70     		strb	r2, [r3]
 103:Generated_Source\PSoC5/SPIM.c **** }
  88              		.loc 1 103 0
  89 004e 00BF     		nop
  90 0050 80BD     		pop	{r7, pc}
  91              	.L3:
  92 0052 00BF     		.align	2
  93              	.L2:
  94 0054 8D640040 		.word	1073767565
  95 0058 80E100E0 		.word	-536813184
  96 005c 00000000 		.word	SPIM_TX_ISR
  97 0060 00000000 		.word	SPIM_RX_ISR
  98 0064 8E640040 		.word	1073767566
  99 0068 8F640040 		.word	1073767567
 100              		.cfi_endproc
 101              	.LFE0:
 102              		.size	SPIM_Init, .-SPIM_Init
 103              		.section	.text.SPIM_Enable,"ax",%progbits
 104              		.align	2
 105              		.global	SPIM_Enable
 106              		.thumb
 107              		.thumb_func
 108              		.type	SPIM_Enable, %function
 109              	SPIM_Enable:
 110              	.LFB1:
 104:Generated_Source\PSoC5/SPIM.c **** 
 105:Generated_Source\PSoC5/SPIM.c **** 
 106:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 107:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Enable
 108:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 109:Generated_Source\PSoC5/SPIM.c **** *
 110:Generated_Source\PSoC5/SPIM.c **** * Summary:
 111:Generated_Source\PSoC5/SPIM.c **** *  Enable SPIM component.
 112:Generated_Source\PSoC5/SPIM.c **** *
 113:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 114:Generated_Source\PSoC5/SPIM.c **** *  None.
 115:Generated_Source\PSoC5/SPIM.c **** *
 116:Generated_Source\PSoC5/SPIM.c **** * Return:
 117:Generated_Source\PSoC5/SPIM.c **** *  None.
 118:Generated_Source\PSoC5/SPIM.c **** *
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 5


 119:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 120:Generated_Source\PSoC5/SPIM.c **** void SPIM_Enable(void) 
 121:Generated_Source\PSoC5/SPIM.c **** {
 111              		.loc 1 121 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 8
 114              		@ frame_needed = 1, uses_anonymous_args = 0
 115 0000 80B5     		push	{r7, lr}
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 7, -8
 118              		.cfi_offset 14, -4
 119 0002 82B0     		sub	sp, sp, #8
 120              		.cfi_def_cfa_offset 16
 121 0004 00AF     		add	r7, sp, #0
 122              		.cfi_def_cfa_register 7
 122:Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 123:Generated_Source\PSoC5/SPIM.c **** 
 124:Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 123              		.loc 1 124 0
 124 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 125 000a 0346     		mov	r3, r0
 126 000c FB71     		strb	r3, [r7, #7]
 125:Generated_Source\PSoC5/SPIM.c ****     SPIM_COUNTER_CONTROL_REG |= SPIM_CNTR_ENABLE;
 127              		.loc 1 125 0
 128 000e 124A     		ldr	r2, .L5
 129 0010 114B     		ldr	r3, .L5
 130 0012 1B78     		ldrb	r3, [r3]
 131 0014 DBB2     		uxtb	r3, r3
 132 0016 43F02003 		orr	r3, r3, #32
 133 001a DBB2     		uxtb	r3, r3
 134 001c 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
 135              		.loc 1 126 0
 136 001e 0F4A     		ldr	r2, .L5+4
 137 0020 0E4B     		ldr	r3, .L5+4
 138 0022 1B78     		ldrb	r3, [r3]
 139 0024 DBB2     		uxtb	r3, r3
 140 0026 43F01003 		orr	r3, r3, #16
 141 002a DBB2     		uxtb	r3, r3
 142 002c 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
 143              		.loc 1 127 0
 144 002e 0C4A     		ldr	r2, .L5+8
 145 0030 0B4B     		ldr	r3, .L5+8
 146 0032 1B78     		ldrb	r3, [r3]
 147 0034 DBB2     		uxtb	r3, r3
 148 0036 43F01003 		orr	r3, r3, #16
 149 003a DBB2     		uxtb	r3, r3
 150 003c 1370     		strb	r3, [r2]
 128:Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 151              		.loc 1 128 0
 152 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 153 0040 1846     		mov	r0, r3
 154 0042 FFF7FEFF 		bl	CyExitCriticalSection
 129:Generated_Source\PSoC5/SPIM.c **** 
 130:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 131:Generated_Source\PSoC5/SPIM.c ****         SPIM_IntClock_Enable();
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 6


 132:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 133:Generated_Source\PSoC5/SPIM.c **** 
 134:Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableTxInt();
 155              		.loc 1 134 0
 156 0046 FFF7FEFF 		bl	SPIM_EnableTxInt
 135:Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableRxInt();
 157              		.loc 1 135 0
 158 004a FFF7FEFF 		bl	SPIM_EnableRxInt
 136:Generated_Source\PSoC5/SPIM.c **** }
 159              		.loc 1 136 0
 160 004e 00BF     		nop
 161 0050 0837     		adds	r7, r7, #8
 162              		.cfi_def_cfa_offset 8
 163 0052 BD46     		mov	sp, r7
 164              		.cfi_def_cfa_register 13
 165              		@ sp needed
 166 0054 80BD     		pop	{r7, pc}
 167              	.L6:
 168 0056 00BF     		.align	2
 169              	.L5:
 170 0058 9D640040 		.word	1073767581
 171 005c 9E640040 		.word	1073767582
 172 0060 9F640040 		.word	1073767583
 173              		.cfi_endproc
 174              	.LFE1:
 175              		.size	SPIM_Enable, .-SPIM_Enable
 176              		.section	.text.SPIM_Start,"ax",%progbits
 177              		.align	2
 178              		.global	SPIM_Start
 179              		.thumb
 180              		.thumb_func
 181              		.type	SPIM_Start, %function
 182              	SPIM_Start:
 183              	.LFB2:
 137:Generated_Source\PSoC5/SPIM.c **** 
 138:Generated_Source\PSoC5/SPIM.c **** 
 139:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 140:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Start
 141:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 142:Generated_Source\PSoC5/SPIM.c **** *
 143:Generated_Source\PSoC5/SPIM.c **** * Summary:
 144:Generated_Source\PSoC5/SPIM.c **** *  Initialize and Enable the SPI Master component.
 145:Generated_Source\PSoC5/SPIM.c **** *
 146:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 147:Generated_Source\PSoC5/SPIM.c **** *  None.
 148:Generated_Source\PSoC5/SPIM.c **** *
 149:Generated_Source\PSoC5/SPIM.c **** * Return:
 150:Generated_Source\PSoC5/SPIM.c **** *  None.
 151:Generated_Source\PSoC5/SPIM.c **** *
 152:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 153:Generated_Source\PSoC5/SPIM.c **** *  SPIM_initVar - used to check initial configuration, modified on
 154:Generated_Source\PSoC5/SPIM.c **** *  first function call.
 155:Generated_Source\PSoC5/SPIM.c **** *
 156:Generated_Source\PSoC5/SPIM.c **** * Theory:
 157:Generated_Source\PSoC5/SPIM.c **** *  Enable the clock input to enable operation.
 158:Generated_Source\PSoC5/SPIM.c **** *
 159:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 7


 160:Generated_Source\PSoC5/SPIM.c **** *  No.
 161:Generated_Source\PSoC5/SPIM.c **** *
 162:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 163:Generated_Source\PSoC5/SPIM.c **** void SPIM_Start(void) 
 164:Generated_Source\PSoC5/SPIM.c **** {
 184              		.loc 1 164 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 1, uses_anonymous_args = 0
 188 0000 80B5     		push	{r7, lr}
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 7, -8
 191              		.cfi_offset 14, -4
 192 0002 00AF     		add	r7, sp, #0
 193              		.cfi_def_cfa_register 7
 165:Generated_Source\PSoC5/SPIM.c ****     if(0u == SPIM_initVar)
 194              		.loc 1 165 0
 195 0004 064B     		ldr	r3, .L9
 196 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 197 0008 002B     		cmp	r3, #0
 198 000a 04D1     		bne	.L8
 166:Generated_Source\PSoC5/SPIM.c ****     {
 167:Generated_Source\PSoC5/SPIM.c ****         SPIM_Init();
 199              		.loc 1 167 0
 200 000c FFF7FEFF 		bl	SPIM_Init
 168:Generated_Source\PSoC5/SPIM.c ****         SPIM_initVar = 1u;
 201              		.loc 1 168 0
 202 0010 034B     		ldr	r3, .L9
 203 0012 0122     		movs	r2, #1
 204 0014 1A70     		strb	r2, [r3]
 205              	.L8:
 169:Generated_Source\PSoC5/SPIM.c ****     }
 170:Generated_Source\PSoC5/SPIM.c **** 
 171:Generated_Source\PSoC5/SPIM.c ****     SPIM_Enable();
 206              		.loc 1 171 0
 207 0016 FFF7FEFF 		bl	SPIM_Enable
 172:Generated_Source\PSoC5/SPIM.c **** }
 208              		.loc 1 172 0
 209 001a 00BF     		nop
 210 001c 80BD     		pop	{r7, pc}
 211              	.L10:
 212 001e 00BF     		.align	2
 213              	.L9:
 214 0020 00000000 		.word	SPIM_initVar
 215              		.cfi_endproc
 216              	.LFE2:
 217              		.size	SPIM_Start, .-SPIM_Start
 218              		.section	.text.SPIM_Stop,"ax",%progbits
 219              		.align	2
 220              		.global	SPIM_Stop
 221              		.thumb
 222              		.thumb_func
 223              		.type	SPIM_Stop, %function
 224              	SPIM_Stop:
 225              	.LFB3:
 173:Generated_Source\PSoC5/SPIM.c **** 
 174:Generated_Source\PSoC5/SPIM.c **** 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 8


 175:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Stop
 177:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 178:Generated_Source\PSoC5/SPIM.c **** *
 179:Generated_Source\PSoC5/SPIM.c **** * Summary:
 180:Generated_Source\PSoC5/SPIM.c **** *  Disable the SPI Master component.
 181:Generated_Source\PSoC5/SPIM.c **** *
 182:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 183:Generated_Source\PSoC5/SPIM.c **** *  None.
 184:Generated_Source\PSoC5/SPIM.c **** *
 185:Generated_Source\PSoC5/SPIM.c **** * Return:
 186:Generated_Source\PSoC5/SPIM.c **** *  None.
 187:Generated_Source\PSoC5/SPIM.c **** *
 188:Generated_Source\PSoC5/SPIM.c **** * Theory:
 189:Generated_Source\PSoC5/SPIM.c **** *  Disable the clock input to enable operation.
 190:Generated_Source\PSoC5/SPIM.c **** *
 191:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 192:Generated_Source\PSoC5/SPIM.c **** void SPIM_Stop(void) 
 193:Generated_Source\PSoC5/SPIM.c **** {
 226              		.loc 1 193 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 8
 229              		@ frame_needed = 1, uses_anonymous_args = 0
 230 0000 80B5     		push	{r7, lr}
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 7, -8
 233              		.cfi_offset 14, -4
 234 0002 82B0     		sub	sp, sp, #8
 235              		.cfi_def_cfa_offset 16
 236 0004 00AF     		add	r7, sp, #0
 237              		.cfi_def_cfa_register 7
 194:Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 195:Generated_Source\PSoC5/SPIM.c **** 
 196:Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 238              		.loc 1 196 0
 239 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 240 000a 0346     		mov	r3, r0
 241 000c FB71     		strb	r3, [r7, #7]
 197:Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 242              		.loc 1 197 0
 243 000e 0E4A     		ldr	r2, .L12
 244 0010 0D4B     		ldr	r3, .L12
 245 0012 1B78     		ldrb	r3, [r3]
 246 0014 DBB2     		uxtb	r3, r3
 247 0016 23F01003 		bic	r3, r3, #16
 248 001a DBB2     		uxtb	r3, r3
 249 001c 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 250              		.loc 1 198 0
 251 001e 0B4A     		ldr	r2, .L12+4
 252 0020 0A4B     		ldr	r3, .L12+4
 253 0022 1B78     		ldrb	r3, [r3]
 254 0024 DBB2     		uxtb	r3, r3
 255 0026 23F01003 		bic	r3, r3, #16
 256 002a DBB2     		uxtb	r3, r3
 257 002c 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 9


 258              		.loc 1 199 0
 259 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 260 0030 1846     		mov	r0, r3
 261 0032 FFF7FEFF 		bl	CyExitCriticalSection
 200:Generated_Source\PSoC5/SPIM.c **** 
 201:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 202:Generated_Source\PSoC5/SPIM.c ****         SPIM_IntClock_Disable();
 203:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 204:Generated_Source\PSoC5/SPIM.c **** 
 205:Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableTxInt();
 262              		.loc 1 205 0
 263 0036 FFF7FEFF 		bl	SPIM_DisableTxInt
 206:Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableRxInt();
 264              		.loc 1 206 0
 265 003a FFF7FEFF 		bl	SPIM_DisableRxInt
 207:Generated_Source\PSoC5/SPIM.c **** }
 266              		.loc 1 207 0
 267 003e 00BF     		nop
 268 0040 0837     		adds	r7, r7, #8
 269              		.cfi_def_cfa_offset 8
 270 0042 BD46     		mov	sp, r7
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 0044 80BD     		pop	{r7, pc}
 274              	.L13:
 275 0046 00BF     		.align	2
 276              	.L12:
 277 0048 9E640040 		.word	1073767582
 278 004c 9F640040 		.word	1073767583
 279              		.cfi_endproc
 280              	.LFE3:
 281              		.size	SPIM_Stop, .-SPIM_Stop
 282              		.section	.text.SPIM_EnableTxInt,"ax",%progbits
 283              		.align	2
 284              		.global	SPIM_EnableTxInt
 285              		.thumb
 286              		.thumb_func
 287              		.type	SPIM_EnableTxInt, %function
 288              	SPIM_EnableTxInt:
 289              	.LFB4:
 208:Generated_Source\PSoC5/SPIM.c **** 
 209:Generated_Source\PSoC5/SPIM.c **** 
 210:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 211:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_EnableTxInt
 212:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 213:Generated_Source\PSoC5/SPIM.c **** *
 214:Generated_Source\PSoC5/SPIM.c **** * Summary:
 215:Generated_Source\PSoC5/SPIM.c **** *  Enable internal Tx interrupt generation.
 216:Generated_Source\PSoC5/SPIM.c **** *
 217:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 218:Generated_Source\PSoC5/SPIM.c **** *  None.
 219:Generated_Source\PSoC5/SPIM.c **** *
 220:Generated_Source\PSoC5/SPIM.c **** * Return:
 221:Generated_Source\PSoC5/SPIM.c **** *  None.
 222:Generated_Source\PSoC5/SPIM.c **** *
 223:Generated_Source\PSoC5/SPIM.c **** * Theory:
 224:Generated_Source\PSoC5/SPIM.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 10


 225:Generated_Source\PSoC5/SPIM.c **** *
 226:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 227:Generated_Source\PSoC5/SPIM.c **** void SPIM_EnableTxInt(void) 
 228:Generated_Source\PSoC5/SPIM.c **** {
 290              		.loc 1 228 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294              		@ link register save eliminated.
 295 0000 80B4     		push	{r7}
 296              		.cfi_def_cfa_offset 4
 297              		.cfi_offset 7, -4
 298 0002 00AF     		add	r7, sp, #0
 299              		.cfi_def_cfa_register 7
 229:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 230:Generated_Source\PSoC5/SPIM.c ****         CyIntEnable(SPIM_TX_ISR_NUMBER);
 300              		.loc 1 230 0
 301 0004 034B     		ldr	r3, .L15
 302 0006 0222     		movs	r2, #2
 303 0008 1A60     		str	r2, [r3]
 231:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 232:Generated_Source\PSoC5/SPIM.c **** }
 304              		.loc 1 232 0
 305 000a 00BF     		nop
 306 000c BD46     		mov	sp, r7
 307              		.cfi_def_cfa_register 13
 308              		@ sp needed
 309 000e 80BC     		pop	{r7}
 310              		.cfi_restore 7
 311              		.cfi_def_cfa_offset 0
 312 0010 7047     		bx	lr
 313              	.L16:
 314 0012 00BF     		.align	2
 315              	.L15:
 316 0014 00E100E0 		.word	-536813312
 317              		.cfi_endproc
 318              	.LFE4:
 319              		.size	SPIM_EnableTxInt, .-SPIM_EnableTxInt
 320              		.section	.text.SPIM_EnableRxInt,"ax",%progbits
 321              		.align	2
 322              		.global	SPIM_EnableRxInt
 323              		.thumb
 324              		.thumb_func
 325              		.type	SPIM_EnableRxInt, %function
 326              	SPIM_EnableRxInt:
 327              	.LFB5:
 233:Generated_Source\PSoC5/SPIM.c **** 
 234:Generated_Source\PSoC5/SPIM.c **** 
 235:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 236:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_EnableRxInt
 237:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 238:Generated_Source\PSoC5/SPIM.c **** *
 239:Generated_Source\PSoC5/SPIM.c **** * Summary:
 240:Generated_Source\PSoC5/SPIM.c **** *  Enable internal Rx interrupt generation.
 241:Generated_Source\PSoC5/SPIM.c **** *
 242:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 243:Generated_Source\PSoC5/SPIM.c **** *  None.
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 11


 244:Generated_Source\PSoC5/SPIM.c **** *
 245:Generated_Source\PSoC5/SPIM.c **** * Return:
 246:Generated_Source\PSoC5/SPIM.c **** *  None.
 247:Generated_Source\PSoC5/SPIM.c **** *
 248:Generated_Source\PSoC5/SPIM.c **** * Theory:
 249:Generated_Source\PSoC5/SPIM.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:Generated_Source\PSoC5/SPIM.c **** *
 251:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 252:Generated_Source\PSoC5/SPIM.c **** void SPIM_EnableRxInt(void) 
 253:Generated_Source\PSoC5/SPIM.c **** {
 328              		.loc 1 253 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 1, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 333 0000 80B4     		push	{r7}
 334              		.cfi_def_cfa_offset 4
 335              		.cfi_offset 7, -4
 336 0002 00AF     		add	r7, sp, #0
 337              		.cfi_def_cfa_register 7
 254:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 255:Generated_Source\PSoC5/SPIM.c ****         CyIntEnable(SPIM_RX_ISR_NUMBER);
 338              		.loc 1 255 0
 339 0004 034B     		ldr	r3, .L18
 340 0006 0122     		movs	r2, #1
 341 0008 1A60     		str	r2, [r3]
 256:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 257:Generated_Source\PSoC5/SPIM.c **** }
 342              		.loc 1 257 0
 343 000a 00BF     		nop
 344 000c BD46     		mov	sp, r7
 345              		.cfi_def_cfa_register 13
 346              		@ sp needed
 347 000e 80BC     		pop	{r7}
 348              		.cfi_restore 7
 349              		.cfi_def_cfa_offset 0
 350 0010 7047     		bx	lr
 351              	.L19:
 352 0012 00BF     		.align	2
 353              	.L18:
 354 0014 00E100E0 		.word	-536813312
 355              		.cfi_endproc
 356              	.LFE5:
 357              		.size	SPIM_EnableRxInt, .-SPIM_EnableRxInt
 358              		.section	.text.SPIM_DisableTxInt,"ax",%progbits
 359              		.align	2
 360              		.global	SPIM_DisableTxInt
 361              		.thumb
 362              		.thumb_func
 363              		.type	SPIM_DisableTxInt, %function
 364              	SPIM_DisableTxInt:
 365              	.LFB6:
 258:Generated_Source\PSoC5/SPIM.c **** 
 259:Generated_Source\PSoC5/SPIM.c **** 
 260:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 261:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_DisableTxInt
 262:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 12


 263:Generated_Source\PSoC5/SPIM.c **** *
 264:Generated_Source\PSoC5/SPIM.c **** * Summary:
 265:Generated_Source\PSoC5/SPIM.c **** *  Disable internal Tx interrupt generation.
 266:Generated_Source\PSoC5/SPIM.c **** *
 267:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 268:Generated_Source\PSoC5/SPIM.c **** *  None.
 269:Generated_Source\PSoC5/SPIM.c **** *
 270:Generated_Source\PSoC5/SPIM.c **** * Return:
 271:Generated_Source\PSoC5/SPIM.c **** *  None.
 272:Generated_Source\PSoC5/SPIM.c **** *
 273:Generated_Source\PSoC5/SPIM.c **** * Theory:
 274:Generated_Source\PSoC5/SPIM.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:Generated_Source\PSoC5/SPIM.c **** *
 276:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 277:Generated_Source\PSoC5/SPIM.c **** void SPIM_DisableTxInt(void) 
 278:Generated_Source\PSoC5/SPIM.c **** {
 366              		.loc 1 278 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371 0000 80B4     		push	{r7}
 372              		.cfi_def_cfa_offset 4
 373              		.cfi_offset 7, -4
 374 0002 00AF     		add	r7, sp, #0
 375              		.cfi_def_cfa_register 7
 279:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 280:Generated_Source\PSoC5/SPIM.c ****         CyIntDisable(SPIM_TX_ISR_NUMBER);
 376              		.loc 1 280 0
 377 0004 034B     		ldr	r3, .L21
 378 0006 0222     		movs	r2, #2
 379 0008 1A60     		str	r2, [r3]
 281:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 282:Generated_Source\PSoC5/SPIM.c **** }
 380              		.loc 1 282 0
 381 000a 00BF     		nop
 382 000c BD46     		mov	sp, r7
 383              		.cfi_def_cfa_register 13
 384              		@ sp needed
 385 000e 80BC     		pop	{r7}
 386              		.cfi_restore 7
 387              		.cfi_def_cfa_offset 0
 388 0010 7047     		bx	lr
 389              	.L22:
 390 0012 00BF     		.align	2
 391              	.L21:
 392 0014 80E100E0 		.word	-536813184
 393              		.cfi_endproc
 394              	.LFE6:
 395              		.size	SPIM_DisableTxInt, .-SPIM_DisableTxInt
 396              		.section	.text.SPIM_DisableRxInt,"ax",%progbits
 397              		.align	2
 398              		.global	SPIM_DisableRxInt
 399              		.thumb
 400              		.thumb_func
 401              		.type	SPIM_DisableRxInt, %function
 402              	SPIM_DisableRxInt:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 13


 403              	.LFB7:
 283:Generated_Source\PSoC5/SPIM.c **** 
 284:Generated_Source\PSoC5/SPIM.c **** 
 285:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_DisableRxInt
 287:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 288:Generated_Source\PSoC5/SPIM.c **** *
 289:Generated_Source\PSoC5/SPIM.c **** * Summary:
 290:Generated_Source\PSoC5/SPIM.c **** *  Disable internal Rx interrupt generation.
 291:Generated_Source\PSoC5/SPIM.c **** *
 292:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 293:Generated_Source\PSoC5/SPIM.c **** *  None.
 294:Generated_Source\PSoC5/SPIM.c **** *
 295:Generated_Source\PSoC5/SPIM.c **** * Return:
 296:Generated_Source\PSoC5/SPIM.c **** *  None.
 297:Generated_Source\PSoC5/SPIM.c **** *
 298:Generated_Source\PSoC5/SPIM.c **** * Theory:
 299:Generated_Source\PSoC5/SPIM.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:Generated_Source\PSoC5/SPIM.c **** *
 301:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/SPIM.c **** void SPIM_DisableRxInt(void) 
 303:Generated_Source\PSoC5/SPIM.c **** {
 404              		.loc 1 303 0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 1, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 409 0000 80B4     		push	{r7}
 410              		.cfi_def_cfa_offset 4
 411              		.cfi_offset 7, -4
 412 0002 00AF     		add	r7, sp, #0
 413              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 305:Generated_Source\PSoC5/SPIM.c ****         CyIntDisable(SPIM_RX_ISR_NUMBER);
 414              		.loc 1 305 0
 415 0004 034B     		ldr	r3, .L24
 416 0006 0122     		movs	r2, #1
 417 0008 1A60     		str	r2, [r3]
 306:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 307:Generated_Source\PSoC5/SPIM.c **** }
 418              		.loc 1 307 0
 419 000a 00BF     		nop
 420 000c BD46     		mov	sp, r7
 421              		.cfi_def_cfa_register 13
 422              		@ sp needed
 423 000e 80BC     		pop	{r7}
 424              		.cfi_restore 7
 425              		.cfi_def_cfa_offset 0
 426 0010 7047     		bx	lr
 427              	.L25:
 428 0012 00BF     		.align	2
 429              	.L24:
 430 0014 80E100E0 		.word	-536813184
 431              		.cfi_endproc
 432              	.LFE7:
 433              		.size	SPIM_DisableRxInt, .-SPIM_DisableRxInt
 434              		.section	.text.SPIM_SetTxInterruptMode,"ax",%progbits
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 14


 435              		.align	2
 436              		.global	SPIM_SetTxInterruptMode
 437              		.thumb
 438              		.thumb_func
 439              		.type	SPIM_SetTxInterruptMode, %function
 440              	SPIM_SetTxInterruptMode:
 441              	.LFB8:
 308:Generated_Source\PSoC5/SPIM.c **** 
 309:Generated_Source\PSoC5/SPIM.c **** 
 310:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 311:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_SetTxInterruptMode
 312:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 313:Generated_Source\PSoC5/SPIM.c **** *
 314:Generated_Source\PSoC5/SPIM.c **** * Summary:
 315:Generated_Source\PSoC5/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 316:Generated_Source\PSoC5/SPIM.c **** *
 317:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 318:Generated_Source\PSoC5/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:Generated_Source\PSoC5/SPIM.c **** *  header file).
 320:Generated_Source\PSoC5/SPIM.c **** *
 321:Generated_Source\PSoC5/SPIM.c **** * Return:
 322:Generated_Source\PSoC5/SPIM.c **** *  None.
 323:Generated_Source\PSoC5/SPIM.c **** *
 324:Generated_Source\PSoC5/SPIM.c **** * Theory:
 325:Generated_Source\PSoC5/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:Generated_Source\PSoC5/SPIM.c **** *
 327:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 328:Generated_Source\PSoC5/SPIM.c **** void SPIM_SetTxInterruptMode(uint8 intSrc) 
 329:Generated_Source\PSoC5/SPIM.c **** {
 442              		.loc 1 329 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 8
 445              		@ frame_needed = 1, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 447 0000 80B4     		push	{r7}
 448              		.cfi_def_cfa_offset 4
 449              		.cfi_offset 7, -4
 450 0002 83B0     		sub	sp, sp, #12
 451              		.cfi_def_cfa_offset 16
 452 0004 00AF     		add	r7, sp, #0
 453              		.cfi_def_cfa_register 7
 454 0006 0346     		mov	r3, r0
 455 0008 FB71     		strb	r3, [r7, #7]
 330:Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = intSrc;
 456              		.loc 1 330 0
 457 000a 044A     		ldr	r2, .L27
 458 000c FB79     		ldrb	r3, [r7, #7]
 459 000e 1370     		strb	r3, [r2]
 331:Generated_Source\PSoC5/SPIM.c **** }
 460              		.loc 1 331 0
 461 0010 00BF     		nop
 462 0012 0C37     		adds	r7, r7, #12
 463              		.cfi_def_cfa_offset 4
 464 0014 BD46     		mov	sp, r7
 465              		.cfi_def_cfa_register 13
 466              		@ sp needed
 467 0016 80BC     		pop	{r7}
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 15


 468              		.cfi_restore 7
 469              		.cfi_def_cfa_offset 0
 470 0018 7047     		bx	lr
 471              	.L28:
 472 001a 00BF     		.align	2
 473              	.L27:
 474 001c 8E640040 		.word	1073767566
 475              		.cfi_endproc
 476              	.LFE8:
 477              		.size	SPIM_SetTxInterruptMode, .-SPIM_SetTxInterruptMode
 478              		.section	.text.SPIM_SetRxInterruptMode,"ax",%progbits
 479              		.align	2
 480              		.global	SPIM_SetRxInterruptMode
 481              		.thumb
 482              		.thumb_func
 483              		.type	SPIM_SetRxInterruptMode, %function
 484              	SPIM_SetRxInterruptMode:
 485              	.LFB9:
 332:Generated_Source\PSoC5/SPIM.c **** 
 333:Generated_Source\PSoC5/SPIM.c **** 
 334:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 335:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_SetRxInterruptMode
 336:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 337:Generated_Source\PSoC5/SPIM.c **** *
 338:Generated_Source\PSoC5/SPIM.c **** * Summary:
 339:Generated_Source\PSoC5/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 340:Generated_Source\PSoC5/SPIM.c **** *
 341:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 342:Generated_Source\PSoC5/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:Generated_Source\PSoC5/SPIM.c **** *  header file).
 344:Generated_Source\PSoC5/SPIM.c **** *
 345:Generated_Source\PSoC5/SPIM.c **** * Return:
 346:Generated_Source\PSoC5/SPIM.c **** *  None.
 347:Generated_Source\PSoC5/SPIM.c **** *
 348:Generated_Source\PSoC5/SPIM.c **** * Theory:
 349:Generated_Source\PSoC5/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:Generated_Source\PSoC5/SPIM.c **** *
 351:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 352:Generated_Source\PSoC5/SPIM.c **** void SPIM_SetRxInterruptMode(uint8 intSrc) 
 353:Generated_Source\PSoC5/SPIM.c **** {
 486              		.loc 1 353 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 8
 489              		@ frame_needed = 1, uses_anonymous_args = 0
 490              		@ link register save eliminated.
 491 0000 80B4     		push	{r7}
 492              		.cfi_def_cfa_offset 4
 493              		.cfi_offset 7, -4
 494 0002 83B0     		sub	sp, sp, #12
 495              		.cfi_def_cfa_offset 16
 496 0004 00AF     		add	r7, sp, #0
 497              		.cfi_def_cfa_register 7
 498 0006 0346     		mov	r3, r0
 499 0008 FB71     		strb	r3, [r7, #7]
 354:Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  = intSrc;
 500              		.loc 1 354 0
 501 000a 044A     		ldr	r2, .L30
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 16


 502 000c FB79     		ldrb	r3, [r7, #7]
 503 000e 1370     		strb	r3, [r2]
 355:Generated_Source\PSoC5/SPIM.c **** }
 504              		.loc 1 355 0
 505 0010 00BF     		nop
 506 0012 0C37     		adds	r7, r7, #12
 507              		.cfi_def_cfa_offset 4
 508 0014 BD46     		mov	sp, r7
 509              		.cfi_def_cfa_register 13
 510              		@ sp needed
 511 0016 80BC     		pop	{r7}
 512              		.cfi_restore 7
 513              		.cfi_def_cfa_offset 0
 514 0018 7047     		bx	lr
 515              	.L31:
 516 001a 00BF     		.align	2
 517              	.L30:
 518 001c 8F640040 		.word	1073767567
 519              		.cfi_endproc
 520              	.LFE9:
 521              		.size	SPIM_SetRxInterruptMode, .-SPIM_SetRxInterruptMode
 522              		.section	.text.SPIM_ReadTxStatus,"ax",%progbits
 523              		.align	2
 524              		.global	SPIM_ReadTxStatus
 525              		.thumb
 526              		.thumb_func
 527              		.type	SPIM_ReadTxStatus, %function
 528              	SPIM_ReadTxStatus:
 529              	.LFB10:
 356:Generated_Source\PSoC5/SPIM.c **** 
 357:Generated_Source\PSoC5/SPIM.c **** 
 358:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 359:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadTxStatus
 360:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 361:Generated_Source\PSoC5/SPIM.c **** *
 362:Generated_Source\PSoC5/SPIM.c **** * Summary:
 363:Generated_Source\PSoC5/SPIM.c **** *  Read the Tx status register for the component.
 364:Generated_Source\PSoC5/SPIM.c **** *
 365:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 366:Generated_Source\PSoC5/SPIM.c **** *  None.
 367:Generated_Source\PSoC5/SPIM.c **** *
 368:Generated_Source\PSoC5/SPIM.c **** * Return:
 369:Generated_Source\PSoC5/SPIM.c **** *  Contents of the Tx status register.
 370:Generated_Source\PSoC5/SPIM.c **** *
 371:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 372:Generated_Source\PSoC5/SPIM.c **** *  SPIM_swStatusTx - used to store in software status register,
 373:Generated_Source\PSoC5/SPIM.c **** *  modified every function call - resets to zero.
 374:Generated_Source\PSoC5/SPIM.c **** *
 375:Generated_Source\PSoC5/SPIM.c **** * Theory:
 376:Generated_Source\PSoC5/SPIM.c **** *  Allows the user and the API to read the Tx status register for error
 377:Generated_Source\PSoC5/SPIM.c **** *  detection and flow control.
 378:Generated_Source\PSoC5/SPIM.c **** *
 379:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 380:Generated_Source\PSoC5/SPIM.c **** *  Clear Tx status register of the component.
 381:Generated_Source\PSoC5/SPIM.c **** *
 382:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 383:Generated_Source\PSoC5/SPIM.c **** *  No.
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 17


 384:Generated_Source\PSoC5/SPIM.c **** *
 385:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 386:Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_ReadTxStatus(void) 
 387:Generated_Source\PSoC5/SPIM.c **** {
 530              		.loc 1 387 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 8
 533              		@ frame_needed = 1, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 535 0000 80B4     		push	{r7}
 536              		.cfi_def_cfa_offset 4
 537              		.cfi_offset 7, -4
 538 0002 83B0     		sub	sp, sp, #12
 539              		.cfi_def_cfa_offset 16
 540 0004 00AF     		add	r7, sp, #0
 541              		.cfi_def_cfa_register 7
 388:Generated_Source\PSoC5/SPIM.c ****     uint8 tmpStatus;
 389:Generated_Source\PSoC5/SPIM.c **** 
 390:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 391:Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 392:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 393:Generated_Source\PSoC5/SPIM.c **** 
 394:Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 395:Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusTx = 0u;
 396:Generated_Source\PSoC5/SPIM.c **** 
 397:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 398:Generated_Source\PSoC5/SPIM.c **** 
 399:Generated_Source\PSoC5/SPIM.c ****     #else
 400:Generated_Source\PSoC5/SPIM.c **** 
 401:Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_TX_STATUS_REG;
 542              		.loc 1 401 0
 543 0006 044B     		ldr	r3, .L34
 544 0008 1B78     		ldrb	r3, [r3]
 545 000a FB71     		strb	r3, [r7, #7]
 402:Generated_Source\PSoC5/SPIM.c **** 
 403:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 404:Generated_Source\PSoC5/SPIM.c **** 
 405:Generated_Source\PSoC5/SPIM.c ****     return(tmpStatus);
 546              		.loc 1 405 0
 547 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 406:Generated_Source\PSoC5/SPIM.c **** }
 548              		.loc 1 406 0
 549 000e 1846     		mov	r0, r3
 550 0010 0C37     		adds	r7, r7, #12
 551              		.cfi_def_cfa_offset 4
 552 0012 BD46     		mov	sp, r7
 553              		.cfi_def_cfa_register 13
 554              		@ sp needed
 555 0014 80BC     		pop	{r7}
 556              		.cfi_restore 7
 557              		.cfi_def_cfa_offset 0
 558 0016 7047     		bx	lr
 559              	.L35:
 560              		.align	2
 561              	.L34:
 562 0018 6E640040 		.word	1073767534
 563              		.cfi_endproc
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 18


 564              	.LFE10:
 565              		.size	SPIM_ReadTxStatus, .-SPIM_ReadTxStatus
 566              		.section	.text.SPIM_ReadRxStatus,"ax",%progbits
 567              		.align	2
 568              		.global	SPIM_ReadRxStatus
 569              		.thumb
 570              		.thumb_func
 571              		.type	SPIM_ReadRxStatus, %function
 572              	SPIM_ReadRxStatus:
 573              	.LFB11:
 407:Generated_Source\PSoC5/SPIM.c **** 
 408:Generated_Source\PSoC5/SPIM.c **** 
 409:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 410:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadRxStatus
 411:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 412:Generated_Source\PSoC5/SPIM.c **** *
 413:Generated_Source\PSoC5/SPIM.c **** * Summary:
 414:Generated_Source\PSoC5/SPIM.c **** *  Read the Rx status register for the component.
 415:Generated_Source\PSoC5/SPIM.c **** *
 416:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 417:Generated_Source\PSoC5/SPIM.c **** *  None.
 418:Generated_Source\PSoC5/SPIM.c **** *
 419:Generated_Source\PSoC5/SPIM.c **** * Return:
 420:Generated_Source\PSoC5/SPIM.c **** *  Contents of the Rx status register.
 421:Generated_Source\PSoC5/SPIM.c **** *
 422:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 423:Generated_Source\PSoC5/SPIM.c **** *  SPIM_swStatusRx - used to store in software Rx status register,
 424:Generated_Source\PSoC5/SPIM.c **** *  modified every function call - resets to zero.
 425:Generated_Source\PSoC5/SPIM.c **** *
 426:Generated_Source\PSoC5/SPIM.c **** * Theory:
 427:Generated_Source\PSoC5/SPIM.c **** *  Allows the user and the API to read the Rx status register for error
 428:Generated_Source\PSoC5/SPIM.c **** *  detection and flow control.
 429:Generated_Source\PSoC5/SPIM.c **** *
 430:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 431:Generated_Source\PSoC5/SPIM.c **** *  Clear Rx status register of the component.
 432:Generated_Source\PSoC5/SPIM.c **** *
 433:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 434:Generated_Source\PSoC5/SPIM.c **** *  No.
 435:Generated_Source\PSoC5/SPIM.c **** *
 436:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 437:Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_ReadRxStatus(void) 
 438:Generated_Source\PSoC5/SPIM.c **** {
 574              		.loc 1 438 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 8
 577              		@ frame_needed = 1, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 579 0000 80B4     		push	{r7}
 580              		.cfi_def_cfa_offset 4
 581              		.cfi_offset 7, -4
 582 0002 83B0     		sub	sp, sp, #12
 583              		.cfi_def_cfa_offset 16
 584 0004 00AF     		add	r7, sp, #0
 585              		.cfi_def_cfa_register 7
 439:Generated_Source\PSoC5/SPIM.c ****     uint8 tmpStatus;
 440:Generated_Source\PSoC5/SPIM.c **** 
 441:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 19


 442:Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 443:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
 444:Generated_Source\PSoC5/SPIM.c **** 
 445:Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
 446:Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusRx = 0u;
 447:Generated_Source\PSoC5/SPIM.c **** 
 448:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
 449:Generated_Source\PSoC5/SPIM.c **** 
 450:Generated_Source\PSoC5/SPIM.c ****     #else
 451:Generated_Source\PSoC5/SPIM.c **** 
 452:Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_RX_STATUS_REG;
 586              		.loc 1 452 0
 587 0006 044B     		ldr	r3, .L38
 588 0008 1B78     		ldrb	r3, [r3]
 589 000a FB71     		strb	r3, [r7, #7]
 453:Generated_Source\PSoC5/SPIM.c **** 
 454:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 455:Generated_Source\PSoC5/SPIM.c **** 
 456:Generated_Source\PSoC5/SPIM.c ****     return(tmpStatus);
 590              		.loc 1 456 0
 591 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 457:Generated_Source\PSoC5/SPIM.c **** }
 592              		.loc 1 457 0
 593 000e 1846     		mov	r0, r3
 594 0010 0C37     		adds	r7, r7, #12
 595              		.cfi_def_cfa_offset 4
 596 0012 BD46     		mov	sp, r7
 597              		.cfi_def_cfa_register 13
 598              		@ sp needed
 599 0014 80BC     		pop	{r7}
 600              		.cfi_restore 7
 601              		.cfi_def_cfa_offset 0
 602 0016 7047     		bx	lr
 603              	.L39:
 604              		.align	2
 605              	.L38:
 606 0018 6F640040 		.word	1073767535
 607              		.cfi_endproc
 608              	.LFE11:
 609              		.size	SPIM_ReadRxStatus, .-SPIM_ReadRxStatus
 610              		.section	.text.SPIM_WriteTxData,"ax",%progbits
 611              		.align	2
 612              		.global	SPIM_WriteTxData
 613              		.thumb
 614              		.thumb_func
 615              		.type	SPIM_WriteTxData, %function
 616              	SPIM_WriteTxData:
 617              	.LFB12:
 458:Generated_Source\PSoC5/SPIM.c **** 
 459:Generated_Source\PSoC5/SPIM.c **** 
 460:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 461:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_WriteTxData
 462:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 463:Generated_Source\PSoC5/SPIM.c **** *
 464:Generated_Source\PSoC5/SPIM.c **** * Summary:
 465:Generated_Source\PSoC5/SPIM.c **** *  Write a byte of data to be sent across the SPI.
 466:Generated_Source\PSoC5/SPIM.c **** *
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 20


 467:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 468:Generated_Source\PSoC5/SPIM.c **** *  txDataByte: The data value to send across the SPI.
 469:Generated_Source\PSoC5/SPIM.c **** *
 470:Generated_Source\PSoC5/SPIM.c **** * Return:
 471:Generated_Source\PSoC5/SPIM.c **** *  None.
 472:Generated_Source\PSoC5/SPIM.c **** *
 473:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 474:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 475:Generated_Source\PSoC5/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 476:Generated_Source\PSoC5/SPIM.c **** *  call if TX Software Buffer is used.
 477:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 478:Generated_Source\PSoC5/SPIM.c **** *  have been read from the TX software buffer.
 479:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBuffer[SPIM_TX_BUFFER_SIZE] - used to store
 480:Generated_Source\PSoC5/SPIM.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:Generated_Source\PSoC5/SPIM.c **** *
 482:Generated_Source\PSoC5/SPIM.c **** * Theory:
 483:Generated_Source\PSoC5/SPIM.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:Generated_Source\PSoC5/SPIM.c **** *
 485:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 486:Generated_Source\PSoC5/SPIM.c **** *  If this function is called again before the previous byte is finished then
 487:Generated_Source\PSoC5/SPIM.c **** *  the next byte will be appended to the transfer with no time between
 488:Generated_Source\PSoC5/SPIM.c **** *  the byte transfers. Clear Tx status register of the component.
 489:Generated_Source\PSoC5/SPIM.c **** *
 490:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 491:Generated_Source\PSoC5/SPIM.c **** *  No.
 492:Generated_Source\PSoC5/SPIM.c **** *
 493:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 494:Generated_Source\PSoC5/SPIM.c **** void SPIM_WriteTxData(uint8 txData) 
 495:Generated_Source\PSoC5/SPIM.c **** {
 618              		.loc 1 495 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 8
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623 0000 80B4     		push	{r7}
 624              		.cfi_def_cfa_offset 4
 625              		.cfi_offset 7, -4
 626 0002 83B0     		sub	sp, sp, #12
 627              		.cfi_def_cfa_offset 16
 628 0004 00AF     		add	r7, sp, #0
 629              		.cfi_def_cfa_register 7
 630 0006 0346     		mov	r3, r0
 631 0008 FB71     		strb	r3, [r7, #7]
 496:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 497:Generated_Source\PSoC5/SPIM.c **** 
 498:Generated_Source\PSoC5/SPIM.c ****         uint8 tempStatus;
 499:Generated_Source\PSoC5/SPIM.c ****         uint8 tmpTxBufferRead;
 500:Generated_Source\PSoC5/SPIM.c **** 
 501:Generated_Source\PSoC5/SPIM.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:Generated_Source\PSoC5/SPIM.c ****         do
 503:Generated_Source\PSoC5/SPIM.c ****         {
 504:Generated_Source\PSoC5/SPIM.c ****             tmpTxBufferRead = SPIM_txBufferRead;
 505:Generated_Source\PSoC5/SPIM.c ****             if(0u == tmpTxBufferRead)
 506:Generated_Source\PSoC5/SPIM.c ****             {
 507:Generated_Source\PSoC5/SPIM.c ****                 tmpTxBufferRead = (SPIM_TX_BUFFER_SIZE - 1u);
 508:Generated_Source\PSoC5/SPIM.c ****             }
 509:Generated_Source\PSoC5/SPIM.c ****             else
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 21


 510:Generated_Source\PSoC5/SPIM.c ****             {
 511:Generated_Source\PSoC5/SPIM.c ****                 tmpTxBufferRead--;
 512:Generated_Source\PSoC5/SPIM.c ****             }
 513:Generated_Source\PSoC5/SPIM.c **** 
 514:Generated_Source\PSoC5/SPIM.c ****         }while(tmpTxBufferRead == SPIM_txBufferWrite);
 515:Generated_Source\PSoC5/SPIM.c **** 
 516:Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 517:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 518:Generated_Source\PSoC5/SPIM.c **** 
 519:Generated_Source\PSoC5/SPIM.c ****         tempStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 520:Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusTx = tempStatus;
 521:Generated_Source\PSoC5/SPIM.c **** 
 522:Generated_Source\PSoC5/SPIM.c **** 
 523:Generated_Source\PSoC5/SPIM.c ****         if((SPIM_txBufferRead == SPIM_txBufferWrite) &&
 524:Generated_Source\PSoC5/SPIM.c ****            (0u != (SPIM_swStatusTx & SPIM_STS_TX_FIFO_NOT_FULL)))
 525:Generated_Source\PSoC5/SPIM.c ****         {
 526:Generated_Source\PSoC5/SPIM.c ****             /* Put data element into the TX FIFO */
 527:Generated_Source\PSoC5/SPIM.c ****             CY_SET_REG8(SPIM_TXDATA_PTR, txData);
 528:Generated_Source\PSoC5/SPIM.c ****         }
 529:Generated_Source\PSoC5/SPIM.c ****         else
 530:Generated_Source\PSoC5/SPIM.c ****         {
 531:Generated_Source\PSoC5/SPIM.c ****             /* Add to the TX software buffer */
 532:Generated_Source\PSoC5/SPIM.c ****             SPIM_txBufferWrite++;
 533:Generated_Source\PSoC5/SPIM.c ****             if(SPIM_txBufferWrite >= SPIM_TX_BUFFER_SIZE)
 534:Generated_Source\PSoC5/SPIM.c ****             {
 535:Generated_Source\PSoC5/SPIM.c ****                 SPIM_txBufferWrite = 0u;
 536:Generated_Source\PSoC5/SPIM.c ****             }
 537:Generated_Source\PSoC5/SPIM.c **** 
 538:Generated_Source\PSoC5/SPIM.c ****             if(SPIM_txBufferWrite == SPIM_txBufferRead)
 539:Generated_Source\PSoC5/SPIM.c ****             {
 540:Generated_Source\PSoC5/SPIM.c ****                 SPIM_txBufferRead++;
 541:Generated_Source\PSoC5/SPIM.c ****                 if(SPIM_txBufferRead >= SPIM_TX_BUFFER_SIZE)
 542:Generated_Source\PSoC5/SPIM.c ****                 {
 543:Generated_Source\PSoC5/SPIM.c ****                     SPIM_txBufferRead = 0u;
 544:Generated_Source\PSoC5/SPIM.c ****                 }
 545:Generated_Source\PSoC5/SPIM.c ****                 SPIM_txBufferFull = 1u;
 546:Generated_Source\PSoC5/SPIM.c ****             }
 547:Generated_Source\PSoC5/SPIM.c **** 
 548:Generated_Source\PSoC5/SPIM.c ****             SPIM_txBuffer[SPIM_txBufferWrite] = txData;
 549:Generated_Source\PSoC5/SPIM.c **** 
 550:Generated_Source\PSoC5/SPIM.c ****             SPIM_TX_STATUS_MASK_REG |= SPIM_STS_TX_FIFO_NOT_FULL;
 551:Generated_Source\PSoC5/SPIM.c ****         }
 552:Generated_Source\PSoC5/SPIM.c **** 
 553:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 554:Generated_Source\PSoC5/SPIM.c **** 
 555:Generated_Source\PSoC5/SPIM.c ****     #else
 556:Generated_Source\PSoC5/SPIM.c ****         /* Wait until TX FIFO has a place */
 557:Generated_Source\PSoC5/SPIM.c ****         while(0u == (SPIM_TX_STATUS_REG & SPIM_STS_TX_FIFO_NOT_FULL))
 632              		.loc 1 557 0
 633 000a 00BF     		nop
 634              	.L41:
 635              		.loc 1 557 0 is_stmt 0 discriminator 1
 636 000c 074B     		ldr	r3, .L42
 637 000e 1B78     		ldrb	r3, [r3]
 638 0010 DBB2     		uxtb	r3, r3
 639 0012 03F00403 		and	r3, r3, #4
 640 0016 002B     		cmp	r3, #0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 22


 641 0018 F8D0     		beq	.L41
 558:Generated_Source\PSoC5/SPIM.c ****         {
 559:Generated_Source\PSoC5/SPIM.c ****         }
 560:Generated_Source\PSoC5/SPIM.c **** 
 561:Generated_Source\PSoC5/SPIM.c ****         /* Put data element into the TX FIFO */
 562:Generated_Source\PSoC5/SPIM.c ****         CY_SET_REG8(SPIM_TXDATA_PTR, txData);
 642              		.loc 1 562 0 is_stmt 1
 643 001a 054A     		ldr	r2, .L42+4
 644 001c FB79     		ldrb	r3, [r7, #7]
 645 001e 1370     		strb	r3, [r2]
 563:Generated_Source\PSoC5/SPIM.c **** 
 564:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 565:Generated_Source\PSoC5/SPIM.c **** }
 646              		.loc 1 565 0
 647 0020 00BF     		nop
 648 0022 0C37     		adds	r7, r7, #12
 649              		.cfi_def_cfa_offset 4
 650 0024 BD46     		mov	sp, r7
 651              		.cfi_def_cfa_register 13
 652              		@ sp needed
 653 0026 80BC     		pop	{r7}
 654              		.cfi_restore 7
 655              		.cfi_def_cfa_offset 0
 656 0028 7047     		bx	lr
 657              	.L43:
 658 002a 00BF     		.align	2
 659              	.L42:
 660 002c 6E640040 		.word	1073767534
 661 0030 4D640040 		.word	1073767501
 662              		.cfi_endproc
 663              	.LFE12:
 664              		.size	SPIM_WriteTxData, .-SPIM_WriteTxData
 665              		.section	.text.SPIM_ReadRxData,"ax",%progbits
 666              		.align	2
 667              		.global	SPIM_ReadRxData
 668              		.thumb
 669              		.thumb_func
 670              		.type	SPIM_ReadRxData, %function
 671              	SPIM_ReadRxData:
 672              	.LFB13:
 566:Generated_Source\PSoC5/SPIM.c **** 
 567:Generated_Source\PSoC5/SPIM.c **** 
 568:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 569:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadRxData
 570:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 571:Generated_Source\PSoC5/SPIM.c **** *
 572:Generated_Source\PSoC5/SPIM.c **** * Summary:
 573:Generated_Source\PSoC5/SPIM.c **** *  Read the next byte of data received across the SPI.
 574:Generated_Source\PSoC5/SPIM.c **** *
 575:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 576:Generated_Source\PSoC5/SPIM.c **** *  None.
 577:Generated_Source\PSoC5/SPIM.c **** *
 578:Generated_Source\PSoC5/SPIM.c **** * Return:
 579:Generated_Source\PSoC5/SPIM.c **** *  The next byte of data read from the FIFO.
 580:Generated_Source\PSoC5/SPIM.c **** *
 581:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 582:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 23


 583:Generated_Source\PSoC5/SPIM.c **** *  have been written down in the RX software buffer.
 584:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 585:Generated_Source\PSoC5/SPIM.c **** *  have been read from the RX software buffer, modified every function
 586:Generated_Source\PSoC5/SPIM.c **** *  call if RX Software Buffer is used.
 587:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE] - used to store
 588:Generated_Source\PSoC5/SPIM.c **** *  received data.
 589:Generated_Source\PSoC5/SPIM.c **** *
 590:Generated_Source\PSoC5/SPIM.c **** * Theory:
 591:Generated_Source\PSoC5/SPIM.c **** *  Allows the user to read a byte of data received.
 592:Generated_Source\PSoC5/SPIM.c **** *
 593:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 594:Generated_Source\PSoC5/SPIM.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:Generated_Source\PSoC5/SPIM.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 596:Generated_Source\PSoC5/SPIM.c **** *  ReadByte() function.
 597:Generated_Source\PSoC5/SPIM.c **** *
 598:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 599:Generated_Source\PSoC5/SPIM.c **** *  No.
 600:Generated_Source\PSoC5/SPIM.c **** *
 601:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 602:Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_ReadRxData(void) 
 603:Generated_Source\PSoC5/SPIM.c **** {
 673              		.loc 1 603 0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 8
 676              		@ frame_needed = 1, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 678 0000 80B4     		push	{r7}
 679              		.cfi_def_cfa_offset 4
 680              		.cfi_offset 7, -4
 681 0002 83B0     		sub	sp, sp, #12
 682              		.cfi_def_cfa_offset 16
 683 0004 00AF     		add	r7, sp, #0
 684              		.cfi_def_cfa_register 7
 604:Generated_Source\PSoC5/SPIM.c ****     uint8 rxData;
 605:Generated_Source\PSoC5/SPIM.c **** 
 606:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 607:Generated_Source\PSoC5/SPIM.c **** 
 608:Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 609:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
 610:Generated_Source\PSoC5/SPIM.c **** 
 611:Generated_Source\PSoC5/SPIM.c ****         if(SPIM_rxBufferRead != SPIM_rxBufferWrite)
 612:Generated_Source\PSoC5/SPIM.c ****         {
 613:Generated_Source\PSoC5/SPIM.c ****             if(0u == SPIM_rxBufferFull)
 614:Generated_Source\PSoC5/SPIM.c ****             {
 615:Generated_Source\PSoC5/SPIM.c ****                 SPIM_rxBufferRead++;
 616:Generated_Source\PSoC5/SPIM.c ****                 if(SPIM_rxBufferRead >= SPIM_RX_BUFFER_SIZE)
 617:Generated_Source\PSoC5/SPIM.c ****                 {
 618:Generated_Source\PSoC5/SPIM.c ****                     SPIM_rxBufferRead = 0u;
 619:Generated_Source\PSoC5/SPIM.c ****                 }
 620:Generated_Source\PSoC5/SPIM.c ****             }
 621:Generated_Source\PSoC5/SPIM.c ****             else
 622:Generated_Source\PSoC5/SPIM.c ****             {
 623:Generated_Source\PSoC5/SPIM.c ****                 SPIM_rxBufferFull = 0u;
 624:Generated_Source\PSoC5/SPIM.c ****             }
 625:Generated_Source\PSoC5/SPIM.c ****         }
 626:Generated_Source\PSoC5/SPIM.c **** 
 627:Generated_Source\PSoC5/SPIM.c ****         rxData = SPIM_rxBuffer[SPIM_rxBufferRead];
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 24


 628:Generated_Source\PSoC5/SPIM.c **** 
 629:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
 630:Generated_Source\PSoC5/SPIM.c **** 
 631:Generated_Source\PSoC5/SPIM.c ****     #else
 632:Generated_Source\PSoC5/SPIM.c **** 
 633:Generated_Source\PSoC5/SPIM.c ****         rxData = CY_GET_REG8(SPIM_RXDATA_PTR);
 685              		.loc 1 633 0
 686 0006 044B     		ldr	r3, .L46
 687 0008 1B78     		ldrb	r3, [r3]
 688 000a FB71     		strb	r3, [r7, #7]
 634:Generated_Source\PSoC5/SPIM.c **** 
 635:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 636:Generated_Source\PSoC5/SPIM.c **** 
 637:Generated_Source\PSoC5/SPIM.c ****     return(rxData);
 689              		.loc 1 637 0
 690 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 638:Generated_Source\PSoC5/SPIM.c **** }
 691              		.loc 1 638 0
 692 000e 1846     		mov	r0, r3
 693 0010 0C37     		adds	r7, r7, #12
 694              		.cfi_def_cfa_offset 4
 695 0012 BD46     		mov	sp, r7
 696              		.cfi_def_cfa_register 13
 697              		@ sp needed
 698 0014 80BC     		pop	{r7}
 699              		.cfi_restore 7
 700              		.cfi_def_cfa_offset 0
 701 0016 7047     		bx	lr
 702              	.L47:
 703              		.align	2
 704              	.L46:
 705 0018 5D640040 		.word	1073767517
 706              		.cfi_endproc
 707              	.LFE13:
 708              		.size	SPIM_ReadRxData, .-SPIM_ReadRxData
 709              		.section	.text.SPIM_GetRxBufferSize,"ax",%progbits
 710              		.align	2
 711              		.global	SPIM_GetRxBufferSize
 712              		.thumb
 713              		.thumb_func
 714              		.type	SPIM_GetRxBufferSize, %function
 715              	SPIM_GetRxBufferSize:
 716              	.LFB14:
 639:Generated_Source\PSoC5/SPIM.c **** 
 640:Generated_Source\PSoC5/SPIM.c **** 
 641:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 642:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_GetRxBufferSize
 643:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 644:Generated_Source\PSoC5/SPIM.c **** *
 645:Generated_Source\PSoC5/SPIM.c **** * Summary:
 646:Generated_Source\PSoC5/SPIM.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 647:Generated_Source\PSoC5/SPIM.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 648:Generated_Source\PSoC5/SPIM.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:Generated_Source\PSoC5/SPIM.c **** *
 650:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 651:Generated_Source\PSoC5/SPIM.c **** *  None.
 652:Generated_Source\PSoC5/SPIM.c **** *
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 25


 653:Generated_Source\PSoC5/SPIM.c **** * Return:
 654:Generated_Source\PSoC5/SPIM.c **** *  Integer count of the number of bytes/words in the RX buffer.
 655:Generated_Source\PSoC5/SPIM.c **** *
 656:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 657:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 658:Generated_Source\PSoC5/SPIM.c **** *  have been written down in the RX software buffer.
 659:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 660:Generated_Source\PSoC5/SPIM.c **** *  have been read from the RX software buffer.
 661:Generated_Source\PSoC5/SPIM.c **** *
 662:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 663:Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
 664:Generated_Source\PSoC5/SPIM.c **** *
 665:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 666:Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_GetRxBufferSize(void) 
 667:Generated_Source\PSoC5/SPIM.c **** {
 717              		.loc 1 667 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 8
 720              		@ frame_needed = 1, uses_anonymous_args = 0
 721              		@ link register save eliminated.
 722 0000 80B4     		push	{r7}
 723              		.cfi_def_cfa_offset 4
 724              		.cfi_offset 7, -4
 725 0002 83B0     		sub	sp, sp, #12
 726              		.cfi_def_cfa_offset 16
 727 0004 00AF     		add	r7, sp, #0
 728              		.cfi_def_cfa_register 7
 668:Generated_Source\PSoC5/SPIM.c ****     uint8 size;
 669:Generated_Source\PSoC5/SPIM.c **** 
 670:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 671:Generated_Source\PSoC5/SPIM.c **** 
 672:Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 673:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
 674:Generated_Source\PSoC5/SPIM.c **** 
 675:Generated_Source\PSoC5/SPIM.c ****         if(SPIM_rxBufferRead == SPIM_rxBufferWrite)
 676:Generated_Source\PSoC5/SPIM.c ****         {
 677:Generated_Source\PSoC5/SPIM.c ****             size = 0u;
 678:Generated_Source\PSoC5/SPIM.c ****         }
 679:Generated_Source\PSoC5/SPIM.c ****         else if(SPIM_rxBufferRead < SPIM_rxBufferWrite)
 680:Generated_Source\PSoC5/SPIM.c ****         {
 681:Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_rxBufferWrite - SPIM_rxBufferRead);
 682:Generated_Source\PSoC5/SPIM.c ****         }
 683:Generated_Source\PSoC5/SPIM.c ****         else
 684:Generated_Source\PSoC5/SPIM.c ****         {
 685:Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_RX_BUFFER_SIZE - SPIM_rxBufferRead) + SPIM_rxBufferWrite;
 686:Generated_Source\PSoC5/SPIM.c ****         }
 687:Generated_Source\PSoC5/SPIM.c **** 
 688:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
 689:Generated_Source\PSoC5/SPIM.c **** 
 690:Generated_Source\PSoC5/SPIM.c ****     #else
 691:Generated_Source\PSoC5/SPIM.c **** 
 692:Generated_Source\PSoC5/SPIM.c ****         /* We can only know if there is data in the RX FIFO */
 693:Generated_Source\PSoC5/SPIM.c ****         size = (0u != (SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 729              		.loc 1 693 0
 730 0006 084B     		ldr	r3, .L52
 731 0008 1B78     		ldrb	r3, [r3]
 732 000a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 26


 733 000c 03F02003 		and	r3, r3, #32
 734 0010 002B     		cmp	r3, #0
 735 0012 01D0     		beq	.L49
 736              		.loc 1 693 0 is_stmt 0 discriminator 1
 737 0014 0123     		movs	r3, #1
 738 0016 00E0     		b	.L50
 739              	.L49:
 740              		.loc 1 693 0 discriminator 2
 741 0018 0023     		movs	r3, #0
 742              	.L50:
 743              		.loc 1 693 0 discriminator 4
 744 001a FB71     		strb	r3, [r7, #7]
 694:Generated_Source\PSoC5/SPIM.c **** 
 695:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 696:Generated_Source\PSoC5/SPIM.c **** 
 697:Generated_Source\PSoC5/SPIM.c ****     return(size);
 745              		.loc 1 697 0 is_stmt 1 discriminator 4
 746 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 698:Generated_Source\PSoC5/SPIM.c **** }
 747              		.loc 1 698 0 discriminator 4
 748 001e 1846     		mov	r0, r3
 749 0020 0C37     		adds	r7, r7, #12
 750              		.cfi_def_cfa_offset 4
 751 0022 BD46     		mov	sp, r7
 752              		.cfi_def_cfa_register 13
 753              		@ sp needed
 754 0024 80BC     		pop	{r7}
 755              		.cfi_restore 7
 756              		.cfi_def_cfa_offset 0
 757 0026 7047     		bx	lr
 758              	.L53:
 759              		.align	2
 760              	.L52:
 761 0028 6F640040 		.word	1073767535
 762              		.cfi_endproc
 763              	.LFE14:
 764              		.size	SPIM_GetRxBufferSize, .-SPIM_GetRxBufferSize
 765              		.section	.text.SPIM_GetTxBufferSize,"ax",%progbits
 766              		.align	2
 767              		.global	SPIM_GetTxBufferSize
 768              		.thumb
 769              		.thumb_func
 770              		.type	SPIM_GetTxBufferSize, %function
 771              	SPIM_GetTxBufferSize:
 772              	.LFB15:
 699:Generated_Source\PSoC5/SPIM.c **** 
 700:Generated_Source\PSoC5/SPIM.c **** 
 701:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 702:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_GetTxBufferSize
 703:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 704:Generated_Source\PSoC5/SPIM.c **** *
 705:Generated_Source\PSoC5/SPIM.c **** * Summary:
 706:Generated_Source\PSoC5/SPIM.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:Generated_Source\PSoC5/SPIM.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:Generated_Source\PSoC5/SPIM.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 709:Generated_Source\PSoC5/SPIM.c **** *  Software Buffer.
 710:Generated_Source\PSoC5/SPIM.c **** *
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 27


 711:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 712:Generated_Source\PSoC5/SPIM.c **** *  None.
 713:Generated_Source\PSoC5/SPIM.c **** *
 714:Generated_Source\PSoC5/SPIM.c **** * Return:
 715:Generated_Source\PSoC5/SPIM.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:Generated_Source\PSoC5/SPIM.c **** *
 717:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 718:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC5/SPIM.c **** *  have been written down in the TX software buffer.
 720:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC5/SPIM.c **** *  have been read from the TX software buffer.
 722:Generated_Source\PSoC5/SPIM.c **** *
 723:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 724:Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
 725:Generated_Source\PSoC5/SPIM.c **** *
 726:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 727:Generated_Source\PSoC5/SPIM.c **** uint8  SPIM_GetTxBufferSize(void) 
 728:Generated_Source\PSoC5/SPIM.c **** {
 773              		.loc 1 728 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 8
 776              		@ frame_needed = 1, uses_anonymous_args = 0
 777              		@ link register save eliminated.
 778 0000 80B4     		push	{r7}
 779              		.cfi_def_cfa_offset 4
 780              		.cfi_offset 7, -4
 781 0002 83B0     		sub	sp, sp, #12
 782              		.cfi_def_cfa_offset 16
 783 0004 00AF     		add	r7, sp, #0
 784              		.cfi_def_cfa_register 7
 729:Generated_Source\PSoC5/SPIM.c ****     uint8 size;
 730:Generated_Source\PSoC5/SPIM.c **** 
 731:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 733:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 734:Generated_Source\PSoC5/SPIM.c **** 
 735:Generated_Source\PSoC5/SPIM.c ****         if(SPIM_txBufferRead == SPIM_txBufferWrite)
 736:Generated_Source\PSoC5/SPIM.c ****         {
 737:Generated_Source\PSoC5/SPIM.c ****             size = 0u;
 738:Generated_Source\PSoC5/SPIM.c ****         }
 739:Generated_Source\PSoC5/SPIM.c ****         else if(SPIM_txBufferRead < SPIM_txBufferWrite)
 740:Generated_Source\PSoC5/SPIM.c ****         {
 741:Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_txBufferWrite - SPIM_txBufferRead);
 742:Generated_Source\PSoC5/SPIM.c ****         }
 743:Generated_Source\PSoC5/SPIM.c ****         else
 744:Generated_Source\PSoC5/SPIM.c ****         {
 745:Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_TX_BUFFER_SIZE - SPIM_txBufferRead) + SPIM_txBufferWrite;
 746:Generated_Source\PSoC5/SPIM.c ****         }
 747:Generated_Source\PSoC5/SPIM.c **** 
 748:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 749:Generated_Source\PSoC5/SPIM.c **** 
 750:Generated_Source\PSoC5/SPIM.c ****     #else
 751:Generated_Source\PSoC5/SPIM.c **** 
 752:Generated_Source\PSoC5/SPIM.c ****         size = SPIM_TX_STATUS_REG;
 785              		.loc 1 752 0
 786 0006 0D4B     		ldr	r3, .L59
 787 0008 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 28


 788 000a FB71     		strb	r3, [r7, #7]
 753:Generated_Source\PSoC5/SPIM.c **** 
 754:Generated_Source\PSoC5/SPIM.c ****         if(0u != (size & SPIM_STS_TX_FIFO_EMPTY))
 789              		.loc 1 754 0
 790 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 791 000e 03F00203 		and	r3, r3, #2
 792 0012 002B     		cmp	r3, #0
 793 0014 02D0     		beq	.L55
 755:Generated_Source\PSoC5/SPIM.c ****         {
 756:Generated_Source\PSoC5/SPIM.c ****             size = 0u;
 794              		.loc 1 756 0
 795 0016 0023     		movs	r3, #0
 796 0018 FB71     		strb	r3, [r7, #7]
 797 001a 09E0     		b	.L56
 798              	.L55:
 757:Generated_Source\PSoC5/SPIM.c ****         }
 758:Generated_Source\PSoC5/SPIM.c ****         else if(0u != (size & SPIM_STS_TX_FIFO_NOT_FULL))
 799              		.loc 1 758 0
 800 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 801 001e 03F00403 		and	r3, r3, #4
 802 0022 002B     		cmp	r3, #0
 803 0024 02D0     		beq	.L57
 759:Generated_Source\PSoC5/SPIM.c ****         {
 760:Generated_Source\PSoC5/SPIM.c ****             size = 1u;
 804              		.loc 1 760 0
 805 0026 0123     		movs	r3, #1
 806 0028 FB71     		strb	r3, [r7, #7]
 807 002a 01E0     		b	.L56
 808              	.L57:
 761:Generated_Source\PSoC5/SPIM.c ****         }
 762:Generated_Source\PSoC5/SPIM.c ****         else
 763:Generated_Source\PSoC5/SPIM.c ****         {
 764:Generated_Source\PSoC5/SPIM.c ****             size = SPIM_FIFO_SIZE;
 809              		.loc 1 764 0
 810 002c 0423     		movs	r3, #4
 811 002e FB71     		strb	r3, [r7, #7]
 812              	.L56:
 765:Generated_Source\PSoC5/SPIM.c ****         }
 766:Generated_Source\PSoC5/SPIM.c **** 
 767:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 768:Generated_Source\PSoC5/SPIM.c **** 
 769:Generated_Source\PSoC5/SPIM.c ****     return(size);
 813              		.loc 1 769 0
 814 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 770:Generated_Source\PSoC5/SPIM.c **** }
 815              		.loc 1 770 0
 816 0032 1846     		mov	r0, r3
 817 0034 0C37     		adds	r7, r7, #12
 818              		.cfi_def_cfa_offset 4
 819 0036 BD46     		mov	sp, r7
 820              		.cfi_def_cfa_register 13
 821              		@ sp needed
 822 0038 80BC     		pop	{r7}
 823              		.cfi_restore 7
 824              		.cfi_def_cfa_offset 0
 825 003a 7047     		bx	lr
 826              	.L60:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 29


 827              		.align	2
 828              	.L59:
 829 003c 6E640040 		.word	1073767534
 830              		.cfi_endproc
 831              	.LFE15:
 832              		.size	SPIM_GetTxBufferSize, .-SPIM_GetTxBufferSize
 833              		.section	.text.SPIM_ClearRxBuffer,"ax",%progbits
 834              		.align	2
 835              		.global	SPIM_ClearRxBuffer
 836              		.thumb
 837              		.thumb_func
 838              		.type	SPIM_ClearRxBuffer, %function
 839              	SPIM_ClearRxBuffer:
 840              	.LFB16:
 771:Generated_Source\PSoC5/SPIM.c **** 
 772:Generated_Source\PSoC5/SPIM.c **** 
 773:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 774:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ClearRxBuffer
 775:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 776:Generated_Source\PSoC5/SPIM.c **** *
 777:Generated_Source\PSoC5/SPIM.c **** * Summary:
 778:Generated_Source\PSoC5/SPIM.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:Generated_Source\PSoC5/SPIM.c **** *
 780:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 781:Generated_Source\PSoC5/SPIM.c **** *  None.
 782:Generated_Source\PSoC5/SPIM.c **** *
 783:Generated_Source\PSoC5/SPIM.c **** * Return:
 784:Generated_Source\PSoC5/SPIM.c **** *  None.
 785:Generated_Source\PSoC5/SPIM.c **** *
 786:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 787:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 788:Generated_Source\PSoC5/SPIM.c **** *  have been written down in the RX software buffer, modified every function
 789:Generated_Source\PSoC5/SPIM.c **** *  call - resets to zero.
 790:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 791:Generated_Source\PSoC5/SPIM.c **** *  have been read from the RX software buffer, modified every function call -
 792:Generated_Source\PSoC5/SPIM.c **** *  resets to zero.
 793:Generated_Source\PSoC5/SPIM.c **** *
 794:Generated_Source\PSoC5/SPIM.c **** * Theory:
 795:Generated_Source\PSoC5/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:Generated_Source\PSoC5/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:Generated_Source\PSoC5/SPIM.c **** *  remained in the RAM.
 798:Generated_Source\PSoC5/SPIM.c **** *
 799:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 800:Generated_Source\PSoC5/SPIM.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:Generated_Source\PSoC5/SPIM.c **** *
 802:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 803:Generated_Source\PSoC5/SPIM.c **** *  No.
 804:Generated_Source\PSoC5/SPIM.c **** *
 805:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 806:Generated_Source\PSoC5/SPIM.c **** void SPIM_ClearRxBuffer(void) 
 807:Generated_Source\PSoC5/SPIM.c **** {
 841              		.loc 1 807 0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 1, uses_anonymous_args = 0
 845              		@ link register save eliminated.
 846 0000 80B4     		push	{r7}
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 30


 847              		.cfi_def_cfa_offset 4
 848              		.cfi_offset 7, -4
 849 0002 00AF     		add	r7, sp, #0
 850              		.cfi_def_cfa_register 7
 808:Generated_Source\PSoC5/SPIM.c ****     /* Clear Hardware RX FIFO */
 809:Generated_Source\PSoC5/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 851              		.loc 1 809 0
 852 0004 01E0     		b	.L62
 853              	.L63:
 810:Generated_Source\PSoC5/SPIM.c ****     {
 811:Generated_Source\PSoC5/SPIM.c ****         (void) CY_GET_REG8(SPIM_RXDATA_PTR);
 854              		.loc 1 811 0
 855 0006 064B     		ldr	r3, .L64
 856 0008 1B78     		ldrb	r3, [r3]
 857              	.L62:
 809:Generated_Source\PSoC5/SPIM.c ****     {
 858              		.loc 1 809 0
 859 000a 064B     		ldr	r3, .L64+4
 860 000c 1B78     		ldrb	r3, [r3]
 861 000e DBB2     		uxtb	r3, r3
 862 0010 03F02003 		and	r3, r3, #32
 863 0014 002B     		cmp	r3, #0
 864 0016 F6D1     		bne	.L63
 812:Generated_Source\PSoC5/SPIM.c ****     }
 813:Generated_Source\PSoC5/SPIM.c **** 
 814:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 815:Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 816:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
 817:Generated_Source\PSoC5/SPIM.c **** 
 818:Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferFull  = 0u;
 819:Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferRead  = 0u;
 820:Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferWrite = 0u;
 821:Generated_Source\PSoC5/SPIM.c **** 
 822:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
 823:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 824:Generated_Source\PSoC5/SPIM.c **** }
 865              		.loc 1 824 0
 866 0018 00BF     		nop
 867 001a BD46     		mov	sp, r7
 868              		.cfi_def_cfa_register 13
 869              		@ sp needed
 870 001c 80BC     		pop	{r7}
 871              		.cfi_restore 7
 872              		.cfi_def_cfa_offset 0
 873 001e 7047     		bx	lr
 874              	.L65:
 875              		.align	2
 876              	.L64:
 877 0020 5D640040 		.word	1073767517
 878 0024 6F640040 		.word	1073767535
 879              		.cfi_endproc
 880              	.LFE16:
 881              		.size	SPIM_ClearRxBuffer, .-SPIM_ClearRxBuffer
 882              		.section	.text.SPIM_ClearTxBuffer,"ax",%progbits
 883              		.align	2
 884              		.global	SPIM_ClearTxBuffer
 885              		.thumb
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 31


 886              		.thumb_func
 887              		.type	SPIM_ClearTxBuffer, %function
 888              	SPIM_ClearTxBuffer:
 889              	.LFB17:
 825:Generated_Source\PSoC5/SPIM.c **** 
 826:Generated_Source\PSoC5/SPIM.c **** 
 827:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 828:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ClearTxBuffer
 829:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 830:Generated_Source\PSoC5/SPIM.c **** *
 831:Generated_Source\PSoC5/SPIM.c **** * Summary:
 832:Generated_Source\PSoC5/SPIM.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:Generated_Source\PSoC5/SPIM.c **** *
 834:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 835:Generated_Source\PSoC5/SPIM.c **** *  None.
 836:Generated_Source\PSoC5/SPIM.c **** *
 837:Generated_Source\PSoC5/SPIM.c **** * Return:
 838:Generated_Source\PSoC5/SPIM.c **** *  None.
 839:Generated_Source\PSoC5/SPIM.c **** *
 840:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 841:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 842:Generated_Source\PSoC5/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 843:Generated_Source\PSoC5/SPIM.c **** *  call - resets to zero.
 844:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 845:Generated_Source\PSoC5/SPIM.c **** *  have been read from the TX software buffer, modified every function call -
 846:Generated_Source\PSoC5/SPIM.c **** *  resets to zero.
 847:Generated_Source\PSoC5/SPIM.c **** *
 848:Generated_Source\PSoC5/SPIM.c **** * Theory:
 849:Generated_Source\PSoC5/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:Generated_Source\PSoC5/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:Generated_Source\PSoC5/SPIM.c **** *  remained in the RAM.
 852:Generated_Source\PSoC5/SPIM.c **** *
 853:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 854:Generated_Source\PSoC5/SPIM.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:Generated_Source\PSoC5/SPIM.c **** *  overwritten.
 856:Generated_Source\PSoC5/SPIM.c **** *
 857:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 858:Generated_Source\PSoC5/SPIM.c **** *  No.
 859:Generated_Source\PSoC5/SPIM.c **** *
 860:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 861:Generated_Source\PSoC5/SPIM.c **** void SPIM_ClearTxBuffer(void) 
 862:Generated_Source\PSoC5/SPIM.c **** {
 890              		.loc 1 862 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 8
 893              		@ frame_needed = 1, uses_anonymous_args = 0
 894 0000 80B5     		push	{r7, lr}
 895              		.cfi_def_cfa_offset 8
 896              		.cfi_offset 7, -8
 897              		.cfi_offset 14, -4
 898 0002 82B0     		sub	sp, sp, #8
 899              		.cfi_def_cfa_offset 16
 900 0004 00AF     		add	r7, sp, #0
 901              		.cfi_def_cfa_register 7
 863:Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 864:Generated_Source\PSoC5/SPIM.c **** 
 865:Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 32


 902              		.loc 1 865 0
 903 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 904 000a 0346     		mov	r3, r0
 905 000c FB71     		strb	r3, [r7, #7]
 866:Generated_Source\PSoC5/SPIM.c ****     /* Clear TX FIFO */
 867:Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 906              		.loc 1 867 0
 907 000e 0C4A     		ldr	r2, .L67
 908 0010 0B4B     		ldr	r3, .L67
 909 0012 1B78     		ldrb	r3, [r3]
 910 0014 DBB2     		uxtb	r3, r3
 911 0016 43F00103 		orr	r3, r3, #1
 912 001a DBB2     		uxtb	r3, r3
 913 001c 1370     		strb	r3, [r2]
 868:Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 914              		.loc 1 868 0
 915 001e 084A     		ldr	r2, .L67
 916 0020 074B     		ldr	r3, .L67
 917 0022 1B78     		ldrb	r3, [r3]
 918 0024 DBB2     		uxtb	r3, r3
 919 0026 23F00103 		bic	r3, r3, #1
 920 002a DBB2     		uxtb	r3, r3
 921 002c 1370     		strb	r3, [r2]
 869:Generated_Source\PSoC5/SPIM.c **** 
 870:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
 871:Generated_Source\PSoC5/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 873:Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 874:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
 875:Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 922              		.loc 1 875 0
 923 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 924 0030 1846     		mov	r0, r3
 925 0032 FFF7FEFF 		bl	CyExitCriticalSection
 876:Generated_Source\PSoC5/SPIM.c **** 
 877:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 878:Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 879:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 880:Generated_Source\PSoC5/SPIM.c **** 
 881:Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferFull  = 0u;
 882:Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferRead  = 0u;
 883:Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferWrite = 0u;
 884:Generated_Source\PSoC5/SPIM.c **** 
 885:Generated_Source\PSoC5/SPIM.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:Generated_Source\PSoC5/SPIM.c ****         SPIM_TX_STATUS_MASK_REG &= ((uint8) ~SPIM_STS_TX_FIFO_NOT_FULL);
 887:Generated_Source\PSoC5/SPIM.c **** 
 888:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 889:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 890:Generated_Source\PSoC5/SPIM.c **** }
 926              		.loc 1 890 0
 927 0036 00BF     		nop
 928 0038 0837     		adds	r7, r7, #8
 929              		.cfi_def_cfa_offset 8
 930 003a BD46     		mov	sp, r7
 931              		.cfi_def_cfa_register 13
 932              		@ sp needed
 933 003c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 33


 934              	.L68:
 935 003e 00BF     		.align	2
 936              	.L67:
 937 0040 9D640040 		.word	1073767581
 938              		.cfi_endproc
 939              	.LFE17:
 940              		.size	SPIM_ClearTxBuffer, .-SPIM_ClearTxBuffer
 941              		.section	.text.SPIM_PutArray,"ax",%progbits
 942              		.align	2
 943              		.global	SPIM_PutArray
 944              		.thumb
 945              		.thumb_func
 946              		.type	SPIM_PutArray, %function
 947              	SPIM_PutArray:
 948              	.LFB18:
 891:Generated_Source\PSoC5/SPIM.c **** 
 892:Generated_Source\PSoC5/SPIM.c **** 
 893:Generated_Source\PSoC5/SPIM.c **** #if(0u != SPIM_BIDIRECTIONAL_MODE)
 894:Generated_Source\PSoC5/SPIM.c ****     /*******************************************************************************
 895:Generated_Source\PSoC5/SPIM.c ****     * Function Name: SPIM_TxEnable
 896:Generated_Source\PSoC5/SPIM.c ****     ********************************************************************************
 897:Generated_Source\PSoC5/SPIM.c ****     *
 898:Generated_Source\PSoC5/SPIM.c ****     * Summary:
 899:Generated_Source\PSoC5/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 900:Generated_Source\PSoC5/SPIM.c ****     *  will set the bi-directional pin to transmit.
 901:Generated_Source\PSoC5/SPIM.c ****     *
 902:Generated_Source\PSoC5/SPIM.c ****     * Parameters:
 903:Generated_Source\PSoC5/SPIM.c ****     *  None.
 904:Generated_Source\PSoC5/SPIM.c ****     *
 905:Generated_Source\PSoC5/SPIM.c ****     * Return:
 906:Generated_Source\PSoC5/SPIM.c ****     *  None.
 907:Generated_Source\PSoC5/SPIM.c ****     *
 908:Generated_Source\PSoC5/SPIM.c ****     *******************************************************************************/
 909:Generated_Source\PSoC5/SPIM.c ****     void SPIM_TxEnable(void) 
 910:Generated_Source\PSoC5/SPIM.c ****     {
 911:Generated_Source\PSoC5/SPIM.c ****         SPIM_CONTROL_REG |= SPIM_CTRL_TX_SIGNAL_EN;
 912:Generated_Source\PSoC5/SPIM.c ****     }
 913:Generated_Source\PSoC5/SPIM.c **** 
 914:Generated_Source\PSoC5/SPIM.c **** 
 915:Generated_Source\PSoC5/SPIM.c ****     /*******************************************************************************
 916:Generated_Source\PSoC5/SPIM.c ****     * Function Name: SPIM_TxDisable
 917:Generated_Source\PSoC5/SPIM.c ****     ********************************************************************************
 918:Generated_Source\PSoC5/SPIM.c ****     *
 919:Generated_Source\PSoC5/SPIM.c ****     * Summary:
 920:Generated_Source\PSoC5/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:Generated_Source\PSoC5/SPIM.c ****     *  will set the bi-directional pin to receive.
 922:Generated_Source\PSoC5/SPIM.c ****     *
 923:Generated_Source\PSoC5/SPIM.c ****     * Parameters:
 924:Generated_Source\PSoC5/SPIM.c ****     *  None.
 925:Generated_Source\PSoC5/SPIM.c ****     *
 926:Generated_Source\PSoC5/SPIM.c ****     * Return:
 927:Generated_Source\PSoC5/SPIM.c ****     *  None.
 928:Generated_Source\PSoC5/SPIM.c ****     *
 929:Generated_Source\PSoC5/SPIM.c ****     *******************************************************************************/
 930:Generated_Source\PSoC5/SPIM.c ****     void SPIM_TxDisable(void) 
 931:Generated_Source\PSoC5/SPIM.c ****     {
 932:Generated_Source\PSoC5/SPIM.c ****         SPIM_CONTROL_REG &= ((uint8) ~SPIM_CTRL_TX_SIGNAL_EN);
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 34


 933:Generated_Source\PSoC5/SPIM.c ****     }
 934:Generated_Source\PSoC5/SPIM.c **** 
 935:Generated_Source\PSoC5/SPIM.c **** #endif /* (0u != SPIM_BIDIRECTIONAL_MODE) */
 936:Generated_Source\PSoC5/SPIM.c **** 
 937:Generated_Source\PSoC5/SPIM.c **** 
 938:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 939:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_PutArray
 940:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 941:Generated_Source\PSoC5/SPIM.c **** *
 942:Generated_Source\PSoC5/SPIM.c **** * Summary:
 943:Generated_Source\PSoC5/SPIM.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:Generated_Source\PSoC5/SPIM.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 945:Generated_Source\PSoC5/SPIM.c **** *
 946:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 947:Generated_Source\PSoC5/SPIM.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:Generated_Source\PSoC5/SPIM.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:Generated_Source\PSoC5/SPIM.c **** *
 950:Generated_Source\PSoC5/SPIM.c **** * Return:
 951:Generated_Source\PSoC5/SPIM.c **** *  None.
 952:Generated_Source\PSoC5/SPIM.c **** *
 953:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 954:Generated_Source\PSoC5/SPIM.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:Generated_Source\PSoC5/SPIM.c **** *  this loop if data is not being initiated by the master if there is not
 956:Generated_Source\PSoC5/SPIM.c **** *  enough room in the TX FIFO.
 957:Generated_Source\PSoC5/SPIM.c **** *
 958:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 959:Generated_Source\PSoC5/SPIM.c **** *  No.
 960:Generated_Source\PSoC5/SPIM.c **** *
 961:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 962:Generated_Source\PSoC5/SPIM.c **** void SPIM_PutArray(const uint8 buffer[], uint8 byteCount)
 963:Generated_Source\PSoC5/SPIM.c ****                                                                           
 964:Generated_Source\PSoC5/SPIM.c **** {
 949              		.loc 1 964 0
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 16
 952              		@ frame_needed = 1, uses_anonymous_args = 0
 953 0000 80B5     		push	{r7, lr}
 954              		.cfi_def_cfa_offset 8
 955              		.cfi_offset 7, -8
 956              		.cfi_offset 14, -4
 957 0002 84B0     		sub	sp, sp, #16
 958              		.cfi_def_cfa_offset 24
 959 0004 00AF     		add	r7, sp, #0
 960              		.cfi_def_cfa_register 7
 961 0006 7860     		str	r0, [r7, #4]
 962 0008 0B46     		mov	r3, r1
 963 000a FB70     		strb	r3, [r7, #3]
 965:Generated_Source\PSoC5/SPIM.c ****     uint8 bufIndex;
 966:Generated_Source\PSoC5/SPIM.c **** 
 967:Generated_Source\PSoC5/SPIM.c ****     bufIndex = 0u;
 964              		.loc 1 967 0
 965 000c 0023     		movs	r3, #0
 966 000e FB73     		strb	r3, [r7, #15]
 968:Generated_Source\PSoC5/SPIM.c **** 
 969:Generated_Source\PSoC5/SPIM.c ****     while(byteCount > 0u)
 967              		.loc 1 969 0
 968 0010 0CE0     		b	.L70
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 35


 969              	.L71:
 970:Generated_Source\PSoC5/SPIM.c ****     {
 971:Generated_Source\PSoC5/SPIM.c ****         SPIM_WriteTxData(buffer[bufIndex]);
 970              		.loc 1 971 0
 971 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 972 0014 7A68     		ldr	r2, [r7, #4]
 973 0016 1344     		add	r3, r3, r2
 974 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 975 001a 1846     		mov	r0, r3
 976 001c FFF7FEFF 		bl	SPIM_WriteTxData
 972:Generated_Source\PSoC5/SPIM.c ****         bufIndex++;
 977              		.loc 1 972 0
 978 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 979 0022 0133     		adds	r3, r3, #1
 980 0024 FB73     		strb	r3, [r7, #15]
 973:Generated_Source\PSoC5/SPIM.c ****         byteCount--;
 981              		.loc 1 973 0
 982 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 983 0028 013B     		subs	r3, r3, #1
 984 002a FB70     		strb	r3, [r7, #3]
 985              	.L70:
 969:Generated_Source\PSoC5/SPIM.c ****     {
 986              		.loc 1 969 0
 987 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 988 002e 002B     		cmp	r3, #0
 989 0030 EFD1     		bne	.L71
 974:Generated_Source\PSoC5/SPIM.c ****     }
 975:Generated_Source\PSoC5/SPIM.c **** }
 990              		.loc 1 975 0
 991 0032 00BF     		nop
 992 0034 1037     		adds	r7, r7, #16
 993              		.cfi_def_cfa_offset 8
 994 0036 BD46     		mov	sp, r7
 995              		.cfi_def_cfa_register 13
 996              		@ sp needed
 997 0038 80BD     		pop	{r7, pc}
 998              		.cfi_endproc
 999              	.LFE18:
 1000              		.size	SPIM_PutArray, .-SPIM_PutArray
 1001 003a 00BF     		.section	.text.SPIM_ClearFIFO,"ax",%progbits
 1002              		.align	2
 1003              		.global	SPIM_ClearFIFO
 1004              		.thumb
 1005              		.thumb_func
 1006              		.type	SPIM_ClearFIFO, %function
 1007              	SPIM_ClearFIFO:
 1008              	.LFB19:
 976:Generated_Source\PSoC5/SPIM.c **** 
 977:Generated_Source\PSoC5/SPIM.c **** 
 978:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 979:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ClearFIFO
 980:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 981:Generated_Source\PSoC5/SPIM.c **** *
 982:Generated_Source\PSoC5/SPIM.c **** * Summary:
 983:Generated_Source\PSoC5/SPIM.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 984:Generated_Source\PSoC5/SPIM.c **** *
 985:Generated_Source\PSoC5/SPIM.c **** * Parameters:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 36


 986:Generated_Source\PSoC5/SPIM.c **** *  None.
 987:Generated_Source\PSoC5/SPIM.c **** *
 988:Generated_Source\PSoC5/SPIM.c **** * Return:
 989:Generated_Source\PSoC5/SPIM.c **** *  None.
 990:Generated_Source\PSoC5/SPIM.c **** *
 991:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 992:Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
 993:Generated_Source\PSoC5/SPIM.c **** *
 994:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 995:Generated_Source\PSoC5/SPIM.c **** void SPIM_ClearFIFO(void) 
 996:Generated_Source\PSoC5/SPIM.c **** {
 1009              		.loc 1 996 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 8
 1012              		@ frame_needed = 1, uses_anonymous_args = 0
 1013 0000 80B5     		push	{r7, lr}
 1014              		.cfi_def_cfa_offset 8
 1015              		.cfi_offset 7, -8
 1016              		.cfi_offset 14, -4
 1017 0002 82B0     		sub	sp, sp, #8
 1018              		.cfi_def_cfa_offset 16
 1019 0004 00AF     		add	r7, sp, #0
 1020              		.cfi_def_cfa_register 7
 997:Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 998:Generated_Source\PSoC5/SPIM.c **** 
 999:Generated_Source\PSoC5/SPIM.c ****     /* Clear Hardware RX FIFO */
1000:Generated_Source\PSoC5/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 1021              		.loc 1 1000 0
 1022 0006 01E0     		b	.L73
 1023              	.L74:
1001:Generated_Source\PSoC5/SPIM.c ****     {
1002:Generated_Source\PSoC5/SPIM.c ****         (void) CY_GET_REG8(SPIM_RXDATA_PTR);
 1024              		.loc 1 1002 0
 1025 0008 124B     		ldr	r3, .L75
 1026 000a 1B78     		ldrb	r3, [r3]
 1027              	.L73:
1000:Generated_Source\PSoC5/SPIM.c ****     {
 1028              		.loc 1 1000 0
 1029 000c 124B     		ldr	r3, .L75+4
 1030 000e 1B78     		ldrb	r3, [r3]
 1031 0010 DBB2     		uxtb	r3, r3
 1032 0012 03F02003 		and	r3, r3, #32
 1033 0016 002B     		cmp	r3, #0
 1034 0018 F6D1     		bne	.L74
1003:Generated_Source\PSoC5/SPIM.c ****     }
1004:Generated_Source\PSoC5/SPIM.c **** 
1005:Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 1035              		.loc 1 1005 0
 1036 001a FFF7FEFF 		bl	CyEnterCriticalSection
 1037 001e 0346     		mov	r3, r0
 1038 0020 FB71     		strb	r3, [r7, #7]
1006:Generated_Source\PSoC5/SPIM.c ****     /* Clear TX FIFO */
1007:Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 1039              		.loc 1 1007 0
 1040 0022 0E4A     		ldr	r2, .L75+8
 1041 0024 0D4B     		ldr	r3, .L75+8
 1042 0026 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 37


 1043 0028 DBB2     		uxtb	r3, r3
 1044 002a 43F00103 		orr	r3, r3, #1
 1045 002e DBB2     		uxtb	r3, r3
 1046 0030 1370     		strb	r3, [r2]
1008:Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 1047              		.loc 1 1008 0
 1048 0032 0A4A     		ldr	r2, .L75+8
 1049 0034 094B     		ldr	r3, .L75+8
 1050 0036 1B78     		ldrb	r3, [r3]
 1051 0038 DBB2     		uxtb	r3, r3
 1052 003a 23F00103 		bic	r3, r3, #1
 1053 003e DBB2     		uxtb	r3, r3
 1054 0040 1370     		strb	r3, [r2]
1009:Generated_Source\PSoC5/SPIM.c **** 
1010:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
1011:Generated_Source\PSoC5/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
1013:Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
1014:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
1015:Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 1055              		.loc 1 1015 0
 1056 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1057 0044 1846     		mov	r0, r3
 1058 0046 FFF7FEFF 		bl	CyExitCriticalSection
1016:Generated_Source\PSoC5/SPIM.c **** }
 1059              		.loc 1 1016 0
 1060 004a 00BF     		nop
 1061 004c 0837     		adds	r7, r7, #8
 1062              		.cfi_def_cfa_offset 8
 1063 004e BD46     		mov	sp, r7
 1064              		.cfi_def_cfa_register 13
 1065              		@ sp needed
 1066 0050 80BD     		pop	{r7, pc}
 1067              	.L76:
 1068 0052 00BF     		.align	2
 1069              	.L75:
 1070 0054 5D640040 		.word	1073767517
 1071 0058 6F640040 		.word	1073767535
 1072 005c 9D640040 		.word	1073767581
 1073              		.cfi_endproc
 1074              	.LFE19:
 1075              		.size	SPIM_ClearFIFO, .-SPIM_ClearFIFO
 1076              		.section	.text.SPIM_EnableInt,"ax",%progbits
 1077              		.align	2
 1078              		.global	SPIM_EnableInt
 1079              		.thumb
 1080              		.thumb_func
 1081              		.type	SPIM_EnableInt, %function
 1082              	SPIM_EnableInt:
 1083              	.LFB20:
1017:Generated_Source\PSoC5/SPIM.c **** 
1018:Generated_Source\PSoC5/SPIM.c **** 
1019:Generated_Source\PSoC5/SPIM.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:Generated_Source\PSoC5/SPIM.c **** *  Please do not use it in new projects.
1021:Generated_Source\PSoC5/SPIM.c **** */
1022:Generated_Source\PSoC5/SPIM.c **** 
1023:Generated_Source\PSoC5/SPIM.c **** 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 38


1024:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1025:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_EnableInt
1026:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1027:Generated_Source\PSoC5/SPIM.c **** *
1028:Generated_Source\PSoC5/SPIM.c **** * Summary:
1029:Generated_Source\PSoC5/SPIM.c **** *  Enable internal interrupt generation.
1030:Generated_Source\PSoC5/SPIM.c **** *
1031:Generated_Source\PSoC5/SPIM.c **** * Parameters:
1032:Generated_Source\PSoC5/SPIM.c **** *  None.
1033:Generated_Source\PSoC5/SPIM.c **** *
1034:Generated_Source\PSoC5/SPIM.c **** * Return:
1035:Generated_Source\PSoC5/SPIM.c **** *  None.
1036:Generated_Source\PSoC5/SPIM.c **** *
1037:Generated_Source\PSoC5/SPIM.c **** * Theory:
1038:Generated_Source\PSoC5/SPIM.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1039:Generated_Source\PSoC5/SPIM.c **** *
1040:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1041:Generated_Source\PSoC5/SPIM.c **** void SPIM_EnableInt(void) 
1042:Generated_Source\PSoC5/SPIM.c **** {
 1084              		.loc 1 1042 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
 1087              		@ frame_needed = 1, uses_anonymous_args = 0
 1088 0000 80B5     		push	{r7, lr}
 1089              		.cfi_def_cfa_offset 8
 1090              		.cfi_offset 7, -8
 1091              		.cfi_offset 14, -4
 1092 0002 00AF     		add	r7, sp, #0
 1093              		.cfi_def_cfa_register 7
1043:Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableRxInt();
 1094              		.loc 1 1043 0
 1095 0004 FFF7FEFF 		bl	SPIM_EnableRxInt
1044:Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableTxInt();
 1096              		.loc 1 1044 0
 1097 0008 FFF7FEFF 		bl	SPIM_EnableTxInt
1045:Generated_Source\PSoC5/SPIM.c **** }
 1098              		.loc 1 1045 0
 1099 000c 00BF     		nop
 1100 000e 80BD     		pop	{r7, pc}
 1101              		.cfi_endproc
 1102              	.LFE20:
 1103              		.size	SPIM_EnableInt, .-SPIM_EnableInt
 1104              		.section	.text.SPIM_DisableInt,"ax",%progbits
 1105              		.align	2
 1106              		.global	SPIM_DisableInt
 1107              		.thumb
 1108              		.thumb_func
 1109              		.type	SPIM_DisableInt, %function
 1110              	SPIM_DisableInt:
 1111              	.LFB21:
1046:Generated_Source\PSoC5/SPIM.c **** 
1047:Generated_Source\PSoC5/SPIM.c **** 
1048:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1049:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_DisableInt
1050:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1051:Generated_Source\PSoC5/SPIM.c **** *
1052:Generated_Source\PSoC5/SPIM.c **** * Summary:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 39


1053:Generated_Source\PSoC5/SPIM.c **** *  Disable internal interrupt generation.
1054:Generated_Source\PSoC5/SPIM.c **** *
1055:Generated_Source\PSoC5/SPIM.c **** * Parameters:
1056:Generated_Source\PSoC5/SPIM.c **** *  None.
1057:Generated_Source\PSoC5/SPIM.c **** *
1058:Generated_Source\PSoC5/SPIM.c **** * Return:
1059:Generated_Source\PSoC5/SPIM.c **** *  None.
1060:Generated_Source\PSoC5/SPIM.c **** *
1061:Generated_Source\PSoC5/SPIM.c **** * Theory:
1062:Generated_Source\PSoC5/SPIM.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:Generated_Source\PSoC5/SPIM.c **** *
1064:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1065:Generated_Source\PSoC5/SPIM.c **** void SPIM_DisableInt(void) 
1066:Generated_Source\PSoC5/SPIM.c **** {
 1112              		.loc 1 1066 0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 1, uses_anonymous_args = 0
 1116 0000 80B5     		push	{r7, lr}
 1117              		.cfi_def_cfa_offset 8
 1118              		.cfi_offset 7, -8
 1119              		.cfi_offset 14, -4
 1120 0002 00AF     		add	r7, sp, #0
 1121              		.cfi_def_cfa_register 7
1067:Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableTxInt();
 1122              		.loc 1 1067 0
 1123 0004 FFF7FEFF 		bl	SPIM_DisableTxInt
1068:Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableRxInt();
 1124              		.loc 1 1068 0
 1125 0008 FFF7FEFF 		bl	SPIM_DisableRxInt
1069:Generated_Source\PSoC5/SPIM.c **** }
 1126              		.loc 1 1069 0
 1127 000c 00BF     		nop
 1128 000e 80BD     		pop	{r7, pc}
 1129              		.cfi_endproc
 1130              	.LFE21:
 1131              		.size	SPIM_DisableInt, .-SPIM_DisableInt
 1132              		.section	.text.SPIM_SetInterruptMode,"ax",%progbits
 1133              		.align	2
 1134              		.global	SPIM_SetInterruptMode
 1135              		.thumb
 1136              		.thumb_func
 1137              		.type	SPIM_SetInterruptMode, %function
 1138              	SPIM_SetInterruptMode:
 1139              	.LFB22:
1070:Generated_Source\PSoC5/SPIM.c **** 
1071:Generated_Source\PSoC5/SPIM.c **** 
1072:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1073:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_SetInterruptMode
1074:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1075:Generated_Source\PSoC5/SPIM.c **** *
1076:Generated_Source\PSoC5/SPIM.c **** * Summary:
1077:Generated_Source\PSoC5/SPIM.c **** *  Configure which status bits trigger an interrupt event.
1078:Generated_Source\PSoC5/SPIM.c **** *
1079:Generated_Source\PSoC5/SPIM.c **** * Parameters:
1080:Generated_Source\PSoC5/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1081:Generated_Source\PSoC5/SPIM.c **** *  header file).
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 40


1082:Generated_Source\PSoC5/SPIM.c **** *
1083:Generated_Source\PSoC5/SPIM.c **** * Return:
1084:Generated_Source\PSoC5/SPIM.c **** *  None.
1085:Generated_Source\PSoC5/SPIM.c **** *
1086:Generated_Source\PSoC5/SPIM.c **** * Theory:
1087:Generated_Source\PSoC5/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
1088:Generated_Source\PSoC5/SPIM.c **** *
1089:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1090:Generated_Source\PSoC5/SPIM.c **** void SPIM_SetInterruptMode(uint8 intSrc) 
1091:Generated_Source\PSoC5/SPIM.c **** {
 1140              		.loc 1 1091 0
 1141              		.cfi_startproc
 1142              		@ args = 0, pretend = 0, frame = 8
 1143              		@ frame_needed = 1, uses_anonymous_args = 0
 1144              		@ link register save eliminated.
 1145 0000 80B4     		push	{r7}
 1146              		.cfi_def_cfa_offset 4
 1147              		.cfi_offset 7, -4
 1148 0002 83B0     		sub	sp, sp, #12
 1149              		.cfi_def_cfa_offset 16
 1150 0004 00AF     		add	r7, sp, #0
 1151              		.cfi_def_cfa_register 7
 1152 0006 0346     		mov	r3, r0
 1153 0008 FB71     		strb	r3, [r7, #7]
1092:Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPIM_STS_SPI_IDLE));
 1154              		.loc 1 1092 0
 1155 000a 074A     		ldr	r2, .L80
 1156 000c FB79     		ldrb	r3, [r7, #7]
 1157 000e 23F01003 		bic	r3, r3, #16
 1158 0012 DBB2     		uxtb	r3, r3
 1159 0014 1370     		strb	r3, [r2]
1093:Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  =  intSrc;
 1160              		.loc 1 1093 0
 1161 0016 054A     		ldr	r2, .L80+4
 1162 0018 FB79     		ldrb	r3, [r7, #7]
 1163 001a 1370     		strb	r3, [r2]
1094:Generated_Source\PSoC5/SPIM.c **** }
 1164              		.loc 1 1094 0
 1165 001c 00BF     		nop
 1166 001e 0C37     		adds	r7, r7, #12
 1167              		.cfi_def_cfa_offset 4
 1168 0020 BD46     		mov	sp, r7
 1169              		.cfi_def_cfa_register 13
 1170              		@ sp needed
 1171 0022 80BC     		pop	{r7}
 1172              		.cfi_restore 7
 1173              		.cfi_def_cfa_offset 0
 1174 0024 7047     		bx	lr
 1175              	.L81:
 1176 0026 00BF     		.align	2
 1177              	.L80:
 1178 0028 8E640040 		.word	1073767566
 1179 002c 8F640040 		.word	1073767567
 1180              		.cfi_endproc
 1181              	.LFE22:
 1182              		.size	SPIM_SetInterruptMode, .-SPIM_SetInterruptMode
 1183              		.section	.text.SPIM_ReadStatus,"ax",%progbits
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 41


 1184              		.align	2
 1185              		.global	SPIM_ReadStatus
 1186              		.thumb
 1187              		.thumb_func
 1188              		.type	SPIM_ReadStatus, %function
 1189              	SPIM_ReadStatus:
 1190              	.LFB23:
1095:Generated_Source\PSoC5/SPIM.c **** 
1096:Generated_Source\PSoC5/SPIM.c **** 
1097:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1098:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadStatus
1099:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1100:Generated_Source\PSoC5/SPIM.c **** *
1101:Generated_Source\PSoC5/SPIM.c **** * Summary:
1102:Generated_Source\PSoC5/SPIM.c **** *  Read the status register for the component.
1103:Generated_Source\PSoC5/SPIM.c **** *
1104:Generated_Source\PSoC5/SPIM.c **** * Parameters:
1105:Generated_Source\PSoC5/SPIM.c **** *  None.
1106:Generated_Source\PSoC5/SPIM.c **** *
1107:Generated_Source\PSoC5/SPIM.c **** * Return:
1108:Generated_Source\PSoC5/SPIM.c **** *  Contents of the status register.
1109:Generated_Source\PSoC5/SPIM.c **** *
1110:Generated_Source\PSoC5/SPIM.c **** * Global variables:
1111:Generated_Source\PSoC5/SPIM.c **** *  SPIM_swStatus - used to store in software status register,
1112:Generated_Source\PSoC5/SPIM.c **** *  modified every function call - resets to zero.
1113:Generated_Source\PSoC5/SPIM.c **** *
1114:Generated_Source\PSoC5/SPIM.c **** * Theory:
1115:Generated_Source\PSoC5/SPIM.c **** *  Allows the user and the API to read the status register for error detection
1116:Generated_Source\PSoC5/SPIM.c **** *  and flow control.
1117:Generated_Source\PSoC5/SPIM.c **** *
1118:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
1119:Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
1120:Generated_Source\PSoC5/SPIM.c **** *
1121:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
1122:Generated_Source\PSoC5/SPIM.c **** *  No.
1123:Generated_Source\PSoC5/SPIM.c **** *
1124:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1125:Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_ReadStatus(void) 
1126:Generated_Source\PSoC5/SPIM.c **** {
 1191              		.loc 1 1126 0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 8
 1194              		@ frame_needed = 1, uses_anonymous_args = 0
 1195              		@ link register save eliminated.
 1196 0000 80B4     		push	{r7}
 1197              		.cfi_def_cfa_offset 4
 1198              		.cfi_offset 7, -4
 1199 0002 83B0     		sub	sp, sp, #12
 1200              		.cfi_def_cfa_offset 16
 1201 0004 00AF     		add	r7, sp, #0
 1202              		.cfi_def_cfa_register 7
1127:Generated_Source\PSoC5/SPIM.c ****     uint8 tmpStatus;
1128:Generated_Source\PSoC5/SPIM.c **** 
1129:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED)
1130:Generated_Source\PSoC5/SPIM.c **** 
1131:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableInt();
1132:Generated_Source\PSoC5/SPIM.c **** 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 42


1133:Generated_Source\PSoC5/SPIM.c ****         tmpStatus  = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
1134:Generated_Source\PSoC5/SPIM.c ****         tmpStatus |= SPIM_GET_STATUS_TX(SPIM_swStatusTx);
1135:Generated_Source\PSoC5/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
1136:Generated_Source\PSoC5/SPIM.c **** 
1137:Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusTx = 0u;
1138:Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusRx = 0u;
1139:Generated_Source\PSoC5/SPIM.c **** 
1140:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableInt();
1141:Generated_Source\PSoC5/SPIM.c **** 
1142:Generated_Source\PSoC5/SPIM.c ****     #else
1143:Generated_Source\PSoC5/SPIM.c **** 
1144:Generated_Source\PSoC5/SPIM.c ****         tmpStatus  = SPIM_RX_STATUS_REG;
 1203              		.loc 1 1144 0
 1204 0006 094B     		ldr	r3, .L84
 1205 0008 1B78     		ldrb	r3, [r3]
 1206 000a FB71     		strb	r3, [r7, #7]
1145:Generated_Source\PSoC5/SPIM.c ****         tmpStatus |= SPIM_TX_STATUS_REG;
 1207              		.loc 1 1145 0
 1208 000c 084B     		ldr	r3, .L84+4
 1209 000e 1B78     		ldrb	r3, [r3]
 1210 0010 DAB2     		uxtb	r2, r3
 1211 0012 FB79     		ldrb	r3, [r7, #7]
 1212 0014 1343     		orrs	r3, r3, r2
 1213 0016 FB71     		strb	r3, [r7, #7]
1146:Generated_Source\PSoC5/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
 1214              		.loc 1 1146 0
 1215 0018 FB79     		ldrb	r3, [r7, #7]
 1216 001a 23F01003 		bic	r3, r3, #16
 1217 001e FB71     		strb	r3, [r7, #7]
1147:Generated_Source\PSoC5/SPIM.c **** 
1148:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED) */
1149:Generated_Source\PSoC5/SPIM.c **** 
1150:Generated_Source\PSoC5/SPIM.c ****     return(tmpStatus);
 1218              		.loc 1 1150 0
 1219 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1151:Generated_Source\PSoC5/SPIM.c **** }
 1220              		.loc 1 1151 0
 1221 0022 1846     		mov	r0, r3
 1222 0024 0C37     		adds	r7, r7, #12
 1223              		.cfi_def_cfa_offset 4
 1224 0026 BD46     		mov	sp, r7
 1225              		.cfi_def_cfa_register 13
 1226              		@ sp needed
 1227 0028 80BC     		pop	{r7}
 1228              		.cfi_restore 7
 1229              		.cfi_def_cfa_offset 0
 1230 002a 7047     		bx	lr
 1231              	.L85:
 1232              		.align	2
 1233              	.L84:
 1234 002c 6F640040 		.word	1073767535
 1235 0030 6E640040 		.word	1073767534
 1236              		.cfi_endproc
 1237              	.LFE23:
 1238              		.size	SPIM_ReadStatus, .-SPIM_ReadStatus
 1239              		.text
 1240              	.Letext0:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 43


 1241              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1242              		.section	.debug_info,"",%progbits
 1243              	.Ldebug_info0:
 1244 0000 0D040000 		.4byte	0x40d
 1245 0004 0400     		.2byte	0x4
 1246 0006 00000000 		.4byte	.Ldebug_abbrev0
 1247 000a 04       		.byte	0x4
 1248 000b 01       		.uleb128 0x1
 1249 000c 11000000 		.4byte	.LASF54
 1250 0010 0C       		.byte	0xc
 1251 0011 B5000000 		.4byte	.LASF55
 1252 0015 D3000000 		.4byte	.LASF56
 1253 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1254 001d 00000000 		.4byte	0
 1255 0021 00000000 		.4byte	.Ldebug_line0
 1256 0025 02       		.uleb128 0x2
 1257 0026 01       		.byte	0x1
 1258 0027 06       		.byte	0x6
 1259 0028 90030000 		.4byte	.LASF0
 1260 002c 02       		.uleb128 0x2
 1261 002d 01       		.byte	0x1
 1262 002e 08       		.byte	0x8
 1263 002f 09020000 		.4byte	.LASF1
 1264 0033 02       		.uleb128 0x2
 1265 0034 02       		.byte	0x2
 1266 0035 05       		.byte	0x5
 1267 0036 1C030000 		.4byte	.LASF2
 1268 003a 02       		.uleb128 0x2
 1269 003b 02       		.byte	0x2
 1270 003c 07       		.byte	0x7
 1271 003d 22010000 		.4byte	.LASF3
 1272 0041 02       		.uleb128 0x2
 1273 0042 04       		.byte	0x4
 1274 0043 05       		.byte	0x5
 1275 0044 71030000 		.4byte	.LASF4
 1276 0048 02       		.uleb128 0x2
 1277 0049 04       		.byte	0x4
 1278 004a 07       		.byte	0x7
 1279 004b C2010000 		.4byte	.LASF5
 1280 004f 02       		.uleb128 0x2
 1281 0050 08       		.byte	0x8
 1282 0051 05       		.byte	0x5
 1283 0052 F9020000 		.4byte	.LASF6
 1284 0056 02       		.uleb128 0x2
 1285 0057 08       		.byte	0x8
 1286 0058 07       		.byte	0x7
 1287 0059 A5020000 		.4byte	.LASF7
 1288 005d 03       		.uleb128 0x3
 1289 005e 04       		.byte	0x4
 1290 005f 05       		.byte	0x5
 1291 0060 696E7400 		.ascii	"int\000"
 1292 0064 02       		.uleb128 0x2
 1293 0065 04       		.byte	0x4
 1294 0066 07       		.byte	0x7
 1295 0067 98020000 		.4byte	.LASF8
 1296 006b 04       		.uleb128 0x4
 1297 006c D4010000 		.4byte	.LASF9
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 44


 1298 0070 02       		.byte	0x2
 1299 0071 E401     		.2byte	0x1e4
 1300 0073 2C000000 		.4byte	0x2c
 1301 0077 04       		.uleb128 0x4
 1302 0078 79020000 		.4byte	.LASF10
 1303 007c 02       		.byte	0x2
 1304 007d E601     		.2byte	0x1e6
 1305 007f 48000000 		.4byte	0x48
 1306 0083 02       		.uleb128 0x2
 1307 0084 04       		.byte	0x4
 1308 0085 04       		.byte	0x4
 1309 0086 79010000 		.4byte	.LASF11
 1310 008a 02       		.uleb128 0x2
 1311 008b 08       		.byte	0x8
 1312 008c 04       		.byte	0x4
 1313 008d 2E020000 		.4byte	.LASF12
 1314 0091 02       		.uleb128 0x2
 1315 0092 01       		.byte	0x1
 1316 0093 08       		.byte	0x8
 1317 0094 29020000 		.4byte	.LASF13
 1318 0098 04       		.uleb128 0x4
 1319 0099 AC010000 		.4byte	.LASF14
 1320 009d 02       		.byte	0x2
 1321 009e 8E02     		.2byte	0x28e
 1322 00a0 A4000000 		.4byte	0xa4
 1323 00a4 05       		.uleb128 0x5
 1324 00a5 6B000000 		.4byte	0x6b
 1325 00a9 04       		.uleb128 0x4
 1326 00aa 07030000 		.4byte	.LASF15
 1327 00ae 02       		.byte	0x2
 1328 00af 9002     		.2byte	0x290
 1329 00b1 B5000000 		.4byte	0xb5
 1330 00b5 05       		.uleb128 0x5
 1331 00b6 77000000 		.4byte	0x77
 1332 00ba 02       		.uleb128 0x2
 1333 00bb 08       		.byte	0x8
 1334 00bc 04       		.byte	0x4
 1335 00bd 84030000 		.4byte	.LASF16
 1336 00c1 02       		.uleb128 0x2
 1337 00c2 04       		.byte	0x4
 1338 00c3 07       		.byte	0x7
 1339 00c4 F0020000 		.4byte	.LASF17
 1340 00c8 06       		.uleb128 0x6
 1341 00c9 35010000 		.4byte	.LASF18
 1342 00cd 01       		.byte	0x1
 1343 00ce 3F       		.byte	0x3f
 1344 00cf 00000000 		.4byte	.LFB0
 1345 00d3 6C000000 		.4byte	.LFE0-.LFB0
 1346 00d7 01       		.uleb128 0x1
 1347 00d8 9C       		.byte	0x9c
 1348 00d9 07       		.uleb128 0x7
 1349 00da 9F000000 		.4byte	.LASF20
 1350 00de 01       		.byte	0x1
 1351 00df 78       		.byte	0x78
 1352 00e0 00000000 		.4byte	.LFB1
 1353 00e4 64000000 		.4byte	.LFE1-.LFB1
 1354 00e8 01       		.uleb128 0x1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 45


 1355 00e9 9C       		.byte	0x9c
 1356 00ea FD000000 		.4byte	0xfd
 1357 00ee 08       		.uleb128 0x8
 1358 00ef E8010000 		.4byte	.LASF22
 1359 00f3 01       		.byte	0x1
 1360 00f4 7A       		.byte	0x7a
 1361 00f5 6B000000 		.4byte	0x6b
 1362 00f9 02       		.uleb128 0x2
 1363 00fa 91       		.byte	0x91
 1364 00fb 77       		.sleb128 -9
 1365 00fc 00       		.byte	0
 1366 00fd 06       		.uleb128 0x6
 1367 00fe 9C030000 		.4byte	.LASF19
 1368 0102 01       		.byte	0x1
 1369 0103 A3       		.byte	0xa3
 1370 0104 00000000 		.4byte	.LFB2
 1371 0108 24000000 		.4byte	.LFE2-.LFB2
 1372 010c 01       		.uleb128 0x1
 1373 010d 9C       		.byte	0x9c
 1374 010e 07       		.uleb128 0x7
 1375 010f AB000000 		.4byte	.LASF21
 1376 0113 01       		.byte	0x1
 1377 0114 C0       		.byte	0xc0
 1378 0115 00000000 		.4byte	.LFB3
 1379 0119 50000000 		.4byte	.LFE3-.LFB3
 1380 011d 01       		.uleb128 0x1
 1381 011e 9C       		.byte	0x9c
 1382 011f 32010000 		.4byte	0x132
 1383 0123 08       		.uleb128 0x8
 1384 0124 E8010000 		.4byte	.LASF22
 1385 0128 01       		.byte	0x1
 1386 0129 C2       		.byte	0xc2
 1387 012a 6B000000 		.4byte	0x6b
 1388 012e 02       		.uleb128 0x2
 1389 012f 91       		.byte	0x91
 1390 0130 77       		.sleb128 -9
 1391 0131 00       		.byte	0
 1392 0132 09       		.uleb128 0x9
 1393 0133 B1010000 		.4byte	.LASF23
 1394 0137 01       		.byte	0x1
 1395 0138 E3       		.byte	0xe3
 1396 0139 00000000 		.4byte	.LFB4
 1397 013d 18000000 		.4byte	.LFE4-.LFB4
 1398 0141 01       		.uleb128 0x1
 1399 0142 9C       		.byte	0x9c
 1400 0143 09       		.uleb128 0x9
 1401 0144 60030000 		.4byte	.LASF24
 1402 0148 01       		.byte	0x1
 1403 0149 FC       		.byte	0xfc
 1404 014a 00000000 		.4byte	.LFB5
 1405 014e 18000000 		.4byte	.LFE5-.LFB5
 1406 0152 01       		.uleb128 0x1
 1407 0153 9C       		.byte	0x9c
 1408 0154 0A       		.uleb128 0xa
 1409 0155 17020000 		.4byte	.LASF25
 1410 0159 01       		.byte	0x1
 1411 015a 1501     		.2byte	0x115
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 46


 1412 015c 00000000 		.4byte	.LFB6
 1413 0160 18000000 		.4byte	.LFE6-.LFB6
 1414 0164 01       		.uleb128 0x1
 1415 0165 9C       		.byte	0x9c
 1416 0166 0A       		.uleb128 0xa
 1417 0167 B9030000 		.4byte	.LASF26
 1418 016b 01       		.byte	0x1
 1419 016c 2E01     		.2byte	0x12e
 1420 016e 00000000 		.4byte	.LFB7
 1421 0172 18000000 		.4byte	.LFE7-.LFB7
 1422 0176 01       		.uleb128 0x1
 1423 0177 9C       		.byte	0x9c
 1424 0178 0B       		.uleb128 0xb
 1425 0179 61020000 		.4byte	.LASF27
 1426 017d 01       		.byte	0x1
 1427 017e 4801     		.2byte	0x148
 1428 0180 00000000 		.4byte	.LFB8
 1429 0184 20000000 		.4byte	.LFE8-.LFB8
 1430 0188 01       		.uleb128 0x1
 1431 0189 9C       		.byte	0x9c
 1432 018a 9E010000 		.4byte	0x19e
 1433 018e 0C       		.uleb128 0xc
 1434 018f 35020000 		.4byte	.LASF29
 1435 0193 01       		.byte	0x1
 1436 0194 4801     		.2byte	0x148
 1437 0196 6B000000 		.4byte	0x6b
 1438 019a 02       		.uleb128 0x2
 1439 019b 91       		.byte	0x91
 1440 019c 77       		.sleb128 -9
 1441 019d 00       		.byte	0
 1442 019e 0B       		.uleb128 0xb
 1443 019f 80020000 		.4byte	.LASF28
 1444 01a3 01       		.byte	0x1
 1445 01a4 6001     		.2byte	0x160
 1446 01a6 00000000 		.4byte	.LFB9
 1447 01aa 20000000 		.4byte	.LFE9-.LFB9
 1448 01ae 01       		.uleb128 0x1
 1449 01af 9C       		.byte	0x9c
 1450 01b0 C4010000 		.4byte	0x1c4
 1451 01b4 0C       		.uleb128 0xc
 1452 01b5 35020000 		.4byte	.LASF29
 1453 01b9 01       		.byte	0x1
 1454 01ba 6001     		.2byte	0x160
 1455 01bc 6B000000 		.4byte	0x6b
 1456 01c0 02       		.uleb128 0x2
 1457 01c1 91       		.byte	0x91
 1458 01c2 77       		.sleb128 -9
 1459 01c3 00       		.byte	0
 1460 01c4 0D       		.uleb128 0xd
 1461 01c5 A7030000 		.4byte	.LASF31
 1462 01c9 01       		.byte	0x1
 1463 01ca 8201     		.2byte	0x182
 1464 01cc 6B000000 		.4byte	0x6b
 1465 01d0 00000000 		.4byte	.LFB10
 1466 01d4 1C000000 		.4byte	.LFE10-.LFB10
 1467 01d8 01       		.uleb128 0x1
 1468 01d9 9C       		.byte	0x9c
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 47


 1469 01da EE010000 		.4byte	0x1ee
 1470 01de 0E       		.uleb128 0xe
 1471 01df 7A030000 		.4byte	.LASF30
 1472 01e3 01       		.byte	0x1
 1473 01e4 8401     		.2byte	0x184
 1474 01e6 6B000000 		.4byte	0x6b
 1475 01ea 02       		.uleb128 0x2
 1476 01eb 91       		.byte	0x91
 1477 01ec 77       		.sleb128 -9
 1478 01ed 00       		.byte	0
 1479 01ee 0D       		.uleb128 0xd
 1480 01ef C6020000 		.4byte	.LASF32
 1481 01f3 01       		.byte	0x1
 1482 01f4 B501     		.2byte	0x1b5
 1483 01f6 6B000000 		.4byte	0x6b
 1484 01fa 00000000 		.4byte	.LFB11
 1485 01fe 1C000000 		.4byte	.LFE11-.LFB11
 1486 0202 01       		.uleb128 0x1
 1487 0203 9C       		.byte	0x9c
 1488 0204 18020000 		.4byte	0x218
 1489 0208 0E       		.uleb128 0xe
 1490 0209 7A030000 		.4byte	.LASF30
 1491 020d 01       		.byte	0x1
 1492 020e B701     		.2byte	0x1b7
 1493 0210 6B000000 		.4byte	0x6b
 1494 0214 02       		.uleb128 0x2
 1495 0215 91       		.byte	0x91
 1496 0216 77       		.sleb128 -9
 1497 0217 00       		.byte	0
 1498 0218 0B       		.uleb128 0xb
 1499 0219 00000000 		.4byte	.LASF33
 1500 021d 01       		.byte	0x1
 1501 021e EE01     		.2byte	0x1ee
 1502 0220 00000000 		.4byte	.LFB12
 1503 0224 34000000 		.4byte	.LFE12-.LFB12
 1504 0228 01       		.uleb128 0x1
 1505 0229 9C       		.byte	0x9c
 1506 022a 3E020000 		.4byte	0x23e
 1507 022e 0C       		.uleb128 0xc
 1508 022f 1B010000 		.4byte	.LASF34
 1509 0233 01       		.byte	0x1
 1510 0234 EE01     		.2byte	0x1ee
 1511 0236 6B000000 		.4byte	0x6b
 1512 023a 02       		.uleb128 0x2
 1513 023b 91       		.byte	0x91
 1514 023c 77       		.sleb128 -9
 1515 023d 00       		.byte	0
 1516 023e 0D       		.uleb128 0xd
 1517 023f F9010000 		.4byte	.LASF35
 1518 0243 01       		.byte	0x1
 1519 0244 5A02     		.2byte	0x25a
 1520 0246 6B000000 		.4byte	0x6b
 1521 024a 00000000 		.4byte	.LFB13
 1522 024e 1C000000 		.4byte	.LFE13-.LFB13
 1523 0252 01       		.uleb128 0x1
 1524 0253 9C       		.byte	0x9c
 1525 0254 68020000 		.4byte	0x268
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 48


 1526 0258 0E       		.uleb128 0xe
 1527 0259 62010000 		.4byte	.LASF36
 1528 025d 01       		.byte	0x1
 1529 025e 5C02     		.2byte	0x25c
 1530 0260 6B000000 		.4byte	0x6b
 1531 0264 02       		.uleb128 0x2
 1532 0265 91       		.byte	0x91
 1533 0266 77       		.sleb128 -9
 1534 0267 00       		.byte	0
 1535 0268 0D       		.uleb128 0xd
 1536 0269 4C020000 		.4byte	.LASF37
 1537 026d 01       		.byte	0x1
 1538 026e 9A02     		.2byte	0x29a
 1539 0270 6B000000 		.4byte	0x6b
 1540 0274 00000000 		.4byte	.LFB14
 1541 0278 2C000000 		.4byte	.LFE14-.LFB14
 1542 027c 01       		.uleb128 0x1
 1543 027d 9C       		.byte	0x9c
 1544 027e 92020000 		.4byte	0x292
 1545 0282 0E       		.uleb128 0xe
 1546 0283 92010000 		.4byte	.LASF38
 1547 0287 01       		.byte	0x1
 1548 0288 9C02     		.2byte	0x29c
 1549 028a 6B000000 		.4byte	0x6b
 1550 028e 02       		.uleb128 0x2
 1551 028f 91       		.byte	0x91
 1552 0290 77       		.sleb128 -9
 1553 0291 00       		.byte	0
 1554 0292 0D       		.uleb128 0xd
 1555 0293 97010000 		.4byte	.LASF39
 1556 0297 01       		.byte	0x1
 1557 0298 D702     		.2byte	0x2d7
 1558 029a 6B000000 		.4byte	0x6b
 1559 029e 00000000 		.4byte	.LFB15
 1560 02a2 40000000 		.4byte	.LFE15-.LFB15
 1561 02a6 01       		.uleb128 0x1
 1562 02a7 9C       		.byte	0x9c
 1563 02a8 BC020000 		.4byte	0x2bc
 1564 02ac 0E       		.uleb128 0xe
 1565 02ad 92010000 		.4byte	.LASF38
 1566 02b1 01       		.byte	0x1
 1567 02b2 D902     		.2byte	0x2d9
 1568 02b4 6B000000 		.4byte	0x6b
 1569 02b8 02       		.uleb128 0x2
 1570 02b9 91       		.byte	0x91
 1571 02ba 77       		.sleb128 -9
 1572 02bb 00       		.byte	0
 1573 02bc 0A       		.uleb128 0xa
 1574 02bd 7F010000 		.4byte	.LASF40
 1575 02c1 01       		.byte	0x1
 1576 02c2 2603     		.2byte	0x326
 1577 02c4 00000000 		.4byte	.LFB16
 1578 02c8 28000000 		.4byte	.LFE16-.LFB16
 1579 02cc 01       		.uleb128 0x1
 1580 02cd 9C       		.byte	0x9c
 1581 02ce 0F       		.uleb128 0xf
 1582 02cf 26030000 		.4byte	.LASF41
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 49


 1583 02d3 01       		.byte	0x1
 1584 02d4 5D03     		.2byte	0x35d
 1585 02d6 00000000 		.4byte	.LFB17
 1586 02da 44000000 		.4byte	.LFE17-.LFB17
 1587 02de 01       		.uleb128 0x1
 1588 02df 9C       		.byte	0x9c
 1589 02e0 F4020000 		.4byte	0x2f4
 1590 02e4 0E       		.uleb128 0xe
 1591 02e5 E8010000 		.4byte	.LASF22
 1592 02e9 01       		.byte	0x1
 1593 02ea 5F03     		.2byte	0x35f
 1594 02ec 6B000000 		.4byte	0x6b
 1595 02f0 02       		.uleb128 0x2
 1596 02f1 91       		.byte	0x91
 1597 02f2 77       		.sleb128 -9
 1598 02f3 00       		.byte	0
 1599 02f4 0F       		.uleb128 0xf
 1600 02f5 DA010000 		.4byte	.LASF42
 1601 02f9 01       		.byte	0x1
 1602 02fa C203     		.2byte	0x3c2
 1603 02fc 00000000 		.4byte	.LFB18
 1604 0300 3A000000 		.4byte	.LFE18-.LFB18
 1605 0304 01       		.uleb128 0x1
 1606 0305 9C       		.byte	0x9c
 1607 0306 38030000 		.4byte	0x338
 1608 030a 0C       		.uleb128 0xc
 1609 030b 39030000 		.4byte	.LASF43
 1610 030f 01       		.byte	0x1
 1611 0310 C203     		.2byte	0x3c2
 1612 0312 38030000 		.4byte	0x338
 1613 0316 02       		.uleb128 0x2
 1614 0317 91       		.byte	0x91
 1615 0318 6C       		.sleb128 -20
 1616 0319 0C       		.uleb128 0xc
 1617 031a BC020000 		.4byte	.LASF44
 1618 031e 01       		.byte	0x1
 1619 031f C203     		.2byte	0x3c2
 1620 0321 6B000000 		.4byte	0x6b
 1621 0325 02       		.uleb128 0x2
 1622 0326 91       		.byte	0x91
 1623 0327 6B       		.sleb128 -21
 1624 0328 0E       		.uleb128 0xe
 1625 0329 D8020000 		.4byte	.LASF45
 1626 032d 01       		.byte	0x1
 1627 032e C503     		.2byte	0x3c5
 1628 0330 6B000000 		.4byte	0x6b
 1629 0334 02       		.uleb128 0x2
 1630 0335 91       		.byte	0x91
 1631 0336 77       		.sleb128 -9
 1632 0337 00       		.byte	0
 1633 0338 10       		.uleb128 0x10
 1634 0339 04       		.byte	0x4
 1635 033a 3E030000 		.4byte	0x33e
 1636 033e 11       		.uleb128 0x11
 1637 033f 6B000000 		.4byte	0x6b
 1638 0343 0F       		.uleb128 0xf
 1639 0344 0D030000 		.4byte	.LASF46
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 50


 1640 0348 01       		.byte	0x1
 1641 0349 E303     		.2byte	0x3e3
 1642 034b 00000000 		.4byte	.LFB19
 1643 034f 60000000 		.4byte	.LFE19-.LFB19
 1644 0353 01       		.uleb128 0x1
 1645 0354 9C       		.byte	0x9c
 1646 0355 69030000 		.4byte	0x369
 1647 0359 0E       		.uleb128 0xe
 1648 035a E8010000 		.4byte	.LASF22
 1649 035e 01       		.byte	0x1
 1650 035f E503     		.2byte	0x3e5
 1651 0361 6B000000 		.4byte	0x6b
 1652 0365 02       		.uleb128 0x2
 1653 0366 91       		.byte	0x91
 1654 0367 77       		.sleb128 -9
 1655 0368 00       		.byte	0
 1656 0369 12       		.uleb128 0x12
 1657 036a E1020000 		.4byte	.LASF47
 1658 036e 01       		.byte	0x1
 1659 036f 1104     		.2byte	0x411
 1660 0371 00000000 		.4byte	.LFB20
 1661 0375 10000000 		.4byte	.LFE20-.LFB20
 1662 0379 01       		.uleb128 0x1
 1663 037a 9C       		.byte	0x9c
 1664 037b 12       		.uleb128 0x12
 1665 037c 69010000 		.4byte	.LASF48
 1666 0380 01       		.byte	0x1
 1667 0381 2904     		.2byte	0x429
 1668 0383 00000000 		.4byte	.LFB21
 1669 0387 10000000 		.4byte	.LFE21-.LFB21
 1670 038b 01       		.uleb128 0x1
 1671 038c 9C       		.byte	0x9c
 1672 038d 0B       		.uleb128 0xb
 1673 038e 3F010000 		.4byte	.LASF49
 1674 0392 01       		.byte	0x1
 1675 0393 4204     		.2byte	0x442
 1676 0395 00000000 		.4byte	.LFB22
 1677 0399 30000000 		.4byte	.LFE22-.LFB22
 1678 039d 01       		.uleb128 0x1
 1679 039e 9C       		.byte	0x9c
 1680 039f B3030000 		.4byte	0x3b3
 1681 03a3 0C       		.uleb128 0xc
 1682 03a4 35020000 		.4byte	.LASF29
 1683 03a8 01       		.byte	0x1
 1684 03a9 4204     		.2byte	0x442
 1685 03ab 6B000000 		.4byte	0x6b
 1686 03af 02       		.uleb128 0x2
 1687 03b0 91       		.byte	0x91
 1688 03b1 77       		.sleb128 -9
 1689 03b2 00       		.byte	0
 1690 03b3 0D       		.uleb128 0xd
 1691 03b4 40030000 		.4byte	.LASF50
 1692 03b8 01       		.byte	0x1
 1693 03b9 6504     		.2byte	0x465
 1694 03bb 6B000000 		.4byte	0x6b
 1695 03bf 00000000 		.4byte	.LFB23
 1696 03c3 34000000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 51


 1697 03c7 01       		.uleb128 0x1
 1698 03c8 9C       		.byte	0x9c
 1699 03c9 DD030000 		.4byte	0x3dd
 1700 03cd 0E       		.uleb128 0xe
 1701 03ce 7A030000 		.4byte	.LASF30
 1702 03d2 01       		.byte	0x1
 1703 03d3 6704     		.2byte	0x467
 1704 03d5 6B000000 		.4byte	0x6b
 1705 03d9 02       		.uleb128 0x2
 1706 03da 91       		.byte	0x91
 1707 03db 77       		.sleb128 -9
 1708 03dc 00       		.byte	0
 1709 03dd 13       		.uleb128 0x13
 1710 03de 55010000 		.4byte	.LASF51
 1711 03e2 01       		.byte	0x1
 1712 03e3 22       		.byte	0x22
 1713 03e4 6B000000 		.4byte	0x6b
 1714 03e8 05       		.uleb128 0x5
 1715 03e9 03       		.byte	0x3
 1716 03ea 00000000 		.4byte	SPIM_initVar
 1717 03ee 13       		.uleb128 0x13
 1718 03ef 50030000 		.4byte	.LASF52
 1719 03f3 01       		.byte	0x1
 1720 03f4 24       		.byte	0x24
 1721 03f5 A4000000 		.4byte	0xa4
 1722 03f9 05       		.uleb128 0x5
 1723 03fa 03       		.byte	0x3
 1724 03fb 00000000 		.4byte	SPIM_swStatusTx
 1725 03ff 13       		.uleb128 0x13
 1726 0400 3C020000 		.4byte	.LASF53
 1727 0404 01       		.byte	0x1
 1728 0405 25       		.byte	0x25
 1729 0406 A4000000 		.4byte	0xa4
 1730 040a 05       		.uleb128 0x5
 1731 040b 03       		.byte	0x3
 1732 040c 00000000 		.4byte	SPIM_swStatusRx
 1733 0410 00       		.byte	0
 1734              		.section	.debug_abbrev,"",%progbits
 1735              	.Ldebug_abbrev0:
 1736 0000 01       		.uleb128 0x1
 1737 0001 11       		.uleb128 0x11
 1738 0002 01       		.byte	0x1
 1739 0003 25       		.uleb128 0x25
 1740 0004 0E       		.uleb128 0xe
 1741 0005 13       		.uleb128 0x13
 1742 0006 0B       		.uleb128 0xb
 1743 0007 03       		.uleb128 0x3
 1744 0008 0E       		.uleb128 0xe
 1745 0009 1B       		.uleb128 0x1b
 1746 000a 0E       		.uleb128 0xe
 1747 000b 55       		.uleb128 0x55
 1748 000c 17       		.uleb128 0x17
 1749 000d 11       		.uleb128 0x11
 1750 000e 01       		.uleb128 0x1
 1751 000f 10       		.uleb128 0x10
 1752 0010 17       		.uleb128 0x17
 1753 0011 00       		.byte	0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 52


 1754 0012 00       		.byte	0
 1755 0013 02       		.uleb128 0x2
 1756 0014 24       		.uleb128 0x24
 1757 0015 00       		.byte	0
 1758 0016 0B       		.uleb128 0xb
 1759 0017 0B       		.uleb128 0xb
 1760 0018 3E       		.uleb128 0x3e
 1761 0019 0B       		.uleb128 0xb
 1762 001a 03       		.uleb128 0x3
 1763 001b 0E       		.uleb128 0xe
 1764 001c 00       		.byte	0
 1765 001d 00       		.byte	0
 1766 001e 03       		.uleb128 0x3
 1767 001f 24       		.uleb128 0x24
 1768 0020 00       		.byte	0
 1769 0021 0B       		.uleb128 0xb
 1770 0022 0B       		.uleb128 0xb
 1771 0023 3E       		.uleb128 0x3e
 1772 0024 0B       		.uleb128 0xb
 1773 0025 03       		.uleb128 0x3
 1774 0026 08       		.uleb128 0x8
 1775 0027 00       		.byte	0
 1776 0028 00       		.byte	0
 1777 0029 04       		.uleb128 0x4
 1778 002a 16       		.uleb128 0x16
 1779 002b 00       		.byte	0
 1780 002c 03       		.uleb128 0x3
 1781 002d 0E       		.uleb128 0xe
 1782 002e 3A       		.uleb128 0x3a
 1783 002f 0B       		.uleb128 0xb
 1784 0030 3B       		.uleb128 0x3b
 1785 0031 05       		.uleb128 0x5
 1786 0032 49       		.uleb128 0x49
 1787 0033 13       		.uleb128 0x13
 1788 0034 00       		.byte	0
 1789 0035 00       		.byte	0
 1790 0036 05       		.uleb128 0x5
 1791 0037 35       		.uleb128 0x35
 1792 0038 00       		.byte	0
 1793 0039 49       		.uleb128 0x49
 1794 003a 13       		.uleb128 0x13
 1795 003b 00       		.byte	0
 1796 003c 00       		.byte	0
 1797 003d 06       		.uleb128 0x6
 1798 003e 2E       		.uleb128 0x2e
 1799 003f 00       		.byte	0
 1800 0040 3F       		.uleb128 0x3f
 1801 0041 19       		.uleb128 0x19
 1802 0042 03       		.uleb128 0x3
 1803 0043 0E       		.uleb128 0xe
 1804 0044 3A       		.uleb128 0x3a
 1805 0045 0B       		.uleb128 0xb
 1806 0046 3B       		.uleb128 0x3b
 1807 0047 0B       		.uleb128 0xb
 1808 0048 27       		.uleb128 0x27
 1809 0049 19       		.uleb128 0x19
 1810 004a 11       		.uleb128 0x11
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 53


 1811 004b 01       		.uleb128 0x1
 1812 004c 12       		.uleb128 0x12
 1813 004d 06       		.uleb128 0x6
 1814 004e 40       		.uleb128 0x40
 1815 004f 18       		.uleb128 0x18
 1816 0050 9642     		.uleb128 0x2116
 1817 0052 19       		.uleb128 0x19
 1818 0053 00       		.byte	0
 1819 0054 00       		.byte	0
 1820 0055 07       		.uleb128 0x7
 1821 0056 2E       		.uleb128 0x2e
 1822 0057 01       		.byte	0x1
 1823 0058 3F       		.uleb128 0x3f
 1824 0059 19       		.uleb128 0x19
 1825 005a 03       		.uleb128 0x3
 1826 005b 0E       		.uleb128 0xe
 1827 005c 3A       		.uleb128 0x3a
 1828 005d 0B       		.uleb128 0xb
 1829 005e 3B       		.uleb128 0x3b
 1830 005f 0B       		.uleb128 0xb
 1831 0060 27       		.uleb128 0x27
 1832 0061 19       		.uleb128 0x19
 1833 0062 11       		.uleb128 0x11
 1834 0063 01       		.uleb128 0x1
 1835 0064 12       		.uleb128 0x12
 1836 0065 06       		.uleb128 0x6
 1837 0066 40       		.uleb128 0x40
 1838 0067 18       		.uleb128 0x18
 1839 0068 9642     		.uleb128 0x2116
 1840 006a 19       		.uleb128 0x19
 1841 006b 01       		.uleb128 0x1
 1842 006c 13       		.uleb128 0x13
 1843 006d 00       		.byte	0
 1844 006e 00       		.byte	0
 1845 006f 08       		.uleb128 0x8
 1846 0070 34       		.uleb128 0x34
 1847 0071 00       		.byte	0
 1848 0072 03       		.uleb128 0x3
 1849 0073 0E       		.uleb128 0xe
 1850 0074 3A       		.uleb128 0x3a
 1851 0075 0B       		.uleb128 0xb
 1852 0076 3B       		.uleb128 0x3b
 1853 0077 0B       		.uleb128 0xb
 1854 0078 49       		.uleb128 0x49
 1855 0079 13       		.uleb128 0x13
 1856 007a 02       		.uleb128 0x2
 1857 007b 18       		.uleb128 0x18
 1858 007c 00       		.byte	0
 1859 007d 00       		.byte	0
 1860 007e 09       		.uleb128 0x9
 1861 007f 2E       		.uleb128 0x2e
 1862 0080 00       		.byte	0
 1863 0081 3F       		.uleb128 0x3f
 1864 0082 19       		.uleb128 0x19
 1865 0083 03       		.uleb128 0x3
 1866 0084 0E       		.uleb128 0xe
 1867 0085 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 54


 1868 0086 0B       		.uleb128 0xb
 1869 0087 3B       		.uleb128 0x3b
 1870 0088 0B       		.uleb128 0xb
 1871 0089 27       		.uleb128 0x27
 1872 008a 19       		.uleb128 0x19
 1873 008b 11       		.uleb128 0x11
 1874 008c 01       		.uleb128 0x1
 1875 008d 12       		.uleb128 0x12
 1876 008e 06       		.uleb128 0x6
 1877 008f 40       		.uleb128 0x40
 1878 0090 18       		.uleb128 0x18
 1879 0091 9742     		.uleb128 0x2117
 1880 0093 19       		.uleb128 0x19
 1881 0094 00       		.byte	0
 1882 0095 00       		.byte	0
 1883 0096 0A       		.uleb128 0xa
 1884 0097 2E       		.uleb128 0x2e
 1885 0098 00       		.byte	0
 1886 0099 3F       		.uleb128 0x3f
 1887 009a 19       		.uleb128 0x19
 1888 009b 03       		.uleb128 0x3
 1889 009c 0E       		.uleb128 0xe
 1890 009d 3A       		.uleb128 0x3a
 1891 009e 0B       		.uleb128 0xb
 1892 009f 3B       		.uleb128 0x3b
 1893 00a0 05       		.uleb128 0x5
 1894 00a1 27       		.uleb128 0x27
 1895 00a2 19       		.uleb128 0x19
 1896 00a3 11       		.uleb128 0x11
 1897 00a4 01       		.uleb128 0x1
 1898 00a5 12       		.uleb128 0x12
 1899 00a6 06       		.uleb128 0x6
 1900 00a7 40       		.uleb128 0x40
 1901 00a8 18       		.uleb128 0x18
 1902 00a9 9742     		.uleb128 0x2117
 1903 00ab 19       		.uleb128 0x19
 1904 00ac 00       		.byte	0
 1905 00ad 00       		.byte	0
 1906 00ae 0B       		.uleb128 0xb
 1907 00af 2E       		.uleb128 0x2e
 1908 00b0 01       		.byte	0x1
 1909 00b1 3F       		.uleb128 0x3f
 1910 00b2 19       		.uleb128 0x19
 1911 00b3 03       		.uleb128 0x3
 1912 00b4 0E       		.uleb128 0xe
 1913 00b5 3A       		.uleb128 0x3a
 1914 00b6 0B       		.uleb128 0xb
 1915 00b7 3B       		.uleb128 0x3b
 1916 00b8 05       		.uleb128 0x5
 1917 00b9 27       		.uleb128 0x27
 1918 00ba 19       		.uleb128 0x19
 1919 00bb 11       		.uleb128 0x11
 1920 00bc 01       		.uleb128 0x1
 1921 00bd 12       		.uleb128 0x12
 1922 00be 06       		.uleb128 0x6
 1923 00bf 40       		.uleb128 0x40
 1924 00c0 18       		.uleb128 0x18
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 55


 1925 00c1 9742     		.uleb128 0x2117
 1926 00c3 19       		.uleb128 0x19
 1927 00c4 01       		.uleb128 0x1
 1928 00c5 13       		.uleb128 0x13
 1929 00c6 00       		.byte	0
 1930 00c7 00       		.byte	0
 1931 00c8 0C       		.uleb128 0xc
 1932 00c9 05       		.uleb128 0x5
 1933 00ca 00       		.byte	0
 1934 00cb 03       		.uleb128 0x3
 1935 00cc 0E       		.uleb128 0xe
 1936 00cd 3A       		.uleb128 0x3a
 1937 00ce 0B       		.uleb128 0xb
 1938 00cf 3B       		.uleb128 0x3b
 1939 00d0 05       		.uleb128 0x5
 1940 00d1 49       		.uleb128 0x49
 1941 00d2 13       		.uleb128 0x13
 1942 00d3 02       		.uleb128 0x2
 1943 00d4 18       		.uleb128 0x18
 1944 00d5 00       		.byte	0
 1945 00d6 00       		.byte	0
 1946 00d7 0D       		.uleb128 0xd
 1947 00d8 2E       		.uleb128 0x2e
 1948 00d9 01       		.byte	0x1
 1949 00da 3F       		.uleb128 0x3f
 1950 00db 19       		.uleb128 0x19
 1951 00dc 03       		.uleb128 0x3
 1952 00dd 0E       		.uleb128 0xe
 1953 00de 3A       		.uleb128 0x3a
 1954 00df 0B       		.uleb128 0xb
 1955 00e0 3B       		.uleb128 0x3b
 1956 00e1 05       		.uleb128 0x5
 1957 00e2 27       		.uleb128 0x27
 1958 00e3 19       		.uleb128 0x19
 1959 00e4 49       		.uleb128 0x49
 1960 00e5 13       		.uleb128 0x13
 1961 00e6 11       		.uleb128 0x11
 1962 00e7 01       		.uleb128 0x1
 1963 00e8 12       		.uleb128 0x12
 1964 00e9 06       		.uleb128 0x6
 1965 00ea 40       		.uleb128 0x40
 1966 00eb 18       		.uleb128 0x18
 1967 00ec 9742     		.uleb128 0x2117
 1968 00ee 19       		.uleb128 0x19
 1969 00ef 01       		.uleb128 0x1
 1970 00f0 13       		.uleb128 0x13
 1971 00f1 00       		.byte	0
 1972 00f2 00       		.byte	0
 1973 00f3 0E       		.uleb128 0xe
 1974 00f4 34       		.uleb128 0x34
 1975 00f5 00       		.byte	0
 1976 00f6 03       		.uleb128 0x3
 1977 00f7 0E       		.uleb128 0xe
 1978 00f8 3A       		.uleb128 0x3a
 1979 00f9 0B       		.uleb128 0xb
 1980 00fa 3B       		.uleb128 0x3b
 1981 00fb 05       		.uleb128 0x5
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 56


 1982 00fc 49       		.uleb128 0x49
 1983 00fd 13       		.uleb128 0x13
 1984 00fe 02       		.uleb128 0x2
 1985 00ff 18       		.uleb128 0x18
 1986 0100 00       		.byte	0
 1987 0101 00       		.byte	0
 1988 0102 0F       		.uleb128 0xf
 1989 0103 2E       		.uleb128 0x2e
 1990 0104 01       		.byte	0x1
 1991 0105 3F       		.uleb128 0x3f
 1992 0106 19       		.uleb128 0x19
 1993 0107 03       		.uleb128 0x3
 1994 0108 0E       		.uleb128 0xe
 1995 0109 3A       		.uleb128 0x3a
 1996 010a 0B       		.uleb128 0xb
 1997 010b 3B       		.uleb128 0x3b
 1998 010c 05       		.uleb128 0x5
 1999 010d 27       		.uleb128 0x27
 2000 010e 19       		.uleb128 0x19
 2001 010f 11       		.uleb128 0x11
 2002 0110 01       		.uleb128 0x1
 2003 0111 12       		.uleb128 0x12
 2004 0112 06       		.uleb128 0x6
 2005 0113 40       		.uleb128 0x40
 2006 0114 18       		.uleb128 0x18
 2007 0115 9642     		.uleb128 0x2116
 2008 0117 19       		.uleb128 0x19
 2009 0118 01       		.uleb128 0x1
 2010 0119 13       		.uleb128 0x13
 2011 011a 00       		.byte	0
 2012 011b 00       		.byte	0
 2013 011c 10       		.uleb128 0x10
 2014 011d 0F       		.uleb128 0xf
 2015 011e 00       		.byte	0
 2016 011f 0B       		.uleb128 0xb
 2017 0120 0B       		.uleb128 0xb
 2018 0121 49       		.uleb128 0x49
 2019 0122 13       		.uleb128 0x13
 2020 0123 00       		.byte	0
 2021 0124 00       		.byte	0
 2022 0125 11       		.uleb128 0x11
 2023 0126 26       		.uleb128 0x26
 2024 0127 00       		.byte	0
 2025 0128 49       		.uleb128 0x49
 2026 0129 13       		.uleb128 0x13
 2027 012a 00       		.byte	0
 2028 012b 00       		.byte	0
 2029 012c 12       		.uleb128 0x12
 2030 012d 2E       		.uleb128 0x2e
 2031 012e 00       		.byte	0
 2032 012f 3F       		.uleb128 0x3f
 2033 0130 19       		.uleb128 0x19
 2034 0131 03       		.uleb128 0x3
 2035 0132 0E       		.uleb128 0xe
 2036 0133 3A       		.uleb128 0x3a
 2037 0134 0B       		.uleb128 0xb
 2038 0135 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 57


 2039 0136 05       		.uleb128 0x5
 2040 0137 27       		.uleb128 0x27
 2041 0138 19       		.uleb128 0x19
 2042 0139 11       		.uleb128 0x11
 2043 013a 01       		.uleb128 0x1
 2044 013b 12       		.uleb128 0x12
 2045 013c 06       		.uleb128 0x6
 2046 013d 40       		.uleb128 0x40
 2047 013e 18       		.uleb128 0x18
 2048 013f 9642     		.uleb128 0x2116
 2049 0141 19       		.uleb128 0x19
 2050 0142 00       		.byte	0
 2051 0143 00       		.byte	0
 2052 0144 13       		.uleb128 0x13
 2053 0145 34       		.uleb128 0x34
 2054 0146 00       		.byte	0
 2055 0147 03       		.uleb128 0x3
 2056 0148 0E       		.uleb128 0xe
 2057 0149 3A       		.uleb128 0x3a
 2058 014a 0B       		.uleb128 0xb
 2059 014b 3B       		.uleb128 0x3b
 2060 014c 0B       		.uleb128 0xb
 2061 014d 49       		.uleb128 0x49
 2062 014e 13       		.uleb128 0x13
 2063 014f 3F       		.uleb128 0x3f
 2064 0150 19       		.uleb128 0x19
 2065 0151 02       		.uleb128 0x2
 2066 0152 18       		.uleb128 0x18
 2067 0153 00       		.byte	0
 2068 0154 00       		.byte	0
 2069 0155 00       		.byte	0
 2070              		.section	.debug_aranges,"",%progbits
 2071 0000 D4000000 		.4byte	0xd4
 2072 0004 0200     		.2byte	0x2
 2073 0006 00000000 		.4byte	.Ldebug_info0
 2074 000a 04       		.byte	0x4
 2075 000b 00       		.byte	0
 2076 000c 0000     		.2byte	0
 2077 000e 0000     		.2byte	0
 2078 0010 00000000 		.4byte	.LFB0
 2079 0014 6C000000 		.4byte	.LFE0-.LFB0
 2080 0018 00000000 		.4byte	.LFB1
 2081 001c 64000000 		.4byte	.LFE1-.LFB1
 2082 0020 00000000 		.4byte	.LFB2
 2083 0024 24000000 		.4byte	.LFE2-.LFB2
 2084 0028 00000000 		.4byte	.LFB3
 2085 002c 50000000 		.4byte	.LFE3-.LFB3
 2086 0030 00000000 		.4byte	.LFB4
 2087 0034 18000000 		.4byte	.LFE4-.LFB4
 2088 0038 00000000 		.4byte	.LFB5
 2089 003c 18000000 		.4byte	.LFE5-.LFB5
 2090 0040 00000000 		.4byte	.LFB6
 2091 0044 18000000 		.4byte	.LFE6-.LFB6
 2092 0048 00000000 		.4byte	.LFB7
 2093 004c 18000000 		.4byte	.LFE7-.LFB7
 2094 0050 00000000 		.4byte	.LFB8
 2095 0054 20000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 58


 2096 0058 00000000 		.4byte	.LFB9
 2097 005c 20000000 		.4byte	.LFE9-.LFB9
 2098 0060 00000000 		.4byte	.LFB10
 2099 0064 1C000000 		.4byte	.LFE10-.LFB10
 2100 0068 00000000 		.4byte	.LFB11
 2101 006c 1C000000 		.4byte	.LFE11-.LFB11
 2102 0070 00000000 		.4byte	.LFB12
 2103 0074 34000000 		.4byte	.LFE12-.LFB12
 2104 0078 00000000 		.4byte	.LFB13
 2105 007c 1C000000 		.4byte	.LFE13-.LFB13
 2106 0080 00000000 		.4byte	.LFB14
 2107 0084 2C000000 		.4byte	.LFE14-.LFB14
 2108 0088 00000000 		.4byte	.LFB15
 2109 008c 40000000 		.4byte	.LFE15-.LFB15
 2110 0090 00000000 		.4byte	.LFB16
 2111 0094 28000000 		.4byte	.LFE16-.LFB16
 2112 0098 00000000 		.4byte	.LFB17
 2113 009c 44000000 		.4byte	.LFE17-.LFB17
 2114 00a0 00000000 		.4byte	.LFB18
 2115 00a4 3A000000 		.4byte	.LFE18-.LFB18
 2116 00a8 00000000 		.4byte	.LFB19
 2117 00ac 60000000 		.4byte	.LFE19-.LFB19
 2118 00b0 00000000 		.4byte	.LFB20
 2119 00b4 10000000 		.4byte	.LFE20-.LFB20
 2120 00b8 00000000 		.4byte	.LFB21
 2121 00bc 10000000 		.4byte	.LFE21-.LFB21
 2122 00c0 00000000 		.4byte	.LFB22
 2123 00c4 30000000 		.4byte	.LFE22-.LFB22
 2124 00c8 00000000 		.4byte	.LFB23
 2125 00cc 34000000 		.4byte	.LFE23-.LFB23
 2126 00d0 00000000 		.4byte	0
 2127 00d4 00000000 		.4byte	0
 2128              		.section	.debug_ranges,"",%progbits
 2129              	.Ldebug_ranges0:
 2130 0000 00000000 		.4byte	.LFB0
 2131 0004 6C000000 		.4byte	.LFE0
 2132 0008 00000000 		.4byte	.LFB1
 2133 000c 64000000 		.4byte	.LFE1
 2134 0010 00000000 		.4byte	.LFB2
 2135 0014 24000000 		.4byte	.LFE2
 2136 0018 00000000 		.4byte	.LFB3
 2137 001c 50000000 		.4byte	.LFE3
 2138 0020 00000000 		.4byte	.LFB4
 2139 0024 18000000 		.4byte	.LFE4
 2140 0028 00000000 		.4byte	.LFB5
 2141 002c 18000000 		.4byte	.LFE5
 2142 0030 00000000 		.4byte	.LFB6
 2143 0034 18000000 		.4byte	.LFE6
 2144 0038 00000000 		.4byte	.LFB7
 2145 003c 18000000 		.4byte	.LFE7
 2146 0040 00000000 		.4byte	.LFB8
 2147 0044 20000000 		.4byte	.LFE8
 2148 0048 00000000 		.4byte	.LFB9
 2149 004c 20000000 		.4byte	.LFE9
 2150 0050 00000000 		.4byte	.LFB10
 2151 0054 1C000000 		.4byte	.LFE10
 2152 0058 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 59


 2153 005c 1C000000 		.4byte	.LFE11
 2154 0060 00000000 		.4byte	.LFB12
 2155 0064 34000000 		.4byte	.LFE12
 2156 0068 00000000 		.4byte	.LFB13
 2157 006c 1C000000 		.4byte	.LFE13
 2158 0070 00000000 		.4byte	.LFB14
 2159 0074 2C000000 		.4byte	.LFE14
 2160 0078 00000000 		.4byte	.LFB15
 2161 007c 40000000 		.4byte	.LFE15
 2162 0080 00000000 		.4byte	.LFB16
 2163 0084 28000000 		.4byte	.LFE16
 2164 0088 00000000 		.4byte	.LFB17
 2165 008c 44000000 		.4byte	.LFE17
 2166 0090 00000000 		.4byte	.LFB18
 2167 0094 3A000000 		.4byte	.LFE18
 2168 0098 00000000 		.4byte	.LFB19
 2169 009c 60000000 		.4byte	.LFE19
 2170 00a0 00000000 		.4byte	.LFB20
 2171 00a4 10000000 		.4byte	.LFE20
 2172 00a8 00000000 		.4byte	.LFB21
 2173 00ac 10000000 		.4byte	.LFE21
 2174 00b0 00000000 		.4byte	.LFB22
 2175 00b4 30000000 		.4byte	.LFE22
 2176 00b8 00000000 		.4byte	.LFB23
 2177 00bc 34000000 		.4byte	.LFE23
 2178 00c0 00000000 		.4byte	0
 2179 00c4 00000000 		.4byte	0
 2180              		.section	.debug_line,"",%progbits
 2181              	.Ldebug_line0:
 2182 0000 64020000 		.section	.debug_str,"MS",%progbits,1
 2182      02004100 
 2182      00000201 
 2182      FB0E0D00 
 2182      01010101 
 2183              	.LASF33:
 2184 0000 5350494D 		.ascii	"SPIM_WriteTxData\000"
 2184      5F577269 
 2184      74655478 
 2184      44617461 
 2184      00
 2185              	.LASF54:
 2186 0011 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2186      43313120 
 2186      352E342E 
 2186      31203230 
 2186      31363036 
 2187 0044 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2187      20726576 
 2187      6973696F 
 2187      6E203233 
 2187      37373135 
 2188 0077 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2188      66756E63 
 2188      74696F6E 
 2188      2D736563 
 2188      74696F6E 
 2189              	.LASF20:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 60


 2190 009f 5350494D 		.ascii	"SPIM_Enable\000"
 2190      5F456E61 
 2190      626C6500 
 2191              	.LASF21:
 2192 00ab 5350494D 		.ascii	"SPIM_Stop\000"
 2192      5F53746F 
 2192      7000
 2193              	.LASF55:
 2194 00b5 47656E65 		.ascii	"Generated_Source\\PSoC5\\SPIM.c\000"
 2194      72617465 
 2194      645F536F 
 2194      75726365 
 2194      5C50536F 
 2195              	.LASF56:
 2196 00d3 433A5C55 		.ascii	"C:\\Users\\Andre Antunes\\Documents\\PSoC Creator\\"
 2196      73657273 
 2196      5C416E64 
 2196      72652041 
 2196      6E74756E 
 2197 0101 576F726B 		.ascii	"Workspace01\\KNoT FW.cydsn\000"
 2197      73706163 
 2197      6530315C 
 2197      4B4E6F54 
 2197      2046572E 
 2198              	.LASF34:
 2199 011b 74784461 		.ascii	"txData\000"
 2199      746100
 2200              	.LASF3:
 2201 0122 73686F72 		.ascii	"short unsigned int\000"
 2201      7420756E 
 2201      7369676E 
 2201      65642069 
 2201      6E7400
 2202              	.LASF18:
 2203 0135 5350494D 		.ascii	"SPIM_Init\000"
 2203      5F496E69 
 2203      7400
 2204              	.LASF49:
 2205 013f 5350494D 		.ascii	"SPIM_SetInterruptMode\000"
 2205      5F536574 
 2205      496E7465 
 2205      72727570 
 2205      744D6F64 
 2206              	.LASF51:
 2207 0155 5350494D 		.ascii	"SPIM_initVar\000"
 2207      5F696E69 
 2207      74566172 
 2207      00
 2208              	.LASF36:
 2209 0162 72784461 		.ascii	"rxData\000"
 2209      746100
 2210              	.LASF48:
 2211 0169 5350494D 		.ascii	"SPIM_DisableInt\000"
 2211      5F446973 
 2211      61626C65 
 2211      496E7400 
 2212              	.LASF11:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 61


 2213 0179 666C6F61 		.ascii	"float\000"
 2213      7400
 2214              	.LASF40:
 2215 017f 5350494D 		.ascii	"SPIM_ClearRxBuffer\000"
 2215      5F436C65 
 2215      61725278 
 2215      42756666 
 2215      657200
 2216              	.LASF38:
 2217 0192 73697A65 		.ascii	"size\000"
 2217      00
 2218              	.LASF39:
 2219 0197 5350494D 		.ascii	"SPIM_GetTxBufferSize\000"
 2219      5F476574 
 2219      54784275 
 2219      66666572 
 2219      53697A65 
 2220              	.LASF14:
 2221 01ac 72656738 		.ascii	"reg8\000"
 2221      00
 2222              	.LASF23:
 2223 01b1 5350494D 		.ascii	"SPIM_EnableTxInt\000"
 2223      5F456E61 
 2223      626C6554 
 2223      78496E74 
 2223      00
 2224              	.LASF5:
 2225 01c2 6C6F6E67 		.ascii	"long unsigned int\000"
 2225      20756E73 
 2225      69676E65 
 2225      6420696E 
 2225      7400
 2226              	.LASF9:
 2227 01d4 75696E74 		.ascii	"uint8\000"
 2227      3800
 2228              	.LASF42:
 2229 01da 5350494D 		.ascii	"SPIM_PutArray\000"
 2229      5F507574 
 2229      41727261 
 2229      7900
 2230              	.LASF22:
 2231 01e8 656E6162 		.ascii	"enableInterrupts\000"
 2231      6C65496E 
 2231      74657272 
 2231      75707473 
 2231      00
 2232              	.LASF35:
 2233 01f9 5350494D 		.ascii	"SPIM_ReadRxData\000"
 2233      5F526561 
 2233      64527844 
 2233      61746100 
 2234              	.LASF1:
 2235 0209 756E7369 		.ascii	"unsigned char\000"
 2235      676E6564 
 2235      20636861 
 2235      7200
 2236              	.LASF25:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 62


 2237 0217 5350494D 		.ascii	"SPIM_DisableTxInt\000"
 2237      5F446973 
 2237      61626C65 
 2237      5478496E 
 2237      7400
 2238              	.LASF13:
 2239 0229 63686172 		.ascii	"char\000"
 2239      00
 2240              	.LASF12:
 2241 022e 646F7562 		.ascii	"double\000"
 2241      6C6500
 2242              	.LASF29:
 2243 0235 696E7453 		.ascii	"intSrc\000"
 2243      726300
 2244              	.LASF53:
 2245 023c 5350494D 		.ascii	"SPIM_swStatusRx\000"
 2245      5F737753 
 2245      74617475 
 2245      73527800 
 2246              	.LASF37:
 2247 024c 5350494D 		.ascii	"SPIM_GetRxBufferSize\000"
 2247      5F476574 
 2247      52784275 
 2247      66666572 
 2247      53697A65 
 2248              	.LASF27:
 2249 0261 5350494D 		.ascii	"SPIM_SetTxInterruptMode\000"
 2249      5F536574 
 2249      5478496E 
 2249      74657272 
 2249      7570744D 
 2250              	.LASF10:
 2251 0279 75696E74 		.ascii	"uint32\000"
 2251      333200
 2252              	.LASF28:
 2253 0280 5350494D 		.ascii	"SPIM_SetRxInterruptMode\000"
 2253      5F536574 
 2253      5278496E 
 2253      74657272 
 2253      7570744D 
 2254              	.LASF8:
 2255 0298 756E7369 		.ascii	"unsigned int\000"
 2255      676E6564 
 2255      20696E74 
 2255      00
 2256              	.LASF7:
 2257 02a5 6C6F6E67 		.ascii	"long long unsigned int\000"
 2257      206C6F6E 
 2257      6720756E 
 2257      7369676E 
 2257      65642069 
 2258              	.LASF44:
 2259 02bc 62797465 		.ascii	"byteCount\000"
 2259      436F756E 
 2259      7400
 2260              	.LASF32:
 2261 02c6 5350494D 		.ascii	"SPIM_ReadRxStatus\000"
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 63


 2261      5F526561 
 2261      64527853 
 2261      74617475 
 2261      7300
 2262              	.LASF45:
 2263 02d8 62756649 		.ascii	"bufIndex\000"
 2263      6E646578 
 2263      00
 2264              	.LASF47:
 2265 02e1 5350494D 		.ascii	"SPIM_EnableInt\000"
 2265      5F456E61 
 2265      626C6549 
 2265      6E7400
 2266              	.LASF17:
 2267 02f0 73697A65 		.ascii	"sizetype\000"
 2267      74797065 
 2267      00
 2268              	.LASF6:
 2269 02f9 6C6F6E67 		.ascii	"long long int\000"
 2269      206C6F6E 
 2269      6720696E 
 2269      7400
 2270              	.LASF15:
 2271 0307 72656733 		.ascii	"reg32\000"
 2271      3200
 2272              	.LASF46:
 2273 030d 5350494D 		.ascii	"SPIM_ClearFIFO\000"
 2273      5F436C65 
 2273      61724649 
 2273      464F00
 2274              	.LASF2:
 2275 031c 73686F72 		.ascii	"short int\000"
 2275      7420696E 
 2275      7400
 2276              	.LASF41:
 2277 0326 5350494D 		.ascii	"SPIM_ClearTxBuffer\000"
 2277      5F436C65 
 2277      61725478 
 2277      42756666 
 2277      657200
 2278              	.LASF43:
 2279 0339 62756666 		.ascii	"buffer\000"
 2279      657200
 2280              	.LASF50:
 2281 0340 5350494D 		.ascii	"SPIM_ReadStatus\000"
 2281      5F526561 
 2281      64537461 
 2281      74757300 
 2282              	.LASF52:
 2283 0350 5350494D 		.ascii	"SPIM_swStatusTx\000"
 2283      5F737753 
 2283      74617475 
 2283      73547800 
 2284              	.LASF24:
 2285 0360 5350494D 		.ascii	"SPIM_EnableRxInt\000"
 2285      5F456E61 
 2285      626C6552 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccHFLBdQ.s 			page 64


 2285      78496E74 
 2285      00
 2286              	.LASF4:
 2287 0371 6C6F6E67 		.ascii	"long int\000"
 2287      20696E74 
 2287      00
 2288              	.LASF30:
 2289 037a 746D7053 		.ascii	"tmpStatus\000"
 2289      74617475 
 2289      7300
 2290              	.LASF16:
 2291 0384 6C6F6E67 		.ascii	"long double\000"
 2291      20646F75 
 2291      626C6500 
 2292              	.LASF0:
 2293 0390 7369676E 		.ascii	"signed char\000"
 2293      65642063 
 2293      68617200 
 2294              	.LASF19:
 2295 039c 5350494D 		.ascii	"SPIM_Start\000"
 2295      5F537461 
 2295      727400
 2296              	.LASF31:
 2297 03a7 5350494D 		.ascii	"SPIM_ReadTxStatus\000"
 2297      5F526561 
 2297      64547853 
 2297      74617475 
 2297      7300
 2298              	.LASF26:
 2299 03b9 5350494D 		.ascii	"SPIM_DisableRxInt\000"
 2299      5F446973 
 2299      61626C65 
 2299      5278496E 
 2299      7400
 2300              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
