ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ad5940.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              	bIsS2silicon:
  21 0000 00       		.space	1
  22              		.comm	SeqGenDB,28,4
  23              		.section	.text.AD5940_SEQGenInsert,"ax",%progbits
  24              		.align	2
  25              		.global	AD5940_SEQGenInsert
  26              		.thumb
  27              		.thumb_func
  28              		.type	AD5940_SEQGenInsert, %function
  29              	AD5940_SEQGenInsert:
  30              	.LFB1:
  31              		.file 1 "ad5940.c"
   1:ad5940.c      **** /**  
   2:ad5940.c      ****  * @file       ad5940.c
   3:ad5940.c      ****  * @brief      AD5940 library. This file contains all AD5940 library functions. 
   4:ad5940.c      ****  * @author     ADI
   5:ad5940.c      ****  * @date       March 2019
   6:ad5940.c      ****  * @par Revision History:
   7:ad5940.c      ****  * 
   8:ad5940.c      ****  * Copyright (c) 2017-2019 Analog Devices, Inc. All Rights Reserved.
   9:ad5940.c      ****  * 
  10:ad5940.c      ****  * This software is proprietary to Analog Devices, Inc. and its licensors.
  11:ad5940.c      ****  * By using this software you agree to the terms of the associated
  12:ad5940.c      ****  * Analog Devices Software License Agreement.
  13:ad5940.c      **** **/
  14:ad5940.c      **** #include "ad5940.h"
  15:ad5940.c      **** 
  16:ad5940.c      **** /*! \mainpage AD5940 Library Introduction
  17:ad5940.c      ****  * 
  18:ad5940.c      ****  * ![AD5940 EVAL Board](https://www.analog.com/-/media/analog/en/evaluation-board-images/images/eva
  19:ad5940.c      ****  * 
  20:ad5940.c      ****  * # Introduction
  21:ad5940.c      ****  *
  22:ad5940.c      ****  * The documentation is for AD594x library and examples.
  23:ad5940.c      ****  * 
  24:ad5940.c      ****  * # Manual Structure
  25:ad5940.c      ****  *
  26:ad5940.c      ****  * @ref AD5940_Library                                                      
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 2


  27:ad5940.c      ****  *  - @ref AD5940_Functions                                                 
  28:ad5940.c      ****  *  - @ref TypeDefinitions                                                    
  29:ad5940.c      ****  * @ref AD5940_Standard_Examples                                            
  30:ad5940.c      ****  * @ref AD5940_System_Examples	                                            
  31:ad5940.c      ****  * 
  32:ad5940.c      ****  * # How to Use It
  33:ad5940.c      ****  *  We provide examples that can directly run out of box.
  34:ad5940.c      ****  *  The files can generally be separated to three parts:
  35:ad5940.c      ****  *    - AD5940 Library files. ad5940.c and ad5940.h specifically. These two files are shared among 
  36:ad5940.c      ****  *    - AD5940 System Examples. The system examples mean system level application like measuring im
  37:ad5940.c      ****  *    - Standard examples. These include basic block level examples like ADC. It shows how to setup
  38:ad5940.c      ****  * 
  39:ad5940.c      ****  * ## Requirements to run these examples
  40:ad5940.c      ****  *  ### Hardware
  41:ad5940.c      ****  *  - Use EVAL_AD5940 or EVAL_AD5941. The default MCU board we used is ADICUP3029. We also provide 
  42:ad5940.c      ****  *  - Or use EVAL_ADuCM355
  43:ad5940.c      ****  *  ### Software
  44:ad5940.c      ****  *  - Pull all the source file from [GitHub](https://github.com/analogdevicesinc/ad5940-examples.gi
  45:ad5940.c      ****  *  - CMSIS pack that related to specific MCU. This normally is done by IDE you use.
  46:ad5940.c      ****  * 
  47:ad5940.c      ****  * ## Materials
  48:ad5940.c      ****  *      Please use this library together with following materials.
  49:ad5940.c      ****  *      - [AD5940 Data Sheet](https://www.analog.com/media/en/technical-documentation/data-sheets/A
  50:ad5940.c      ****  *      - [AD5940 Eval Board](https://www.analog.com/en/design-center/evaluation-hardware-and-softw
  51:ad5940.c      ****  *
  52:ad5940.c      ****  */
  53:ad5940.c      **** 
  54:ad5940.c      **** /* Remove below variables after AD594x is released. */
  55:ad5940.c      **** static BoolFlag bIsS2silicon = bFALSE;
  56:ad5940.c      **** 
  57:ad5940.c      **** /* Declare of SPI functions used to read/write registers */
  58:ad5940.c      **** #ifndef CHIPSEL_M355
  59:ad5940.c      **** static uint32_t AD5940_SPIReadReg(uint16_t RegAddr);
  60:ad5940.c      **** static void AD5940_SPIWriteReg(uint16_t RegAddr, uint32_t RegData);
  61:ad5940.c      **** #else
  62:ad5940.c      **** static uint32_t AD5940_D2DReadReg(uint16_t RegAddr);
  63:ad5940.c      **** static void AD5940_D2DWriteReg(uint16_t RegAddr, uint32_t RegData);
  64:ad5940.c      **** #endif
  65:ad5940.c      **** 
  66:ad5940.c      **** /** 
  67:ad5940.c      ****  * @addtogroup AD5940_Library
  68:ad5940.c      ****  *  The library functions, structures and constants.
  69:ad5940.c      ****  * @{
  70:ad5940.c      ****  *    @defgroup AD5940_Functions
  71:ad5940.c      ****  *    @{
  72:ad5940.c      ****  *        @defgroup Function_Helpers
  73:ad5940.c      ****  *        @brief The functions with no hardware access. They are helpers.
  74:ad5940.c      ****  *        @{
  75:ad5940.c      ****  *            @defgroup Sequencer_Generator_Functions
  76:ad5940.c      ****  *            @brief The set of function used to track all register read and write once it's enable
  77:ad5940.c      ****  *            @{
  78:ad5940.c      **** */
  79:ad5940.c      **** 
  80:ad5940.c      **** #define SEQUENCE_GENERATOR  /*!< Build sequence generator part in to lib. Comment this line to remo
  81:ad5940.c      **** 
  82:ad5940.c      **** #ifdef SEQUENCE_GENERATOR
  83:ad5940.c      **** /**
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 3


  84:ad5940.c      ****  * Structure used to store register information(address and its data) 
  85:ad5940.c      ****  * */
  86:ad5940.c      **** typedef struct
  87:ad5940.c      **** {
  88:ad5940.c      ****   uint32_t RegAddr  :8;   /**< 8bit address is enough for sequencer */
  89:ad5940.c      ****   uint32_t RegValue :24;  /**< Reg data is limited to 24bit by sequencer  */
  90:ad5940.c      **** }SEQGenRegInfo_Type;
  91:ad5940.c      **** 
  92:ad5940.c      **** /**
  93:ad5940.c      ****  * Sequencer generator data base.
  94:ad5940.c      **** */
  95:ad5940.c      **** struct
  96:ad5940.c      **** {
  97:ad5940.c      ****   BoolFlag EngineStart;         /**< Flag to mark start of the generator */
  98:ad5940.c      ****   uint32_t BufferSize;          /**< Total buffer size */
  99:ad5940.c      **** 
 100:ad5940.c      ****   uint32_t *pSeqBuff;           /**< The buffer for sequence generator(both sequences and RegInfo) 
 101:ad5940.c      ****   uint32_t SeqLen;              /**< Generated sequence length till now */
 102:ad5940.c      ****   SEQGenRegInfo_Type *pRegInfo; /**< Pointer to buffer where stores register info */
 103:ad5940.c      ****   uint32_t RegCount;            /**< The count of register info available in buffer *pRegInfo. */
 104:ad5940.c      ****   AD5940Err LastError;          /**< The last error message. */
 105:ad5940.c      **** }SeqGenDB;  /* Data base of Seq Generator */
 106:ad5940.c      **** 
 107:ad5940.c      **** /**
 108:ad5940.c      ****  * @brief Manually input a command to sequencer generator.
 109:ad5940.c      ****  * @param CmdWord: The 32-bit width sequencer command word. @ref Sequencer_Helper can be used to ge
 110:ad5940.c      ****  * @return None;
 111:ad5940.c      **** */
 112:ad5940.c      **** void AD5940_SEQGenInsert(uint32_t CmdWord)
 113:ad5940.c      **** {
  32              		.loc 1 113 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 16
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36              		@ link register save eliminated.
  37 0000 80B4     		push	{r7}
  38              		.cfi_def_cfa_offset 4
  39              		.cfi_offset 7, -4
  40 0002 85B0     		sub	sp, sp, #20
  41              		.cfi_def_cfa_offset 24
  42 0004 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 114:ad5940.c      ****   uint32_t temp;
 115:ad5940.c      ****   temp  = SeqGenDB.RegCount + SeqGenDB.SeqLen;
  45              		.loc 1 115 0
  46 0008 104B     		ldr	r3, .L5
  47 000a 5A69     		ldr	r2, [r3, #20]
  48 000c 0F4B     		ldr	r3, .L5
  49 000e DB68     		ldr	r3, [r3, #12]
  50 0010 1344     		add	r3, r3, r2
  51 0012 FB60     		str	r3, [r7, #12]
 116:ad5940.c      ****   /* Generate Sequence command */
 117:ad5940.c      ****   if(temp < SeqGenDB.BufferSize)
  52              		.loc 1 117 0
  53 0014 0D4B     		ldr	r3, .L5
  54 0016 5A68     		ldr	r2, [r3, #4]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 4


  55 0018 FB68     		ldr	r3, [r7, #12]
  56 001a 9A42     		cmp	r2, r3
  57 001c 0DD9     		bls	.L2
 118:ad5940.c      ****   {
 119:ad5940.c      ****     SeqGenDB.pSeqBuff[SeqGenDB.SeqLen] = CmdWord;
  58              		.loc 1 119 0
  59 001e 0B4B     		ldr	r3, .L5
  60 0020 9A68     		ldr	r2, [r3, #8]
  61 0022 0A4B     		ldr	r3, .L5
  62 0024 DB68     		ldr	r3, [r3, #12]
  63 0026 9B00     		lsls	r3, r3, #2
  64 0028 1344     		add	r3, r3, r2
  65 002a 7A68     		ldr	r2, [r7, #4]
  66 002c 1A60     		str	r2, [r3]
 120:ad5940.c      ****     SeqGenDB.SeqLen ++;
  67              		.loc 1 120 0
  68 002e 074B     		ldr	r3, .L5
  69 0030 DB68     		ldr	r3, [r3, #12]
  70 0032 0133     		adds	r3, r3, #1
  71 0034 054A     		ldr	r2, .L5
  72 0036 D360     		str	r3, [r2, #12]
 121:ad5940.c      ****   }
 122:ad5940.c      ****   else  /* There is no buffer */
 123:ad5940.c      ****     SeqGenDB.LastError = AD5940ERR_BUFF;
 124:ad5940.c      **** }
  73              		.loc 1 124 0
  74 0038 03E0     		b	.L4
  75              	.L2:
 123:ad5940.c      **** }
  76              		.loc 1 123 0
  77 003a 044B     		ldr	r3, .L5
  78 003c 6FF00302 		mvn	r2, #3
  79 0040 9A61     		str	r2, [r3, #24]
  80              	.L4:
  81              		.loc 1 124 0
  82 0042 00BF     		nop
  83 0044 1437     		adds	r7, r7, #20
  84              		.cfi_def_cfa_offset 4
  85 0046 BD46     		mov	sp, r7
  86              		.cfi_def_cfa_register 13
  87              		@ sp needed
  88 0048 80BC     		pop	{r7}
  89              		.cfi_restore 7
  90              		.cfi_def_cfa_offset 0
  91 004a 7047     		bx	lr
  92              	.L6:
  93              		.align	2
  94              	.L5:
  95 004c 00000000 		.word	SeqGenDB
  96              		.cfi_endproc
  97              	.LFE1:
  98              		.size	AD5940_SEQGenInsert, .-AD5940_SEQGenInsert
  99              		.section	.text.AD5940_SEQGenSearchReg,"ax",%progbits
 100              		.align	2
 101              		.thumb
 102              		.thumb_func
 103              		.type	AD5940_SEQGenSearchReg, %function
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 5


 104              	AD5940_SEQGenSearchReg:
 105              	.LFB2:
 125:ad5940.c      **** 
 126:ad5940.c      **** /**
 127:ad5940.c      ****  * @brief Search data-base to get current register value.
 128:ad5940.c      ****  * @param RegAddr: The register address.
 129:ad5940.c      ****  * @param pIndex: Pointer to a variable that used to store index of found register-info.
 130:ad5940.c      ****  * @return Return AD5940ERR_OK if register found in data-base. Otherwise return AD5940ERR_SEQREG.
 131:ad5940.c      **** */
 132:ad5940.c      **** static AD5940Err AD5940_SEQGenSearchReg(uint32_t RegAddr, uint32_t *pIndex)
 133:ad5940.c      **** {
 106              		.loc 1 133 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 16
 109              		@ frame_needed = 1, uses_anonymous_args = 0
 110              		@ link register save eliminated.
 111 0000 80B4     		push	{r7}
 112              		.cfi_def_cfa_offset 4
 113              		.cfi_offset 7, -4
 114 0002 85B0     		sub	sp, sp, #20
 115              		.cfi_def_cfa_offset 24
 116 0004 00AF     		add	r7, sp, #0
 117              		.cfi_def_cfa_register 7
 118 0006 7860     		str	r0, [r7, #4]
 119 0008 3960     		str	r1, [r7]
 134:ad5940.c      ****   uint32_t i;
 135:ad5940.c      **** 
 136:ad5940.c      ****   RegAddr = (RegAddr>>2)&0xff;
 120              		.loc 1 136 0
 121 000a 7B68     		ldr	r3, [r7, #4]
 122 000c 9B08     		lsrs	r3, r3, #2
 123 000e DBB2     		uxtb	r3, r3
 124 0010 7B60     		str	r3, [r7, #4]
 137:ad5940.c      ****   for(i=0;i<SeqGenDB.RegCount;i++)
 125              		.loc 1 137 0
 126 0012 0023     		movs	r3, #0
 127 0014 FB60     		str	r3, [r7, #12]
 128 0016 11E0     		b	.L8
 129              	.L11:
 138:ad5940.c      ****   {
 139:ad5940.c      ****     if(RegAddr == SeqGenDB.pRegInfo[i].RegAddr)
 130              		.loc 1 139 0
 131 0018 0E4B     		ldr	r3, .L12
 132 001a 1A69     		ldr	r2, [r3, #16]
 133 001c FB68     		ldr	r3, [r7, #12]
 134 001e 9B00     		lsls	r3, r3, #2
 135 0020 1344     		add	r3, r3, r2
 136 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 137 0024 1A46     		mov	r2, r3
 138 0026 7B68     		ldr	r3, [r7, #4]
 139 0028 9A42     		cmp	r2, r3
 140 002a 04D1     		bne	.L9
 140:ad5940.c      ****     {
 141:ad5940.c      ****       *pIndex = i;
 141              		.loc 1 141 0
 142 002c 3B68     		ldr	r3, [r7]
 143 002e FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 6


 144 0030 1A60     		str	r2, [r3]
 142:ad5940.c      ****       return AD5940ERR_OK;
 145              		.loc 1 142 0
 146 0032 0023     		movs	r3, #0
 147 0034 09E0     		b	.L10
 148              	.L9:
 137:ad5940.c      ****   {
 149              		.loc 1 137 0 discriminator 2
 150 0036 FB68     		ldr	r3, [r7, #12]
 151 0038 0133     		adds	r3, r3, #1
 152 003a FB60     		str	r3, [r7, #12]
 153              	.L8:
 137:ad5940.c      ****   {
 154              		.loc 1 137 0 is_stmt 0 discriminator 1
 155 003c 054B     		ldr	r3, .L12
 156 003e 5A69     		ldr	r2, [r3, #20]
 157 0040 FB68     		ldr	r3, [r7, #12]
 158 0042 9A42     		cmp	r2, r3
 159 0044 E8D8     		bhi	.L11
 143:ad5940.c      ****     }
 144:ad5940.c      ****   }
 145:ad5940.c      ****   return AD5940ERR_SEQREG;
 160              		.loc 1 145 0 is_stmt 1
 161 0046 6FF00603 		mvn	r3, #6
 162              	.L10:
 146:ad5940.c      **** }
 163              		.loc 1 146 0
 164 004a 1846     		mov	r0, r3
 165 004c 1437     		adds	r7, r7, #20
 166              		.cfi_def_cfa_offset 4
 167 004e BD46     		mov	sp, r7
 168              		.cfi_def_cfa_register 13
 169              		@ sp needed
 170 0050 80BC     		pop	{r7}
 171              		.cfi_restore 7
 172              		.cfi_def_cfa_offset 0
 173 0052 7047     		bx	lr
 174              	.L13:
 175              		.align	2
 176              	.L12:
 177 0054 00000000 		.word	SeqGenDB
 178              		.cfi_endproc
 179              	.LFE2:
 180              		.size	AD5940_SEQGenSearchReg, .-AD5940_SEQGenSearchReg
 181              		.section	.text.AD5940_SEQGenGetRegDefault,"ax",%progbits
 182              		.align	2
 183              		.thumb
 184              		.thumb_func
 185              		.type	AD5940_SEQGenGetRegDefault, %function
 186              	AD5940_SEQGenGetRegDefault:
 187              	.LFB3:
 147:ad5940.c      **** 
 148:ad5940.c      **** /**
 149:ad5940.c      ****  * @brief Get the register default value by SPI read. This function requires AD5940 is in active st
 150:ad5940.c      ****  * @param RegAddr: The register address.
 151:ad5940.c      ****  * @param pRegData: Pointer to a variable to store register default value.
 152:ad5940.c      ****  * @return Return AD5940ERR_OK.
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 7


 153:ad5940.c      **** */
 154:ad5940.c      **** static AD5940Err AD5940_SEQGenGetRegDefault(uint32_t RegAddr, uint32_t *pRegData)
 155:ad5940.c      **** {
 188              		.loc 1 155 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 8
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192 0000 80B5     		push	{r7, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 82B0     		sub	sp, sp, #8
 197              		.cfi_def_cfa_offset 16
 198 0004 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
 200 0006 7860     		str	r0, [r7, #4]
 201 0008 3960     		str	r1, [r7]
 156:ad5940.c      **** #ifdef CHIPSEL_M355
 157:ad5940.c      ****   *pRegData = AD5940_D2DReadReg(RegAddr);
 158:ad5940.c      **** #else
 159:ad5940.c      ****   *pRegData = AD5940_SPIReadReg(RegAddr);
 202              		.loc 1 159 0
 203 000a 7B68     		ldr	r3, [r7, #4]
 204 000c 9BB2     		uxth	r3, r3
 205 000e 1846     		mov	r0, r3
 206 0010 FFF7FEFF 		bl	AD5940_SPIReadReg
 207 0014 0246     		mov	r2, r0
 208 0016 3B68     		ldr	r3, [r7]
 209 0018 1A60     		str	r2, [r3]
 160:ad5940.c      **** #endif
 161:ad5940.c      ****   return AD5940ERR_OK;
 210              		.loc 1 161 0
 211 001a 0023     		movs	r3, #0
 162:ad5940.c      **** }
 212              		.loc 1 162 0
 213 001c 1846     		mov	r0, r3
 214 001e 0837     		adds	r7, r7, #8
 215              		.cfi_def_cfa_offset 8
 216 0020 BD46     		mov	sp, r7
 217              		.cfi_def_cfa_register 13
 218              		@ sp needed
 219 0022 80BD     		pop	{r7, pc}
 220              		.cfi_endproc
 221              	.LFE3:
 222              		.size	AD5940_SEQGenGetRegDefault, .-AD5940_SEQGenGetRegDefault
 223              		.section	.text.AD5940_SEQRegInfoInsert,"ax",%progbits
 224              		.align	2
 225              		.thumb
 226              		.thumb_func
 227              		.type	AD5940_SEQRegInfoInsert, %function
 228              	AD5940_SEQRegInfoInsert:
 229              	.LFB4:
 163:ad5940.c      **** 
 164:ad5940.c      **** /**
 165:ad5940.c      ****  * @brief Record the current register info to data-base. Update LastError if there is error.
 166:ad5940.c      ****  * @param RegAddr: The register address.
 167:ad5940.c      ****  * @param RegData: The register data
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 8


 168:ad5940.c      ****  * @return Return None.
 169:ad5940.c      **** */
 170:ad5940.c      **** static void AD5940_SEQRegInfoInsert(uint16_t RegAddr, uint32_t RegData)
 171:ad5940.c      **** {
 230              		.loc 1 171 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 16
 233              		@ frame_needed = 1, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235 0000 80B4     		push	{r7}
 236              		.cfi_def_cfa_offset 4
 237              		.cfi_offset 7, -4
 238 0002 85B0     		sub	sp, sp, #20
 239              		.cfi_def_cfa_offset 24
 240 0004 00AF     		add	r7, sp, #0
 241              		.cfi_def_cfa_register 7
 242 0006 0346     		mov	r3, r0
 243 0008 3960     		str	r1, [r7]
 244 000a FB80     		strh	r3, [r7, #6]	@ movhi
 172:ad5940.c      ****   uint32_t temp;
 173:ad5940.c      ****   temp = SeqGenDB.RegCount + SeqGenDB.SeqLen;
 245              		.loc 1 173 0
 246 000c 174B     		ldr	r3, .L20
 247 000e 5A69     		ldr	r2, [r3, #20]
 248 0010 164B     		ldr	r3, .L20
 249 0012 DB68     		ldr	r3, [r3, #12]
 250 0014 1344     		add	r3, r3, r2
 251 0016 FB60     		str	r3, [r7, #12]
 174:ad5940.c      ****   
 175:ad5940.c      ****   if(temp < SeqGenDB.BufferSize)
 252              		.loc 1 175 0
 253 0018 144B     		ldr	r3, .L20
 254 001a 5A68     		ldr	r2, [r3, #4]
 255 001c FB68     		ldr	r3, [r7, #12]
 256 001e 9A42     		cmp	r2, r3
 257 0020 1AD9     		bls	.L17
 176:ad5940.c      ****   {
 177:ad5940.c      ****     SeqGenDB.pRegInfo --; /* Move back */
 258              		.loc 1 177 0
 259 0022 124B     		ldr	r3, .L20
 260 0024 1B69     		ldr	r3, [r3, #16]
 261 0026 043B     		subs	r3, r3, #4
 262 0028 104A     		ldr	r2, .L20
 263 002a 1361     		str	r3, [r2, #16]
 178:ad5940.c      ****     SeqGenDB.pRegInfo[0].RegAddr = (RegAddr>>2)&0xff;
 264              		.loc 1 178 0
 265 002c 0F4B     		ldr	r3, .L20
 266 002e 1B69     		ldr	r3, [r3, #16]
 267 0030 FA88     		ldrh	r2, [r7, #6]
 268 0032 9208     		lsrs	r2, r2, #2
 269 0034 92B2     		uxth	r2, r2
 270 0036 D2B2     		uxtb	r2, r2
 271 0038 1A70     		strb	r2, [r3]
 179:ad5940.c      ****     SeqGenDB.pRegInfo[0].RegValue = RegData&0x00ffffff;
 272              		.loc 1 179 0
 273 003a 0C4B     		ldr	r3, .L20
 274 003c 1A69     		ldr	r2, [r3, #16]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 9


 275 003e 3B68     		ldr	r3, [r7]
 276 0040 23F07F41 		bic	r1, r3, #-16777216
 277 0044 1368     		ldr	r3, [r2]
 278 0046 61F31F23 		bfi	r3, r1, #8, #24
 279 004a 1360     		str	r3, [r2]
 180:ad5940.c      ****     SeqGenDB.RegCount ++;
 280              		.loc 1 180 0
 281 004c 074B     		ldr	r3, .L20
 282 004e 5B69     		ldr	r3, [r3, #20]
 283 0050 0133     		adds	r3, r3, #1
 284 0052 064A     		ldr	r2, .L20
 285 0054 5361     		str	r3, [r2, #20]
 181:ad5940.c      ****   }
 182:ad5940.c      ****   else  /* There is no more buffer  */
 183:ad5940.c      ****   {
 184:ad5940.c      ****     SeqGenDB.LastError = AD5940ERR_BUFF;
 185:ad5940.c      ****   }
 186:ad5940.c      **** }
 286              		.loc 1 186 0
 287 0056 03E0     		b	.L19
 288              	.L17:
 184:ad5940.c      ****   }
 289              		.loc 1 184 0
 290 0058 044B     		ldr	r3, .L20
 291 005a 6FF00302 		mvn	r2, #3
 292 005e 9A61     		str	r2, [r3, #24]
 293              	.L19:
 294              		.loc 1 186 0
 295 0060 00BF     		nop
 296 0062 1437     		adds	r7, r7, #20
 297              		.cfi_def_cfa_offset 4
 298 0064 BD46     		mov	sp, r7
 299              		.cfi_def_cfa_register 13
 300              		@ sp needed
 301 0066 80BC     		pop	{r7}
 302              		.cfi_restore 7
 303              		.cfi_def_cfa_offset 0
 304 0068 7047     		bx	lr
 305              	.L21:
 306 006a 00BF     		.align	2
 307              	.L20:
 308 006c 00000000 		.word	SeqGenDB
 309              		.cfi_endproc
 310              	.LFE4:
 311              		.size	AD5940_SEQRegInfoInsert, .-AD5940_SEQRegInfoInsert
 312              		.section	.text.AD5940_SEQReadReg,"ax",%progbits
 313              		.align	2
 314              		.thumb
 315              		.thumb_func
 316              		.type	AD5940_SEQReadReg, %function
 317              	AD5940_SEQReadReg:
 318              	.LFB5:
 187:ad5940.c      **** 
 188:ad5940.c      **** /**
 189:ad5940.c      ****  * @brief Get current register value. If we have record in data-base, read it. Otherwise, return th
 190:ad5940.c      ****  * @param RegAddr: The register address.
 191:ad5940.c      ****  * @return Return register value.
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 10


 192:ad5940.c      **** */
 193:ad5940.c      **** static uint32_t AD5940_SEQReadReg(uint16_t RegAddr)
 194:ad5940.c      **** {
 319              		.loc 1 194 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 16
 322              		@ frame_needed = 1, uses_anonymous_args = 0
 323 0000 80B5     		push	{r7, lr}
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 7, -8
 326              		.cfi_offset 14, -4
 327 0002 84B0     		sub	sp, sp, #16
 328              		.cfi_def_cfa_offset 24
 329 0004 00AF     		add	r7, sp, #0
 330              		.cfi_def_cfa_register 7
 331 0006 0346     		mov	r3, r0
 332 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 195:ad5940.c      ****   uint32_t RegIndex, RegData;
 196:ad5940.c      ****   
 197:ad5940.c      ****   if(AD5940_SEQGenSearchReg(RegAddr, &RegIndex) != AD5940ERR_OK)
 333              		.loc 1 197 0
 334 000a FB88     		ldrh	r3, [r7, #6]
 335 000c 07F10C02 		add	r2, r7, #12
 336 0010 1146     		mov	r1, r2
 337 0012 1846     		mov	r0, r3
 338 0014 FFF7FEFF 		bl	AD5940_SEQGenSearchReg
 339 0018 0346     		mov	r3, r0
 340 001a 002B     		cmp	r3, #0
 341 001c 0DD0     		beq	.L23
 198:ad5940.c      ****   {
 199:ad5940.c      ****     /* There is no record in data-base, read the default value. */
 200:ad5940.c      ****     AD5940_SEQGenGetRegDefault(RegAddr, &RegData);
 342              		.loc 1 200 0
 343 001e FB88     		ldrh	r3, [r7, #6]
 344 0020 07F10802 		add	r2, r7, #8
 345 0024 1146     		mov	r1, r2
 346 0026 1846     		mov	r0, r3
 347 0028 FFF7FEFF 		bl	AD5940_SEQGenGetRegDefault
 201:ad5940.c      ****     AD5940_SEQRegInfoInsert(RegAddr, RegData);
 348              		.loc 1 201 0
 349 002c BA68     		ldr	r2, [r7, #8]
 350 002e FB88     		ldrh	r3, [r7, #6]
 351 0030 1146     		mov	r1, r2
 352 0032 1846     		mov	r0, r3
 353 0034 FFF7FEFF 		bl	AD5940_SEQRegInfoInsert
 354 0038 08E0     		b	.L24
 355              	.L23:
 202:ad5940.c      ****   }
 203:ad5940.c      ****   else
 204:ad5940.c      ****   {
 205:ad5940.c      ****     /* return the current register value stored in data-base */
 206:ad5940.c      ****     RegData = SeqGenDB.pRegInfo[RegIndex].RegValue;
 356              		.loc 1 206 0
 357 003a 074B     		ldr	r3, .L26
 358 003c 1A69     		ldr	r2, [r3, #16]
 359 003e FB68     		ldr	r3, [r7, #12]
 360 0040 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 11


 361 0042 1344     		add	r3, r3, r2
 362 0044 1B68     		ldr	r3, [r3]
 363 0046 C3F31723 		ubfx	r3, r3, #8, #24
 364 004a BB60     		str	r3, [r7, #8]
 365              	.L24:
 207:ad5940.c      ****   }
 208:ad5940.c      **** 
 209:ad5940.c      ****   return RegData;
 366              		.loc 1 209 0
 367 004c BB68     		ldr	r3, [r7, #8]
 210:ad5940.c      **** }
 368              		.loc 1 210 0
 369 004e 1846     		mov	r0, r3
 370 0050 1037     		adds	r7, r7, #16
 371              		.cfi_def_cfa_offset 8
 372 0052 BD46     		mov	sp, r7
 373              		.cfi_def_cfa_register 13
 374              		@ sp needed
 375 0054 80BD     		pop	{r7, pc}
 376              	.L27:
 377 0056 00BF     		.align	2
 378              	.L26:
 379 0058 00000000 		.word	SeqGenDB
 380              		.cfi_endproc
 381              	.LFE5:
 382              		.size	AD5940_SEQReadReg, .-AD5940_SEQReadReg
 383              		.section	.text.AD5940_SEQWriteReg,"ax",%progbits
 384              		.align	2
 385              		.thumb
 386              		.thumb_func
 387              		.type	AD5940_SEQWriteReg, %function
 388              	AD5940_SEQWriteReg:
 389              	.LFB6:
 211:ad5940.c      **** 
 212:ad5940.c      **** /**
 213:ad5940.c      ****  * @brief Generate a sequencer command to write register. If the register address is out of range, 
 214:ad5940.c      ****  *        This function will also update the register-info in data-base to record current register 
 215:ad5940.c      ****  * @param RegAddr: The register address.
 216:ad5940.c      ****  * @param RegData: The register value.
 217:ad5940.c      ****  * @return Return None.
 218:ad5940.c      **** */
 219:ad5940.c      **** static void AD5940_SEQWriteReg(uint16_t RegAddr, uint32_t RegData)
 220:ad5940.c      **** {
 390              		.loc 1 220 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 16
 393              		@ frame_needed = 1, uses_anonymous_args = 0
 394 0000 80B5     		push	{r7, lr}
 395              		.cfi_def_cfa_offset 8
 396              		.cfi_offset 7, -8
 397              		.cfi_offset 14, -4
 398 0002 84B0     		sub	sp, sp, #16
 399              		.cfi_def_cfa_offset 24
 400 0004 00AF     		add	r7, sp, #0
 401              		.cfi_def_cfa_register 7
 402 0006 0346     		mov	r3, r0
 403 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 12


 404 000a FB80     		strh	r3, [r7, #6]	@ movhi
 221:ad5940.c      ****   uint32_t RegIndex;
 222:ad5940.c      ****   
 223:ad5940.c      ****   if(RegAddr > 0x21ff)
 405              		.loc 1 223 0
 406 000c FB88     		ldrh	r3, [r7, #6]
 407 000e B3F5085F 		cmp	r3, #8704
 408 0012 04D3     		bcc	.L29
 224:ad5940.c      ****   {
 225:ad5940.c      ****     SeqGenDB.LastError = AD5940ERR_ADDROR;  /* address out of range  */
 409              		.loc 1 225 0
 410 0014 204B     		ldr	r3, .L33
 411 0016 6FF00402 		mvn	r2, #4
 412 001a 9A61     		str	r2, [r3, #24]
 413 001c 39E0     		b	.L28
 414              	.L29:
 226:ad5940.c      ****     return;
 227:ad5940.c      ****   }
 228:ad5940.c      **** 
 229:ad5940.c      ****   if(AD5940_SEQGenSearchReg(RegAddr, &RegIndex) == AD5940ERR_OK)
 415              		.loc 1 229 0
 416 001e FB88     		ldrh	r3, [r7, #6]
 417 0020 07F10C02 		add	r2, r7, #12
 418 0024 1146     		mov	r1, r2
 419 0026 1846     		mov	r0, r3
 420 0028 FFF7FEFF 		bl	AD5940_SEQGenSearchReg
 421 002c 0346     		mov	r3, r0
 422 002e 002B     		cmp	r3, #0
 423 0030 1BD1     		bne	.L31
 230:ad5940.c      ****   {
 231:ad5940.c      ****     /* Store register value */
 232:ad5940.c      ****     SeqGenDB.pRegInfo[RegIndex].RegValue = RegData;
 424              		.loc 1 232 0
 425 0032 194B     		ldr	r3, .L33
 426 0034 1A69     		ldr	r2, [r3, #16]
 427 0036 FB68     		ldr	r3, [r7, #12]
 428 0038 9B00     		lsls	r3, r3, #2
 429 003a 1A44     		add	r2, r2, r3
 430 003c 3B68     		ldr	r3, [r7]
 431 003e 23F07F41 		bic	r1, r3, #-16777216
 432 0042 1368     		ldr	r3, [r2]
 433 0044 61F31F23 		bfi	r3, r1, #8, #24
 434 0048 1360     		str	r3, [r2]
 233:ad5940.c      ****     /* Generate Sequence command */
 234:ad5940.c      ****     AD5940_SEQGenInsert(SEQ_WR(RegAddr, RegData));
 435              		.loc 1 234 0
 436 004a FB88     		ldrh	r3, [r7, #6]
 437 004c 9B08     		lsrs	r3, r3, #2
 438 004e 9BB2     		uxth	r3, r3
 439 0050 1B06     		lsls	r3, r3, #24
 440 0052 03F0FE42 		and	r2, r3, #2130706432
 441 0056 3B68     		ldr	r3, [r7]
 442 0058 23F07F43 		bic	r3, r3, #-16777216
 443 005c 1343     		orrs	r3, r3, r2
 444 005e 43F00043 		orr	r3, r3, #-2147483648
 445 0062 1846     		mov	r0, r3
 446 0064 FFF7FEFF 		bl	AD5940_SEQGenInsert
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 13


 447 0068 13E0     		b	.L28
 448              	.L31:
 235:ad5940.c      ****   }
 236:ad5940.c      ****   else
 237:ad5940.c      ****   {
 238:ad5940.c      ****     AD5940_SEQRegInfoInsert(RegAddr, RegData);
 449              		.loc 1 238 0
 450 006a FB88     		ldrh	r3, [r7, #6]
 451 006c 3968     		ldr	r1, [r7]
 452 006e 1846     		mov	r0, r3
 453 0070 FFF7FEFF 		bl	AD5940_SEQRegInfoInsert
 239:ad5940.c      ****     /* Generate Sequence command */
 240:ad5940.c      ****     AD5940_SEQGenInsert(SEQ_WR(RegAddr, RegData));
 454              		.loc 1 240 0
 455 0074 FB88     		ldrh	r3, [r7, #6]
 456 0076 9B08     		lsrs	r3, r3, #2
 457 0078 9BB2     		uxth	r3, r3
 458 007a 1B06     		lsls	r3, r3, #24
 459 007c 03F0FE42 		and	r2, r3, #2130706432
 460 0080 3B68     		ldr	r3, [r7]
 461 0082 23F07F43 		bic	r3, r3, #-16777216
 462 0086 1343     		orrs	r3, r3, r2
 463 0088 43F00043 		orr	r3, r3, #-2147483648
 464 008c 1846     		mov	r0, r3
 465 008e FFF7FEFF 		bl	AD5940_SEQGenInsert
 466              	.L28:
 241:ad5940.c      ****   }
 242:ad5940.c      **** }
 467              		.loc 1 242 0
 468 0092 1037     		adds	r7, r7, #16
 469              		.cfi_def_cfa_offset 8
 470 0094 BD46     		mov	sp, r7
 471              		.cfi_def_cfa_register 13
 472              		@ sp needed
 473 0096 80BD     		pop	{r7, pc}
 474              	.L34:
 475              		.align	2
 476              	.L33:
 477 0098 00000000 		.word	SeqGenDB
 478              		.cfi_endproc
 479              	.LFE6:
 480              		.size	AD5940_SEQWriteReg, .-AD5940_SEQWriteReg
 481              		.section	.text.AD5940_SEQGenInit,"ax",%progbits
 482              		.align	2
 483              		.global	AD5940_SEQGenInit
 484              		.thumb
 485              		.thumb_func
 486              		.type	AD5940_SEQGenInit, %function
 487              	AD5940_SEQGenInit:
 488              	.LFB7:
 243:ad5940.c      **** 
 244:ad5940.c      **** /**
 245:ad5940.c      ****  * @brief Initialize sequencer generator with specified buffer.
 246:ad5940.c      ****  *        The buffer is used to store sequencer generated and record register value changes.
 247:ad5940.c      ****  *        The command is stored from start address of buffer while register value is stored from en
 248:ad5940.c      ****  *    Buffer[0] : First sequencer command;
 249:ad5940.c      ****  *    Buffer[1] : Second Sequencer command;
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 14


 250:ad5940.c      ****  *    ...
 251:ad5940.c      ****  *    Buffer[Last-1]: The second register value record.
 252:ad5940.c      ****  *    Buffer[Last]: The first register value record.
 253:ad5940.c      ****  * @param pBuffer: Pointer to the buffer.
 254:ad5940.c      ****  * @param BufferSize: The buffer length.
 255:ad5940.c      ****  * @return Return None.
 256:ad5940.c      **** */
 257:ad5940.c      **** void AD5940_SEQGenInit(uint32_t *pBuffer, uint32_t BufferSize)
 258:ad5940.c      **** {
 489              		.loc 1 258 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 8
 492              		@ frame_needed = 1, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 494 0000 80B4     		push	{r7}
 495              		.cfi_def_cfa_offset 4
 496              		.cfi_offset 7, -4
 497 0002 83B0     		sub	sp, sp, #12
 498              		.cfi_def_cfa_offset 16
 499 0004 00AF     		add	r7, sp, #0
 500              		.cfi_def_cfa_register 7
 501 0006 7860     		str	r0, [r7, #4]
 502 0008 3960     		str	r1, [r7]
 259:ad5940.c      ****   if(BufferSize < 2) return;
 503              		.loc 1 259 0
 504 000a 3B68     		ldr	r3, [r7]
 505 000c 012B     		cmp	r3, #1
 506 000e 1BD9     		bls	.L38
 260:ad5940.c      ****   SeqGenDB.BufferSize = BufferSize;
 507              		.loc 1 260 0
 508 0010 104A     		ldr	r2, .L39
 509 0012 3B68     		ldr	r3, [r7]
 510 0014 5360     		str	r3, [r2, #4]
 261:ad5940.c      ****   SeqGenDB.pSeqBuff = pBuffer;
 511              		.loc 1 261 0
 512 0016 0F4A     		ldr	r2, .L39
 513 0018 7B68     		ldr	r3, [r7, #4]
 514 001a 9360     		str	r3, [r2, #8]
 262:ad5940.c      ****   SeqGenDB.pRegInfo = (SEQGenRegInfo_Type*)pBuffer + BufferSize - 1; /* Point to the last element i
 515              		.loc 1 262 0
 516 001c 3B68     		ldr	r3, [r7]
 517 001e 03F18043 		add	r3, r3, #1073741824
 518 0022 013B     		subs	r3, r3, #1
 519 0024 9B00     		lsls	r3, r3, #2
 520 0026 7A68     		ldr	r2, [r7, #4]
 521 0028 1344     		add	r3, r3, r2
 522 002a 0A4A     		ldr	r2, .L39
 523 002c 1361     		str	r3, [r2, #16]
 263:ad5940.c      ****   SeqGenDB.SeqLen = 0;
 524              		.loc 1 263 0
 525 002e 094B     		ldr	r3, .L39
 526 0030 0022     		movs	r2, #0
 527 0032 DA60     		str	r2, [r3, #12]
 264:ad5940.c      **** 
 265:ad5940.c      ****   SeqGenDB.RegCount = 0;
 528              		.loc 1 265 0
 529 0034 074B     		ldr	r3, .L39
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 15


 530 0036 0022     		movs	r2, #0
 531 0038 5A61     		str	r2, [r3, #20]
 266:ad5940.c      ****   SeqGenDB.LastError = AD5940ERR_OK;
 532              		.loc 1 266 0
 533 003a 064B     		ldr	r3, .L39
 534 003c 0022     		movs	r2, #0
 535 003e 9A61     		str	r2, [r3, #24]
 267:ad5940.c      ****   SeqGenDB.EngineStart = bFALSE;
 536              		.loc 1 267 0
 537 0040 044B     		ldr	r3, .L39
 538 0042 0022     		movs	r2, #0
 539 0044 1A70     		strb	r2, [r3]
 540 0046 00E0     		b	.L35
 541              	.L38:
 259:ad5940.c      ****   SeqGenDB.BufferSize = BufferSize;
 542              		.loc 1 259 0
 543 0048 00BF     		nop
 544              	.L35:
 268:ad5940.c      **** }
 545              		.loc 1 268 0
 546 004a 0C37     		adds	r7, r7, #12
 547              		.cfi_def_cfa_offset 4
 548 004c BD46     		mov	sp, r7
 549              		.cfi_def_cfa_register 13
 550              		@ sp needed
 551 004e 80BC     		pop	{r7}
 552              		.cfi_restore 7
 553              		.cfi_def_cfa_offset 0
 554 0050 7047     		bx	lr
 555              	.L40:
 556 0052 00BF     		.align	2
 557              	.L39:
 558 0054 00000000 		.word	SeqGenDB
 559              		.cfi_endproc
 560              	.LFE7:
 561              		.size	AD5940_SEQGenInit, .-AD5940_SEQGenInit
 562              		.section	.text.AD5940_SEQGenFetchSeq,"ax",%progbits
 563              		.align	2
 564              		.global	AD5940_SEQGenFetchSeq
 565              		.thumb
 566              		.thumb_func
 567              		.type	AD5940_SEQGenFetchSeq, %function
 568              	AD5940_SEQGenFetchSeq:
 569              	.LFB8:
 269:ad5940.c      **** 
 270:ad5940.c      **** /**
 271:ad5940.c      ****  * @brief Get sequencer command generated.
 272:ad5940.c      ****  * @param ppSeqCmd: Pointer to a variable(pointer) used to store the pointer to generated sequencer
 273:ad5940.c      ****  * @param pSeqLen: Pointer to a variable that used to store how many commands available in buffer.
 274:ad5940.c      ****  * @return Return lasterror.
 275:ad5940.c      **** */
 276:ad5940.c      **** AD5940Err AD5940_SEQGenFetchSeq(const uint32_t **ppSeqCmd, uint32_t *pSeqLen)
 277:ad5940.c      **** {
 570              		.loc 1 277 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 16
 573              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 16


 574              		@ link register save eliminated.
 575 0000 80B4     		push	{r7}
 576              		.cfi_def_cfa_offset 4
 577              		.cfi_offset 7, -4
 578 0002 85B0     		sub	sp, sp, #20
 579              		.cfi_def_cfa_offset 24
 580 0004 00AF     		add	r7, sp, #0
 581              		.cfi_def_cfa_register 7
 582 0006 7860     		str	r0, [r7, #4]
 583 0008 3960     		str	r1, [r7]
 278:ad5940.c      ****   AD5940Err lasterror;
 279:ad5940.c      **** 
 280:ad5940.c      ****   if(ppSeqCmd)
 584              		.loc 1 280 0
 585 000a 7B68     		ldr	r3, [r7, #4]
 586 000c 002B     		cmp	r3, #0
 587 000e 03D0     		beq	.L42
 281:ad5940.c      ****     *ppSeqCmd = SeqGenDB.pSeqBuff;  
 588              		.loc 1 281 0
 589 0010 094B     		ldr	r3, .L45
 590 0012 9A68     		ldr	r2, [r3, #8]
 591 0014 7B68     		ldr	r3, [r7, #4]
 592 0016 1A60     		str	r2, [r3]
 593              	.L42:
 282:ad5940.c      ****   if(pSeqLen)
 594              		.loc 1 282 0
 595 0018 3B68     		ldr	r3, [r7]
 596 001a 002B     		cmp	r3, #0
 597 001c 03D0     		beq	.L43
 283:ad5940.c      ****     *pSeqLen = SeqGenDB.SeqLen;
 598              		.loc 1 283 0
 599 001e 064B     		ldr	r3, .L45
 600 0020 DA68     		ldr	r2, [r3, #12]
 601 0022 3B68     		ldr	r3, [r7]
 602 0024 1A60     		str	r2, [r3]
 603              	.L43:
 284:ad5940.c      **** 
 285:ad5940.c      ****   //SeqGenDB.SeqLen = 0;  /* Start a new sequence */
 286:ad5940.c      ****   lasterror = SeqGenDB.LastError;
 604              		.loc 1 286 0
 605 0026 044B     		ldr	r3, .L45
 606 0028 9B69     		ldr	r3, [r3, #24]
 607 002a FB60     		str	r3, [r7, #12]
 287:ad5940.c      ****   //SeqGenDB.LastError = AD5940ERR_OK;  /* Clear error message */
 288:ad5940.c      ****   return lasterror;
 608              		.loc 1 288 0
 609 002c FB68     		ldr	r3, [r7, #12]
 289:ad5940.c      **** }
 610              		.loc 1 289 0
 611 002e 1846     		mov	r0, r3
 612 0030 1437     		adds	r7, r7, #20
 613              		.cfi_def_cfa_offset 4
 614 0032 BD46     		mov	sp, r7
 615              		.cfi_def_cfa_register 13
 616              		@ sp needed
 617 0034 80BC     		pop	{r7}
 618              		.cfi_restore 7
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 17


 619              		.cfi_def_cfa_offset 0
 620 0036 7047     		bx	lr
 621              	.L46:
 622              		.align	2
 623              	.L45:
 624 0038 00000000 		.word	SeqGenDB
 625              		.cfi_endproc
 626              	.LFE8:
 627              		.size	AD5940_SEQGenFetchSeq, .-AD5940_SEQGenFetchSeq
 628              		.section	.text.AD5940_SEQGenCtrl,"ax",%progbits
 629              		.align	2
 630              		.global	AD5940_SEQGenCtrl
 631              		.thumb
 632              		.thumb_func
 633              		.type	AD5940_SEQGenCtrl, %function
 634              	AD5940_SEQGenCtrl:
 635              	.LFB9:
 290:ad5940.c      **** 
 291:ad5940.c      **** /**
 292:ad5940.c      ****  * @brief Start or stop the sequencer generator. Once started, the register write will be recorded 
 293:ad5940.c      ****  *        Once it's disabled, the register write is written to AD5940 directly by SPI bus.
 294:ad5940.c      ****  * @param bFlag: Enable or disable sequencer generator.
 295:ad5940.c      ****  * @return Return None.
 296:ad5940.c      **** */
 297:ad5940.c      **** void AD5940_SEQGenCtrl(BoolFlag bFlag)
 298:ad5940.c      **** {
 636              		.loc 1 298 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 8
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640              		@ link register save eliminated.
 641 0000 80B4     		push	{r7}
 642              		.cfi_def_cfa_offset 4
 643              		.cfi_offset 7, -4
 644 0002 83B0     		sub	sp, sp, #12
 645              		.cfi_def_cfa_offset 16
 646 0004 00AF     		add	r7, sp, #0
 647              		.cfi_def_cfa_register 7
 648 0006 0346     		mov	r3, r0
 649 0008 FB71     		strb	r3, [r7, #7]
 299:ad5940.c      ****   if(bFlag == bFALSE) /* Disable sequence generator */
 650              		.loc 1 299 0
 651 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 652 000c 002B     		cmp	r3, #0
 653 000e 03D1     		bne	.L48
 300:ad5940.c      ****   {
 301:ad5940.c      ****     SeqGenDB.EngineStart = bFALSE;
 654              		.loc 1 301 0
 655 0010 084B     		ldr	r3, .L51
 656 0012 0022     		movs	r2, #0
 657 0014 1A70     		strb	r2, [r3]
 302:ad5940.c      ****   }
 303:ad5940.c      ****   else
 304:ad5940.c      ****   {
 305:ad5940.c      ****     SeqGenDB.SeqLen = 0;
 306:ad5940.c      ****     SeqGenDB.LastError = AD5940ERR_OK;  /* Clear error message */
 307:ad5940.c      ****     SeqGenDB.EngineStart = bTRUE;
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 18


 308:ad5940.c      ****   }
 309:ad5940.c      **** }
 658              		.loc 1 309 0
 659 0016 08E0     		b	.L50
 660              	.L48:
 305:ad5940.c      ****     SeqGenDB.LastError = AD5940ERR_OK;  /* Clear error message */
 661              		.loc 1 305 0
 662 0018 064B     		ldr	r3, .L51
 663 001a 0022     		movs	r2, #0
 664 001c DA60     		str	r2, [r3, #12]
 306:ad5940.c      ****     SeqGenDB.EngineStart = bTRUE;
 665              		.loc 1 306 0
 666 001e 054B     		ldr	r3, .L51
 667 0020 0022     		movs	r2, #0
 668 0022 9A61     		str	r2, [r3, #24]
 307:ad5940.c      ****   }
 669              		.loc 1 307 0
 670 0024 034B     		ldr	r3, .L51
 671 0026 0122     		movs	r2, #1
 672 0028 1A70     		strb	r2, [r3]
 673              	.L50:
 674              		.loc 1 309 0
 675 002a 00BF     		nop
 676 002c 0C37     		adds	r7, r7, #12
 677              		.cfi_def_cfa_offset 4
 678 002e BD46     		mov	sp, r7
 679              		.cfi_def_cfa_register 13
 680              		@ sp needed
 681 0030 80BC     		pop	{r7}
 682              		.cfi_restore 7
 683              		.cfi_def_cfa_offset 0
 684 0032 7047     		bx	lr
 685              	.L52:
 686              		.align	2
 687              	.L51:
 688 0034 00000000 		.word	SeqGenDB
 689              		.cfi_endproc
 690              	.LFE9:
 691              		.size	AD5940_SEQGenCtrl, .-AD5940_SEQGenCtrl
 692              		.section	.text.AD5940_SEQCycleTime,"ax",%progbits
 693              		.align	2
 694              		.global	AD5940_SEQCycleTime
 695              		.thumb
 696              		.thumb_func
 697              		.type	AD5940_SEQCycleTime, %function
 698              	AD5940_SEQCycleTime:
 699              	.LFB10:
 310:ad5940.c      **** 
 311:ad5940.c      **** /**
 312:ad5940.c      ****  * @brief Calculate the number of cycles in the sequence
 313:ad5940.c      ****  * @return Return Number of ACLK Cycles that a generated sequence will take.
 314:ad5940.c      **** */
 315:ad5940.c      **** uint32_t AD5940_SEQCycleTime(void)
 316:ad5940.c      **** {
 700              		.loc 1 316 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 19


 703              		@ frame_needed = 1, uses_anonymous_args = 0
 704              		@ link register save eliminated.
 705 0000 80B4     		push	{r7}
 706              		.cfi_def_cfa_offset 4
 707              		.cfi_offset 7, -4
 708 0002 85B0     		sub	sp, sp, #20
 709              		.cfi_def_cfa_offset 24
 710 0004 00AF     		add	r7, sp, #0
 711              		.cfi_def_cfa_register 7
 317:ad5940.c      ****   uint32_t i, Cycles, Cmd;  
 318:ad5940.c      ****   Cycles = 0;
 712              		.loc 1 318 0
 713 0006 0023     		movs	r3, #0
 714 0008 BB60     		str	r3, [r7, #8]
 319:ad5940.c      ****   for(i=0;i<SeqGenDB.RegCount;i++)
 715              		.loc 1 319 0
 716 000a 0023     		movs	r3, #0
 717 000c FB60     		str	r3, [r7, #12]
 718 000e 27E0     		b	.L54
 719              	.L58:
 320:ad5940.c      ****   {
 321:ad5940.c      ****     Cmd = (SeqGenDB.pSeqBuff[i]  >> 30) & 0x3;
 720              		.loc 1 321 0
 721 0010 194B     		ldr	r3, .L60
 722 0012 9A68     		ldr	r2, [r3, #8]
 723 0014 FB68     		ldr	r3, [r7, #12]
 724 0016 9B00     		lsls	r3, r3, #2
 725 0018 1344     		add	r3, r3, r2
 726 001a 1B68     		ldr	r3, [r3]
 727 001c 9B0F     		lsrs	r3, r3, #30
 728 001e 7B60     		str	r3, [r7, #4]
 322:ad5940.c      ****     if (Cmd & 0x2)
 729              		.loc 1 322 0
 730 0020 7B68     		ldr	r3, [r7, #4]
 731 0022 03F00203 		and	r3, r3, #2
 732 0026 002B     		cmp	r3, #0
 733 0028 03D0     		beq	.L55
 323:ad5940.c      ****     {
 324:ad5940.c      ****       /* A write command */
 325:ad5940.c      ****       Cycles += 1;
 734              		.loc 1 325 0
 735 002a BB68     		ldr	r3, [r7, #8]
 736 002c 0133     		adds	r3, r3, #1
 737 002e BB60     		str	r3, [r7, #8]
 738 0030 13E0     		b	.L56
 739              	.L55:
 326:ad5940.c      ****     }
 327:ad5940.c      ****     else
 328:ad5940.c      ****     {
 329:ad5940.c      ****       if (Cmd & 0x1)
 740              		.loc 1 329 0
 741 0032 7B68     		ldr	r3, [r7, #4]
 742 0034 03F00103 		and	r3, r3, #1
 743 0038 002B     		cmp	r3, #0
 744 003a 03D0     		beq	.L57
 330:ad5940.c      ****       {
 331:ad5940.c      ****         /* Timeout Command */    
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 20


 332:ad5940.c      ****         Cycles += 1;
 745              		.loc 1 332 0
 746 003c BB68     		ldr	r3, [r7, #8]
 747 003e 0133     		adds	r3, r3, #1
 748 0040 BB60     		str	r3, [r7, #8]
 749 0042 0AE0     		b	.L56
 750              	.L57:
 333:ad5940.c      ****       }
 334:ad5940.c      ****       else
 335:ad5940.c      ****         {
 336:ad5940.c      ****           /* Wait command */
 337:ad5940.c      ****           Cycles += SeqGenDB.pSeqBuff[i] & 0x3FFFFFFF;
 751              		.loc 1 337 0
 752 0044 0C4B     		ldr	r3, .L60
 753 0046 9A68     		ldr	r2, [r3, #8]
 754 0048 FB68     		ldr	r3, [r7, #12]
 755 004a 9B00     		lsls	r3, r3, #2
 756 004c 1344     		add	r3, r3, r2
 757 004e 1B68     		ldr	r3, [r3]
 758 0050 23F04043 		bic	r3, r3, #-1073741824
 759 0054 BA68     		ldr	r2, [r7, #8]
 760 0056 1344     		add	r3, r3, r2
 761 0058 BB60     		str	r3, [r7, #8]
 762              	.L56:
 319:ad5940.c      ****   {
 763              		.loc 1 319 0 discriminator 2
 764 005a FB68     		ldr	r3, [r7, #12]
 765 005c 0133     		adds	r3, r3, #1
 766 005e FB60     		str	r3, [r7, #12]
 767              	.L54:
 319:ad5940.c      ****   {
 768              		.loc 1 319 0 is_stmt 0 discriminator 1
 769 0060 054B     		ldr	r3, .L60
 770 0062 5A69     		ldr	r2, [r3, #20]
 771 0064 FB68     		ldr	r3, [r7, #12]
 772 0066 9A42     		cmp	r2, r3
 773 0068 D2D8     		bhi	.L58
 338:ad5940.c      ****         }
 339:ad5940.c      ****     }
 340:ad5940.c      ****   } 
 341:ad5940.c      ****   return Cycles;  
 774              		.loc 1 341 0 is_stmt 1
 775 006a BB68     		ldr	r3, [r7, #8]
 342:ad5940.c      **** }
 776              		.loc 1 342 0
 777 006c 1846     		mov	r0, r3
 778 006e 1437     		adds	r7, r7, #20
 779              		.cfi_def_cfa_offset 4
 780 0070 BD46     		mov	sp, r7
 781              		.cfi_def_cfa_register 13
 782              		@ sp needed
 783 0072 80BC     		pop	{r7}
 784              		.cfi_restore 7
 785              		.cfi_def_cfa_offset 0
 786 0074 7047     		bx	lr
 787              	.L61:
 788 0076 00BF     		.align	2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 21


 789              	.L60:
 790 0078 00000000 		.word	SeqGenDB
 791              		.cfi_endproc
 792              	.LFE10:
 793              		.size	AD5940_SEQCycleTime, .-AD5940_SEQCycleTime
 794              		.section	.text._is_value_in_table,"ax",%progbits
 795              		.align	2
 796              		.thumb
 797              		.thumb_func
 798              		.type	_is_value_in_table, %function
 799              	_is_value_in_table:
 800              	.LFB11:
 343:ad5940.c      **** #endif
 344:ad5940.c      **** /**
 345:ad5940.c      ****  * @} Sequencer_Generator_Functions
 346:ad5940.c      **** */
 347:ad5940.c      **** 
 348:ad5940.c      **** /**
 349:ad5940.c      ****  * Check if an uint8_t value exist in table.
 350:ad5940.c      **** */
 351:ad5940.c      **** static int32_t _is_value_in_table(uint8_t value, const uint8_t *table, uint8_t len, uint8_t *index)
 352:ad5940.c      **** {
 801              		.loc 1 352 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 24
 804              		@ frame_needed = 1, uses_anonymous_args = 0
 805              		@ link register save eliminated.
 806 0000 80B4     		push	{r7}
 807              		.cfi_def_cfa_offset 4
 808              		.cfi_offset 7, -4
 809 0002 87B0     		sub	sp, sp, #28
 810              		.cfi_def_cfa_offset 32
 811 0004 00AF     		add	r7, sp, #0
 812              		.cfi_def_cfa_register 7
 813 0006 B960     		str	r1, [r7, #8]
 814 0008 7B60     		str	r3, [r7, #4]
 815 000a 0346     		mov	r3, r0
 816 000c FB73     		strb	r3, [r7, #15]
 817 000e 1346     		mov	r3, r2
 818 0010 BB73     		strb	r3, [r7, #14]
 819              	.LBB2:
 353:ad5940.c      ****   for(int i=0; i<len; i++)
 820              		.loc 1 353 0
 821 0012 0023     		movs	r3, #0
 822 0014 7B61     		str	r3, [r7, #20]
 823 0016 0FE0     		b	.L63
 824              	.L66:
 354:ad5940.c      ****   {
 355:ad5940.c      ****     if(value == table[i])
 825              		.loc 1 355 0
 826 0018 7B69     		ldr	r3, [r7, #20]
 827 001a BA68     		ldr	r2, [r7, #8]
 828 001c 1344     		add	r3, r3, r2
 829 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 830 0020 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 831 0022 9A42     		cmp	r2, r3
 832 0024 05D1     		bne	.L64
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 22


 356:ad5940.c      ****     {
 357:ad5940.c      ****       *index = i;
 833              		.loc 1 357 0
 834 0026 7B69     		ldr	r3, [r7, #20]
 835 0028 DAB2     		uxtb	r2, r3
 836 002a 7B68     		ldr	r3, [r7, #4]
 837 002c 1A70     		strb	r2, [r3]
 358:ad5940.c      ****       return bTRUE;
 838              		.loc 1 358 0
 839 002e 0123     		movs	r3, #1
 840 0030 07E0     		b	.L65
 841              	.L64:
 353:ad5940.c      ****   {
 842              		.loc 1 353 0 discriminator 2
 843 0032 7B69     		ldr	r3, [r7, #20]
 844 0034 0133     		adds	r3, r3, #1
 845 0036 7B61     		str	r3, [r7, #20]
 846              	.L63:
 353:ad5940.c      ****   {
 847              		.loc 1 353 0 is_stmt 0 discriminator 1
 848 0038 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 849 003a 7B69     		ldr	r3, [r7, #20]
 850 003c 9A42     		cmp	r2, r3
 851 003e EBDC     		bgt	.L66
 852              	.LBE2:
 359:ad5940.c      ****     }
 360:ad5940.c      ****   }
 361:ad5940.c      ****   return bFALSE;
 853              		.loc 1 361 0 is_stmt 1
 854 0040 0023     		movs	r3, #0
 855              	.L65:
 362:ad5940.c      **** }
 856              		.loc 1 362 0
 857 0042 1846     		mov	r0, r3
 858 0044 1C37     		adds	r7, r7, #28
 859              		.cfi_def_cfa_offset 4
 860 0046 BD46     		mov	sp, r7
 861              		.cfi_def_cfa_register 13
 862              		@ sp needed
 863 0048 80BC     		pop	{r7}
 864              		.cfi_restore 7
 865              		.cfi_def_cfa_offset 0
 866 004a 7047     		bx	lr
 867              		.cfi_endproc
 868              	.LFE11:
 869              		.size	_is_value_in_table, .-_is_value_in_table
 870              		.section	.rodata
 871              		.align	2
 872              	.LC0:
 873 0000 05       		.byte	5
 874 0001 07       		.byte	7
 875 0002 08       		.byte	8
 876 0003 09       		.byte	9
 877 0004 0B       		.byte	11
 878 0005 000000   		.align	2
 879              	.LC1:
 880 0008 0F       		.byte	15
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 23


 881 0009 0C       		.byte	12
 882 000a 0A       		.byte	10
 883 000b 09       		.byte	9
 884 000c 06       		.byte	6
 885 000d 000000   		.align	2
 886              	.LC2:
 887 0010 09       		.byte	9
 888 0011 0A       		.byte	10
 889 0012 0B       		.byte	11
 890 0013 00       		.align	2
 891              	.LC3:
 892 0014 12       		.byte	18
 893 0015 0F       		.byte	15
 894 0016 0C       		.byte	12
 895 0017 00       		.align	2
 896              	.LC4:
 897 0018 03       		.byte	3
 898 0019 04       		.byte	4
 899 001a 05       		.byte	5
 900 001b 06       		.byte	6
 901 001c 08       		.byte	8
 902 001d 0A       		.byte	10
 903 001e 0000     		.align	2
 904              	.LC5:
 905 0020 12       		.byte	18
 906 0021 0C       		.byte	12
 907 0022 06       		.byte	6
 908 0023 05       		.byte	5
 909 0024 04       		.byte	4
 910 0025 03       		.byte	3
 911              		.section	.text.AD5940_Notch50HzAvailable,"ax",%progbits
 912              		.align	2
 913              		.global	AD5940_Notch50HzAvailable
 914              		.thumb
 915              		.thumb_func
 916              		.type	AD5940_Notch50HzAvailable, %function
 917              	AD5940_Notch50HzAvailable:
 918              	.LFB12:
 363:ad5940.c      **** 
 364:ad5940.c      **** /**
 365:ad5940.c      ****  * @brief return if the SINC3/SINC2 combination is available for notch 50Hz filter.
 366:ad5940.c      ****  *        If it's not availabe, hardware automatically bypass Notch even if it's enabled.
 367:ad5940.c      ****  * @param pFilterInfo the filter configuration, only need sinc2/sinc3 osr and adc data rate informa
 368:ad5940.c      ****  * @return return bTRUE if notch 50Hz filter is available.
 369:ad5940.c      **** */
 370:ad5940.c      **** BoolFlag AD5940_Notch50HzAvailable(ADCFilterCfg_Type *pFilterInfo, uint8_t *dl)
 371:ad5940.c      **** {
 919              		.loc 1 371 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 56
 922              		@ frame_needed = 1, uses_anonymous_args = 0
 923 0000 80B5     		push	{r7, lr}
 924              		.cfi_def_cfa_offset 8
 925              		.cfi_offset 7, -8
 926              		.cfi_offset 14, -4
 927 0002 8EB0     		sub	sp, sp, #56
 928              		.cfi_def_cfa_offset 64
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 24


 929 0004 00AF     		add	r7, sp, #0
 930              		.cfi_def_cfa_register 7
 931 0006 7860     		str	r0, [r7, #4]
 932 0008 3960     		str	r1, [r7]
 372:ad5940.c      ****   if((pFilterInfo->ADCRate == ADCRATE_800KHZ && pFilterInfo->ADCSinc3Osr == ADCSINC3OSR_2)||\
 933              		.loc 1 372 0
 934 000a 7B68     		ldr	r3, [r7, #4]
 935 000c DB68     		ldr	r3, [r3, #12]
 936 000e 012B     		cmp	r3, #1
 937 0010 03D1     		bne	.L68
 938              		.loc 1 372 0 is_stmt 0 discriminator 1
 939 0012 7B68     		ldr	r3, [r7, #4]
 940 0014 1B68     		ldr	r3, [r3]
 941 0016 022B     		cmp	r3, #2
 942 0018 07D0     		beq	.L69
 943              	.L68:
 373:ad5940.c      ****       (pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2))
 944              		.loc 1 373 0 is_stmt 1 discriminator 3
 945 001a 7B68     		ldr	r3, [r7, #4]
 946 001c DB68     		ldr	r3, [r3, #12]
 372:ad5940.c      ****   if((pFilterInfo->ADCRate == ADCRATE_800KHZ && pFilterInfo->ADCSinc3Osr == ADCSINC3OSR_2)||\
 947              		.loc 1 372 0 discriminator 3
 948 001e 002B     		cmp	r3, #0
 949 0020 29D1     		bne	.L70
 950              		.loc 1 373 0
 951 0022 7B68     		ldr	r3, [r7, #4]
 952 0024 1B68     		ldr	r3, [r3]
 953 0026 022B     		cmp	r3, #2
 954 0028 25D0     		beq	.L70
 955              	.L69:
 956              	.LBB3:
 374:ad5940.c      ****   {
 375:ad5940.c      ****     //this combination suits for filter:
 376:ad5940.c      ****     //SINC3 OSR2, for 800kSPS
 377:ad5940.c      ****     //and SINC3 OSR4 and OSR5 for 1.6MSPS,
 378:ad5940.c      ****     const uint8_t available_sinc2_osr[] = {ADCSINC2OSR_533, ADCSINC2OSR_667,ADCSINC2OSR_800, ADCSIN
 957              		.loc 1 378 0
 958 002a 454A     		ldr	r2, .L79
 959 002c 07F13003 		add	r3, r7, #48
 960 0030 1068     		ldr	r0, [r2]	@ unaligned
 961 0032 1860     		str	r0, [r3]	@ unaligned
 962 0034 1279     		ldrb	r2, [r2, #4]
 963 0036 1A71     		strb	r2, [r3, #4]
 379:ad5940.c      ****     const uint8_t dl_50Hz[] = {15,12,10,9,6};
 964              		.loc 1 379 0
 965 0038 424A     		ldr	r2, .L79+4
 966 003a 07F12803 		add	r3, r7, #40
 967 003e 1068     		ldr	r0, [r2]	@ unaligned
 968 0040 1860     		str	r0, [r3]	@ unaligned
 969 0042 1279     		ldrb	r2, [r2, #4]
 970 0044 1A71     		strb	r2, [r3, #4]
 380:ad5940.c      ****     uint8_t index;
 381:ad5940.c      ****     if(_is_value_in_table(pFilterInfo->ADCSinc2Osr, available_sinc2_osr, sizeof(available_sinc2_osr
 971              		.loc 1 381 0
 972 0046 7B68     		ldr	r3, [r7, #4]
 973 0048 5B68     		ldr	r3, [r3, #4]
 974 004a D8B2     		uxtb	r0, r3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 25


 975 004c 07F12703 		add	r3, r7, #39
 976 0050 07F13001 		add	r1, r7, #48
 977 0054 0522     		movs	r2, #5
 978 0056 FFF7FEFF 		bl	_is_value_in_table
 979 005a 0346     		mov	r3, r0
 980 005c 002B     		cmp	r3, #0
 981 005e 64D0     		beq	.L77
 382:ad5940.c      ****     {
 383:ad5940.c      ****       *dl = dl_50Hz[index];
 982              		.loc 1 383 0
 983 0060 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 984 0064 07F13802 		add	r2, r7, #56
 985 0068 1344     		add	r3, r3, r2
 986 006a 13F8102C 		ldrb	r2, [r3, #-16]	@ zero_extendqisi2
 987 006e 3B68     		ldr	r3, [r7]
 988 0070 1A70     		strb	r2, [r3]
 384:ad5940.c      ****       return bTRUE;
 989              		.loc 1 384 0
 990 0072 0123     		movs	r3, #1
 991 0074 60E0     		b	.L72
 992              	.L70:
 993              	.LBE3:
 385:ad5940.c      ****     }
 386:ad5940.c      ****   }
 387:ad5940.c      ****   else if(pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr == ADCSINC3OSR_2)
 994              		.loc 1 387 0
 995 0076 7B68     		ldr	r3, [r7, #4]
 996 0078 DB68     		ldr	r3, [r3, #12]
 997 007a 002B     		cmp	r3, #0
 998 007c 28D1     		bne	.L74
 999              		.loc 1 387 0 is_stmt 0 discriminator 1
 1000 007e 7B68     		ldr	r3, [r7, #4]
 1001 0080 1B68     		ldr	r3, [r3]
 1002 0082 022B     		cmp	r3, #2
 1003 0084 24D1     		bne	.L74
 1004              	.LBB4:
 388:ad5940.c      ****   {
 389:ad5940.c      ****     //this combination suits for filter:
 390:ad5940.c      ****     //SINC3 OSR2 for 1.6MSPS
 391:ad5940.c      ****     const uint8_t available_sinc2_osr[] = {ADCSINC2OSR_889, ADCSINC2OSR_1067, ADCSINC2OSR_1333};
 1005              		.loc 1 391 0 is_stmt 1
 1006 0086 304A     		ldr	r2, .L79+8
 1007 0088 07F12403 		add	r3, r7, #36
 1008 008c 1188     		ldrh	r1, [r2]	@ unaligned
 1009 008e 9278     		ldrb	r2, [r2, #2]
 1010 0090 1980     		strh	r1, [r3]	@ unaligned
 1011 0092 9A70     		strb	r2, [r3, #2]
 392:ad5940.c      ****     const uint8_t dl_50Hz[] = {18,15,12};
 1012              		.loc 1 392 0
 1013 0094 2D4A     		ldr	r2, .L79+12
 1014 0096 07F12003 		add	r3, r7, #32
 1015 009a 1188     		ldrh	r1, [r2]	@ unaligned
 1016 009c 9278     		ldrb	r2, [r2, #2]
 1017 009e 1980     		strh	r1, [r3]	@ unaligned
 1018 00a0 9A70     		strb	r2, [r3, #2]
 393:ad5940.c      ****     uint8_t index;
 394:ad5940.c      ****     if(_is_value_in_table(pFilterInfo->ADCSinc2Osr, available_sinc2_osr, sizeof(available_sinc2_osr
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 26


 1019              		.loc 1 394 0
 1020 00a2 7B68     		ldr	r3, [r7, #4]
 1021 00a4 5B68     		ldr	r3, [r3, #4]
 1022 00a6 D8B2     		uxtb	r0, r3
 1023 00a8 07F11F03 		add	r3, r7, #31
 1024 00ac 07F12401 		add	r1, r7, #36
 1025 00b0 0322     		movs	r2, #3
 1026 00b2 FFF7FEFF 		bl	_is_value_in_table
 1027 00b6 0346     		mov	r3, r0
 1028 00b8 002B     		cmp	r3, #0
 1029 00ba 38D0     		beq	.L78
 395:ad5940.c      ****     {
 396:ad5940.c      ****       *dl = dl_50Hz[index];
 1030              		.loc 1 396 0
 1031 00bc FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1032 00be 07F13802 		add	r2, r7, #56
 1033 00c2 1344     		add	r3, r3, r2
 1034 00c4 13F8182C 		ldrb	r2, [r3, #-24]	@ zero_extendqisi2
 1035 00c8 3B68     		ldr	r3, [r7]
 1036 00ca 1A70     		strb	r2, [r3]
 397:ad5940.c      ****       return bTRUE;
 1037              		.loc 1 397 0
 1038 00cc 0123     		movs	r3, #1
 1039 00ce 33E0     		b	.L72
 1040              	.L74:
 1041              	.LBE4:
 398:ad5940.c      ****     }
 399:ad5940.c      ****   }
 400:ad5940.c      ****   else if(pFilterInfo->ADCRate == ADCRATE_800KHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2)
 1042              		.loc 1 400 0
 1043 00d0 7B68     		ldr	r3, [r7, #4]
 1044 00d2 DB68     		ldr	r3, [r3, #12]
 1045 00d4 012B     		cmp	r3, #1
 1046 00d6 2BD1     		bne	.L73
 1047              		.loc 1 400 0 is_stmt 0 discriminator 1
 1048 00d8 7B68     		ldr	r3, [r7, #4]
 1049 00da 1B68     		ldr	r3, [r3]
 1050 00dc 022B     		cmp	r3, #2
 1051 00de 27D0     		beq	.L73
 1052              	.LBB5:
 401:ad5940.c      ****   {
 402:ad5940.c      ****     //this combination suits for filter:
 403:ad5940.c      ****     //SINC3 OSR4 and OSR5 for 800kSPS,
 404:ad5940.c      ****     const uint8_t available_sinc2_osr[] = {ADCSINC2OSR_178, ADCSINC2OSR_267, ADCSINC2OSR_533, ADCSI
 1053              		.loc 1 404 0 is_stmt 1
 1054 00e0 1B4A     		ldr	r2, .L79+16
 1055 00e2 07F11803 		add	r3, r7, #24
 1056 00e6 1068     		ldr	r0, [r2]	@ unaligned
 1057 00e8 1860     		str	r0, [r3]	@ unaligned
 1058 00ea 9288     		ldrh	r2, [r2, #4]	@ unaligned
 1059 00ec 9A80     		strh	r2, [r3, #4]	@ unaligned
 405:ad5940.c      ****                                     ADCSINC2OSR_800, ADCSINC2OSR_1067};
 406:ad5940.c      ****     const uint8_t dl_50Hz[] = {18,12,6,5,4,3};
 1060              		.loc 1 406 0
 1061 00ee 194A     		ldr	r2, .L79+20
 1062 00f0 07F11003 		add	r3, r7, #16
 1063 00f4 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 27


 1064 00f6 1860     		str	r0, [r3]	@ unaligned
 1065 00f8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 1066 00fa 9A80     		strh	r2, [r3, #4]	@ unaligned
 407:ad5940.c      ****     uint8_t index;
 408:ad5940.c      ****     if(_is_value_in_table(pFilterInfo->ADCSinc2Osr, available_sinc2_osr, sizeof(available_sinc2_osr
 1067              		.loc 1 408 0
 1068 00fc 7B68     		ldr	r3, [r7, #4]
 1069 00fe 5B68     		ldr	r3, [r3, #4]
 1070 0100 D8B2     		uxtb	r0, r3
 1071 0102 07F10F03 		add	r3, r7, #15
 1072 0106 07F11801 		add	r1, r7, #24
 1073 010a 0622     		movs	r2, #6
 1074 010c FFF7FEFF 		bl	_is_value_in_table
 1075 0110 0346     		mov	r3, r0
 1076 0112 002B     		cmp	r3, #0
 1077 0114 0CD0     		beq	.L73
 409:ad5940.c      ****     {
 410:ad5940.c      ****       *dl = dl_50Hz[index];
 1078              		.loc 1 410 0
 1079 0116 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1080 0118 07F13802 		add	r2, r7, #56
 1081 011c 1344     		add	r3, r3, r2
 1082 011e 13F8282C 		ldrb	r2, [r3, #-40]	@ zero_extendqisi2
 1083 0122 3B68     		ldr	r3, [r7]
 1084 0124 1A70     		strb	r2, [r3]
 411:ad5940.c      ****       return bTRUE;
 1085              		.loc 1 411 0
 1086 0126 0123     		movs	r3, #1
 1087 0128 06E0     		b	.L72
 1088              	.L77:
 1089              	.LBE5:
 374:ad5940.c      ****     //this combination suits for filter:
 1090              		.loc 1 374 0
 1091 012a 00BF     		nop
 1092 012c 00E0     		b	.L73
 1093              	.L78:
 388:ad5940.c      ****     //this combination suits for filter:
 1094              		.loc 1 388 0
 1095 012e 00BF     		nop
 1096              	.L73:
 412:ad5940.c      ****     }
 413:ad5940.c      ****   }
 414:ad5940.c      ****   *dl = 0;
 1097              		.loc 1 414 0
 1098 0130 3B68     		ldr	r3, [r7]
 1099 0132 0022     		movs	r2, #0
 1100 0134 1A70     		strb	r2, [r3]
 415:ad5940.c      ****   return bFALSE;
 1101              		.loc 1 415 0
 1102 0136 0023     		movs	r3, #0
 1103              	.L72:
 416:ad5940.c      **** }
 1104              		.loc 1 416 0
 1105 0138 1846     		mov	r0, r3
 1106 013a 3837     		adds	r7, r7, #56
 1107              		.cfi_def_cfa_offset 8
 1108 013c BD46     		mov	sp, r7
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 28


 1109              		.cfi_def_cfa_register 13
 1110              		@ sp needed
 1111 013e 80BD     		pop	{r7, pc}
 1112              	.L80:
 1113              		.align	2
 1114              	.L79:
 1115 0140 00000000 		.word	.LC0
 1116 0144 08000000 		.word	.LC1
 1117 0148 10000000 		.word	.LC2
 1118 014c 14000000 		.word	.LC3
 1119 0150 18000000 		.word	.LC4
 1120 0154 20000000 		.word	.LC5
 1121              		.cfi_endproc
 1122              	.LFE12:
 1123              		.size	AD5940_Notch50HzAvailable, .-AD5940_Notch50HzAvailable
 1124              		.section	.rodata
 1125 0026 0000     		.align	2
 1126              	.LC6:
 1127 0028 07       		.byte	7
 1128 0029 0B       		.byte	11
 1129 002a 0000     		.align	2
 1130              	.LC7:
 1131 002c 0A       		.byte	10
 1132 002d 05       		.byte	5
 1133 002e 0000     		.align	2
 1134              	.LC8:
 1135 0030 09       		.byte	9
 1136 0031 0B       		.byte	11
 1137 0032 0000     		.align	2
 1138              	.LC9:
 1139 0034 0F       		.byte	15
 1140 0035 0A       		.byte	10
 1141 0036 0000     		.align	2
 1142              	.LC10:
 1143 0038 03       		.byte	3
 1144 0039 04       		.byte	4
 1145 003a 05       		.byte	5
 1146 003b 07       		.byte	7
 1147 003c 09       		.byte	9
 1148 003d 0B       		.byte	11
 1149 003e 0000     		.align	2
 1150              	.LC11:
 1151 0040 0F       		.byte	15
 1152 0041 0A       		.byte	10
 1153 0042 05       		.byte	5
 1154 0043 04       		.byte	4
 1155 0044 03       		.byte	3
 1156 0045 02       		.byte	2
 1157              		.section	.text.AD5940_Notch60HzAvailable,"ax",%progbits
 1158              		.align	2
 1159              		.global	AD5940_Notch60HzAvailable
 1160              		.thumb
 1161              		.thumb_func
 1162              		.type	AD5940_Notch60HzAvailable, %function
 1163              	AD5940_Notch60HzAvailable:
 1164              	.LFB13:
 417:ad5940.c      **** 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 29


 418:ad5940.c      **** /**
 419:ad5940.c      ****  * @brief return if the SINC3/SINC2 combination is available for notch 60Hz filter.
 420:ad5940.c      ****  *        If it's not availabe, hardware automatically bypass Notch even if it's enabled.
 421:ad5940.c      ****  * @param pFilterInfo the filter configuration, need sinc2/sinc3 osr and adc data rate information.
 422:ad5940.c      ****  * @return return bTRUE if notch 60Hz filter is available.
 423:ad5940.c      **** */
 424:ad5940.c      **** BoolFlag AD5940_Notch60HzAvailable(ADCFilterCfg_Type *pFilterInfo, uint8_t *dl)
 425:ad5940.c      **** {
 1165              		.loc 1 425 0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 48
 1168              		@ frame_needed = 1, uses_anonymous_args = 0
 1169 0000 80B5     		push	{r7, lr}
 1170              		.cfi_def_cfa_offset 8
 1171              		.cfi_offset 7, -8
 1172              		.cfi_offset 14, -4
 1173 0002 8CB0     		sub	sp, sp, #48
 1174              		.cfi_def_cfa_offset 56
 1175 0004 00AF     		add	r7, sp, #0
 1176              		.cfi_def_cfa_register 7
 1177 0006 7860     		str	r0, [r7, #4]
 1178 0008 3960     		str	r1, [r7]
 426:ad5940.c      ****   if((pFilterInfo->ADCRate == ADCRATE_800KHZ && pFilterInfo->ADCSinc3Osr == ADCSINC3OSR_2)||\
 1179              		.loc 1 426 0
 1180 000a 7B68     		ldr	r3, [r7, #4]
 1181 000c DB68     		ldr	r3, [r3, #12]
 1182 000e 012B     		cmp	r3, #1
 1183 0010 03D1     		bne	.L82
 1184              		.loc 1 426 0 is_stmt 0 discriminator 1
 1185 0012 7B68     		ldr	r3, [r7, #4]
 1186 0014 1B68     		ldr	r3, [r3]
 1187 0016 022B     		cmp	r3, #2
 1188 0018 07D0     		beq	.L83
 1189              	.L82:
 427:ad5940.c      ****       (pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2))
 1190              		.loc 1 427 0 is_stmt 1 discriminator 3
 1191 001a 7B68     		ldr	r3, [r7, #4]
 1192 001c DB68     		ldr	r3, [r3, #12]
 426:ad5940.c      ****   if((pFilterInfo->ADCRate == ADCRATE_800KHZ && pFilterInfo->ADCSinc3Osr == ADCSINC3OSR_2)||\
 1193              		.loc 1 426 0 discriminator 3
 1194 001e 002B     		cmp	r3, #0
 1195 0020 25D1     		bne	.L84
 1196              		.loc 1 427 0
 1197 0022 7B68     		ldr	r3, [r7, #4]
 1198 0024 1B68     		ldr	r3, [r3]
 1199 0026 022B     		cmp	r3, #2
 1200 0028 21D0     		beq	.L84
 1201              	.L83:
 1202              	.LBB6:
 428:ad5940.c      ****   {
 429:ad5940.c      ****     //this combination suits for filter:
 430:ad5940.c      ****     //SINC3 OSR2, for 800kSPS
 431:ad5940.c      ****     //and SINC3 OSR4 and OSR5 for 1.6MSPS,
 432:ad5940.c      ****     const uint8_t available_sinc2_osr[] = {ADCSINC2OSR_667, ADCSINC2OSR_1333};
 1203              		.loc 1 432 0
 1204 002a 414A     		ldr	r2, .L93
 1205 002c 07F12C03 		add	r3, r7, #44
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 30


 1206 0030 1288     		ldrh	r2, [r2]	@ unaligned
 1207 0032 1A80     		strh	r2, [r3]	@ unaligned
 433:ad5940.c      ****     const uint8_t dl_60Hz[] = {10,5};
 1208              		.loc 1 433 0
 1209 0034 3F4A     		ldr	r2, .L93+4
 1210 0036 07F12803 		add	r3, r7, #40
 1211 003a 1288     		ldrh	r2, [r2]	@ unaligned
 1212 003c 1A80     		strh	r2, [r3]	@ unaligned
 434:ad5940.c      ****     uint8_t index;
 435:ad5940.c      ****     if(_is_value_in_table(pFilterInfo->ADCSinc2Osr, available_sinc2_osr, sizeof(available_sinc2_osr
 1213              		.loc 1 435 0
 1214 003e 7B68     		ldr	r3, [r7, #4]
 1215 0040 5B68     		ldr	r3, [r3, #4]
 1216 0042 D8B2     		uxtb	r0, r3
 1217 0044 07F12703 		add	r3, r7, #39
 1218 0048 07F12C01 		add	r1, r7, #44
 1219 004c 0222     		movs	r2, #2
 1220 004e FFF7FEFF 		bl	_is_value_in_table
 1221 0052 0346     		mov	r3, r0
 1222 0054 002B     		cmp	r3, #0
 1223 0056 60D0     		beq	.L91
 436:ad5940.c      ****     {
 437:ad5940.c      ****       *dl = dl_60Hz[index];
 1224              		.loc 1 437 0
 1225 0058 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1226 005c 07F13002 		add	r2, r7, #48
 1227 0060 1344     		add	r3, r3, r2
 1228 0062 13F8082C 		ldrb	r2, [r3, #-8]	@ zero_extendqisi2
 1229 0066 3B68     		ldr	r3, [r7]
 1230 0068 1A70     		strb	r2, [r3]
 438:ad5940.c      ****       return bTRUE;
 1231              		.loc 1 438 0
 1232 006a 0123     		movs	r3, #1
 1233 006c 5CE0     		b	.L86
 1234              	.L84:
 1235              	.LBE6:
 439:ad5940.c      ****     }
 440:ad5940.c      ****   }
 441:ad5940.c      ****   else if(pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr == ADCSINC3OSR_2)
 1236              		.loc 1 441 0
 1237 006e 7B68     		ldr	r3, [r7, #4]
 1238 0070 DB68     		ldr	r3, [r3, #12]
 1239 0072 002B     		cmp	r3, #0
 1240 0074 24D1     		bne	.L88
 1241              		.loc 1 441 0 is_stmt 0 discriminator 1
 1242 0076 7B68     		ldr	r3, [r7, #4]
 1243 0078 1B68     		ldr	r3, [r3]
 1244 007a 022B     		cmp	r3, #2
 1245 007c 20D1     		bne	.L88
 1246              	.LBB7:
 442:ad5940.c      ****   {
 443:ad5940.c      ****     //this combination suits for filter:
 444:ad5940.c      ****     //SINC3 OSR2 for 1.6MSPS
 445:ad5940.c      ****     const uint8_t available_sinc2_osr[] = {ADCSINC2OSR_889, ADCSINC2OSR_1333};
 1247              		.loc 1 445 0 is_stmt 1
 1248 007e 2E4A     		ldr	r2, .L93+8
 1249 0080 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 31


 1250 0084 1288     		ldrh	r2, [r2]	@ unaligned
 1251 0086 1A80     		strh	r2, [r3]	@ unaligned
 446:ad5940.c      ****     const uint8_t dl_60Hz[] = {15,10};
 1252              		.loc 1 446 0
 1253 0088 2C4A     		ldr	r2, .L93+12
 1254 008a 07F12003 		add	r3, r7, #32
 1255 008e 1288     		ldrh	r2, [r2]	@ unaligned
 1256 0090 1A80     		strh	r2, [r3]	@ unaligned
 447:ad5940.c      ****     uint8_t index;
 448:ad5940.c      ****     if(_is_value_in_table(pFilterInfo->ADCSinc2Osr, available_sinc2_osr, sizeof(available_sinc2_osr
 1257              		.loc 1 448 0
 1258 0092 7B68     		ldr	r3, [r7, #4]
 1259 0094 5B68     		ldr	r3, [r3, #4]
 1260 0096 D8B2     		uxtb	r0, r3
 1261 0098 07F11F03 		add	r3, r7, #31
 1262 009c 07F12401 		add	r1, r7, #36
 1263 00a0 0222     		movs	r2, #2
 1264 00a2 FFF7FEFF 		bl	_is_value_in_table
 1265 00a6 0346     		mov	r3, r0
 1266 00a8 002B     		cmp	r3, #0
 1267 00aa 38D0     		beq	.L92
 449:ad5940.c      ****     {
 450:ad5940.c      ****       *dl = dl_60Hz[index];
 1268              		.loc 1 450 0
 1269 00ac FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1270 00ae 07F13002 		add	r2, r7, #48
 1271 00b2 1344     		add	r3, r3, r2
 1272 00b4 13F8102C 		ldrb	r2, [r3, #-16]	@ zero_extendqisi2
 1273 00b8 3B68     		ldr	r3, [r7]
 1274 00ba 1A70     		strb	r2, [r3]
 451:ad5940.c      ****       return bTRUE;
 1275              		.loc 1 451 0
 1276 00bc 0123     		movs	r3, #1
 1277 00be 33E0     		b	.L86
 1278              	.L88:
 1279              	.LBE7:
 452:ad5940.c      ****     }
 453:ad5940.c      ****   }
 454:ad5940.c      ****   else if(pFilterInfo->ADCRate == ADCRATE_800KHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2)
 1280              		.loc 1 454 0
 1281 00c0 7B68     		ldr	r3, [r7, #4]
 1282 00c2 DB68     		ldr	r3, [r3, #12]
 1283 00c4 012B     		cmp	r3, #1
 1284 00c6 2BD1     		bne	.L87
 1285              		.loc 1 454 0 is_stmt 0 discriminator 1
 1286 00c8 7B68     		ldr	r3, [r7, #4]
 1287 00ca 1B68     		ldr	r3, [r3]
 1288 00cc 022B     		cmp	r3, #2
 1289 00ce 27D0     		beq	.L87
 1290              	.LBB8:
 455:ad5940.c      ****   {
 456:ad5940.c      ****     //this combination suits for filter:
 457:ad5940.c      ****     //SINC3 OSR4 and OSR5 for 800kSPS,
 458:ad5940.c      ****     const uint8_t available_sinc2_osr[] = {ADCSINC2OSR_178, ADCSINC2OSR_267, ADCSINC2OSR_533, ADCSI
 1291              		.loc 1 458 0 is_stmt 1
 1292 00d0 1B4A     		ldr	r2, .L93+16
 1293 00d2 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 32


 1294 00d6 1068     		ldr	r0, [r2]	@ unaligned
 1295 00d8 1860     		str	r0, [r3]	@ unaligned
 1296 00da 9288     		ldrh	r2, [r2, #4]	@ unaligned
 1297 00dc 9A80     		strh	r2, [r3, #4]	@ unaligned
 459:ad5940.c      ****                                     ADCSINC2OSR_889, ADCSINC2OSR_1333};
 460:ad5940.c      ****     const uint8_t dl_60Hz[] = {15,10,5,4,3,2};
 1298              		.loc 1 460 0
 1299 00de 194A     		ldr	r2, .L93+20
 1300 00e0 07F11003 		add	r3, r7, #16
 1301 00e4 1068     		ldr	r0, [r2]	@ unaligned
 1302 00e6 1860     		str	r0, [r3]	@ unaligned
 1303 00e8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 1304 00ea 9A80     		strh	r2, [r3, #4]	@ unaligned
 461:ad5940.c      ****     uint8_t index;
 462:ad5940.c      ****     if(_is_value_in_table(pFilterInfo->ADCSinc2Osr, available_sinc2_osr, sizeof(available_sinc2_osr
 1305              		.loc 1 462 0
 1306 00ec 7B68     		ldr	r3, [r7, #4]
 1307 00ee 5B68     		ldr	r3, [r3, #4]
 1308 00f0 D8B2     		uxtb	r0, r3
 1309 00f2 07F10F03 		add	r3, r7, #15
 1310 00f6 07F11801 		add	r1, r7, #24
 1311 00fa 0622     		movs	r2, #6
 1312 00fc FFF7FEFF 		bl	_is_value_in_table
 1313 0100 0346     		mov	r3, r0
 1314 0102 002B     		cmp	r3, #0
 1315 0104 0CD0     		beq	.L87
 463:ad5940.c      ****     {
 464:ad5940.c      ****       *dl = dl_60Hz[index];
 1316              		.loc 1 464 0
 1317 0106 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1318 0108 07F13002 		add	r2, r7, #48
 1319 010c 1344     		add	r3, r3, r2
 1320 010e 13F8202C 		ldrb	r2, [r3, #-32]	@ zero_extendqisi2
 1321 0112 3B68     		ldr	r3, [r7]
 1322 0114 1A70     		strb	r2, [r3]
 465:ad5940.c      ****       return bTRUE;
 1323              		.loc 1 465 0
 1324 0116 0123     		movs	r3, #1
 1325 0118 06E0     		b	.L86
 1326              	.L91:
 1327              	.LBE8:
 428:ad5940.c      ****     //this combination suits for filter:
 1328              		.loc 1 428 0
 1329 011a 00BF     		nop
 1330 011c 00E0     		b	.L87
 1331              	.L92:
 442:ad5940.c      ****     //this combination suits for filter:
 1332              		.loc 1 442 0
 1333 011e 00BF     		nop
 1334              	.L87:
 466:ad5940.c      ****     }
 467:ad5940.c      ****   }
 468:ad5940.c      ****   *dl = 0;
 1335              		.loc 1 468 0
 1336 0120 3B68     		ldr	r3, [r7]
 1337 0122 0022     		movs	r2, #0
 1338 0124 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 33


 469:ad5940.c      ****   return bFALSE;
 1339              		.loc 1 469 0
 1340 0126 0023     		movs	r3, #0
 1341              	.L86:
 470:ad5940.c      **** }
 1342              		.loc 1 470 0
 1343 0128 1846     		mov	r0, r3
 1344 012a 3037     		adds	r7, r7, #48
 1345              		.cfi_def_cfa_offset 8
 1346 012c BD46     		mov	sp, r7
 1347              		.cfi_def_cfa_register 13
 1348              		@ sp needed
 1349 012e 80BD     		pop	{r7, pc}
 1350              	.L94:
 1351              		.align	2
 1352              	.L93:
 1353 0130 28000000 		.word	.LC6
 1354 0134 2C000000 		.word	.LC7
 1355 0138 30000000 		.word	.LC8
 1356 013c 34000000 		.word	.LC9
 1357 0140 38000000 		.word	.LC10
 1358 0144 40000000 		.word	.LC11
 1359              		.cfi_endproc
 1360              	.LFE13:
 1361              		.size	AD5940_Notch60HzAvailable, .-AD5940_Notch60HzAvailable
 1362              		.global	__aeabi_ui2f
 1363              		.global	__aeabi_fmul
 1364              		.global	__aeabi_f2uiz
 1365              		.global	__aeabi_fadd
 1366              		.section	.rodata
 1367 0046 0000     		.align	2
 1368              	.LC12:
 1369 0048 16000000 		.word	22
 1370 004c 2C000000 		.word	44
 1371 0050 59000000 		.word	89
 1372 0054 B2000000 		.word	178
 1373 0058 0B010000 		.word	267
 1374 005c 15020000 		.word	533
 1375 0060 80020000 		.word	640
 1376 0064 9B020000 		.word	667
 1377 0068 20030000 		.word	800
 1378 006c 79030000 		.word	889
 1379 0070 2B040000 		.word	1067
 1380 0074 35050000 		.word	1333
 1381 0078 00000000 		.word	0
 1382              		.align	2
 1383              	.LC13:
 1384 007c 05000000 		.word	5
 1385 0080 04000000 		.word	4
 1386 0084 02000000 		.word	2
 1387 0088 00000000 		.word	0
 1388              		.section	.text.AD5940_ClksCalculate,"ax",%progbits
 1389              		.align	2
 1390              		.global	AD5940_ClksCalculate
 1391              		.thumb
 1392              		.thumb_func
 1393              		.type	AD5940_ClksCalculate, %function
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 34


 1394              	AD5940_ClksCalculate:
 1395              	.LFB14:
 471:ad5940.c      **** 
 472:ad5940.c      **** /**
 473:ad5940.c      ****  * @brief Calculate how many clocks are needed in sequencer wait command to generate required numbe
 474:ad5940.c      ****  * @note When measurement is done, it's recommend to disable blocks like ADCPWR, ADCCNV, SINC2, DFT
 475:ad5940.c      ****  *       they may need less clocks to generate required number of output. Use function @ref AD5940_
 476:ad5940.c      ****  * @param pFilterInfo: Pointer to configuration structure. 
 477:ad5940.c      ****  * @param pClocks: pointer used to store results.         
 478:ad5940.c      ****  * @return return none.
 479:ad5940.c      **** */
 480:ad5940.c      **** void AD5940_ClksCalculate(ClksCalInfo_Type *pFilterInfo, uint32_t *pClocks)
 481:ad5940.c      **** {
 1396              		.loc 1 481 0
 1397              		.cfi_startproc
 1398              		@ args = 0, pretend = 0, frame = 112
 1399              		@ frame_needed = 1, uses_anonymous_args = 0
 1400 0000 B0B5     		push	{r4, r5, r7, lr}
 1401              		.cfi_def_cfa_offset 16
 1402              		.cfi_offset 4, -16
 1403              		.cfi_offset 5, -12
 1404              		.cfi_offset 7, -8
 1405              		.cfi_offset 14, -4
 1406 0002 9CB0     		sub	sp, sp, #112
 1407              		.cfi_def_cfa_offset 128
 1408 0004 00AF     		add	r7, sp, #0
 1409              		.cfi_def_cfa_register 7
 1410 0006 7860     		str	r0, [r7, #4]
 1411 0008 3960     		str	r1, [r7]
 482:ad5940.c      ****   uint32_t temp = 0;
 1412              		.loc 1 482 0
 1413 000a 0023     		movs	r3, #0
 1414 000c BB66     		str	r3, [r7, #104]
 483:ad5940.c      ****   const uint32_t sinc2osr_table[] = {22,44,89,178,267,533,640,667,800,889,1067,1333,0};
 1415              		.loc 1 483 0
 1416 000e A84B     		ldr	r3, .L129
 1417 0010 07F13404 		add	r4, r7, #52
 1418 0014 1D46     		mov	r5, r3
 1419 0016 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1420 0018 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1421 001a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1422 001c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1423 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1424 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1425 0022 2B68     		ldr	r3, [r5]
 1426 0024 2360     		str	r3, [r4]
 484:ad5940.c      ****   const uint32_t sinc3osr_table[] = {5,4,2,0};
 1427              		.loc 1 484 0
 1428 0026 A34B     		ldr	r3, .L129+4
 1429 0028 07F12404 		add	r4, r7, #36
 1430 002c 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1431 002e 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 485:ad5940.c      **** 
 486:ad5940.c      ****   *pClocks = 0;
 1432              		.loc 1 486 0
 1433 0032 3B68     		ldr	r3, [r7]
 1434 0034 0022     		movs	r2, #0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 35


 1435 0036 1A60     		str	r2, [r3]
 487:ad5940.c      ****   if(pFilterInfo == NULL) return;
 1436              		.loc 1 487 0
 1437 0038 7B68     		ldr	r3, [r7, #4]
 1438 003a 002B     		cmp	r3, #0
 1439 003c 00F02B81 		beq	.L122
 488:ad5940.c      ****   if(pClocks == NULL) return;
 1440              		.loc 1 488 0
 1441 0040 3B68     		ldr	r3, [r7]
 1442 0042 002B     		cmp	r3, #0
 1443 0044 00F02981 		beq	.L123
 489:ad5940.c      ****   if(pFilterInfo->ADCSinc2Osr > ADCSINC2OSR_1333) return;
 1444              		.loc 1 489 0
 1445 0048 7B68     		ldr	r3, [r7, #4]
 1446 004a DB68     		ldr	r3, [r3, #12]
 1447 004c 0B2B     		cmp	r3, #11
 1448 004e 00F22681 		bhi	.L124
 490:ad5940.c      ****   if(pFilterInfo->ADCSinc3Osr > 2)  return; /* 0: OSR5, 1:OSR4, 2:OSR2 */
 1449              		.loc 1 490 0
 1450 0052 7B68     		ldr	r3, [r7, #4]
 1451 0054 9B68     		ldr	r3, [r3, #8]
 1452 0056 022B     		cmp	r3, #2
 1453 0058 00F22381 		bhi	.L125
 491:ad5940.c      ****   if(pFilterInfo->ADCAvgNum > ADCAVGNUM_16) return; /* Average number index:0,1,2,3 */
 1454              		.loc 1 491 0
 1455 005c 7B68     		ldr	r3, [r7, #4]
 1456 005e 1B69     		ldr	r3, [r3, #16]
 1457 0060 032B     		cmp	r3, #3
 1458 0062 00F22081 		bhi	.L126
 492:ad5940.c      ****   switch(pFilterInfo->DataType)
 1459              		.loc 1 492 0
 1460 0066 7B68     		ldr	r3, [r7, #4]
 1461 0068 1B68     		ldr	r3, [r3]
 1462 006a 042B     		cmp	r3, #4
 1463 006c 00F20E81 		bhi	.L127
 1464 0070 01A2     		adr	r2, .L104
 1465 0072 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1466 0076 00BF     		.p2align 2
 1467              	.L104:
 1468 0078 8D000000 		.word	.L103+1
 1469 007c BB000000 		.word	.L105+1
 1470 0080 0F010000 		.word	.L106+1
 1471 0084 EF010000 		.word	.L107+1
 1472 0088 53010000 		.word	.L108+1
 1473              		.p2align 1
 1474              	.L103:
 493:ad5940.c      ****   {
 494:ad5940.c      ****     case DATATYPE_ADCRAW:
 495:ad5940.c      ****       temp = (uint32_t)(20*pFilterInfo->DataCount*pFilterInfo->RatioSys2AdcClk);
 1475              		.loc 1 495 0
 1476 008c 7B68     		ldr	r3, [r7, #4]
 1477 008e 5A68     		ldr	r2, [r3, #4]
 1478 0090 1346     		mov	r3, r2
 1479 0092 9B00     		lsls	r3, r3, #2
 1480 0094 1344     		add	r3, r3, r2
 1481 0096 9B00     		lsls	r3, r3, #2
 1482 0098 1846     		mov	r0, r3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 36


 1483 009a FFF7FEFF 		bl	__aeabi_ui2f
 1484 009e 0246     		mov	r2, r0
 1485 00a0 7B68     		ldr	r3, [r7, #4]
 1486 00a2 DB69     		ldr	r3, [r3, #28]	@ float
 1487 00a4 1946     		mov	r1, r3
 1488 00a6 1046     		mov	r0, r2
 1489 00a8 FFF7FEFF 		bl	__aeabi_fmul
 1490 00ac 0346     		mov	r3, r0
 1491 00ae 1846     		mov	r0, r3
 1492 00b0 FFF7FEFF 		bl	__aeabi_f2uiz
 1493 00b4 0346     		mov	r3, r0
 1494 00b6 BB66     		str	r3, [r7, #104]
 496:ad5940.c      ****       break;
 1495              		.loc 1 496 0
 1496 00b8 E9E0     		b	.L109
 1497              	.L105:
 497:ad5940.c      ****     case DATATYPE_SINC3:
 498:ad5940.c      ****       temp = (uint32_t)(((pFilterInfo->DataCount+2)*sinc3osr_table[pFilterInfo->ADCSinc3Osr]+1)*20*
 1498              		.loc 1 498 0
 1499 00ba 7B68     		ldr	r3, [r7, #4]
 1500 00bc 5A68     		ldr	r2, [r3, #4]
 1501 00be 1346     		mov	r3, r2
 1502 00c0 9B00     		lsls	r3, r3, #2
 1503 00c2 1344     		add	r3, r3, r2
 1504 00c4 9B00     		lsls	r3, r3, #2
 1505 00c6 03F12802 		add	r2, r3, #40
 1506 00ca 7B68     		ldr	r3, [r7, #4]
 1507 00cc 9B68     		ldr	r3, [r3, #8]
 1508 00ce 9B00     		lsls	r3, r3, #2
 1509 00d0 07F17001 		add	r1, r7, #112
 1510 00d4 0B44     		add	r3, r3, r1
 1511 00d6 53F84C3C 		ldr	r3, [r3, #-76]
 1512 00da 03FB02F3 		mul	r3, r3, r2
 1513 00de 1433     		adds	r3, r3, #20
 1514 00e0 1846     		mov	r0, r3
 1515 00e2 FFF7FEFF 		bl	__aeabi_ui2f
 1516 00e6 0246     		mov	r2, r0
 1517 00e8 7B68     		ldr	r3, [r7, #4]
 1518 00ea DB69     		ldr	r3, [r3, #28]	@ float
 1519 00ec 1946     		mov	r1, r3
 1520 00ee 1046     		mov	r0, r2
 1521 00f0 FFF7FEFF 		bl	__aeabi_fmul
 1522 00f4 0346     		mov	r3, r0
 1523 00f6 4FF07C51 		mov	r1, #1056964608
 1524 00fa 1846     		mov	r0, r3
 1525 00fc FFF7FEFF 		bl	__aeabi_fadd
 1526 0100 0346     		mov	r3, r0
 1527 0102 1846     		mov	r0, r3
 1528 0104 FFF7FEFF 		bl	__aeabi_f2uiz
 1529 0108 0346     		mov	r3, r0
 1530 010a BB66     		str	r3, [r7, #104]
 499:ad5940.c      ****       break;
 1531              		.loc 1 499 0
 1532 010c BFE0     		b	.L109
 1533              	.L106:
 500:ad5940.c      ****     case DATATYPE_SINC2: 
 501:ad5940.c      ****       temp = (pFilterInfo->DataCount+1)*sinc2osr_table[pFilterInfo->ADCSinc2Osr] + 1;
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 37


 1534              		.loc 1 501 0
 1535 010e 7B68     		ldr	r3, [r7, #4]
 1536 0110 5B68     		ldr	r3, [r3, #4]
 1537 0112 5A1C     		adds	r2, r3, #1
 1538 0114 7B68     		ldr	r3, [r7, #4]
 1539 0116 DB68     		ldr	r3, [r3, #12]
 1540 0118 9B00     		lsls	r3, r3, #2
 1541 011a 07F17001 		add	r1, r7, #112
 1542 011e 0B44     		add	r3, r3, r1
 1543 0120 53F83C3C 		ldr	r3, [r3, #-60]
 1544 0124 03FB02F3 		mul	r3, r3, r2
 1545 0128 0133     		adds	r3, r3, #1
 1546 012a BB66     		str	r3, [r7, #104]
 502:ad5940.c      ****       pFilterInfo->DataType = DATATYPE_SINC3;
 1547              		.loc 1 502 0
 1548 012c 7B68     		ldr	r3, [r7, #4]
 1549 012e 0122     		movs	r2, #1
 1550 0130 1A60     		str	r2, [r3]
 503:ad5940.c      ****       pFilterInfo->DataCount = temp;
 1551              		.loc 1 503 0
 1552 0132 BA6E     		ldr	r2, [r7, #104]
 1553 0134 7B68     		ldr	r3, [r7, #4]
 1554 0136 5A60     		str	r2, [r3, #4]
 504:ad5940.c      ****       AD5940_ClksCalculate(pFilterInfo, &temp);
 1555              		.loc 1 504 0
 1556 0138 07F16803 		add	r3, r7, #104
 1557 013c 1946     		mov	r1, r3
 1558 013e 7868     		ldr	r0, [r7, #4]
 1559 0140 FFF7FEFF 		bl	AD5940_ClksCalculate
 505:ad5940.c      ****       pFilterInfo->DataType = DATATYPE_SINC2;
 1560              		.loc 1 505 0
 1561 0144 7B68     		ldr	r3, [r7, #4]
 1562 0146 0222     		movs	r2, #2
 1563 0148 1A60     		str	r2, [r3]
 506:ad5940.c      ****       temp += 15;   /* Need extra 15 clocks for FIFO etc. Just to be safe. */
 1564              		.loc 1 506 0
 1565 014a BB6E     		ldr	r3, [r7, #104]
 1566 014c 0F33     		adds	r3, r3, #15
 1567 014e BB66     		str	r3, [r7, #104]
 507:ad5940.c      ****       break;
 1568              		.loc 1 507 0
 1569 0150 9DE0     		b	.L109
 1570              	.L108:
 1571              	.LBB9:
 508:ad5940.c      ****     case DATATYPE_NOTCH:
 509:ad5940.c      ****     {
 510:ad5940.c      ****       ADCFilterCfg_Type filter;
 511:ad5940.c      ****       filter.ADCRate = pFilterInfo->ADCRate;
 1572              		.loc 1 511 0
 1573 0152 7B68     		ldr	r3, [r7, #4]
 1574 0154 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1575 0156 FB61     		str	r3, [r7, #28]
 512:ad5940.c      ****       filter.ADCSinc3Osr = pFilterInfo->ADCSinc3Osr;
 1576              		.loc 1 512 0
 1577 0158 7B68     		ldr	r3, [r7, #4]
 1578 015a 9B68     		ldr	r3, [r3, #8]
 1579 015c 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 38


 513:ad5940.c      ****       filter.ADCSinc2Osr = pFilterInfo->ADCSinc2Osr;
 1580              		.loc 1 513 0
 1581 015e 7B68     		ldr	r3, [r7, #4]
 1582 0160 DB68     		ldr	r3, [r3, #12]
 1583 0162 7B61     		str	r3, [r7, #20]
 514:ad5940.c      ****       uint8_t dl=0, dl_50, dl_60;
 1584              		.loc 1 514 0
 1585 0164 0023     		movs	r3, #0
 1586 0166 87F86F30 		strb	r3, [r7, #111]
 515:ad5940.c      ****       if(AD5940_Notch50HzAvailable(&filter, &dl_50)){
 1587              		.loc 1 515 0
 1588 016a 07F10F02 		add	r2, r7, #15
 1589 016e 07F11003 		add	r3, r7, #16
 1590 0172 1146     		mov	r1, r2
 1591 0174 1846     		mov	r0, r3
 1592 0176 FFF7FEFF 		bl	AD5940_Notch50HzAvailable
 1593 017a 0346     		mov	r3, r0
 1594 017c 002B     		cmp	r3, #0
 1595 017e 07D0     		beq	.L110
 516:ad5940.c      ****         dl += dl_50 - 1;
 1596              		.loc 1 516 0
 1597 0180 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1598 0182 97F86F30 		ldrb	r3, [r7, #111]
 1599 0186 1344     		add	r3, r3, r2
 1600 0188 DBB2     		uxtb	r3, r3
 1601 018a 013B     		subs	r3, r3, #1
 1602 018c 87F86F30 		strb	r3, [r7, #111]
 1603              	.L110:
 517:ad5940.c      ****       }
 518:ad5940.c      ****       if(AD5940_Notch60HzAvailable(&filter, &dl_60)){
 1604              		.loc 1 518 0
 1605 0190 07F10E02 		add	r2, r7, #14
 1606 0194 07F11003 		add	r3, r7, #16
 1607 0198 1146     		mov	r1, r2
 1608 019a 1846     		mov	r0, r3
 1609 019c FFF7FEFF 		bl	AD5940_Notch60HzAvailable
 1610 01a0 0346     		mov	r3, r0
 1611 01a2 002B     		cmp	r3, #0
 1612 01a4 07D0     		beq	.L111
 519:ad5940.c      ****         dl += dl_60 - 1;
 1613              		.loc 1 519 0
 1614 01a6 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1615 01a8 97F86F30 		ldrb	r3, [r7, #111]
 1616 01ac 1344     		add	r3, r3, r2
 1617 01ae DBB2     		uxtb	r3, r3
 1618 01b0 013B     		subs	r3, r3, #1
 1619 01b2 87F86F30 		strb	r3, [r7, #111]
 1620              	.L111:
 520:ad5940.c      ****       }
 521:ad5940.c      ****       pFilterInfo->DataType = DATATYPE_SINC2;
 1621              		.loc 1 521 0
 1622 01b6 7B68     		ldr	r3, [r7, #4]
 1623 01b8 0222     		movs	r2, #2
 1624 01ba 1A60     		str	r2, [r3]
 522:ad5940.c      ****       pFilterInfo->DataCount += dl; //DL is the extra data input needed for filter to output first 
 1625              		.loc 1 522 0
 1626 01bc 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 39


 1627 01be 5A68     		ldr	r2, [r3, #4]
 1628 01c0 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 1629 01c4 1A44     		add	r2, r2, r3
 1630 01c6 7B68     		ldr	r3, [r7, #4]
 1631 01c8 5A60     		str	r2, [r3, #4]
 523:ad5940.c      ****       AD5940_ClksCalculate(pFilterInfo,&temp);
 1632              		.loc 1 523 0
 1633 01ca 07F16803 		add	r3, r7, #104
 1634 01ce 1946     		mov	r1, r3
 1635 01d0 7868     		ldr	r0, [r7, #4]
 1636 01d2 FFF7FEFF 		bl	AD5940_ClksCalculate
 524:ad5940.c      ****       //restore the filter info.
 525:ad5940.c      ****       pFilterInfo->DataType = DATATYPE_NOTCH;
 1637              		.loc 1 525 0
 1638 01d6 7B68     		ldr	r3, [r7, #4]
 1639 01d8 0422     		movs	r2, #4
 1640 01da 1A60     		str	r2, [r3]
 526:ad5940.c      ****       pFilterInfo->DataCount -= dl;
 1641              		.loc 1 526 0
 1642 01dc 7B68     		ldr	r3, [r7, #4]
 1643 01de 5A68     		ldr	r2, [r3, #4]
 1644 01e0 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 1645 01e4 D21A     		subs	r2, r2, r3
 1646 01e6 7B68     		ldr	r3, [r7, #4]
 1647 01e8 5A60     		str	r2, [r3, #4]
 527:ad5940.c      ****       break;
 1648              		.loc 1 527 0
 1649 01ea 00BF     		nop
 1650 01ec 4FE0     		b	.L109
 1651              	.L107:
 1652              	.LBE9:
 528:ad5940.c      ****     }
 529:ad5940.c      ****     case DATATYPE_DFT:
 530:ad5940.c      ****       switch(pFilterInfo->DftSrc)
 1653              		.loc 1 530 0
 1654 01ee 7B68     		ldr	r3, [r7, #4]
 1655 01f0 5B69     		ldr	r3, [r3, #20]
 1656 01f2 032B     		cmp	r3, #3
 1657 01f4 42D8     		bhi	.L128
 1658 01f6 01A2     		adr	r2, .L114
 1659 01f8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1660              		.p2align 2
 1661              	.L114:
 1662 01fc 35020000 		.word	.L113+1
 1663 0200 21020000 		.word	.L115+1
 1664 0204 0D020000 		.word	.L116+1
 1665 0208 59020000 		.word	.L117+1
 1666              		.p2align 1
 1667              	.L116:
 531:ad5940.c      ****       {
 532:ad5940.c      ****         case DFTSRC_ADCRAW:
 533:ad5940.c      ****           pFilterInfo->DataType = DATATYPE_ADCRAW;
 1668              		.loc 1 533 0
 1669 020c 7B68     		ldr	r3, [r7, #4]
 1670 020e 0022     		movs	r2, #0
 1671 0210 1A60     		str	r2, [r3]
 534:ad5940.c      ****           AD5940_ClksCalculate(pFilterInfo, &temp);
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 40


 1672              		.loc 1 534 0
 1673 0212 07F16803 		add	r3, r7, #104
 1674 0216 1946     		mov	r1, r3
 1675 0218 7868     		ldr	r0, [r7, #4]
 1676 021a FFF7FEFF 		bl	AD5940_ClksCalculate
 535:ad5940.c      ****           break;
 1677              		.loc 1 535 0
 1678 021e 2EE0     		b	.L118
 1679              	.L115:
 536:ad5940.c      ****         case DFTSRC_SINC3:
 537:ad5940.c      ****           pFilterInfo->DataType = DATATYPE_SINC3;
 1680              		.loc 1 537 0
 1681 0220 7B68     		ldr	r3, [r7, #4]
 1682 0222 0122     		movs	r2, #1
 1683 0224 1A60     		str	r2, [r3]
 538:ad5940.c      ****           AD5940_ClksCalculate(pFilterInfo, &temp);
 1684              		.loc 1 538 0
 1685 0226 07F16803 		add	r3, r7, #104
 1686 022a 1946     		mov	r1, r3
 1687 022c 7868     		ldr	r0, [r7, #4]
 1688 022e FFF7FEFF 		bl	AD5940_ClksCalculate
 539:ad5940.c      ****           break;
 1689              		.loc 1 539 0
 1690 0232 24E0     		b	.L118
 1691              	.L113:
 540:ad5940.c      ****         case DFTSRC_SINC2NOTCH:
 541:ad5940.c      ****           if(pFilterInfo->BpNotch)
 1692              		.loc 1 541 0
 1693 0234 7B68     		ldr	r3, [r7, #4]
 1694 0236 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 1695 0238 002B     		cmp	r3, #0
 1696 023a 03D0     		beq	.L119
 542:ad5940.c      ****             pFilterInfo->DataType = DATATYPE_SINC2;
 1697              		.loc 1 542 0
 1698 023c 7B68     		ldr	r3, [r7, #4]
 1699 023e 0222     		movs	r2, #2
 1700 0240 1A60     		str	r2, [r3]
 1701 0242 02E0     		b	.L120
 1702              	.L119:
 543:ad5940.c      ****           else
 544:ad5940.c      ****             pFilterInfo->DataType = DATATYPE_NOTCH;
 1703              		.loc 1 544 0
 1704 0244 7B68     		ldr	r3, [r7, #4]
 1705 0246 0422     		movs	r2, #4
 1706 0248 1A60     		str	r2, [r3]
 1707              	.L120:
 545:ad5940.c      ****           AD5940_ClksCalculate(pFilterInfo, &temp);
 1708              		.loc 1 545 0
 1709 024a 07F16803 		add	r3, r7, #104
 1710 024e 1946     		mov	r1, r3
 1711 0250 7868     		ldr	r0, [r7, #4]
 1712 0252 FFF7FEFF 		bl	AD5940_ClksCalculate
 546:ad5940.c      ****           break;
 1713              		.loc 1 546 0
 1714 0256 12E0     		b	.L118
 1715              	.L117:
 547:ad5940.c      ****         case DFTSRC_AVG:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 41


 548:ad5940.c      ****           pFilterInfo->DataType = DATATYPE_SINC3;
 1716              		.loc 1 548 0
 1717 0258 7B68     		ldr	r3, [r7, #4]
 1718 025a 0122     		movs	r2, #1
 1719 025c 1A60     		str	r2, [r3]
 549:ad5940.c      ****           pFilterInfo->DataCount *= 1L<<(pFilterInfo->ADCAvgNum+1); /* 0: average2, 1: average4, 2:
 1720              		.loc 1 549 0
 1721 025e 7B68     		ldr	r3, [r7, #4]
 1722 0260 5A68     		ldr	r2, [r3, #4]
 1723 0262 7B68     		ldr	r3, [r7, #4]
 1724 0264 1B69     		ldr	r3, [r3, #16]
 1725 0266 0133     		adds	r3, r3, #1
 1726 0268 9A40     		lsls	r2, r2, r3
 1727 026a 7B68     		ldr	r3, [r7, #4]
 1728 026c 5A60     		str	r2, [r3, #4]
 550:ad5940.c      ****           AD5940_ClksCalculate(pFilterInfo, &temp);
 1729              		.loc 1 550 0
 1730 026e 07F16803 		add	r3, r7, #104
 1731 0272 1946     		mov	r1, r3
 1732 0274 7868     		ldr	r0, [r7, #4]
 1733 0276 FFF7FEFF 		bl	AD5940_ClksCalculate
 551:ad5940.c      ****           break;
 1734              		.loc 1 551 0
 1735 027a 00E0     		b	.L118
 1736              	.L128:
 552:ad5940.c      ****         default:
 553:ad5940.c      ****           break;
 1737              		.loc 1 553 0
 1738 027c 00BF     		nop
 1739              	.L118:
 554:ad5940.c      ****       }
 555:ad5940.c      ****       pFilterInfo->DataType = DATATYPE_DFT;
 1740              		.loc 1 555 0
 1741 027e 7B68     		ldr	r3, [r7, #4]
 1742 0280 0322     		movs	r2, #3
 1743 0282 1A60     		str	r2, [r3]
 556:ad5940.c      ****       temp += 25; /* add margin */
 1744              		.loc 1 556 0
 1745 0284 BB6E     		ldr	r3, [r7, #104]
 1746 0286 1933     		adds	r3, r3, #25
 1747 0288 BB66     		str	r3, [r7, #104]
 557:ad5940.c      ****       break;
 1748              		.loc 1 557 0
 1749 028a 00E0     		b	.L109
 1750              	.L127:
 558:ad5940.c      ****     default:
 559:ad5940.c      ****     break;
 1751              		.loc 1 559 0
 1752 028c 00BF     		nop
 1753              	.L109:
 560:ad5940.c      ****   }
 561:ad5940.c      ****   *pClocks = temp;
 1754              		.loc 1 561 0 discriminator 1
 1755 028e BA6E     		ldr	r2, [r7, #104]
 1756 0290 3B68     		ldr	r3, [r7]
 1757 0292 1A60     		str	r2, [r3]
 1758 0294 08E0     		b	.L95
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 42


 1759              	.L122:
 487:ad5940.c      ****   if(pClocks == NULL) return;
 1760              		.loc 1 487 0
 1761 0296 00BF     		nop
 1762 0298 06E0     		b	.L95
 1763              	.L123:
 488:ad5940.c      ****   if(pFilterInfo->ADCSinc2Osr > ADCSINC2OSR_1333) return;
 1764              		.loc 1 488 0
 1765 029a 00BF     		nop
 1766 029c 04E0     		b	.L95
 1767              	.L124:
 489:ad5940.c      ****   if(pFilterInfo->ADCSinc3Osr > 2)  return; /* 0: OSR5, 1:OSR4, 2:OSR2 */
 1768              		.loc 1 489 0
 1769 029e 00BF     		nop
 1770 02a0 02E0     		b	.L95
 1771              	.L125:
 490:ad5940.c      ****   if(pFilterInfo->ADCAvgNum > ADCAVGNUM_16) return; /* Average number index:0,1,2,3 */
 1772              		.loc 1 490 0
 1773 02a2 00BF     		nop
 1774 02a4 00E0     		b	.L95
 1775              	.L126:
 491:ad5940.c      ****   switch(pFilterInfo->DataType)
 1776              		.loc 1 491 0
 1777 02a6 00BF     		nop
 1778              	.L95:
 562:ad5940.c      **** }
 1779              		.loc 1 562 0
 1780 02a8 7037     		adds	r7, r7, #112
 1781              		.cfi_def_cfa_offset 16
 1782 02aa BD46     		mov	sp, r7
 1783              		.cfi_def_cfa_register 13
 1784              		@ sp needed
 1785 02ac B0BD     		pop	{r4, r5, r7, pc}
 1786              	.L130:
 1787 02ae 00BF     		.align	2
 1788              	.L129:
 1789 02b0 48000000 		.word	.LC12
 1790 02b4 7C000000 		.word	.LC13
 1791              		.cfi_endproc
 1792              	.LFE14:
 1793              		.size	AD5940_ClksCalculate, .-AD5940_ClksCalculate
 1794              		.global	__aeabi_fcmplt
 1795              		.global	__aeabi_f2d
 1796              		.global	__aeabi_ui2d
 1797              		.global	__aeabi_fdiv
 1798              		.global	__aeabi_dmul
 1799              		.global	__aeabi_ddiv
 1800              		.global	__aeabi_d2f
 1801              		.global	__aeabi_fsub
 1802              		.global	__aeabi_dadd
 1803              		.section	.text.AD5940_SweepNext,"ax",%progbits
 1804              		.align	2
 1805              		.global	AD5940_SweepNext
 1806              		.thumb
 1807              		.thumb_func
 1808              		.type	AD5940_SweepNext, %function
 1809              	AD5940_SweepNext:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 43


 1810              	.LFB15:
 563:ad5940.c      **** 
 564:ad5940.c      **** /**
 565:ad5940.c      ****    @brief void AD5940_SweepNext(SoftSweepCfg_Type *pSweepCfg, float *pNextFreq)
 566:ad5940.c      ****           For sweep function, calculate next frequency point according to pSweepCfg info.
 567:ad5940.c      ****    @return Return next frequency point in Hz.
 568:ad5940.c      **** */
 569:ad5940.c      **** void AD5940_SweepNext(SoftSweepCfg_Type *pSweepCfg, float *pNextFreq)
 570:ad5940.c      **** {
 1811              		.loc 1 570 0
 1812              		.cfi_startproc
 1813              		@ args = 0, pretend = 0, frame = 16
 1814              		@ frame_needed = 1, uses_anonymous_args = 0
 1815 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 1816              		.cfi_def_cfa_offset 32
 1817              		.cfi_offset 4, -32
 1818              		.cfi_offset 5, -28
 1819              		.cfi_offset 7, -24
 1820              		.cfi_offset 8, -20
 1821              		.cfi_offset 9, -16
 1822              		.cfi_offset 10, -12
 1823              		.cfi_offset 11, -8
 1824              		.cfi_offset 14, -4
 1825 0004 84B0     		sub	sp, sp, #16
 1826              		.cfi_def_cfa_offset 48
 1827 0006 00AF     		add	r7, sp, #0
 1828              		.cfi_def_cfa_register 7
 1829 0008 7860     		str	r0, [r7, #4]
 1830 000a 3960     		str	r1, [r7]
 571:ad5940.c      ****    float frequency;
 572:ad5940.c      **** 
 573:ad5940.c      ****    if(pSweepCfg->SweepLog)/* Log step */
 1831              		.loc 1 573 0
 1832 000c 7B68     		ldr	r3, [r7, #4]
 1833 000e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1834 0010 002B     		cmp	r3, #0
 1835 0012 00F0BF80 		beq	.L132
 574:ad5940.c      ****    {
 575:ad5940.c      ****       if(pSweepCfg->SweepStart<pSweepCfg->SweepStop) /* Normal */
 1836              		.loc 1 575 0
 1837 0016 7B68     		ldr	r3, [r7, #4]
 1838 0018 5A68     		ldr	r2, [r3, #4]	@ float
 1839 001a 7B68     		ldr	r3, [r7, #4]
 1840 001c 9B68     		ldr	r3, [r3, #8]	@ float
 1841 001e 1946     		mov	r1, r3
 1842 0020 1046     		mov	r0, r2
 1843 0022 FFF7FEFF 		bl	__aeabi_fcmplt
 1844 0026 0346     		mov	r3, r0
 1845 0028 002B     		cmp	r3, #0
 1846 002a 59D0     		beq	.L145
 576:ad5940.c      ****       {
 577:ad5940.c      ****          if(++pSweepCfg->SweepIndex == pSweepCfg->SweepPoints)
 1847              		.loc 1 577 0
 1848 002c 7B68     		ldr	r3, [r7, #4]
 1849 002e 5B69     		ldr	r3, [r3, #20]
 1850 0030 5A1C     		adds	r2, r3, #1
 1851 0032 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 44


 1852 0034 5A61     		str	r2, [r3, #20]
 1853 0036 7B68     		ldr	r3, [r7, #4]
 1854 0038 5A69     		ldr	r2, [r3, #20]
 1855 003a 7B68     		ldr	r3, [r7, #4]
 1856 003c DB68     		ldr	r3, [r3, #12]
 1857 003e 9A42     		cmp	r2, r3
 1858 0040 02D1     		bne	.L135
 578:ad5940.c      ****             pSweepCfg->SweepIndex = 0;
 1859              		.loc 1 578 0
 1860 0042 7B68     		ldr	r3, [r7, #4]
 1861 0044 0022     		movs	r2, #0
 1862 0046 5A61     		str	r2, [r3, #20]
 1863              	.L135:
 579:ad5940.c      ****          frequency = pSweepCfg->SweepStart*pow(10,pSweepCfg->SweepIndex*log10(pSweepCfg->SweepStop/
 1864              		.loc 1 579 0
 1865 0048 7B68     		ldr	r3, [r7, #4]
 1866 004a 5B68     		ldr	r3, [r3, #4]	@ float
 1867 004c 1846     		mov	r0, r3
 1868 004e FFF7FEFF 		bl	__aeabi_f2d
 1869 0052 0446     		mov	r4, r0
 1870 0054 0D46     		mov	r5, r1
 1871 0056 7B68     		ldr	r3, [r7, #4]
 1872 0058 5B69     		ldr	r3, [r3, #20]
 1873 005a 1846     		mov	r0, r3
 1874 005c FFF7FEFF 		bl	__aeabi_ui2d
 1875 0060 8046     		mov	r8, r0
 1876 0062 8946     		mov	r9, r1
 1877 0064 7B68     		ldr	r3, [r7, #4]
 1878 0066 9A68     		ldr	r2, [r3, #8]	@ float
 1879 0068 7B68     		ldr	r3, [r7, #4]
 1880 006a 5B68     		ldr	r3, [r3, #4]	@ float
 1881 006c 1946     		mov	r1, r3
 1882 006e 1046     		mov	r0, r2
 1883 0070 FFF7FEFF 		bl	__aeabi_fdiv
 1884 0074 0346     		mov	r3, r0
 1885 0076 1846     		mov	r0, r3
 1886 0078 FFF7FEFF 		bl	__aeabi_f2d
 1887 007c 0246     		mov	r2, r0
 1888 007e 0B46     		mov	r3, r1
 1889 0080 1046     		mov	r0, r2
 1890 0082 1946     		mov	r1, r3
 1891 0084 FFF7FEFF 		bl	log10
 1892 0088 0246     		mov	r2, r0
 1893 008a 0B46     		mov	r3, r1
 1894 008c 4046     		mov	r0, r8
 1895 008e 4946     		mov	r1, r9
 1896 0090 FFF7FEFF 		bl	__aeabi_dmul
 1897 0094 0246     		mov	r2, r0
 1898 0096 0B46     		mov	r3, r1
 1899 0098 9046     		mov	r8, r2
 1900 009a 9946     		mov	r9, r3
 1901 009c 7B68     		ldr	r3, [r7, #4]
 1902 009e DB68     		ldr	r3, [r3, #12]
 1903 00a0 013B     		subs	r3, r3, #1
 1904 00a2 1846     		mov	r0, r3
 1905 00a4 FFF7FEFF 		bl	__aeabi_ui2d
 1906 00a8 0246     		mov	r2, r0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 45


 1907 00aa 0B46     		mov	r3, r1
 1908 00ac 4046     		mov	r0, r8
 1909 00ae 4946     		mov	r1, r9
 1910 00b0 FFF7FEFF 		bl	__aeabi_ddiv
 1911 00b4 0246     		mov	r2, r0
 1912 00b6 0B46     		mov	r3, r1
 1913 00b8 4FF00000 		mov	r0, #0
 1914 00bc 8C49     		ldr	r1, .L147
 1915 00be FFF7FEFF 		bl	pow
 1916 00c2 0246     		mov	r2, r0
 1917 00c4 0B46     		mov	r3, r1
 1918 00c6 2046     		mov	r0, r4
 1919 00c8 2946     		mov	r1, r5
 1920 00ca FFF7FEFF 		bl	__aeabi_dmul
 1921 00ce 0346     		mov	r3, r0
 1922 00d0 0C46     		mov	r4, r1
 1923 00d2 1846     		mov	r0, r3
 1924 00d4 2146     		mov	r1, r4
 1925 00d6 FFF7FEFF 		bl	__aeabi_d2f
 1926 00da 0346     		mov	r3, r0
 1927 00dc FB60     		str	r3, [r7, #12]	@ float
 1928 00de FFE0     		b	.L138
 1929              	.L145:
 580:ad5940.c      ****       }
 581:ad5940.c      ****       else
 582:ad5940.c      ****       {
 583:ad5940.c      ****          pSweepCfg->SweepIndex --;
 1930              		.loc 1 583 0
 1931 00e0 7B68     		ldr	r3, [r7, #4]
 1932 00e2 5B69     		ldr	r3, [r3, #20]
 1933 00e4 5A1E     		subs	r2, r3, #1
 1934 00e6 7B68     		ldr	r3, [r7, #4]
 1935 00e8 5A61     		str	r2, [r3, #20]
 584:ad5940.c      ****          if(pSweepCfg->SweepIndex >= pSweepCfg->SweepPoints)
 1936              		.loc 1 584 0
 1937 00ea 7B68     		ldr	r3, [r7, #4]
 1938 00ec 5A69     		ldr	r2, [r3, #20]
 1939 00ee 7B68     		ldr	r3, [r7, #4]
 1940 00f0 DB68     		ldr	r3, [r3, #12]
 1941 00f2 9A42     		cmp	r2, r3
 1942 00f4 04D3     		bcc	.L137
 585:ad5940.c      ****             pSweepCfg->SweepIndex = pSweepCfg->SweepPoints-1;
 1943              		.loc 1 585 0
 1944 00f6 7B68     		ldr	r3, [r7, #4]
 1945 00f8 DB68     		ldr	r3, [r3, #12]
 1946 00fa 5A1E     		subs	r2, r3, #1
 1947 00fc 7B68     		ldr	r3, [r7, #4]
 1948 00fe 5A61     		str	r2, [r3, #20]
 1949              	.L137:
 586:ad5940.c      ****          frequency = pSweepCfg->SweepStop*pow(10,pSweepCfg->SweepIndex*
 1950              		.loc 1 586 0
 1951 0100 7B68     		ldr	r3, [r7, #4]
 1952 0102 9B68     		ldr	r3, [r3, #8]	@ float
 1953 0104 1846     		mov	r0, r3
 1954 0106 FFF7FEFF 		bl	__aeabi_f2d
 1955 010a 0446     		mov	r4, r0
 1956 010c 0D46     		mov	r5, r1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 46


 1957 010e 7B68     		ldr	r3, [r7, #4]
 1958 0110 5B69     		ldr	r3, [r3, #20]
 1959 0112 1846     		mov	r0, r3
 1960 0114 FFF7FEFF 		bl	__aeabi_ui2d
 1961 0118 8046     		mov	r8, r0
 1962 011a 8946     		mov	r9, r1
 587:ad5940.c      ****                                      (log10(pSweepCfg->SweepStart/pSweepCfg->SweepStop)/(pSweepCfg-
 1963              		.loc 1 587 0
 1964 011c 7B68     		ldr	r3, [r7, #4]
 1965 011e 5A68     		ldr	r2, [r3, #4]	@ float
 1966 0120 7B68     		ldr	r3, [r7, #4]
 1967 0122 9B68     		ldr	r3, [r3, #8]	@ float
 1968 0124 1946     		mov	r1, r3
 1969 0126 1046     		mov	r0, r2
 1970 0128 FFF7FEFF 		bl	__aeabi_fdiv
 1971 012c 0346     		mov	r3, r0
 1972 012e 1846     		mov	r0, r3
 1973 0130 FFF7FEFF 		bl	__aeabi_f2d
 1974 0134 0246     		mov	r2, r0
 1975 0136 0B46     		mov	r3, r1
 1976 0138 1046     		mov	r0, r2
 1977 013a 1946     		mov	r1, r3
 1978 013c FFF7FEFF 		bl	log10
 1979 0140 8246     		mov	r10, r0
 1980 0142 8B46     		mov	fp, r1
 1981 0144 7B68     		ldr	r3, [r7, #4]
 1982 0146 DB68     		ldr	r3, [r3, #12]
 1983 0148 013B     		subs	r3, r3, #1
 1984 014a 1846     		mov	r0, r3
 1985 014c FFF7FEFF 		bl	__aeabi_ui2d
 1986 0150 0246     		mov	r2, r0
 1987 0152 0B46     		mov	r3, r1
 1988 0154 5046     		mov	r0, r10
 1989 0156 5946     		mov	r1, fp
 1990 0158 FFF7FEFF 		bl	__aeabi_ddiv
 1991 015c 0246     		mov	r2, r0
 1992 015e 0B46     		mov	r3, r1
 586:ad5940.c      ****          frequency = pSweepCfg->SweepStop*pow(10,pSweepCfg->SweepIndex*
 1993              		.loc 1 586 0
 1994 0160 4046     		mov	r0, r8
 1995 0162 4946     		mov	r1, r9
 1996 0164 FFF7FEFF 		bl	__aeabi_dmul
 1997 0168 0246     		mov	r2, r0
 1998 016a 0B46     		mov	r3, r1
 1999 016c 4FF00000 		mov	r0, #0
 2000 0170 5F49     		ldr	r1, .L147
 2001 0172 FFF7FEFF 		bl	pow
 2002 0176 0246     		mov	r2, r0
 2003 0178 0B46     		mov	r3, r1
 2004 017a 2046     		mov	r0, r4
 2005 017c 2946     		mov	r1, r5
 2006 017e FFF7FEFF 		bl	__aeabi_dmul
 2007 0182 0346     		mov	r3, r0
 2008 0184 0C46     		mov	r4, r1
 2009 0186 1846     		mov	r0, r3
 2010 0188 2146     		mov	r1, r4
 2011 018a FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 47


 2012 018e 0346     		mov	r3, r0
 2013 0190 FB60     		str	r3, [r7, #12]	@ float
 2014 0192 A5E0     		b	.L138
 2015              	.L132:
 588:ad5940.c      ****       }
 589:ad5940.c      ****    }
 590:ad5940.c      ****    else/* Linear step */
 591:ad5940.c      ****    {
 592:ad5940.c      ****       if(pSweepCfg->SweepStart<pSweepCfg->SweepStop) /* Normal */
 2016              		.loc 1 592 0
 2017 0194 7B68     		ldr	r3, [r7, #4]
 2018 0196 5A68     		ldr	r2, [r3, #4]	@ float
 2019 0198 7B68     		ldr	r3, [r7, #4]
 2020 019a 9B68     		ldr	r3, [r3, #8]	@ float
 2021 019c 1946     		mov	r1, r3
 2022 019e 1046     		mov	r0, r2
 2023 01a0 FFF7FEFF 		bl	__aeabi_fcmplt
 2024 01a4 0346     		mov	r3, r0
 2025 01a6 002B     		cmp	r3, #0
 2026 01a8 4CD0     		beq	.L146
 593:ad5940.c      ****       {
 594:ad5940.c      ****          if(++pSweepCfg->SweepIndex == pSweepCfg->SweepPoints)
 2027              		.loc 1 594 0
 2028 01aa 7B68     		ldr	r3, [r7, #4]
 2029 01ac 5B69     		ldr	r3, [r3, #20]
 2030 01ae 5A1C     		adds	r2, r3, #1
 2031 01b0 7B68     		ldr	r3, [r7, #4]
 2032 01b2 5A61     		str	r2, [r3, #20]
 2033 01b4 7B68     		ldr	r3, [r7, #4]
 2034 01b6 5A69     		ldr	r2, [r3, #20]
 2035 01b8 7B68     		ldr	r3, [r7, #4]
 2036 01ba DB68     		ldr	r3, [r3, #12]
 2037 01bc 9A42     		cmp	r2, r3
 2038 01be 02D1     		bne	.L141
 595:ad5940.c      ****             pSweepCfg->SweepIndex = 0;
 2039              		.loc 1 595 0
 2040 01c0 7B68     		ldr	r3, [r7, #4]
 2041 01c2 0022     		movs	r2, #0
 2042 01c4 5A61     		str	r2, [r3, #20]
 2043              	.L141:
 596:ad5940.c      ****          frequency = pSweepCfg->SweepStart + pSweepCfg->SweepIndex*(double)(pSweepCfg->SweepStop-pS
 2044              		.loc 1 596 0
 2045 01c6 7B68     		ldr	r3, [r7, #4]
 2046 01c8 5B68     		ldr	r3, [r3, #4]	@ float
 2047 01ca 1846     		mov	r0, r3
 2048 01cc FFF7FEFF 		bl	__aeabi_f2d
 2049 01d0 0446     		mov	r4, r0
 2050 01d2 0D46     		mov	r5, r1
 2051 01d4 7B68     		ldr	r3, [r7, #4]
 2052 01d6 5B69     		ldr	r3, [r3, #20]
 2053 01d8 1846     		mov	r0, r3
 2054 01da FFF7FEFF 		bl	__aeabi_ui2d
 2055 01de 8046     		mov	r8, r0
 2056 01e0 8946     		mov	r9, r1
 2057 01e2 7B68     		ldr	r3, [r7, #4]
 2058 01e4 9A68     		ldr	r2, [r3, #8]	@ float
 2059 01e6 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 48


 2060 01e8 5B68     		ldr	r3, [r3, #4]	@ float
 2061 01ea 1946     		mov	r1, r3
 2062 01ec 1046     		mov	r0, r2
 2063 01ee FFF7FEFF 		bl	__aeabi_fsub
 2064 01f2 0346     		mov	r3, r0
 2065 01f4 1846     		mov	r0, r3
 2066 01f6 FFF7FEFF 		bl	__aeabi_f2d
 2067 01fa 0246     		mov	r2, r0
 2068 01fc 0B46     		mov	r3, r1
 2069 01fe 4046     		mov	r0, r8
 2070 0200 4946     		mov	r1, r9
 2071 0202 FFF7FEFF 		bl	__aeabi_dmul
 2072 0206 0246     		mov	r2, r0
 2073 0208 0B46     		mov	r3, r1
 2074 020a 9046     		mov	r8, r2
 2075 020c 9946     		mov	r9, r3
 2076 020e 7B68     		ldr	r3, [r7, #4]
 2077 0210 DB68     		ldr	r3, [r3, #12]
 2078 0212 013B     		subs	r3, r3, #1
 2079 0214 1846     		mov	r0, r3
 2080 0216 FFF7FEFF 		bl	__aeabi_ui2d
 2081 021a 0246     		mov	r2, r0
 2082 021c 0B46     		mov	r3, r1
 2083 021e 4046     		mov	r0, r8
 2084 0220 4946     		mov	r1, r9
 2085 0222 FFF7FEFF 		bl	__aeabi_ddiv
 2086 0226 0246     		mov	r2, r0
 2087 0228 0B46     		mov	r3, r1
 2088 022a 2046     		mov	r0, r4
 2089 022c 2946     		mov	r1, r5
 2090 022e FFF7FEFF 		bl	__aeabi_dadd
 2091 0232 0346     		mov	r3, r0
 2092 0234 0C46     		mov	r4, r1
 2093 0236 1846     		mov	r0, r3
 2094 0238 2146     		mov	r1, r4
 2095 023a FFF7FEFF 		bl	__aeabi_d2f
 2096 023e 0346     		mov	r3, r0
 2097 0240 FB60     		str	r3, [r7, #12]	@ float
 2098 0242 4DE0     		b	.L138
 2099              	.L146:
 597:ad5940.c      ****       }
 598:ad5940.c      ****       else
 599:ad5940.c      ****       {
 600:ad5940.c      ****          pSweepCfg->SweepIndex --;
 2100              		.loc 1 600 0
 2101 0244 7B68     		ldr	r3, [r7, #4]
 2102 0246 5B69     		ldr	r3, [r3, #20]
 2103 0248 5A1E     		subs	r2, r3, #1
 2104 024a 7B68     		ldr	r3, [r7, #4]
 2105 024c 5A61     		str	r2, [r3, #20]
 601:ad5940.c      ****          if(pSweepCfg->SweepIndex >= pSweepCfg->SweepPoints)
 2106              		.loc 1 601 0
 2107 024e 7B68     		ldr	r3, [r7, #4]
 2108 0250 5A69     		ldr	r2, [r3, #20]
 2109 0252 7B68     		ldr	r3, [r7, #4]
 2110 0254 DB68     		ldr	r3, [r3, #12]
 2111 0256 9A42     		cmp	r2, r3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 49


 2112 0258 04D3     		bcc	.L142
 602:ad5940.c      ****             pSweepCfg->SweepIndex = pSweepCfg->SweepPoints-1;
 2113              		.loc 1 602 0
 2114 025a 7B68     		ldr	r3, [r7, #4]
 2115 025c DB68     		ldr	r3, [r3, #12]
 2116 025e 5A1E     		subs	r2, r3, #1
 2117 0260 7B68     		ldr	r3, [r7, #4]
 2118 0262 5A61     		str	r2, [r3, #20]
 2119              	.L142:
 603:ad5940.c      ****          frequency = pSweepCfg->SweepStop + pSweepCfg->SweepIndex*(double)(pSweepCfg->SweepStart - 
 2120              		.loc 1 603 0
 2121 0264 7B68     		ldr	r3, [r7, #4]
 2122 0266 9B68     		ldr	r3, [r3, #8]	@ float
 2123 0268 1846     		mov	r0, r3
 2124 026a FFF7FEFF 		bl	__aeabi_f2d
 2125 026e 0446     		mov	r4, r0
 2126 0270 0D46     		mov	r5, r1
 2127 0272 7B68     		ldr	r3, [r7, #4]
 2128 0274 5B69     		ldr	r3, [r3, #20]
 2129 0276 1846     		mov	r0, r3
 2130 0278 FFF7FEFF 		bl	__aeabi_ui2d
 2131 027c 8046     		mov	r8, r0
 2132 027e 8946     		mov	r9, r1
 2133 0280 7B68     		ldr	r3, [r7, #4]
 2134 0282 5A68     		ldr	r2, [r3, #4]	@ float
 2135 0284 7B68     		ldr	r3, [r7, #4]
 2136 0286 9B68     		ldr	r3, [r3, #8]	@ float
 2137 0288 1946     		mov	r1, r3
 2138 028a 1046     		mov	r0, r2
 2139 028c FFF7FEFF 		bl	__aeabi_fsub
 2140 0290 0346     		mov	r3, r0
 2141 0292 1846     		mov	r0, r3
 2142 0294 FFF7FEFF 		bl	__aeabi_f2d
 2143 0298 0246     		mov	r2, r0
 2144 029a 0B46     		mov	r3, r1
 2145 029c 4046     		mov	r0, r8
 2146 029e 4946     		mov	r1, r9
 2147 02a0 FFF7FEFF 		bl	__aeabi_dmul
 2148 02a4 0246     		mov	r2, r0
 2149 02a6 0B46     		mov	r3, r1
 2150 02a8 9046     		mov	r8, r2
 2151 02aa 9946     		mov	r9, r3
 2152 02ac 7B68     		ldr	r3, [r7, #4]
 2153 02ae DB68     		ldr	r3, [r3, #12]
 2154 02b0 013B     		subs	r3, r3, #1
 2155 02b2 1846     		mov	r0, r3
 2156 02b4 FFF7FEFF 		bl	__aeabi_ui2d
 2157 02b8 0246     		mov	r2, r0
 2158 02ba 0B46     		mov	r3, r1
 2159 02bc 4046     		mov	r0, r8
 2160 02be 4946     		mov	r1, r9
 2161 02c0 FFF7FEFF 		bl	__aeabi_ddiv
 2162 02c4 0246     		mov	r2, r0
 2163 02c6 0B46     		mov	r3, r1
 2164 02c8 2046     		mov	r0, r4
 2165 02ca 2946     		mov	r1, r5
 2166 02cc FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 50


 2167 02d0 0346     		mov	r3, r0
 2168 02d2 0C46     		mov	r4, r1
 2169 02d4 1846     		mov	r0, r3
 2170 02d6 2146     		mov	r1, r4
 2171 02d8 FFF7FEFF 		bl	__aeabi_d2f
 2172 02dc 0346     		mov	r3, r0
 2173 02de FB60     		str	r3, [r7, #12]	@ float
 2174              	.L138:
 604:ad5940.c      ****       }
 605:ad5940.c      ****    }
 606:ad5940.c      ****    
 607:ad5940.c      ****    *pNextFreq = frequency;
 2175              		.loc 1 607 0
 2176 02e0 3B68     		ldr	r3, [r7]
 2177 02e2 FA68     		ldr	r2, [r7, #12]	@ float
 2178 02e4 1A60     		str	r2, [r3]	@ float
 608:ad5940.c      **** }
 2179              		.loc 1 608 0
 2180 02e6 00BF     		nop
 2181 02e8 1037     		adds	r7, r7, #16
 2182              		.cfi_def_cfa_offset 32
 2183 02ea BD46     		mov	sp, r7
 2184              		.cfi_def_cfa_register 13
 2185              		@ sp needed
 2186 02ec BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 2187              	.L148:
 2188              		.align	2
 2189              	.L147:
 2190 02f0 00002440 		.word	1076101120
 2191              		.cfi_endproc
 2192              	.LFE15:
 2193              		.size	AD5940_SweepNext, .-AD5940_SweepNext
 2194              		.section	.text.AD5940_StructInit,"ax",%progbits
 2195              		.align	2
 2196              		.global	AD5940_StructInit
 2197              		.thumb
 2198              		.thumb_func
 2199              		.type	AD5940_StructInit, %function
 2200              	AD5940_StructInit:
 2201              	.LFB16:
 609:ad5940.c      **** 
 610:ad5940.c      **** /**
 611:ad5940.c      ****   @brief Initialize Structure members to zero
 612:ad5940.c      ****   @param pStruct: Pointer to the structure. 
 613:ad5940.c      ****   @param StructSize: The structure size in Byte.
 614:ad5940.c      ****   @return Return None.
 615:ad5940.c      **** **/
 616:ad5940.c      **** void AD5940_StructInit(void *pStruct, uint32_t StructSize)
 617:ad5940.c      **** {
 2202              		.loc 1 617 0
 2203              		.cfi_startproc
 2204              		@ args = 0, pretend = 0, frame = 8
 2205              		@ frame_needed = 1, uses_anonymous_args = 0
 2206 0000 80B5     		push	{r7, lr}
 2207              		.cfi_def_cfa_offset 8
 2208              		.cfi_offset 7, -8
 2209              		.cfi_offset 14, -4
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 51


 2210 0002 82B0     		sub	sp, sp, #8
 2211              		.cfi_def_cfa_offset 16
 2212 0004 00AF     		add	r7, sp, #0
 2213              		.cfi_def_cfa_register 7
 2214 0006 7860     		str	r0, [r7, #4]
 2215 0008 3960     		str	r1, [r7]
 618:ad5940.c      ****   memset(pStruct, 0, StructSize);
 2216              		.loc 1 618 0
 2217 000a 3A68     		ldr	r2, [r7]
 2218 000c 0021     		movs	r1, #0
 2219 000e 7868     		ldr	r0, [r7, #4]
 2220 0010 FFF7FEFF 		bl	memset
 619:ad5940.c      **** }
 2221              		.loc 1 619 0
 2222 0014 00BF     		nop
 2223 0016 0837     		adds	r7, r7, #8
 2224              		.cfi_def_cfa_offset 8
 2225 0018 BD46     		mov	sp, r7
 2226              		.cfi_def_cfa_register 13
 2227              		@ sp needed
 2228 001a 80BD     		pop	{r7, pc}
 2229              		.cfi_endproc
 2230              	.LFE16:
 2231              		.size	AD5940_StructInit, .-AD5940_StructInit
 2232              		.global	__aeabi_i2f
 2233              		.section	.text.AD5940_ADCCode2Volt,"ax",%progbits
 2234              		.align	2
 2235              		.global	AD5940_ADCCode2Volt
 2236              		.thumb
 2237              		.thumb_func
 2238              		.type	AD5940_ADCCode2Volt, %function
 2239              	AD5940_ADCCode2Volt:
 2240              	.LFB17:
 620:ad5940.c      **** 
 621:ad5940.c      **** /**
 622:ad5940.c      ****   @brief Convert ADC Code to voltage. 
 623:ad5940.c      ****   @param ADCPga: The ADC PGA used for this result.
 624:ad5940.c      ****   @param code: ADC code.
 625:ad5940.c      ****   @param VRef1p82: the actual 1.82V reference voltage.
 626:ad5940.c      ****   @return Voltage in volt.
 627:ad5940.c      **** **/
 628:ad5940.c      **** float AD5940_ADCCode2Volt(uint32_t code, uint32_t ADCPga, float VRef1p82)
 629:ad5940.c      **** {
 2241              		.loc 1 629 0
 2242              		.cfi_startproc
 2243              		@ args = 0, pretend = 0, frame = 32
 2244              		@ frame_needed = 1, uses_anonymous_args = 0
 2245 0000 80B5     		push	{r7, lr}
 2246              		.cfi_def_cfa_offset 8
 2247              		.cfi_offset 7, -8
 2248              		.cfi_offset 14, -4
 2249 0002 88B0     		sub	sp, sp, #32
 2250              		.cfi_def_cfa_offset 40
 2251 0004 00AF     		add	r7, sp, #0
 2252              		.cfi_def_cfa_register 7
 2253 0006 F860     		str	r0, [r7, #12]
 2254 0008 B960     		str	r1, [r7, #8]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 52


 2255 000a 7A60     		str	r2, [r7, #4]	@ float
 630:ad5940.c      ****   float kFactor = 1.835/1.82;
 2256              		.loc 1 630 0
 2257 000c 2A4B     		ldr	r3, .L161
 2258 000e BB61     		str	r3, [r7, #24]	@ float
 631:ad5940.c      ****   float fVolt = 0.0;
 2259              		.loc 1 631 0
 2260 0010 4FF00003 		mov	r3, #0
 2261 0014 7B61     		str	r3, [r7, #20]	@ float
 632:ad5940.c      ****   float tmp = 0;
 2262              		.loc 1 632 0
 2263 0016 4FF00003 		mov	r3, #0
 2264 001a FB61     		str	r3, [r7, #28]	@ float
 633:ad5940.c      ****   tmp = (int32_t)code - 32768;
 2265              		.loc 1 633 0
 2266 001c FB68     		ldr	r3, [r7, #12]
 2267 001e A3F50043 		sub	r3, r3, #32768
 2268 0022 1846     		mov	r0, r3
 2269 0024 FFF7FEFF 		bl	__aeabi_i2f
 2270 0028 0346     		mov	r3, r0
 2271 002a FB61     		str	r3, [r7, #28]	@ float
 634:ad5940.c      ****   switch(ADCPga)
 2272              		.loc 1 634 0
 2273 002c BB68     		ldr	r3, [r7, #8]
 2274 002e 042B     		cmp	r3, #4
 2275 0030 2BD8     		bhi	.L160
 2276 0032 01A2     		adr	r2, .L153
 2277 0034 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2278              		.p2align 2
 2279              	.L153:
 2280 0038 8B000000 		.word	.L160+1
 2281 003c 4D000000 		.word	.L154+1
 2282 0040 5D000000 		.word	.L155+1
 2283 0044 6D000000 		.word	.L156+1
 2284 0048 7D000000 		.word	.L157+1
 2285              		.p2align 1
 2286              	.L154:
 635:ad5940.c      ****   {
 636:ad5940.c      ****   case ADCPGA_1:
 637:ad5940.c      ****     break;
 638:ad5940.c      ****   case ADCPGA_1P5:
 639:ad5940.c      ****     tmp /= 1.5f;
 2287              		.loc 1 639 0
 2288 004c 4FF07F51 		mov	r1, #1069547520
 2289 0050 F869     		ldr	r0, [r7, #28]	@ float
 2290 0052 FFF7FEFF 		bl	__aeabi_fdiv
 2291 0056 0346     		mov	r3, r0
 2292 0058 FB61     		str	r3, [r7, #28]	@ float
 640:ad5940.c      ****     break;
 2293              		.loc 1 640 0
 2294 005a 17E0     		b	.L158
 2295              	.L155:
 641:ad5940.c      ****   case ADCPGA_2:
 642:ad5940.c      ****     tmp /= 2.0f;
 2296              		.loc 1 642 0
 2297 005c 4FF08041 		mov	r1, #1073741824
 2298 0060 F869     		ldr	r0, [r7, #28]	@ float
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 53


 2299 0062 FFF7FEFF 		bl	__aeabi_fdiv
 2300 0066 0346     		mov	r3, r0
 2301 0068 FB61     		str	r3, [r7, #28]	@ float
 643:ad5940.c      ****     break;
 2302              		.loc 1 643 0
 2303 006a 0FE0     		b	.L158
 2304              	.L156:
 644:ad5940.c      ****   case ADCPGA_4:
 645:ad5940.c      ****     tmp /= 4.0f;
 2305              		.loc 1 645 0
 2306 006c 4FF08141 		mov	r1, #1082130432
 2307 0070 F869     		ldr	r0, [r7, #28]	@ float
 2308 0072 FFF7FEFF 		bl	__aeabi_fdiv
 2309 0076 0346     		mov	r3, r0
 2310 0078 FB61     		str	r3, [r7, #28]	@ float
 646:ad5940.c      ****     break;
 2311              		.loc 1 646 0
 2312 007a 07E0     		b	.L158
 2313              	.L157:
 647:ad5940.c      ****   case ADCPGA_9:
 648:ad5940.c      ****     tmp /= 9.0f;
 2314              		.loc 1 648 0
 2315 007c 0F49     		ldr	r1, .L161+4
 2316 007e F869     		ldr	r0, [r7, #28]	@ float
 2317 0080 FFF7FEFF 		bl	__aeabi_fdiv
 2318 0084 0346     		mov	r3, r0
 2319 0086 FB61     		str	r3, [r7, #28]	@ float
 649:ad5940.c      ****     break;
 2320              		.loc 1 649 0
 2321 0088 00E0     		b	.L158
 2322              	.L160:
 650:ad5940.c      ****   default:break;
 2323              		.loc 1 650 0
 2324 008a 00BF     		nop
 2325              	.L158:
 651:ad5940.c      ****   }
 652:ad5940.c      ****   fVolt = tmp*VRef1p82/32768*kFactor;
 2326              		.loc 1 652 0
 2327 008c 7968     		ldr	r1, [r7, #4]	@ float
 2328 008e F869     		ldr	r0, [r7, #28]	@ float
 2329 0090 FFF7FEFF 		bl	__aeabi_fmul
 2330 0094 0346     		mov	r3, r0
 2331 0096 4FF08E41 		mov	r1, #1191182336
 2332 009a 1846     		mov	r0, r3
 2333 009c FFF7FEFF 		bl	__aeabi_fdiv
 2334 00a0 0346     		mov	r3, r0
 2335 00a2 B969     		ldr	r1, [r7, #24]	@ float
 2336 00a4 1846     		mov	r0, r3
 2337 00a6 FFF7FEFF 		bl	__aeabi_fmul
 2338 00aa 0346     		mov	r3, r0
 2339 00ac 7B61     		str	r3, [r7, #20]	@ float
 653:ad5940.c      ****   return fVolt;
 2340              		.loc 1 653 0
 2341 00ae 7B69     		ldr	r3, [r7, #20]	@ float
 654:ad5940.c      **** }
 2342              		.loc 1 654 0
 2343 00b0 1846     		mov	r0, r3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 54


 2344 00b2 2037     		adds	r7, r7, #32
 2345              		.cfi_def_cfa_offset 8
 2346 00b4 BD46     		mov	sp, r7
 2347              		.cfi_def_cfa_register 13
 2348              		@ sp needed
 2349 00b6 80BD     		pop	{r7, pc}
 2350              	.L162:
 2351              		.align	2
 2352              	.L161:
 2353 00b8 110E813F 		.word	1065422353
 2354 00bc 00001041 		.word	1091567616
 2355              		.cfi_endproc
 2356              	.LFE17:
 2357              		.size	AD5940_ADCCode2Volt, .-AD5940_ADCCode2Volt
 2358              		.section	.text.AD5940_ComplexDivFloat,"ax",%progbits
 2359              		.align	2
 2360              		.global	AD5940_ComplexDivFloat
 2361              		.thumb
 2362              		.thumb_func
 2363              		.type	AD5940_ComplexDivFloat, %function
 2364              	AD5940_ComplexDivFloat:
 2365              	.LFB18:
 655:ad5940.c      **** 
 656:ad5940.c      **** /**
 657:ad5940.c      ****  * @brief Do complex number division.
 658:ad5940.c      ****  * @param a: The dividend.
 659:ad5940.c      ****  * @param b: The divisor.
 660:ad5940.c      ****  * @return Return result.
 661:ad5940.c      **** **/
 662:ad5940.c      **** fImpCar_Type AD5940_ComplexDivFloat(fImpCar_Type *a, fImpCar_Type *b)
 663:ad5940.c      **** {
 2366              		.loc 1 663 0
 2367              		.cfi_startproc
 2368              		@ args = 0, pretend = 0, frame = 32
 2369              		@ frame_needed = 1, uses_anonymous_args = 0
 2370 0000 90B5     		push	{r4, r7, lr}
 2371              		.cfi_def_cfa_offset 12
 2372              		.cfi_offset 4, -12
 2373              		.cfi_offset 7, -8
 2374              		.cfi_offset 14, -4
 2375 0002 89B0     		sub	sp, sp, #36
 2376              		.cfi_def_cfa_offset 48
 2377 0004 00AF     		add	r7, sp, #0
 2378              		.cfi_def_cfa_register 7
 2379 0006 F860     		str	r0, [r7, #12]
 2380 0008 B960     		str	r1, [r7, #8]
 2381 000a 7A60     		str	r2, [r7, #4]
 664:ad5940.c      ****   fImpCar_Type res;
 665:ad5940.c      ****   float temp;
 666:ad5940.c      ****   temp = b->Real*b->Real + b->Image*b->Image;
 2382              		.loc 1 666 0
 2383 000c 7B68     		ldr	r3, [r7, #4]
 2384 000e 1A68     		ldr	r2, [r3]	@ float
 2385 0010 7B68     		ldr	r3, [r7, #4]
 2386 0012 1B68     		ldr	r3, [r3]	@ float
 2387 0014 1946     		mov	r1, r3
 2388 0016 1046     		mov	r0, r2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 55


 2389 0018 FFF7FEFF 		bl	__aeabi_fmul
 2390 001c 0346     		mov	r3, r0
 2391 001e 1C46     		mov	r4, r3
 2392 0020 7B68     		ldr	r3, [r7, #4]
 2393 0022 5A68     		ldr	r2, [r3, #4]	@ float
 2394 0024 7B68     		ldr	r3, [r7, #4]
 2395 0026 5B68     		ldr	r3, [r3, #4]	@ float
 2396 0028 1946     		mov	r1, r3
 2397 002a 1046     		mov	r0, r2
 2398 002c FFF7FEFF 		bl	__aeabi_fmul
 2399 0030 0346     		mov	r3, r0
 2400 0032 1946     		mov	r1, r3
 2401 0034 2046     		mov	r0, r4
 2402 0036 FFF7FEFF 		bl	__aeabi_fadd
 2403 003a 0346     		mov	r3, r0
 2404 003c FB61     		str	r3, [r7, #28]	@ float
 667:ad5940.c      ****   res.Real = a->Real*b->Real + a->Image*b->Image;
 2405              		.loc 1 667 0
 2406 003e BB68     		ldr	r3, [r7, #8]
 2407 0040 1A68     		ldr	r2, [r3]	@ float
 2408 0042 7B68     		ldr	r3, [r7, #4]
 2409 0044 1B68     		ldr	r3, [r3]	@ float
 2410 0046 1946     		mov	r1, r3
 2411 0048 1046     		mov	r0, r2
 2412 004a FFF7FEFF 		bl	__aeabi_fmul
 2413 004e 0346     		mov	r3, r0
 2414 0050 1C46     		mov	r4, r3
 2415 0052 BB68     		ldr	r3, [r7, #8]
 2416 0054 5A68     		ldr	r2, [r3, #4]	@ float
 2417 0056 7B68     		ldr	r3, [r7, #4]
 2418 0058 5B68     		ldr	r3, [r3, #4]	@ float
 2419 005a 1946     		mov	r1, r3
 2420 005c 1046     		mov	r0, r2
 2421 005e FFF7FEFF 		bl	__aeabi_fmul
 2422 0062 0346     		mov	r3, r0
 2423 0064 1946     		mov	r1, r3
 2424 0066 2046     		mov	r0, r4
 2425 0068 FFF7FEFF 		bl	__aeabi_fadd
 2426 006c 0346     		mov	r3, r0
 2427 006e 7B61     		str	r3, [r7, #20]	@ float
 668:ad5940.c      ****   res.Real /= temp;
 2428              		.loc 1 668 0
 2429 0070 7B69     		ldr	r3, [r7, #20]	@ float
 2430 0072 F969     		ldr	r1, [r7, #28]	@ float
 2431 0074 1846     		mov	r0, r3
 2432 0076 FFF7FEFF 		bl	__aeabi_fdiv
 2433 007a 0346     		mov	r3, r0
 2434 007c 7B61     		str	r3, [r7, #20]	@ float
 669:ad5940.c      ****   res.Image = a->Image*b->Real - a->Real*b->Image;
 2435              		.loc 1 669 0
 2436 007e BB68     		ldr	r3, [r7, #8]
 2437 0080 5A68     		ldr	r2, [r3, #4]	@ float
 2438 0082 7B68     		ldr	r3, [r7, #4]
 2439 0084 1B68     		ldr	r3, [r3]	@ float
 2440 0086 1946     		mov	r1, r3
 2441 0088 1046     		mov	r0, r2
 2442 008a FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 56


 2443 008e 0346     		mov	r3, r0
 2444 0090 1C46     		mov	r4, r3
 2445 0092 BB68     		ldr	r3, [r7, #8]
 2446 0094 1A68     		ldr	r2, [r3]	@ float
 2447 0096 7B68     		ldr	r3, [r7, #4]
 2448 0098 5B68     		ldr	r3, [r3, #4]	@ float
 2449 009a 1946     		mov	r1, r3
 2450 009c 1046     		mov	r0, r2
 2451 009e FFF7FEFF 		bl	__aeabi_fmul
 2452 00a2 0346     		mov	r3, r0
 2453 00a4 1946     		mov	r1, r3
 2454 00a6 2046     		mov	r0, r4
 2455 00a8 FFF7FEFF 		bl	__aeabi_fsub
 2456 00ac 0346     		mov	r3, r0
 2457 00ae BB61     		str	r3, [r7, #24]	@ float
 670:ad5940.c      ****   res.Image /= temp;
 2458              		.loc 1 670 0
 2459 00b0 BB69     		ldr	r3, [r7, #24]	@ float
 2460 00b2 F969     		ldr	r1, [r7, #28]	@ float
 2461 00b4 1846     		mov	r0, r3
 2462 00b6 FFF7FEFF 		bl	__aeabi_fdiv
 2463 00ba 0346     		mov	r3, r0
 2464 00bc BB61     		str	r3, [r7, #24]	@ float
 671:ad5940.c      ****   return res;
 2465              		.loc 1 671 0
 2466 00be FB68     		ldr	r3, [r7, #12]
 2467 00c0 1A46     		mov	r2, r3
 2468 00c2 07F11403 		add	r3, r7, #20
 2469 00c6 93E80300 		ldmia	r3, {r0, r1}
 2470 00ca 82E80300 		stmia	r2, {r0, r1}
 672:ad5940.c      **** }
 2471              		.loc 1 672 0
 2472 00ce F868     		ldr	r0, [r7, #12]
 2473 00d0 2437     		adds	r7, r7, #36
 2474              		.cfi_def_cfa_offset 12
 2475 00d2 BD46     		mov	sp, r7
 2476              		.cfi_def_cfa_register 13
 2477              		@ sp needed
 2478 00d4 90BD     		pop	{r4, r7, pc}
 2479              		.cfi_endproc
 2480              	.LFE18:
 2481              		.size	AD5940_ComplexDivFloat, .-AD5940_ComplexDivFloat
 2482 00d6 00BF     		.section	.text.AD5940_ComplexMulFloat,"ax",%progbits
 2483              		.align	2
 2484              		.global	AD5940_ComplexMulFloat
 2485              		.thumb
 2486              		.thumb_func
 2487              		.type	AD5940_ComplexMulFloat, %function
 2488              	AD5940_ComplexMulFloat:
 2489              	.LFB19:
 673:ad5940.c      **** 
 674:ad5940.c      **** /**
 675:ad5940.c      ****  * @brief Do complex number multiplication.
 676:ad5940.c      ****  * @param a: The multiplicand.
 677:ad5940.c      ****  * @param b: The multiplier .
 678:ad5940.c      ****  * @return Return result.
 679:ad5940.c      **** **/
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 57


 680:ad5940.c      **** fImpCar_Type AD5940_ComplexMulFloat(fImpCar_Type *a, fImpCar_Type *b)
 681:ad5940.c      **** {
 2490              		.loc 1 681 0
 2491              		.cfi_startproc
 2492              		@ args = 0, pretend = 0, frame = 24
 2493              		@ frame_needed = 1, uses_anonymous_args = 0
 2494 0000 90B5     		push	{r4, r7, lr}
 2495              		.cfi_def_cfa_offset 12
 2496              		.cfi_offset 4, -12
 2497              		.cfi_offset 7, -8
 2498              		.cfi_offset 14, -4
 2499 0002 87B0     		sub	sp, sp, #28
 2500              		.cfi_def_cfa_offset 40
 2501 0004 00AF     		add	r7, sp, #0
 2502              		.cfi_def_cfa_register 7
 2503 0006 F860     		str	r0, [r7, #12]
 2504 0008 B960     		str	r1, [r7, #8]
 2505 000a 7A60     		str	r2, [r7, #4]
 682:ad5940.c      ****   fImpCar_Type res;
 683:ad5940.c      ****   
 684:ad5940.c      ****   res.Real = a->Real*b->Real - a->Image*b->Image;
 2506              		.loc 1 684 0
 2507 000c BB68     		ldr	r3, [r7, #8]
 2508 000e 1A68     		ldr	r2, [r3]	@ float
 2509 0010 7B68     		ldr	r3, [r7, #4]
 2510 0012 1B68     		ldr	r3, [r3]	@ float
 2511 0014 1946     		mov	r1, r3
 2512 0016 1046     		mov	r0, r2
 2513 0018 FFF7FEFF 		bl	__aeabi_fmul
 2514 001c 0346     		mov	r3, r0
 2515 001e 1C46     		mov	r4, r3
 2516 0020 BB68     		ldr	r3, [r7, #8]
 2517 0022 5A68     		ldr	r2, [r3, #4]	@ float
 2518 0024 7B68     		ldr	r3, [r7, #4]
 2519 0026 5B68     		ldr	r3, [r3, #4]	@ float
 2520 0028 1946     		mov	r1, r3
 2521 002a 1046     		mov	r0, r2
 2522 002c FFF7FEFF 		bl	__aeabi_fmul
 2523 0030 0346     		mov	r3, r0
 2524 0032 1946     		mov	r1, r3
 2525 0034 2046     		mov	r0, r4
 2526 0036 FFF7FEFF 		bl	__aeabi_fsub
 2527 003a 0346     		mov	r3, r0
 2528 003c 3B61     		str	r3, [r7, #16]	@ float
 685:ad5940.c      ****   res.Image = a->Image*b->Real + a->Real*b->Image;
 2529              		.loc 1 685 0
 2530 003e BB68     		ldr	r3, [r7, #8]
 2531 0040 5A68     		ldr	r2, [r3, #4]	@ float
 2532 0042 7B68     		ldr	r3, [r7, #4]
 2533 0044 1B68     		ldr	r3, [r3]	@ float
 2534 0046 1946     		mov	r1, r3
 2535 0048 1046     		mov	r0, r2
 2536 004a FFF7FEFF 		bl	__aeabi_fmul
 2537 004e 0346     		mov	r3, r0
 2538 0050 1C46     		mov	r4, r3
 2539 0052 BB68     		ldr	r3, [r7, #8]
 2540 0054 1A68     		ldr	r2, [r3]	@ float
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 58


 2541 0056 7B68     		ldr	r3, [r7, #4]
 2542 0058 5B68     		ldr	r3, [r3, #4]	@ float
 2543 005a 1946     		mov	r1, r3
 2544 005c 1046     		mov	r0, r2
 2545 005e FFF7FEFF 		bl	__aeabi_fmul
 2546 0062 0346     		mov	r3, r0
 2547 0064 1946     		mov	r1, r3
 2548 0066 2046     		mov	r0, r4
 2549 0068 FFF7FEFF 		bl	__aeabi_fadd
 2550 006c 0346     		mov	r3, r0
 2551 006e 7B61     		str	r3, [r7, #20]	@ float
 686:ad5940.c      **** 
 687:ad5940.c      ****   return res;
 2552              		.loc 1 687 0
 2553 0070 FB68     		ldr	r3, [r7, #12]
 2554 0072 1A46     		mov	r2, r3
 2555 0074 07F11003 		add	r3, r7, #16
 2556 0078 93E80300 		ldmia	r3, {r0, r1}
 2557 007c 82E80300 		stmia	r2, {r0, r1}
 688:ad5940.c      **** }
 2558              		.loc 1 688 0
 2559 0080 F868     		ldr	r0, [r7, #12]
 2560 0082 1C37     		adds	r7, r7, #28
 2561              		.cfi_def_cfa_offset 12
 2562 0084 BD46     		mov	sp, r7
 2563              		.cfi_def_cfa_register 13
 2564              		@ sp needed
 2565 0086 90BD     		pop	{r4, r7, pc}
 2566              		.cfi_endproc
 2567              	.LFE19:
 2568              		.size	AD5940_ComplexMulFloat, .-AD5940_ComplexMulFloat
 2569              		.section	.text.AD5940_ComplexAddFloat,"ax",%progbits
 2570              		.align	2
 2571              		.global	AD5940_ComplexAddFloat
 2572              		.thumb
 2573              		.thumb_func
 2574              		.type	AD5940_ComplexAddFloat, %function
 2575              	AD5940_ComplexAddFloat:
 2576              	.LFB20:
 689:ad5940.c      **** /**
 690:ad5940.c      ****  * @brief Do complex number addition.
 691:ad5940.c      ****  * @param a: The addend.
 692:ad5940.c      ****  * @param b: The addend .
 693:ad5940.c      ****  * @return Return result.
 694:ad5940.c      **** **/
 695:ad5940.c      **** fImpCar_Type AD5940_ComplexAddFloat(fImpCar_Type *a, fImpCar_Type *b)
 696:ad5940.c      **** {
 2577              		.loc 1 696 0
 2578              		.cfi_startproc
 2579              		@ args = 0, pretend = 0, frame = 24
 2580              		@ frame_needed = 1, uses_anonymous_args = 0
 2581 0000 80B5     		push	{r7, lr}
 2582              		.cfi_def_cfa_offset 8
 2583              		.cfi_offset 7, -8
 2584              		.cfi_offset 14, -4
 2585 0002 86B0     		sub	sp, sp, #24
 2586              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 59


 2587 0004 00AF     		add	r7, sp, #0
 2588              		.cfi_def_cfa_register 7
 2589 0006 F860     		str	r0, [r7, #12]
 2590 0008 B960     		str	r1, [r7, #8]
 2591 000a 7A60     		str	r2, [r7, #4]
 697:ad5940.c      ****   fImpCar_Type res;
 698:ad5940.c      ****   
 699:ad5940.c      ****   res.Real = a->Real + b->Real;
 2592              		.loc 1 699 0
 2593 000c BB68     		ldr	r3, [r7, #8]
 2594 000e 1A68     		ldr	r2, [r3]	@ float
 2595 0010 7B68     		ldr	r3, [r7, #4]
 2596 0012 1B68     		ldr	r3, [r3]	@ float
 2597 0014 1946     		mov	r1, r3
 2598 0016 1046     		mov	r0, r2
 2599 0018 FFF7FEFF 		bl	__aeabi_fadd
 2600 001c 0346     		mov	r3, r0
 2601 001e 3B61     		str	r3, [r7, #16]	@ float
 700:ad5940.c      ****   res.Image = a->Image + b->Image;
 2602              		.loc 1 700 0
 2603 0020 BB68     		ldr	r3, [r7, #8]
 2604 0022 5A68     		ldr	r2, [r3, #4]	@ float
 2605 0024 7B68     		ldr	r3, [r7, #4]
 2606 0026 5B68     		ldr	r3, [r3, #4]	@ float
 2607 0028 1946     		mov	r1, r3
 2608 002a 1046     		mov	r0, r2
 2609 002c FFF7FEFF 		bl	__aeabi_fadd
 2610 0030 0346     		mov	r3, r0
 2611 0032 7B61     		str	r3, [r7, #20]	@ float
 701:ad5940.c      **** 
 702:ad5940.c      ****   return res;
 2612              		.loc 1 702 0
 2613 0034 FB68     		ldr	r3, [r7, #12]
 2614 0036 1A46     		mov	r2, r3
 2615 0038 07F11003 		add	r3, r7, #16
 2616 003c 93E80300 		ldmia	r3, {r0, r1}
 2617 0040 82E80300 		stmia	r2, {r0, r1}
 703:ad5940.c      **** }
 2618              		.loc 1 703 0
 2619 0044 F868     		ldr	r0, [r7, #12]
 2620 0046 1837     		adds	r7, r7, #24
 2621              		.cfi_def_cfa_offset 8
 2622 0048 BD46     		mov	sp, r7
 2623              		.cfi_def_cfa_register 13
 2624              		@ sp needed
 2625 004a 80BD     		pop	{r7, pc}
 2626              		.cfi_endproc
 2627              	.LFE20:
 2628              		.size	AD5940_ComplexAddFloat, .-AD5940_ComplexAddFloat
 2629              		.section	.text.AD5940_ComplexSubFloat,"ax",%progbits
 2630              		.align	2
 2631              		.global	AD5940_ComplexSubFloat
 2632              		.thumb
 2633              		.thumb_func
 2634              		.type	AD5940_ComplexSubFloat, %function
 2635              	AD5940_ComplexSubFloat:
 2636              	.LFB21:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 60


 704:ad5940.c      **** 
 705:ad5940.c      **** /**
 706:ad5940.c      ****  * @brief Do complex number subtraction.
 707:ad5940.c      ****  * @param a: The minuend.
 708:ad5940.c      ****  * @param b: The subtrahend .
 709:ad5940.c      ****  * @return Return result.
 710:ad5940.c      **** **/
 711:ad5940.c      **** fImpCar_Type AD5940_ComplexSubFloat(fImpCar_Type *a, fImpCar_Type *b)
 712:ad5940.c      **** {
 2637              		.loc 1 712 0
 2638              		.cfi_startproc
 2639              		@ args = 0, pretend = 0, frame = 24
 2640              		@ frame_needed = 1, uses_anonymous_args = 0
 2641 0000 80B5     		push	{r7, lr}
 2642              		.cfi_def_cfa_offset 8
 2643              		.cfi_offset 7, -8
 2644              		.cfi_offset 14, -4
 2645 0002 86B0     		sub	sp, sp, #24
 2646              		.cfi_def_cfa_offset 32
 2647 0004 00AF     		add	r7, sp, #0
 2648              		.cfi_def_cfa_register 7
 2649 0006 F860     		str	r0, [r7, #12]
 2650 0008 B960     		str	r1, [r7, #8]
 2651 000a 7A60     		str	r2, [r7, #4]
 713:ad5940.c      ****   fImpCar_Type res;
 714:ad5940.c      ****   
 715:ad5940.c      ****   res.Real = a->Real - b->Real;
 2652              		.loc 1 715 0
 2653 000c BB68     		ldr	r3, [r7, #8]
 2654 000e 1A68     		ldr	r2, [r3]	@ float
 2655 0010 7B68     		ldr	r3, [r7, #4]
 2656 0012 1B68     		ldr	r3, [r3]	@ float
 2657 0014 1946     		mov	r1, r3
 2658 0016 1046     		mov	r0, r2
 2659 0018 FFF7FEFF 		bl	__aeabi_fsub
 2660 001c 0346     		mov	r3, r0
 2661 001e 3B61     		str	r3, [r7, #16]	@ float
 716:ad5940.c      ****   res.Image = a->Image - b->Image;
 2662              		.loc 1 716 0
 2663 0020 BB68     		ldr	r3, [r7, #8]
 2664 0022 5A68     		ldr	r2, [r3, #4]	@ float
 2665 0024 7B68     		ldr	r3, [r7, #4]
 2666 0026 5B68     		ldr	r3, [r3, #4]	@ float
 2667 0028 1946     		mov	r1, r3
 2668 002a 1046     		mov	r0, r2
 2669 002c FFF7FEFF 		bl	__aeabi_fsub
 2670 0030 0346     		mov	r3, r0
 2671 0032 7B61     		str	r3, [r7, #20]	@ float
 717:ad5940.c      **** 
 718:ad5940.c      ****   return res;
 2672              		.loc 1 718 0
 2673 0034 FB68     		ldr	r3, [r7, #12]
 2674 0036 1A46     		mov	r2, r3
 2675 0038 07F11003 		add	r3, r7, #16
 2676 003c 93E80300 		ldmia	r3, {r0, r1}
 2677 0040 82E80300 		stmia	r2, {r0, r1}
 719:ad5940.c      **** }
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 61


 2678              		.loc 1 719 0
 2679 0044 F868     		ldr	r0, [r7, #12]
 2680 0046 1837     		adds	r7, r7, #24
 2681              		.cfi_def_cfa_offset 8
 2682 0048 BD46     		mov	sp, r7
 2683              		.cfi_def_cfa_register 13
 2684              		@ sp needed
 2685 004a 80BD     		pop	{r7, pc}
 2686              		.cfi_endproc
 2687              	.LFE21:
 2688              		.size	AD5940_ComplexSubFloat, .-AD5940_ComplexSubFloat
 2689              		.section	.text.AD5940_ComplexDivInt,"ax",%progbits
 2690              		.align	2
 2691              		.global	AD5940_ComplexDivInt
 2692              		.thumb
 2693              		.thumb_func
 2694              		.type	AD5940_ComplexDivInt, %function
 2695              	AD5940_ComplexDivInt:
 2696              	.LFB22:
 720:ad5940.c      **** 
 721:ad5940.c      **** /**
 722:ad5940.c      ****  * @brief Do complex number division.
 723:ad5940.c      ****  * @param a: The dividend.
 724:ad5940.c      ****  * @param b: The divisor.
 725:ad5940.c      ****  * @return Return result.
 726:ad5940.c      **** **/
 727:ad5940.c      **** fImpCar_Type AD5940_ComplexDivInt(iImpCar_Type *a, iImpCar_Type *b)
 728:ad5940.c      **** {
 2697              		.loc 1 728 0
 2698              		.cfi_startproc
 2699              		@ args = 0, pretend = 0, frame = 32
 2700              		@ frame_needed = 1, uses_anonymous_args = 0
 2701 0000 B0B5     		push	{r4, r5, r7, lr}
 2702              		.cfi_def_cfa_offset 16
 2703              		.cfi_offset 4, -16
 2704              		.cfi_offset 5, -12
 2705              		.cfi_offset 7, -8
 2706              		.cfi_offset 14, -4
 2707 0002 88B0     		sub	sp, sp, #32
 2708              		.cfi_def_cfa_offset 48
 2709 0004 00AF     		add	r7, sp, #0
 2710              		.cfi_def_cfa_register 7
 2711 0006 F860     		str	r0, [r7, #12]
 2712 0008 B960     		str	r1, [r7, #8]
 2713 000a 7A60     		str	r2, [r7, #4]
 729:ad5940.c      ****   fImpCar_Type res;
 730:ad5940.c      ****   float temp;
 731:ad5940.c      ****   temp = (float)b->Real*b->Real + (float)b->Image*b->Image;
 2714              		.loc 1 731 0
 2715 000c 7B68     		ldr	r3, [r7, #4]
 2716 000e 1B68     		ldr	r3, [r3]
 2717 0010 1846     		mov	r0, r3
 2718 0012 FFF7FEFF 		bl	__aeabi_i2f
 2719 0016 0446     		mov	r4, r0
 2720 0018 7B68     		ldr	r3, [r7, #4]
 2721 001a 1B68     		ldr	r3, [r3]
 2722 001c 1846     		mov	r0, r3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 62


 2723 001e FFF7FEFF 		bl	__aeabi_i2f
 2724 0022 0346     		mov	r3, r0
 2725 0024 1946     		mov	r1, r3
 2726 0026 2046     		mov	r0, r4
 2727 0028 FFF7FEFF 		bl	__aeabi_fmul
 2728 002c 0346     		mov	r3, r0
 2729 002e 1C46     		mov	r4, r3
 2730 0030 7B68     		ldr	r3, [r7, #4]
 2731 0032 5B68     		ldr	r3, [r3, #4]
 2732 0034 1846     		mov	r0, r3
 2733 0036 FFF7FEFF 		bl	__aeabi_i2f
 2734 003a 0546     		mov	r5, r0
 2735 003c 7B68     		ldr	r3, [r7, #4]
 2736 003e 5B68     		ldr	r3, [r3, #4]
 2737 0040 1846     		mov	r0, r3
 2738 0042 FFF7FEFF 		bl	__aeabi_i2f
 2739 0046 0346     		mov	r3, r0
 2740 0048 1946     		mov	r1, r3
 2741 004a 2846     		mov	r0, r5
 2742 004c FFF7FEFF 		bl	__aeabi_fmul
 2743 0050 0346     		mov	r3, r0
 2744 0052 1946     		mov	r1, r3
 2745 0054 2046     		mov	r0, r4
 2746 0056 FFF7FEFF 		bl	__aeabi_fadd
 2747 005a 0346     		mov	r3, r0
 2748 005c FB61     		str	r3, [r7, #28]	@ float
 732:ad5940.c      ****   res.Real = (float)a->Real*b->Real + (float)a->Image*b->Image;
 2749              		.loc 1 732 0
 2750 005e BB68     		ldr	r3, [r7, #8]
 2751 0060 1B68     		ldr	r3, [r3]
 2752 0062 1846     		mov	r0, r3
 2753 0064 FFF7FEFF 		bl	__aeabi_i2f
 2754 0068 0446     		mov	r4, r0
 2755 006a 7B68     		ldr	r3, [r7, #4]
 2756 006c 1B68     		ldr	r3, [r3]
 2757 006e 1846     		mov	r0, r3
 2758 0070 FFF7FEFF 		bl	__aeabi_i2f
 2759 0074 0346     		mov	r3, r0
 2760 0076 1946     		mov	r1, r3
 2761 0078 2046     		mov	r0, r4
 2762 007a FFF7FEFF 		bl	__aeabi_fmul
 2763 007e 0346     		mov	r3, r0
 2764 0080 1C46     		mov	r4, r3
 2765 0082 BB68     		ldr	r3, [r7, #8]
 2766 0084 5B68     		ldr	r3, [r3, #4]
 2767 0086 1846     		mov	r0, r3
 2768 0088 FFF7FEFF 		bl	__aeabi_i2f
 2769 008c 0546     		mov	r5, r0
 2770 008e 7B68     		ldr	r3, [r7, #4]
 2771 0090 5B68     		ldr	r3, [r3, #4]
 2772 0092 1846     		mov	r0, r3
 2773 0094 FFF7FEFF 		bl	__aeabi_i2f
 2774 0098 0346     		mov	r3, r0
 2775 009a 1946     		mov	r1, r3
 2776 009c 2846     		mov	r0, r5
 2777 009e FFF7FEFF 		bl	__aeabi_fmul
 2778 00a2 0346     		mov	r3, r0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 63


 2779 00a4 1946     		mov	r1, r3
 2780 00a6 2046     		mov	r0, r4
 2781 00a8 FFF7FEFF 		bl	__aeabi_fadd
 2782 00ac 0346     		mov	r3, r0
 2783 00ae 7B61     		str	r3, [r7, #20]	@ float
 733:ad5940.c      ****   res.Real /= temp;
 2784              		.loc 1 733 0
 2785 00b0 7B69     		ldr	r3, [r7, #20]	@ float
 2786 00b2 F969     		ldr	r1, [r7, #28]	@ float
 2787 00b4 1846     		mov	r0, r3
 2788 00b6 FFF7FEFF 		bl	__aeabi_fdiv
 2789 00ba 0346     		mov	r3, r0
 2790 00bc 7B61     		str	r3, [r7, #20]	@ float
 734:ad5940.c      ****   res.Image = (float)a->Image*b->Real - (float)a->Real*b->Image;
 2791              		.loc 1 734 0
 2792 00be BB68     		ldr	r3, [r7, #8]
 2793 00c0 5B68     		ldr	r3, [r3, #4]
 2794 00c2 1846     		mov	r0, r3
 2795 00c4 FFF7FEFF 		bl	__aeabi_i2f
 2796 00c8 0446     		mov	r4, r0
 2797 00ca 7B68     		ldr	r3, [r7, #4]
 2798 00cc 1B68     		ldr	r3, [r3]
 2799 00ce 1846     		mov	r0, r3
 2800 00d0 FFF7FEFF 		bl	__aeabi_i2f
 2801 00d4 0346     		mov	r3, r0
 2802 00d6 1946     		mov	r1, r3
 2803 00d8 2046     		mov	r0, r4
 2804 00da FFF7FEFF 		bl	__aeabi_fmul
 2805 00de 0346     		mov	r3, r0
 2806 00e0 1C46     		mov	r4, r3
 2807 00e2 BB68     		ldr	r3, [r7, #8]
 2808 00e4 1B68     		ldr	r3, [r3]
 2809 00e6 1846     		mov	r0, r3
 2810 00e8 FFF7FEFF 		bl	__aeabi_i2f
 2811 00ec 0546     		mov	r5, r0
 2812 00ee 7B68     		ldr	r3, [r7, #4]
 2813 00f0 5B68     		ldr	r3, [r3, #4]
 2814 00f2 1846     		mov	r0, r3
 2815 00f4 FFF7FEFF 		bl	__aeabi_i2f
 2816 00f8 0346     		mov	r3, r0
 2817 00fa 1946     		mov	r1, r3
 2818 00fc 2846     		mov	r0, r5
 2819 00fe FFF7FEFF 		bl	__aeabi_fmul
 2820 0102 0346     		mov	r3, r0
 2821 0104 1946     		mov	r1, r3
 2822 0106 2046     		mov	r0, r4
 2823 0108 FFF7FEFF 		bl	__aeabi_fsub
 2824 010c 0346     		mov	r3, r0
 2825 010e BB61     		str	r3, [r7, #24]	@ float
 735:ad5940.c      ****   res.Image /= temp;
 2826              		.loc 1 735 0
 2827 0110 BB69     		ldr	r3, [r7, #24]	@ float
 2828 0112 F969     		ldr	r1, [r7, #28]	@ float
 2829 0114 1846     		mov	r0, r3
 2830 0116 FFF7FEFF 		bl	__aeabi_fdiv
 2831 011a 0346     		mov	r3, r0
 2832 011c BB61     		str	r3, [r7, #24]	@ float
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 64


 736:ad5940.c      ****   return res;
 2833              		.loc 1 736 0
 2834 011e FB68     		ldr	r3, [r7, #12]
 2835 0120 1A46     		mov	r2, r3
 2836 0122 07F11403 		add	r3, r7, #20
 2837 0126 93E80300 		ldmia	r3, {r0, r1}
 2838 012a 82E80300 		stmia	r2, {r0, r1}
 737:ad5940.c      **** }
 2839              		.loc 1 737 0
 2840 012e F868     		ldr	r0, [r7, #12]
 2841 0130 2037     		adds	r7, r7, #32
 2842              		.cfi_def_cfa_offset 16
 2843 0132 BD46     		mov	sp, r7
 2844              		.cfi_def_cfa_register 13
 2845              		@ sp needed
 2846 0134 B0BD     		pop	{r4, r5, r7, pc}
 2847              		.cfi_endproc
 2848              	.LFE22:
 2849              		.size	AD5940_ComplexDivInt, .-AD5940_ComplexDivInt
 2850 0136 00BF     		.section	.text.AD5940_ComplexMulInt,"ax",%progbits
 2851              		.align	2
 2852              		.global	AD5940_ComplexMulInt
 2853              		.thumb
 2854              		.thumb_func
 2855              		.type	AD5940_ComplexMulInt, %function
 2856              	AD5940_ComplexMulInt:
 2857              	.LFB23:
 738:ad5940.c      **** 
 739:ad5940.c      **** /**
 740:ad5940.c      ****  * @brief Do complex number multiplication.
 741:ad5940.c      ****  * @param a: The multiplicand.
 742:ad5940.c      ****  * @param b: The multiplier .
 743:ad5940.c      ****  * @return Return result.
 744:ad5940.c      **** **/
 745:ad5940.c      **** fImpCar_Type AD5940_ComplexMulInt(iImpCar_Type *a, iImpCar_Type *b)
 746:ad5940.c      **** {
 2858              		.loc 1 746 0
 2859              		.cfi_startproc
 2860              		@ args = 0, pretend = 0, frame = 24
 2861              		@ frame_needed = 1, uses_anonymous_args = 0
 2862 0000 B0B5     		push	{r4, r5, r7, lr}
 2863              		.cfi_def_cfa_offset 16
 2864              		.cfi_offset 4, -16
 2865              		.cfi_offset 5, -12
 2866              		.cfi_offset 7, -8
 2867              		.cfi_offset 14, -4
 2868 0002 86B0     		sub	sp, sp, #24
 2869              		.cfi_def_cfa_offset 40
 2870 0004 00AF     		add	r7, sp, #0
 2871              		.cfi_def_cfa_register 7
 2872 0006 F860     		str	r0, [r7, #12]
 2873 0008 B960     		str	r1, [r7, #8]
 2874 000a 7A60     		str	r2, [r7, #4]
 747:ad5940.c      ****   fImpCar_Type res;
 748:ad5940.c      ****   
 749:ad5940.c      ****   res.Real = (float)a->Real*b->Real - (float)a->Image*b->Image;
 2875              		.loc 1 749 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 65


 2876 000c BB68     		ldr	r3, [r7, #8]
 2877 000e 1B68     		ldr	r3, [r3]
 2878 0010 1846     		mov	r0, r3
 2879 0012 FFF7FEFF 		bl	__aeabi_i2f
 2880 0016 0446     		mov	r4, r0
 2881 0018 7B68     		ldr	r3, [r7, #4]
 2882 001a 1B68     		ldr	r3, [r3]
 2883 001c 1846     		mov	r0, r3
 2884 001e FFF7FEFF 		bl	__aeabi_i2f
 2885 0022 0346     		mov	r3, r0
 2886 0024 1946     		mov	r1, r3
 2887 0026 2046     		mov	r0, r4
 2888 0028 FFF7FEFF 		bl	__aeabi_fmul
 2889 002c 0346     		mov	r3, r0
 2890 002e 1C46     		mov	r4, r3
 2891 0030 BB68     		ldr	r3, [r7, #8]
 2892 0032 5B68     		ldr	r3, [r3, #4]
 2893 0034 1846     		mov	r0, r3
 2894 0036 FFF7FEFF 		bl	__aeabi_i2f
 2895 003a 0546     		mov	r5, r0
 2896 003c 7B68     		ldr	r3, [r7, #4]
 2897 003e 5B68     		ldr	r3, [r3, #4]
 2898 0040 1846     		mov	r0, r3
 2899 0042 FFF7FEFF 		bl	__aeabi_i2f
 2900 0046 0346     		mov	r3, r0
 2901 0048 1946     		mov	r1, r3
 2902 004a 2846     		mov	r0, r5
 2903 004c FFF7FEFF 		bl	__aeabi_fmul
 2904 0050 0346     		mov	r3, r0
 2905 0052 1946     		mov	r1, r3
 2906 0054 2046     		mov	r0, r4
 2907 0056 FFF7FEFF 		bl	__aeabi_fsub
 2908 005a 0346     		mov	r3, r0
 2909 005c 3B61     		str	r3, [r7, #16]	@ float
 750:ad5940.c      ****   res.Image = (float)a->Image*b->Real + (float)a->Real*b->Image;
 2910              		.loc 1 750 0
 2911 005e BB68     		ldr	r3, [r7, #8]
 2912 0060 5B68     		ldr	r3, [r3, #4]
 2913 0062 1846     		mov	r0, r3
 2914 0064 FFF7FEFF 		bl	__aeabi_i2f
 2915 0068 0446     		mov	r4, r0
 2916 006a 7B68     		ldr	r3, [r7, #4]
 2917 006c 1B68     		ldr	r3, [r3]
 2918 006e 1846     		mov	r0, r3
 2919 0070 FFF7FEFF 		bl	__aeabi_i2f
 2920 0074 0346     		mov	r3, r0
 2921 0076 1946     		mov	r1, r3
 2922 0078 2046     		mov	r0, r4
 2923 007a FFF7FEFF 		bl	__aeabi_fmul
 2924 007e 0346     		mov	r3, r0
 2925 0080 1C46     		mov	r4, r3
 2926 0082 BB68     		ldr	r3, [r7, #8]
 2927 0084 1B68     		ldr	r3, [r3]
 2928 0086 1846     		mov	r0, r3
 2929 0088 FFF7FEFF 		bl	__aeabi_i2f
 2930 008c 0546     		mov	r5, r0
 2931 008e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 66


 2932 0090 5B68     		ldr	r3, [r3, #4]
 2933 0092 1846     		mov	r0, r3
 2934 0094 FFF7FEFF 		bl	__aeabi_i2f
 2935 0098 0346     		mov	r3, r0
 2936 009a 1946     		mov	r1, r3
 2937 009c 2846     		mov	r0, r5
 2938 009e FFF7FEFF 		bl	__aeabi_fmul
 2939 00a2 0346     		mov	r3, r0
 2940 00a4 1946     		mov	r1, r3
 2941 00a6 2046     		mov	r0, r4
 2942 00a8 FFF7FEFF 		bl	__aeabi_fadd
 2943 00ac 0346     		mov	r3, r0
 2944 00ae 7B61     		str	r3, [r7, #20]	@ float
 751:ad5940.c      **** 
 752:ad5940.c      ****   return res;
 2945              		.loc 1 752 0
 2946 00b0 FB68     		ldr	r3, [r7, #12]
 2947 00b2 1A46     		mov	r2, r3
 2948 00b4 07F11003 		add	r3, r7, #16
 2949 00b8 93E80300 		ldmia	r3, {r0, r1}
 2950 00bc 82E80300 		stmia	r2, {r0, r1}
 753:ad5940.c      **** }
 2951              		.loc 1 753 0
 2952 00c0 F868     		ldr	r0, [r7, #12]
 2953 00c2 1837     		adds	r7, r7, #24
 2954              		.cfi_def_cfa_offset 16
 2955 00c4 BD46     		mov	sp, r7
 2956              		.cfi_def_cfa_register 13
 2957              		@ sp needed
 2958 00c6 B0BD     		pop	{r4, r5, r7, pc}
 2959              		.cfi_endproc
 2960              	.LFE23:
 2961              		.size	AD5940_ComplexMulInt, .-AD5940_ComplexMulInt
 2962              		.section	.text.AD5940_ComplexMag,"ax",%progbits
 2963              		.align	2
 2964              		.global	AD5940_ComplexMag
 2965              		.thumb
 2966              		.thumb_func
 2967              		.type	AD5940_ComplexMag, %function
 2968              	AD5940_ComplexMag:
 2969              	.LFB24:
 754:ad5940.c      **** 
 755:ad5940.c      **** /**
 756:ad5940.c      ****  * @brief Calculate the complex number magnitude.
 757:ad5940.c      ****  * @param a: The complex number.
 758:ad5940.c      ****  * @return Return magnitude.
 759:ad5940.c      **** **/
 760:ad5940.c      **** float AD5940_ComplexMag(fImpCar_Type *a)
 761:ad5940.c      **** {
 2970              		.loc 1 761 0
 2971              		.cfi_startproc
 2972              		@ args = 0, pretend = 0, frame = 8
 2973              		@ frame_needed = 1, uses_anonymous_args = 0
 2974 0000 90B5     		push	{r4, r7, lr}
 2975              		.cfi_def_cfa_offset 12
 2976              		.cfi_offset 4, -12
 2977              		.cfi_offset 7, -8
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 67


 2978              		.cfi_offset 14, -4
 2979 0002 83B0     		sub	sp, sp, #12
 2980              		.cfi_def_cfa_offset 24
 2981 0004 00AF     		add	r7, sp, #0
 2982              		.cfi_def_cfa_register 7
 2983 0006 7860     		str	r0, [r7, #4]
 762:ad5940.c      ****   return sqrt(a->Real*a->Real + a->Image*a->Image);
 2984              		.loc 1 762 0
 2985 0008 7B68     		ldr	r3, [r7, #4]
 2986 000a 1A68     		ldr	r2, [r3]	@ float
 2987 000c 7B68     		ldr	r3, [r7, #4]
 2988 000e 1B68     		ldr	r3, [r3]	@ float
 2989 0010 1946     		mov	r1, r3
 2990 0012 1046     		mov	r0, r2
 2991 0014 FFF7FEFF 		bl	__aeabi_fmul
 2992 0018 0346     		mov	r3, r0
 2993 001a 1C46     		mov	r4, r3
 2994 001c 7B68     		ldr	r3, [r7, #4]
 2995 001e 5A68     		ldr	r2, [r3, #4]	@ float
 2996 0020 7B68     		ldr	r3, [r7, #4]
 2997 0022 5B68     		ldr	r3, [r3, #4]	@ float
 2998 0024 1946     		mov	r1, r3
 2999 0026 1046     		mov	r0, r2
 3000 0028 FFF7FEFF 		bl	__aeabi_fmul
 3001 002c 0346     		mov	r3, r0
 3002 002e 1946     		mov	r1, r3
 3003 0030 2046     		mov	r0, r4
 3004 0032 FFF7FEFF 		bl	__aeabi_fadd
 3005 0036 0346     		mov	r3, r0
 3006 0038 1846     		mov	r0, r3
 3007 003a FFF7FEFF 		bl	__aeabi_f2d
 3008 003e 0346     		mov	r3, r0
 3009 0040 0C46     		mov	r4, r1
 3010 0042 1846     		mov	r0, r3
 3011 0044 2146     		mov	r1, r4
 3012 0046 FFF7FEFF 		bl	sqrt
 3013 004a 0346     		mov	r3, r0
 3014 004c 0C46     		mov	r4, r1
 3015 004e 1846     		mov	r0, r3
 3016 0050 2146     		mov	r1, r4
 3017 0052 FFF7FEFF 		bl	__aeabi_d2f
 3018 0056 0346     		mov	r3, r0
 763:ad5940.c      **** }
 3019              		.loc 1 763 0
 3020 0058 1846     		mov	r0, r3
 3021 005a 0C37     		adds	r7, r7, #12
 3022              		.cfi_def_cfa_offset 12
 3023 005c BD46     		mov	sp, r7
 3024              		.cfi_def_cfa_register 13
 3025              		@ sp needed
 3026 005e 90BD     		pop	{r4, r7, pc}
 3027              		.cfi_endproc
 3028              	.LFE24:
 3029              		.size	AD5940_ComplexMag, .-AD5940_ComplexMag
 3030              		.section	.text.AD5940_ComplexPhase,"ax",%progbits
 3031              		.align	2
 3032              		.global	AD5940_ComplexPhase
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 68


 3033              		.thumb
 3034              		.thumb_func
 3035              		.type	AD5940_ComplexPhase, %function
 3036              	AD5940_ComplexPhase:
 3037              	.LFB25:
 764:ad5940.c      **** 
 765:ad5940.c      **** /**
 766:ad5940.c      ****  * @brief Calculate the complex number phase.
 767:ad5940.c      ****  * @param a: The complex number.
 768:ad5940.c      ****  * @return Return phase.
 769:ad5940.c      **** **/
 770:ad5940.c      **** float AD5940_ComplexPhase(fImpCar_Type *a)
 771:ad5940.c      **** {
 3038              		.loc 1 771 0
 3039              		.cfi_startproc
 3040              		@ args = 0, pretend = 0, frame = 8
 3041              		@ frame_needed = 1, uses_anonymous_args = 0
 3042 0000 B0B5     		push	{r4, r5, r7, lr}
 3043              		.cfi_def_cfa_offset 16
 3044              		.cfi_offset 4, -16
 3045              		.cfi_offset 5, -12
 3046              		.cfi_offset 7, -8
 3047              		.cfi_offset 14, -4
 3048 0002 82B0     		sub	sp, sp, #8
 3049              		.cfi_def_cfa_offset 24
 3050 0004 00AF     		add	r7, sp, #0
 3051              		.cfi_def_cfa_register 7
 3052 0006 7860     		str	r0, [r7, #4]
 772:ad5940.c      ****   return atan2(a->Image, a->Real);
 3053              		.loc 1 772 0
 3054 0008 7B68     		ldr	r3, [r7, #4]
 3055 000a 5B68     		ldr	r3, [r3, #4]	@ float
 3056 000c 1846     		mov	r0, r3
 3057 000e FFF7FEFF 		bl	__aeabi_f2d
 3058 0012 0446     		mov	r4, r0
 3059 0014 0D46     		mov	r5, r1
 3060 0016 7B68     		ldr	r3, [r7, #4]
 3061 0018 1B68     		ldr	r3, [r3]	@ float
 3062 001a 1846     		mov	r0, r3
 3063 001c FFF7FEFF 		bl	__aeabi_f2d
 3064 0020 0246     		mov	r2, r0
 3065 0022 0B46     		mov	r3, r1
 3066 0024 2046     		mov	r0, r4
 3067 0026 2946     		mov	r1, r5
 3068 0028 FFF7FEFF 		bl	atan2
 3069 002c 0346     		mov	r3, r0
 3070 002e 0C46     		mov	r4, r1
 3071 0030 1846     		mov	r0, r3
 3072 0032 2146     		mov	r1, r4
 3073 0034 FFF7FEFF 		bl	__aeabi_d2f
 3074 0038 0346     		mov	r3, r0
 773:ad5940.c      **** }
 3075              		.loc 1 773 0
 3076 003a 1846     		mov	r0, r3
 3077 003c 0837     		adds	r7, r7, #8
 3078              		.cfi_def_cfa_offset 16
 3079 003e BD46     		mov	sp, r7
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 69


 3080              		.cfi_def_cfa_register 13
 3081              		@ sp needed
 3082 0040 B0BD     		pop	{r4, r5, r7, pc}
 3083              		.cfi_endproc
 3084              	.LFE25:
 3085              		.size	AD5940_ComplexPhase, .-AD5940_ComplexPhase
 3086 0042 00BF     		.section	.text.AD5940_ReadWrite8B,"ax",%progbits
 3087              		.align	2
 3088              		.thumb
 3089              		.thumb_func
 3090              		.type	AD5940_ReadWrite8B, %function
 3091              	AD5940_ReadWrite8B:
 3092              	.LFB26:
 774:ad5940.c      **** 
 775:ad5940.c      **** /**
 776:ad5940.c      ****  * @} Function_Helpers
 777:ad5940.c      **** */
 778:ad5940.c      **** 
 779:ad5940.c      **** #ifdef CHIPSEL_M355
 780:ad5940.c      **** static void AD5940_D2DWriteReg(uint16_t RegAddr, uint32_t RegData)
 781:ad5940.c      **** {
 782:ad5940.c      ****   if(((RegAddr>=0x1000)&&(RegAddr<=0x3014)))  /* 32bit register */
 783:ad5940.c      ****     *(volatile uint32_t *)(RegAddr+0x400c0000) = RegData;
 784:ad5940.c      ****   else                                        /* 16bit register */
 785:ad5940.c      ****     *(volatile uint16_t *)(RegAddr+0x400c0000) = RegData;
 786:ad5940.c      **** }
 787:ad5940.c      **** 
 788:ad5940.c      **** static uint32_t AD5940_D2DReadReg(uint16_t RegAddr)
 789:ad5940.c      **** {
 790:ad5940.c      ****   if(((RegAddr>=0x1000)&&(RegAddr<=0x3014)))  /* 32bit register */
 791:ad5940.c      ****     return *(volatile uint32_t *)(RegAddr+0x400c0000);
 792:ad5940.c      ****   else                                        /* 16bit register */
 793:ad5940.c      ****     return *(volatile uint16_t *)(RegAddr+0x400c0000);
 794:ad5940.c      **** }
 795:ad5940.c      **** 
 796:ad5940.c      **** void AD5940_FIFORd(uint32_t *pBuffer, uint32_t uiReadCount)   
 797:ad5940.c      **** {
 798:ad5940.c      ****   while(uiReadCount--)
 799:ad5940.c      ****     *pBuffer++ = *(volatile uint32_t *)(0x400c206C);
 800:ad5940.c      **** }
 801:ad5940.c      **** #else
 802:ad5940.c      **** /**
 803:ad5940.c      ****  * @defgroup SPI_Block
 804:ad5940.c      ****  * @brief Functions to communicate with AD5940 registers following AD5940 SPI protocols
 805:ad5940.c      ****  * @{
 806:ad5940.c      ****  * 
 807:ad5940.c      ****  * @defgroup SPI_Block_Functions
 808:ad5940.c      ****  * @brief The basic SPI protocols. All functions are basic on AD5940_ReadWriteNBytes which
 809:ad5940.c      ****  *        provided by user.
 810:ad5940.c      ****  *        
 811:ad5940.c      ****  *  ##SPI basic protocol
 812:ad5940.c      ****  *        All SPI protocol starts with one-byte command word. Following are data(16B or 32B)
 813:ad5940.c      ****  *        There are four SPI commands available @ref SPI_Block_Const.
 814:ad5940.c      ****  * @{
 815:ad5940.c      **** */
 816:ad5940.c      **** 
 817:ad5940.c      **** /**
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 70


 818:ad5940.c      ****   @brief Using SPI to transmit one byte and return the received byte. 
 819:ad5940.c      ****   @param data: The 8-bit data SPI will transmit.
 820:ad5940.c      ****   @return received data.
 821:ad5940.c      **** **/
 822:ad5940.c      **** static unsigned char AD5940_ReadWrite8B(unsigned char data)
 823:ad5940.c      **** {
 3093              		.loc 1 823 0
 3094              		.cfi_startproc
 3095              		@ args = 0, pretend = 0, frame = 16
 3096              		@ frame_needed = 1, uses_anonymous_args = 0
 3097 0000 80B5     		push	{r7, lr}
 3098              		.cfi_def_cfa_offset 8
 3099              		.cfi_offset 7, -8
 3100              		.cfi_offset 14, -4
 3101 0002 84B0     		sub	sp, sp, #16
 3102              		.cfi_def_cfa_offset 24
 3103 0004 00AF     		add	r7, sp, #0
 3104              		.cfi_def_cfa_register 7
 3105 0006 0346     		mov	r3, r0
 3106 0008 FB71     		strb	r3, [r7, #7]
 824:ad5940.c      ****    uint8_t tx[1], rx[1];
 825:ad5940.c      ****    tx[0] = data;
 3107              		.loc 1 825 0
 3108 000a FB79     		ldrb	r3, [r7, #7]
 3109 000c 3B73     		strb	r3, [r7, #12]
 826:ad5940.c      ****    AD5940_ReadWriteNBytes(tx,rx,1);
 3110              		.loc 1 826 0
 3111 000e 07F10801 		add	r1, r7, #8
 3112 0012 07F10C03 		add	r3, r7, #12
 3113 0016 0122     		movs	r2, #1
 3114 0018 1846     		mov	r0, r3
 3115 001a FFF7FEFF 		bl	AD5940_ReadWriteNBytes
 827:ad5940.c      ****    return rx[0];
 3116              		.loc 1 827 0
 3117 001e 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 828:ad5940.c      **** }
 3118              		.loc 1 828 0
 3119 0020 1846     		mov	r0, r3
 3120 0022 1037     		adds	r7, r7, #16
 3121              		.cfi_def_cfa_offset 8
 3122 0024 BD46     		mov	sp, r7
 3123              		.cfi_def_cfa_register 13
 3124              		@ sp needed
 3125 0026 80BD     		pop	{r7, pc}
 3126              		.cfi_endproc
 3127              	.LFE26:
 3128              		.size	AD5940_ReadWrite8B, .-AD5940_ReadWrite8B
 3129              		.section	.text.AD5940_ReadWrite16B,"ax",%progbits
 3130              		.align	2
 3131              		.thumb
 3132              		.thumb_func
 3133              		.type	AD5940_ReadWrite16B, %function
 3134              	AD5940_ReadWrite16B:
 3135              	.LFB27:
 829:ad5940.c      **** 
 830:ad5940.c      **** /**
 831:ad5940.c      ****   @brief Using SPI to transmit two bytes and return the received bytes. 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 71


 832:ad5940.c      ****   @param data: The 16-bit data SPI will transmit.
 833:ad5940.c      ****   @return received data.
 834:ad5940.c      **** **/
 835:ad5940.c      **** static uint16_t AD5940_ReadWrite16B(uint16_t data)
 836:ad5940.c      **** {
 3136              		.loc 1 836 0
 3137              		.cfi_startproc
 3138              		@ args = 0, pretend = 0, frame = 16
 3139              		@ frame_needed = 1, uses_anonymous_args = 0
 3140 0000 80B5     		push	{r7, lr}
 3141              		.cfi_def_cfa_offset 8
 3142              		.cfi_offset 7, -8
 3143              		.cfi_offset 14, -4
 3144 0002 84B0     		sub	sp, sp, #16
 3145              		.cfi_def_cfa_offset 24
 3146 0004 00AF     		add	r7, sp, #0
 3147              		.cfi_def_cfa_register 7
 3148 0006 0346     		mov	r3, r0
 3149 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 837:ad5940.c      ****    uint8_t SendBuffer[2];
 838:ad5940.c      ****    uint8_t RecvBuffer[2];
 839:ad5940.c      ****    SendBuffer[0] = data>>8;
 3150              		.loc 1 839 0
 3151 000a FB88     		ldrh	r3, [r7, #6]
 3152 000c 1B0A     		lsrs	r3, r3, #8
 3153 000e 9BB2     		uxth	r3, r3
 3154 0010 DBB2     		uxtb	r3, r3
 3155 0012 3B73     		strb	r3, [r7, #12]
 840:ad5940.c      ****    SendBuffer[1] = data&0xff;
 3156              		.loc 1 840 0
 3157 0014 FB88     		ldrh	r3, [r7, #6]	@ movhi
 3158 0016 DBB2     		uxtb	r3, r3
 3159 0018 7B73     		strb	r3, [r7, #13]
 841:ad5940.c      ****    AD5940_ReadWriteNBytes(SendBuffer,RecvBuffer,2);
 3160              		.loc 1 841 0
 3161 001a 07F10801 		add	r1, r7, #8
 3162 001e 07F10C03 		add	r3, r7, #12
 3163 0022 0222     		movs	r2, #2
 3164 0024 1846     		mov	r0, r3
 3165 0026 FFF7FEFF 		bl	AD5940_ReadWriteNBytes
 842:ad5940.c      ****    return (((uint16_t)RecvBuffer[0])<<8)|RecvBuffer[1];
 3166              		.loc 1 842 0
 3167 002a 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 3168 002c 1B02     		lsls	r3, r3, #8
 3169 002e 1AB2     		sxth	r2, r3
 3170 0030 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 3171 0032 1BB2     		sxth	r3, r3
 3172 0034 1343     		orrs	r3, r3, r2
 3173 0036 1BB2     		sxth	r3, r3
 3174 0038 9BB2     		uxth	r3, r3
 843:ad5940.c      **** }
 3175              		.loc 1 843 0
 3176 003a 1846     		mov	r0, r3
 3177 003c 1037     		adds	r7, r7, #16
 3178              		.cfi_def_cfa_offset 8
 3179 003e BD46     		mov	sp, r7
 3180              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 72


 3181              		@ sp needed
 3182 0040 80BD     		pop	{r7, pc}
 3183              		.cfi_endproc
 3184              	.LFE27:
 3185              		.size	AD5940_ReadWrite16B, .-AD5940_ReadWrite16B
 3186 0042 00BF     		.section	.text.AD5940_ReadWrite32B,"ax",%progbits
 3187              		.align	2
 3188              		.thumb
 3189              		.thumb_func
 3190              		.type	AD5940_ReadWrite32B, %function
 3191              	AD5940_ReadWrite32B:
 3192              	.LFB28:
 844:ad5940.c      **** 
 845:ad5940.c      **** /**
 846:ad5940.c      ****  * @brief Using SPI to transmit four bytes and return the received bytes. 
 847:ad5940.c      ****  * @param data: The 32-bit data SPI will transmit.
 848:ad5940.c      ****  * @return received data.
 849:ad5940.c      **** **/
 850:ad5940.c      **** static uint32_t AD5940_ReadWrite32B(uint32_t data)
 851:ad5940.c      **** {
 3193              		.loc 1 851 0
 3194              		.cfi_startproc
 3195              		@ args = 0, pretend = 0, frame = 16
 3196              		@ frame_needed = 1, uses_anonymous_args = 0
 3197 0000 80B5     		push	{r7, lr}
 3198              		.cfi_def_cfa_offset 8
 3199              		.cfi_offset 7, -8
 3200              		.cfi_offset 14, -4
 3201 0002 84B0     		sub	sp, sp, #16
 3202              		.cfi_def_cfa_offset 24
 3203 0004 00AF     		add	r7, sp, #0
 3204              		.cfi_def_cfa_register 7
 3205 0006 7860     		str	r0, [r7, #4]
 852:ad5940.c      ****    uint8_t SendBuffer[4];
 853:ad5940.c      ****    uint8_t RecvBuffer[4];
 854:ad5940.c      ****   
 855:ad5940.c      ****    SendBuffer[0] = (data>>24)&0xff;
 3206              		.loc 1 855 0
 3207 0008 7B68     		ldr	r3, [r7, #4]
 3208 000a 1B0E     		lsrs	r3, r3, #24
 3209 000c DBB2     		uxtb	r3, r3
 3210 000e 3B73     		strb	r3, [r7, #12]
 856:ad5940.c      ****    SendBuffer[1] = (data>>16)&0xff;
 3211              		.loc 1 856 0
 3212 0010 7B68     		ldr	r3, [r7, #4]
 3213 0012 1B0C     		lsrs	r3, r3, #16
 3214 0014 DBB2     		uxtb	r3, r3
 3215 0016 7B73     		strb	r3, [r7, #13]
 857:ad5940.c      ****    SendBuffer[2] = (data>> 8)&0xff;
 3216              		.loc 1 857 0
 3217 0018 7B68     		ldr	r3, [r7, #4]
 3218 001a 1B0A     		lsrs	r3, r3, #8
 3219 001c DBB2     		uxtb	r3, r3
 3220 001e BB73     		strb	r3, [r7, #14]
 858:ad5940.c      ****    SendBuffer[3] = (data    )&0xff;
 3221              		.loc 1 858 0
 3222 0020 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 73


 3223 0022 DBB2     		uxtb	r3, r3
 3224 0024 FB73     		strb	r3, [r7, #15]
 859:ad5940.c      ****    AD5940_ReadWriteNBytes(SendBuffer,RecvBuffer,4);
 3225              		.loc 1 859 0
 3226 0026 07F10801 		add	r1, r7, #8
 3227 002a 07F10C03 		add	r3, r7, #12
 3228 002e 0422     		movs	r2, #4
 3229 0030 1846     		mov	r0, r3
 3230 0032 FFF7FEFF 		bl	AD5940_ReadWriteNBytes
 860:ad5940.c      ****    return (((uint32_t)RecvBuffer[0])<<24)|(((uint32_t)RecvBuffer[1])<<16)|(((uint32_t)RecvBuffer[2]
 3231              		.loc 1 860 0
 3232 0036 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 3233 0038 1A06     		lsls	r2, r3, #24
 3234 003a 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 3235 003c 1B04     		lsls	r3, r3, #16
 3236 003e 1A43     		orrs	r2, r2, r3
 3237 0040 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3238 0042 1B02     		lsls	r3, r3, #8
 3239 0044 1343     		orrs	r3, r3, r2
 3240 0046 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 3241 0048 1343     		orrs	r3, r3, r2
 861:ad5940.c      **** }
 3242              		.loc 1 861 0
 3243 004a 1846     		mov	r0, r3
 3244 004c 1037     		adds	r7, r7, #16
 3245              		.cfi_def_cfa_offset 8
 3246 004e BD46     		mov	sp, r7
 3247              		.cfi_def_cfa_register 13
 3248              		@ sp needed
 3249 0050 80BD     		pop	{r7, pc}
 3250              		.cfi_endproc
 3251              	.LFE28:
 3252              		.size	AD5940_ReadWrite32B, .-AD5940_ReadWrite32B
 3253 0052 00BF     		.section	.text.AD5940_SPIWriteReg,"ax",%progbits
 3254              		.align	2
 3255              		.thumb
 3256              		.thumb_func
 3257              		.type	AD5940_SPIWriteReg, %function
 3258              	AD5940_SPIWriteReg:
 3259              	.LFB29:
 862:ad5940.c      **** 
 863:ad5940.c      **** /**
 864:ad5940.c      ****  * @brief Write register through SPI.
 865:ad5940.c      ****  * @param RegAddr: The register address.
 866:ad5940.c      ****  * @param RegData: The register data.
 867:ad5940.c      ****  * @return Return None.
 868:ad5940.c      **** **/
 869:ad5940.c      **** static void AD5940_SPIWriteReg(uint16_t RegAddr, uint32_t RegData)
 870:ad5940.c      **** {  
 3260              		.loc 1 870 0
 3261              		.cfi_startproc
 3262              		@ args = 0, pretend = 0, frame = 8
 3263              		@ frame_needed = 1, uses_anonymous_args = 0
 3264 0000 80B5     		push	{r7, lr}
 3265              		.cfi_def_cfa_offset 8
 3266              		.cfi_offset 7, -8
 3267              		.cfi_offset 14, -4
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 74


 3268 0002 82B0     		sub	sp, sp, #8
 3269              		.cfi_def_cfa_offset 16
 3270 0004 00AF     		add	r7, sp, #0
 3271              		.cfi_def_cfa_register 7
 3272 0006 0346     		mov	r3, r0
 3273 0008 3960     		str	r1, [r7]
 3274 000a FB80     		strh	r3, [r7, #6]	@ movhi
 871:ad5940.c      ****   /* Set register address */
 872:ad5940.c      ****   AD5940_CsClr();
 3275              		.loc 1 872 0
 3276 000c FFF7FEFF 		bl	AD5940_CsClr
 873:ad5940.c      ****   AD5940_ReadWrite8B(SPICMD_SETADDR);
 3277              		.loc 1 873 0
 3278 0010 2020     		movs	r0, #32
 3279 0012 FFF7FEFF 		bl	AD5940_ReadWrite8B
 874:ad5940.c      ****   AD5940_ReadWrite16B(RegAddr);
 3280              		.loc 1 874 0
 3281 0016 FB88     		ldrh	r3, [r7, #6]
 3282 0018 1846     		mov	r0, r3
 3283 001a FFF7FEFF 		bl	AD5940_ReadWrite16B
 875:ad5940.c      ****   AD5940_CsSet();
 3284              		.loc 1 875 0
 3285 001e FFF7FEFF 		bl	AD5940_CsSet
 876:ad5940.c      ****   /* Add delay here to meet the SPI timing. */
 877:ad5940.c      ****   AD5940_CsClr();
 3286              		.loc 1 877 0
 3287 0022 FFF7FEFF 		bl	AD5940_CsClr
 878:ad5940.c      ****   AD5940_ReadWrite8B(SPICMD_WRITEREG);
 3288              		.loc 1 878 0
 3289 0026 2D20     		movs	r0, #45
 3290 0028 FFF7FEFF 		bl	AD5940_ReadWrite8B
 879:ad5940.c      ****   if(((RegAddr>=0x1000)&&(RegAddr<=0x3014)))
 3291              		.loc 1 879 0
 3292 002c FB88     		ldrh	r3, [r7, #6]
 3293 002e B3F5805F 		cmp	r3, #4096
 3294 0032 08D3     		bcc	.L186
 3295              		.loc 1 879 0 is_stmt 0 discriminator 1
 3296 0034 FB88     		ldrh	r3, [r7, #6]
 3297 0036 43F21402 		movw	r2, #12308
 3298 003a 9342     		cmp	r3, r2
 3299 003c 03D8     		bhi	.L186
 880:ad5940.c      ****     AD5940_ReadWrite32B(RegData);
 3300              		.loc 1 880 0 is_stmt 1
 3301 003e 3868     		ldr	r0, [r7]
 3302 0040 FFF7FEFF 		bl	AD5940_ReadWrite32B
 3303 0044 04E0     		b	.L187
 3304              	.L186:
 881:ad5940.c      ****   else
 882:ad5940.c      ****     AD5940_ReadWrite16B(RegData);
 3305              		.loc 1 882 0
 3306 0046 3B68     		ldr	r3, [r7]
 3307 0048 9BB2     		uxth	r3, r3
 3308 004a 1846     		mov	r0, r3
 3309 004c FFF7FEFF 		bl	AD5940_ReadWrite16B
 3310              	.L187:
 883:ad5940.c      ****   AD5940_CsSet();
 3311              		.loc 1 883 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 75


 3312 0050 FFF7FEFF 		bl	AD5940_CsSet
 884:ad5940.c      **** }
 3313              		.loc 1 884 0
 3314 0054 00BF     		nop
 3315 0056 0837     		adds	r7, r7, #8
 3316              		.cfi_def_cfa_offset 8
 3317 0058 BD46     		mov	sp, r7
 3318              		.cfi_def_cfa_register 13
 3319              		@ sp needed
 3320 005a 80BD     		pop	{r7, pc}
 3321              		.cfi_endproc
 3322              	.LFE29:
 3323              		.size	AD5940_SPIWriteReg, .-AD5940_SPIWriteReg
 3324              		.section	.text.AD5940_SPIReadReg,"ax",%progbits
 3325              		.align	2
 3326              		.thumb
 3327              		.thumb_func
 3328              		.type	AD5940_SPIReadReg, %function
 3329              	AD5940_SPIReadReg:
 3330              	.LFB30:
 885:ad5940.c      **** 
 886:ad5940.c      **** /**
 887:ad5940.c      ****  * @brief Read register through SPI.
 888:ad5940.c      ****  * @param RegAddr: The register address.
 889:ad5940.c      ****  * @return Return register data.
 890:ad5940.c      **** **/
 891:ad5940.c      **** static uint32_t AD5940_SPIReadReg(uint16_t RegAddr)
 892:ad5940.c      **** {  
 3331              		.loc 1 892 0
 3332              		.cfi_startproc
 3333              		@ args = 0, pretend = 0, frame = 16
 3334              		@ frame_needed = 1, uses_anonymous_args = 0
 3335 0000 80B5     		push	{r7, lr}
 3336              		.cfi_def_cfa_offset 8
 3337              		.cfi_offset 7, -8
 3338              		.cfi_offset 14, -4
 3339 0002 84B0     		sub	sp, sp, #16
 3340              		.cfi_def_cfa_offset 24
 3341 0004 00AF     		add	r7, sp, #0
 3342              		.cfi_def_cfa_register 7
 3343 0006 0346     		mov	r3, r0
 3344 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 893:ad5940.c      ****   uint32_t Data = 0;
 3345              		.loc 1 893 0
 3346 000a 0023     		movs	r3, #0
 3347 000c FB60     		str	r3, [r7, #12]
 894:ad5940.c      ****   /* Set register address that we want to read */
 895:ad5940.c      ****   AD5940_CsClr();
 3348              		.loc 1 895 0
 3349 000e FFF7FEFF 		bl	AD5940_CsClr
 896:ad5940.c      ****   AD5940_ReadWrite8B(SPICMD_SETADDR);
 3350              		.loc 1 896 0
 3351 0012 2020     		movs	r0, #32
 3352 0014 FFF7FEFF 		bl	AD5940_ReadWrite8B
 897:ad5940.c      ****   AD5940_ReadWrite16B(RegAddr);
 3353              		.loc 1 897 0
 3354 0018 FB88     		ldrh	r3, [r7, #6]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 76


 3355 001a 1846     		mov	r0, r3
 3356 001c FFF7FEFF 		bl	AD5940_ReadWrite16B
 898:ad5940.c      ****   AD5940_CsSet();
 3357              		.loc 1 898 0
 3358 0020 FFF7FEFF 		bl	AD5940_CsSet
 899:ad5940.c      ****   /* Read it */
 900:ad5940.c      ****   AD5940_CsClr();
 3359              		.loc 1 900 0
 3360 0024 FFF7FEFF 		bl	AD5940_CsClr
 901:ad5940.c      ****   AD5940_ReadWrite8B(SPICMD_READREG);
 3361              		.loc 1 901 0
 3362 0028 6D20     		movs	r0, #109
 3363 002a FFF7FEFF 		bl	AD5940_ReadWrite8B
 902:ad5940.c      ****   AD5940_ReadWrite8B(0);  //Dummy read
 3364              		.loc 1 902 0
 3365 002e 0020     		movs	r0, #0
 3366 0030 FFF7FEFF 		bl	AD5940_ReadWrite8B
 903:ad5940.c      ****   /* The real data is coming */
 904:ad5940.c      ****   if((RegAddr>=0x1000)&&(RegAddr<=0x3014))
 3367              		.loc 1 904 0
 3368 0034 FB88     		ldrh	r3, [r7, #6]
 3369 0036 B3F5805F 		cmp	r3, #4096
 3370 003a 09D3     		bcc	.L189
 3371              		.loc 1 904 0 is_stmt 0 discriminator 1
 3372 003c FB88     		ldrh	r3, [r7, #6]
 3373 003e 43F21402 		movw	r2, #12308
 3374 0042 9342     		cmp	r3, r2
 3375 0044 04D8     		bhi	.L189
 905:ad5940.c      ****     Data = AD5940_ReadWrite32B(0);
 3376              		.loc 1 905 0 is_stmt 1
 3377 0046 0020     		movs	r0, #0
 3378 0048 FFF7FEFF 		bl	AD5940_ReadWrite32B
 3379 004c F860     		str	r0, [r7, #12]
 3380 004e 04E0     		b	.L190
 3381              	.L189:
 906:ad5940.c      ****   else
 907:ad5940.c      ****     Data = AD5940_ReadWrite16B(0);
 3382              		.loc 1 907 0
 3383 0050 0020     		movs	r0, #0
 3384 0052 FFF7FEFF 		bl	AD5940_ReadWrite16B
 3385 0056 0346     		mov	r3, r0
 3386 0058 FB60     		str	r3, [r7, #12]
 3387              	.L190:
 908:ad5940.c      ****   AD5940_CsSet();
 3388              		.loc 1 908 0
 3389 005a FFF7FEFF 		bl	AD5940_CsSet
 909:ad5940.c      ****   return Data;
 3390              		.loc 1 909 0
 3391 005e FB68     		ldr	r3, [r7, #12]
 910:ad5940.c      **** }
 3392              		.loc 1 910 0
 3393 0060 1846     		mov	r0, r3
 3394 0062 1037     		adds	r7, r7, #16
 3395              		.cfi_def_cfa_offset 8
 3396 0064 BD46     		mov	sp, r7
 3397              		.cfi_def_cfa_register 13
 3398              		@ sp needed
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 77


 3399 0066 80BD     		pop	{r7, pc}
 3400              		.cfi_endproc
 3401              	.LFE30:
 3402              		.size	AD5940_SPIReadReg, .-AD5940_SPIReadReg
 3403              		.section	.text.AD5940_FIFORd,"ax",%progbits
 3404              		.align	2
 3405              		.global	AD5940_FIFORd
 3406              		.thumb
 3407              		.thumb_func
 3408              		.type	AD5940_FIFORd, %function
 3409              	AD5940_FIFORd:
 3410              	.LFB31:
 911:ad5940.c      **** 
 912:ad5940.c      **** /**
 913:ad5940.c      ****   @brief Read specific number of data from FIFO with optimized SPI access.
 914:ad5940.c      ****   @param pBuffer: Pointer to a buffer that used to store data read back.
 915:ad5940.c      ****   @param uiReadCount: How much data to be read.
 916:ad5940.c      ****   @return none.
 917:ad5940.c      **** **/
 918:ad5940.c      **** void AD5940_FIFORd(uint32_t *pBuffer, uint32_t uiReadCount)   
 919:ad5940.c      **** {
 3411              		.loc 1 919 0
 3412              		.cfi_startproc
 3413              		@ args = 0, pretend = 0, frame = 16
 3414              		@ frame_needed = 1, uses_anonymous_args = 0
 3415 0000 90B5     		push	{r4, r7, lr}
 3416              		.cfi_def_cfa_offset 12
 3417              		.cfi_offset 4, -12
 3418              		.cfi_offset 7, -8
 3419              		.cfi_offset 14, -4
 3420 0002 85B0     		sub	sp, sp, #20
 3421              		.cfi_def_cfa_offset 32
 3422 0004 00AF     		add	r7, sp, #0
 3423              		.cfi_def_cfa_register 7
 3424 0006 7860     		str	r0, [r7, #4]
 3425 0008 3960     		str	r1, [r7]
 920:ad5940.c      ****   /* Use function AD5940_SPIReadReg to read REG_AFE_DATAFIFORD is also one method. */
 921:ad5940.c      ****    uint32_t i;
 922:ad5940.c      ****    
 923:ad5940.c      ****    if(uiReadCount < 3)
 3426              		.loc 1 923 0
 3427 000a 3B68     		ldr	r3, [r7]
 3428 000c 022B     		cmp	r3, #2
 3429 000e 28D8     		bhi	.L193
 3430              	.LBB10:
 924:ad5940.c      ****    {
 925:ad5940.c      ****       /* This method is more efficient when readcount < 3 */
 926:ad5940.c      ****       uint32_t i;
 927:ad5940.c      ****       AD5940_CsClr();
 3431              		.loc 1 927 0
 3432 0010 FFF7FEFF 		bl	AD5940_CsClr
 928:ad5940.c      ****       AD5940_ReadWrite8B(SPICMD_SETADDR);
 3433              		.loc 1 928 0
 3434 0014 2020     		movs	r0, #32
 3435 0016 FFF7FEFF 		bl	AD5940_ReadWrite8B
 929:ad5940.c      ****       AD5940_ReadWrite16B(REG_AFE_DATAFIFORD);
 3436              		.loc 1 929 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 78


 3437 001a 42F26C00 		movw	r0, #8300
 3438 001e FFF7FEFF 		bl	AD5940_ReadWrite16B
 930:ad5940.c      ****       AD5940_CsSet();
 3439              		.loc 1 930 0
 3440 0022 FFF7FEFF 		bl	AD5940_CsSet
 931:ad5940.c      ****       for(i=0;i<uiReadCount;i++)
 3441              		.loc 1 931 0
 3442 0026 0023     		movs	r3, #0
 3443 0028 BB60     		str	r3, [r7, #8]
 3444 002a 15E0     		b	.L194
 3445              	.L195:
 932:ad5940.c      ****       {
 933:ad5940.c      ****          AD5940_CsClr();
 3446              		.loc 1 933 0 discriminator 3
 3447 002c FFF7FEFF 		bl	AD5940_CsClr
 934:ad5940.c      ****          AD5940_ReadWrite8B(SPICMD_READREG);
 3448              		.loc 1 934 0 discriminator 3
 3449 0030 6D20     		movs	r0, #109
 3450 0032 FFF7FEFF 		bl	AD5940_ReadWrite8B
 935:ad5940.c      ****          AD5940_ReadWrite8B(0);//Write Host status/Don't care
 3451              		.loc 1 935 0 discriminator 3
 3452 0036 0020     		movs	r0, #0
 3453 0038 FFF7FEFF 		bl	AD5940_ReadWrite8B
 936:ad5940.c      ****          pBuffer[i] = AD5940_ReadWrite32B(0);
 3454              		.loc 1 936 0 discriminator 3
 3455 003c BB68     		ldr	r3, [r7, #8]
 3456 003e 9B00     		lsls	r3, r3, #2
 3457 0040 7A68     		ldr	r2, [r7, #4]
 3458 0042 D418     		adds	r4, r2, r3
 3459 0044 0020     		movs	r0, #0
 3460 0046 FFF7FEFF 		bl	AD5940_ReadWrite32B
 3461 004a 0346     		mov	r3, r0
 3462 004c 2360     		str	r3, [r4]
 937:ad5940.c      ****          AD5940_CsSet();
 3463              		.loc 1 937 0 discriminator 3
 3464 004e FFF7FEFF 		bl	AD5940_CsSet
 931:ad5940.c      ****       {
 3465              		.loc 1 931 0 discriminator 3
 3466 0052 BB68     		ldr	r3, [r7, #8]
 3467 0054 0133     		adds	r3, r3, #1
 3468 0056 BB60     		str	r3, [r7, #8]
 3469              	.L194:
 931:ad5940.c      ****       {
 3470              		.loc 1 931 0 is_stmt 0 discriminator 1
 3471 0058 BA68     		ldr	r2, [r7, #8]
 3472 005a 3B68     		ldr	r3, [r7]
 3473 005c 9A42     		cmp	r2, r3
 3474 005e E5D3     		bcc	.L195
 3475              	.LBE10:
 938:ad5940.c      ****       }
 939:ad5940.c      ****    }
 940:ad5940.c      ****    else
 941:ad5940.c      ****    {
 942:ad5940.c      ****       AD5940_CsClr();
 943:ad5940.c      ****       AD5940_ReadWrite8B(SPICMD_READFIFO);
 944:ad5940.c      ****       /* 6 dummy write before valid data read back */
 945:ad5940.c      ****       for(i=0;i<6;i++)
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 79


 946:ad5940.c      ****          AD5940_ReadWrite8B(0);
 947:ad5940.c      ****       /* Continuously read DATAFIFORD register with offset 0 */
 948:ad5940.c      ****       for(i=0;i<uiReadCount-2;i++)
 949:ad5940.c      ****       {
 950:ad5940.c      ****          pBuffer[i] = AD5940_ReadWrite32B(0); /*Offset is 0, so we always read DATAFIFORD register 
 951:ad5940.c      ****       }
 952:ad5940.c      ****       /* Read back last two FIFO data with none-zero offset*/
 953:ad5940.c      ****       pBuffer[i++] = AD5940_ReadWrite32B(0x44444444);
 954:ad5940.c      ****       pBuffer[i] = AD5940_ReadWrite32B(0x44444444);
 955:ad5940.c      ****       AD5940_CsSet();
 956:ad5940.c      ****    }
 957:ad5940.c      **** }
 3476              		.loc 1 957 0 is_stmt 1
 3477 0060 3CE0     		b	.L201
 3478              	.L193:
 942:ad5940.c      ****       AD5940_ReadWrite8B(SPICMD_READFIFO);
 3479              		.loc 1 942 0
 3480 0062 FFF7FEFF 		bl	AD5940_CsClr
 943:ad5940.c      ****       /* 6 dummy write before valid data read back */
 3481              		.loc 1 943 0
 3482 0066 5F20     		movs	r0, #95
 3483 0068 FFF7FEFF 		bl	AD5940_ReadWrite8B
 945:ad5940.c      ****          AD5940_ReadWrite8B(0);
 3484              		.loc 1 945 0
 3485 006c 0023     		movs	r3, #0
 3486 006e FB60     		str	r3, [r7, #12]
 3487 0070 05E0     		b	.L197
 3488              	.L198:
 946:ad5940.c      ****       /* Continuously read DATAFIFORD register with offset 0 */
 3489              		.loc 1 946 0 discriminator 3
 3490 0072 0020     		movs	r0, #0
 3491 0074 FFF7FEFF 		bl	AD5940_ReadWrite8B
 945:ad5940.c      ****          AD5940_ReadWrite8B(0);
 3492              		.loc 1 945 0 discriminator 3
 3493 0078 FB68     		ldr	r3, [r7, #12]
 3494 007a 0133     		adds	r3, r3, #1
 3495 007c FB60     		str	r3, [r7, #12]
 3496              	.L197:
 945:ad5940.c      ****          AD5940_ReadWrite8B(0);
 3497              		.loc 1 945 0 is_stmt 0 discriminator 1
 3498 007e FB68     		ldr	r3, [r7, #12]
 3499 0080 052B     		cmp	r3, #5
 3500 0082 F6D9     		bls	.L198
 948:ad5940.c      ****       {
 3501              		.loc 1 948 0 is_stmt 1
 3502 0084 0023     		movs	r3, #0
 3503 0086 FB60     		str	r3, [r7, #12]
 3504 0088 0BE0     		b	.L199
 3505              	.L200:
 950:ad5940.c      ****       }
 3506              		.loc 1 950 0 discriminator 3
 3507 008a FB68     		ldr	r3, [r7, #12]
 3508 008c 9B00     		lsls	r3, r3, #2
 3509 008e 7A68     		ldr	r2, [r7, #4]
 3510 0090 D418     		adds	r4, r2, r3
 3511 0092 0020     		movs	r0, #0
 3512 0094 FFF7FEFF 		bl	AD5940_ReadWrite32B
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 80


 3513 0098 0346     		mov	r3, r0
 3514 009a 2360     		str	r3, [r4]
 948:ad5940.c      ****       {
 3515              		.loc 1 948 0 discriminator 3
 3516 009c FB68     		ldr	r3, [r7, #12]
 3517 009e 0133     		adds	r3, r3, #1
 3518 00a0 FB60     		str	r3, [r7, #12]
 3519              	.L199:
 948:ad5940.c      ****       {
 3520              		.loc 1 948 0 is_stmt 0 discriminator 1
 3521 00a2 3B68     		ldr	r3, [r7]
 3522 00a4 9A1E     		subs	r2, r3, #2
 3523 00a6 FB68     		ldr	r3, [r7, #12]
 3524 00a8 9A42     		cmp	r2, r3
 3525 00aa EED8     		bhi	.L200
 953:ad5940.c      ****       pBuffer[i] = AD5940_ReadWrite32B(0x44444444);
 3526              		.loc 1 953 0 is_stmt 1
 3527 00ac FB68     		ldr	r3, [r7, #12]
 3528 00ae 5A1C     		adds	r2, r3, #1
 3529 00b0 FA60     		str	r2, [r7, #12]
 3530 00b2 9B00     		lsls	r3, r3, #2
 3531 00b4 7A68     		ldr	r2, [r7, #4]
 3532 00b6 D418     		adds	r4, r2, r3
 3533 00b8 4FF04430 		mov	r0, #1145324612
 3534 00bc FFF7FEFF 		bl	AD5940_ReadWrite32B
 3535 00c0 0346     		mov	r3, r0
 3536 00c2 2360     		str	r3, [r4]
 954:ad5940.c      ****       AD5940_CsSet();
 3537              		.loc 1 954 0
 3538 00c4 FB68     		ldr	r3, [r7, #12]
 3539 00c6 9B00     		lsls	r3, r3, #2
 3540 00c8 7A68     		ldr	r2, [r7, #4]
 3541 00ca D418     		adds	r4, r2, r3
 3542 00cc 4FF04430 		mov	r0, #1145324612
 3543 00d0 FFF7FEFF 		bl	AD5940_ReadWrite32B
 3544 00d4 0346     		mov	r3, r0
 3545 00d6 2360     		str	r3, [r4]
 955:ad5940.c      ****    }
 3546              		.loc 1 955 0
 3547 00d8 FFF7FEFF 		bl	AD5940_CsSet
 3548              	.L201:
 3549              		.loc 1 957 0
 3550 00dc 00BF     		nop
 3551 00de 1437     		adds	r7, r7, #20
 3552              		.cfi_def_cfa_offset 12
 3553 00e0 BD46     		mov	sp, r7
 3554              		.cfi_def_cfa_register 13
 3555              		@ sp needed
 3556 00e2 90BD     		pop	{r4, r7, pc}
 3557              		.cfi_endproc
 3558              	.LFE31:
 3559              		.size	AD5940_FIFORd, .-AD5940_FIFORd
 3560              		.section	.text.AD5940_WriteReg,"ax",%progbits
 3561              		.align	2
 3562              		.global	AD5940_WriteReg
 3563              		.thumb
 3564              		.thumb_func
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 81


 3565              		.type	AD5940_WriteReg, %function
 3566              	AD5940_WriteReg:
 3567              	.LFB32:
 958:ad5940.c      **** 
 959:ad5940.c      **** /**
 960:ad5940.c      ****  * @} SPI_Block_Functions
 961:ad5940.c      ****  * @} SPI_Block
 962:ad5940.c      **** */
 963:ad5940.c      **** #endif
 964:ad5940.c      **** 
 965:ad5940.c      **** /**
 966:ad5940.c      ****  * @brief Write register. If sequencer generator is enabled, the register write is recorded. 
 967:ad5940.c      ****  *        Otherwise, the data is written to AD5940 by SPI.
 968:ad5940.c      ****  * @param RegAddr: The register address.
 969:ad5940.c      ****  * @param RegData: The register data.
 970:ad5940.c      ****  * @return Return None.
 971:ad5940.c      **** **/
 972:ad5940.c      **** void AD5940_WriteReg(uint16_t RegAddr, uint32_t RegData)
 973:ad5940.c      **** {
 3568              		.loc 1 973 0
 3569              		.cfi_startproc
 3570              		@ args = 0, pretend = 0, frame = 8
 3571              		@ frame_needed = 1, uses_anonymous_args = 0
 3572 0000 80B5     		push	{r7, lr}
 3573              		.cfi_def_cfa_offset 8
 3574              		.cfi_offset 7, -8
 3575              		.cfi_offset 14, -4
 3576 0002 82B0     		sub	sp, sp, #8
 3577              		.cfi_def_cfa_offset 16
 3578 0004 00AF     		add	r7, sp, #0
 3579              		.cfi_def_cfa_register 7
 3580 0006 0346     		mov	r3, r0
 3581 0008 3960     		str	r1, [r7]
 3582 000a FB80     		strh	r3, [r7, #6]	@ movhi
 974:ad5940.c      **** #ifdef SEQUENCE_GENERATOR
 975:ad5940.c      ****   if(SeqGenDB.EngineStart == bTRUE)
 3583              		.loc 1 975 0
 3584 000c 094B     		ldr	r3, .L206
 3585 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3586 0010 012B     		cmp	r3, #1
 3587 0012 05D1     		bne	.L203
 976:ad5940.c      ****     AD5940_SEQWriteReg(RegAddr, RegData);
 3588              		.loc 1 976 0
 3589 0014 FB88     		ldrh	r3, [r7, #6]
 3590 0016 3968     		ldr	r1, [r7]
 3591 0018 1846     		mov	r0, r3
 3592 001a FFF7FEFF 		bl	AD5940_SEQWriteReg
 977:ad5940.c      ****   else
 978:ad5940.c      **** #endif
 979:ad5940.c      **** #ifdef CHIPSEL_M355
 980:ad5940.c      ****     AD5940_D2DWriteReg(RegAddr, RegData);
 981:ad5940.c      **** #else
 982:ad5940.c      ****     AD5940_SPIWriteReg(RegAddr, RegData);
 983:ad5940.c      **** #endif
 984:ad5940.c      **** }
 3593              		.loc 1 984 0
 3594 001e 04E0     		b	.L205
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 82


 3595              	.L203:
 982:ad5940.c      **** #endif
 3596              		.loc 1 982 0
 3597 0020 FB88     		ldrh	r3, [r7, #6]
 3598 0022 3968     		ldr	r1, [r7]
 3599 0024 1846     		mov	r0, r3
 3600 0026 FFF7FEFF 		bl	AD5940_SPIWriteReg
 3601              	.L205:
 3602              		.loc 1 984 0
 3603 002a 00BF     		nop
 3604 002c 0837     		adds	r7, r7, #8
 3605              		.cfi_def_cfa_offset 8
 3606 002e BD46     		mov	sp, r7
 3607              		.cfi_def_cfa_register 13
 3608              		@ sp needed
 3609 0030 80BD     		pop	{r7, pc}
 3610              	.L207:
 3611 0032 00BF     		.align	2
 3612              	.L206:
 3613 0034 00000000 		.word	SeqGenDB
 3614              		.cfi_endproc
 3615              	.LFE32:
 3616              		.size	AD5940_WriteReg, .-AD5940_WriteReg
 3617              		.section	.text.AD5940_ReadReg,"ax",%progbits
 3618              		.align	2
 3619              		.global	AD5940_ReadReg
 3620              		.thumb
 3621              		.thumb_func
 3622              		.type	AD5940_ReadReg, %function
 3623              	AD5940_ReadReg:
 3624              	.LFB33:
 985:ad5940.c      **** 
 986:ad5940.c      **** /**
 987:ad5940.c      ****  * @brief Read register. If sequencer generator is enabled, read current register value from data-b
 988:ad5940.c      ****  *        Otherwise, read register value by SPI.
 989:ad5940.c      ****  * @param RegAddr: The register address.
 990:ad5940.c      ****  * @return Return register value.
 991:ad5940.c      **** **/
 992:ad5940.c      **** uint32_t AD5940_ReadReg(uint16_t RegAddr)
 993:ad5940.c      **** {
 3625              		.loc 1 993 0
 3626              		.cfi_startproc
 3627              		@ args = 0, pretend = 0, frame = 8
 3628              		@ frame_needed = 1, uses_anonymous_args = 0
 3629 0000 80B5     		push	{r7, lr}
 3630              		.cfi_def_cfa_offset 8
 3631              		.cfi_offset 7, -8
 3632              		.cfi_offset 14, -4
 3633 0002 82B0     		sub	sp, sp, #8
 3634              		.cfi_def_cfa_offset 16
 3635 0004 00AF     		add	r7, sp, #0
 3636              		.cfi_def_cfa_register 7
 3637 0006 0346     		mov	r3, r0
 3638 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 994:ad5940.c      **** #ifdef SEQUENCE_GENERATOR
 995:ad5940.c      ****   if(SeqGenDB.EngineStart == bTRUE)
 3639              		.loc 1 995 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 83


 3640 000a 094B     		ldr	r3, .L211
 3641 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3642 000e 012B     		cmp	r3, #1
 3643 0010 05D1     		bne	.L209
 996:ad5940.c      ****     return AD5940_SEQReadReg(RegAddr);
 3644              		.loc 1 996 0
 3645 0012 FB88     		ldrh	r3, [r7, #6]
 3646 0014 1846     		mov	r0, r3
 3647 0016 FFF7FEFF 		bl	AD5940_SEQReadReg
 3648 001a 0346     		mov	r3, r0
 3649 001c 04E0     		b	.L210
 3650              	.L209:
 997:ad5940.c      ****   else
 998:ad5940.c      **** #endif
 999:ad5940.c      **** #ifdef CHIPSEL_M355
1000:ad5940.c      ****     return AD5940_D2DReadReg(RegAddr);
1001:ad5940.c      **** #else
1002:ad5940.c      ****     return AD5940_SPIReadReg(RegAddr);
 3651              		.loc 1 1002 0
 3652 001e FB88     		ldrh	r3, [r7, #6]
 3653 0020 1846     		mov	r0, r3
 3654 0022 FFF7FEFF 		bl	AD5940_SPIReadReg
 3655 0026 0346     		mov	r3, r0
 3656              	.L210:
1003:ad5940.c      **** #endif
1004:ad5940.c      **** }
 3657              		.loc 1 1004 0
 3658 0028 1846     		mov	r0, r3
 3659 002a 0837     		adds	r7, r7, #8
 3660              		.cfi_def_cfa_offset 8
 3661 002c BD46     		mov	sp, r7
 3662              		.cfi_def_cfa_register 13
 3663              		@ sp needed
 3664 002e 80BD     		pop	{r7, pc}
 3665              	.L212:
 3666              		.align	2
 3667              	.L211:
 3668 0030 00000000 		.word	SeqGenDB
 3669              		.cfi_endproc
 3670              	.LFE33:
 3671              		.size	AD5940_ReadReg, .-AD5940_ReadReg
 3672              		.section	.rodata
 3673              		.align	2
 3674              	.LC14:
 3675 008c 0809     		.short	2312
 3676 008e 0000     		.space	2
 3677 0090 C9020000 		.word	713
 3678 0094 080C     		.short	3080
 3679 0096 0000     		.space	2
 3680 0098 6C200000 		.word	8300
 3681 009c F021     		.short	8688
 3682 009e 0000     		.space	2
 3683 00a0 10000000 		.word	16
 3684 00a4 1004     		.short	1040
 3685 00a6 0000     		.space	2
 3686 00a8 C9020000 		.word	713
 3687 00ac 280A     		.short	2600
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 84


 3688 00ae 0000     		.space	2
 3689 00b0 09000000 		.word	9
 3690 00b4 8C23     		.short	9100
 3691 00b6 0000     		.space	2
 3692 00b8 04010000 		.word	260
 3693 00bc 040A     		.short	2564
 3694 00be 0000     		.space	2
 3695 00c0 59480000 		.word	18521
 3696 00c4 040A     		.short	2564
 3697 00c6 0000     		.space	2
 3698 00c8 7BF20000 		.word	62075
 3699 00cc 000A     		.short	2560
 3700 00ce 0000     		.space	2
 3701 00d0 09800000 		.word	32777
 3702 00d4 F022     		.short	8944
 3703 00d6 0000     		.space	2
 3704 00d8 00000000 		.word	0
 3705 00dc 3022     		.short	8752
 3706 00de 0000     		.space	2
 3707 00e0 AFA587DE 		.word	-561535569
 3708 00e4 5022     		.short	8784
 3709 00e6 0000     		.space	2
 3710 00e8 3F100000 		.word	4159
 3711 00ec B022     		.short	8880
 3712 00ee 0000     		.space	2
 3713 00f0 3C200000 		.word	8252
 3714 00f4 3022     		.short	8752
 3715 00f6 0000     		.space	2
 3716 00f8 A0A587DE 		.word	-561535584
 3717              		.section	.text.AD5940_Initialize,"ax",%progbits
 3718              		.align	2
 3719              		.global	AD5940_Initialize
 3720              		.thumb
 3721              		.thumb_func
 3722              		.type	AD5940_Initialize, %function
 3723              	AD5940_Initialize:
 3724              	.LFB34:
1005:ad5940.c      **** 
1006:ad5940.c      **** 
1007:ad5940.c      **** /**
1008:ad5940.c      ****  * @defgroup AFE_Control 
1009:ad5940.c      ****  * @brief Some functions to control the whole AFE. They are top level switches.
1010:ad5940.c      ****  * @{
1011:ad5940.c      ****  *    @defgroup AFE_Control_Functions
1012:ad5940.c      ****  *    The top-level control functions for whole AFE perspective. 
1013:ad5940.c      ****  *    @details  This function set is used to control the whole AFE block by block. It's a top-level
1014:ad5940.c      ****  *              It's convenient when do initialization work with the functions called BLOCK**Cfg**.
1015:ad5940.c      ****  *              functions from each block. rather than top-level functions where you need to config
1016:ad5940.c      ****  *    @{
1017:ad5940.c      **** */
1018:ad5940.c      **** 
1019:ad5940.c      **** /**
1020:ad5940.c      ****  * @brief Initialize AD5940. This function must be called whenever there is reset(Software Reset or
1021:ad5940.c      ****  *        This function is used to put AD5940 to correct state.
1022:ad5940.c      ****  * @return return None
1023:ad5940.c      **** **/
1024:ad5940.c      **** void AD5940_Initialize(void)
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 85


1025:ad5940.c      **** {
 3725              		.loc 1 1025 0
 3726              		.cfi_startproc
 3727              		@ args = 0, pretend = 0, frame = 120
 3728              		@ frame_needed = 1, uses_anonymous_args = 0
 3729 0000 80B5     		push	{r7, lr}
 3730              		.cfi_def_cfa_offset 8
 3731              		.cfi_offset 7, -8
 3732              		.cfi_offset 14, -4
 3733 0002 9EB0     		sub	sp, sp, #120
 3734              		.cfi_def_cfa_offset 128
 3735 0004 00AF     		add	r7, sp, #0
 3736              		.cfi_def_cfa_register 7
1026:ad5940.c      ****   int i;
1027:ad5940.c      ****   /* Write following registers with its data sequentially whenever there is a reset happened. */
1028:ad5940.c      ****   const struct
1029:ad5940.c      ****   {
1030:ad5940.c      ****     uint16_t reg_addr;
1031:ad5940.c      ****     uint32_t reg_data;
1032:ad5940.c      ****   }RegTable[]=
 3737              		.loc 1 1032 0
 3738 0006 294A     		ldr	r2, .L220
 3739 0008 3B1D     		adds	r3, r7, #4
 3740 000a 1146     		mov	r1, r2
 3741 000c 7022     		movs	r2, #112
 3742 000e 1846     		mov	r0, r3
 3743 0010 FFF7FEFF 		bl	memcpy
1033:ad5940.c      ****   {
1034:ad5940.c      ****     {0x0908, 0x02c9},
1035:ad5940.c      ****     {0x0c08, 0x206C},
1036:ad5940.c      ****     {0x21F0, 0x0010},
1037:ad5940.c      **** #ifndef CHIPSEL_M355
1038:ad5940.c      ****     /* This is AD5940 */
1039:ad5940.c      ****     {0x0410, 0x02c9},
1040:ad5940.c      ****     {0x0A28, 0x0009},
1041:ad5940.c      **** #else
1042:ad5940.c      ****     /* This is ADuCM355 */
1043:ad5940.c      ****     {0x0410, 0x001a},
1044:ad5940.c      ****     {0x0A28, 0x0008},
1045:ad5940.c      **** #endif
1046:ad5940.c      ****     {0x238c, 0x0104},
1047:ad5940.c      ****     {0x0a04, 0x4859},
1048:ad5940.c      ****     {0x0a04, 0xF27B},
1049:ad5940.c      ****     {0x0a00, 0x8009},
1050:ad5940.c      ****     {0x22F0, 0x0000},
1051:ad5940.c      ****     //
1052:ad5940.c      ****     {0x2230, 0xDE87A5AF},
1053:ad5940.c      ****     {0x2250, 0x103F},
1054:ad5940.c      ****     {0x22B0, 0x203C},
1055:ad5940.c      ****     {0x2230, 0xDE87A5A0},
1056:ad5940.c      ****   };
1057:ad5940.c      ****   //initialize global variables
1058:ad5940.c      ****   SeqGenDB.SeqLen = 0;
 3744              		.loc 1 1058 0
 3745 0014 264B     		ldr	r3, .L220+4
 3746 0016 0022     		movs	r2, #0
 3747 0018 DA60     		str	r2, [r3, #12]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 86


1059:ad5940.c      ****   SeqGenDB.RegCount = 0;
 3748              		.loc 1 1059 0
 3749 001a 254B     		ldr	r3, .L220+4
 3750 001c 0022     		movs	r2, #0
 3751 001e 5A61     		str	r2, [r3, #20]
1060:ad5940.c      ****   SeqGenDB.LastError = AD5940ERR_OK;
 3752              		.loc 1 1060 0
 3753 0020 234B     		ldr	r3, .L220+4
 3754 0022 0022     		movs	r2, #0
 3755 0024 9A61     		str	r2, [r3, #24]
1061:ad5940.c      ****   SeqGenDB.EngineStart = bFALSE;
 3756              		.loc 1 1061 0
 3757 0026 224B     		ldr	r3, .L220+4
 3758 0028 0022     		movs	r2, #0
 3759 002a 1A70     		strb	r2, [r3]
1062:ad5940.c      **** #ifndef CHIPSEL_M355
1063:ad5940.c      ****   AD5940_CsSet(); /* Pull high CS in case it's low */
 3760              		.loc 1 1063 0
 3761 002c FFF7FEFF 		bl	AD5940_CsSet
1064:ad5940.c      **** #endif
1065:ad5940.c      ****   for(i=0; i<sizeof(RegTable)/sizeof(RegTable[0]); i++)
 3762              		.loc 1 1065 0
 3763 0030 0023     		movs	r3, #0
 3764 0032 7B67     		str	r3, [r7, #116]
 3765 0034 14E0     		b	.L214
 3766              	.L215:
1066:ad5940.c      ****     AD5940_WriteReg(RegTable[i].reg_addr, RegTable[i].reg_data);
 3767              		.loc 1 1066 0 discriminator 3
 3768 0036 7B6F     		ldr	r3, [r7, #116]
 3769 0038 DB00     		lsls	r3, r3, #3
 3770 003a 07F17802 		add	r2, r7, #120
 3771 003e 1344     		add	r3, r3, r2
 3772 0040 33F8742C 		ldrh	r2, [r3, #-116]
 3773 0044 7B6F     		ldr	r3, [r7, #116]
 3774 0046 DB00     		lsls	r3, r3, #3
 3775 0048 07F17801 		add	r1, r7, #120
 3776 004c 0B44     		add	r3, r3, r1
 3777 004e 53F8703C 		ldr	r3, [r3, #-112]
 3778 0052 1946     		mov	r1, r3
 3779 0054 1046     		mov	r0, r2
 3780 0056 FFF7FEFF 		bl	AD5940_WriteReg
1065:ad5940.c      ****     AD5940_WriteReg(RegTable[i].reg_addr, RegTable[i].reg_data);
 3781              		.loc 1 1065 0 discriminator 3
 3782 005a 7B6F     		ldr	r3, [r7, #116]
 3783 005c 0133     		adds	r3, r3, #1
 3784 005e 7B67     		str	r3, [r7, #116]
 3785              	.L214:
1065:ad5940.c      ****     AD5940_WriteReg(RegTable[i].reg_addr, RegTable[i].reg_data);
 3786              		.loc 1 1065 0 is_stmt 0 discriminator 1
 3787 0060 7B6F     		ldr	r3, [r7, #116]
 3788 0062 0D2B     		cmp	r3, #13
 3789 0064 E7D9     		bls	.L215
1067:ad5940.c      ****   i = AD5940_ReadReg(REG_AFECON_CHIPID);  
 3790              		.loc 1 1067 0 is_stmt 1
 3791 0066 40F20440 		movw	r0, #1028
 3792 006a FFF7FEFF 		bl	AD5940_ReadReg
 3793 006e 0346     		mov	r3, r0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 87


 3794 0070 7B67     		str	r3, [r7, #116]
1068:ad5940.c      ****   if(i == 0x5501)
 3795              		.loc 1 1068 0
 3796 0072 7B6F     		ldr	r3, [r7, #116]
 3797 0074 45F20152 		movw	r2, #21761
 3798 0078 9342     		cmp	r3, r2
 3799 007a 03D1     		bne	.L216
1069:ad5940.c      ****     bIsS2silicon = bTRUE;
 3800              		.loc 1 1069 0
 3801 007c 0D4B     		ldr	r3, .L220+8
 3802 007e 0122     		movs	r2, #1
 3803 0080 1A70     		strb	r2, [r3]
1070:ad5940.c      ****   else if(i == 0x5502)  /* S3 chip-id is 0x5502. The is no difference with S2. */
1071:ad5940.c      ****     bIsS2silicon = bTRUE;
1072:ad5940.c      ****   else if(i == 0x5500)
1073:ad5940.c      ****     bIsS2silicon = bFALSE;
1074:ad5940.c      **** #ifdef ADI_DEBUG
1075:ad5940.c      ****   else
1076:ad5940.c      ****   {
1077:ad5940.c      ****     printf("CHIPID read error:0x%04x. AD5940 is not present?\n", i);
1078:ad5940.c      ****     while(1);
1079:ad5940.c      ****   }
1080:ad5940.c      **** #ifdef CHIPSEL_M355
1081:ad5940.c      ****   ADI_Print("This ADuCM355!\n");
1082:ad5940.c      **** #else
1083:ad5940.c      ****   ADI_Print("This AD594x!\n");
1084:ad5940.c      **** #endif
1085:ad5940.c      ****   ADI_Print("Note: Current Silicon is %s\n", bIsS2silicon?"S2":"S1");
1086:ad5940.c      ****   ADI_Print("AD5940LIB Version:v%d.%d.%d\n", AD5940LIB_VER_MAJOR, AD5940LIB_VER_MINOR, AD5940LIB_VE
1087:ad5940.c      **** #endif
1088:ad5940.c      **** }
 3804              		.loc 1 1088 0
 3805 0082 0FE0     		b	.L219
 3806              	.L216:
1070:ad5940.c      ****   else if(i == 0x5502)  /* S3 chip-id is 0x5502. The is no difference with S2. */
 3807              		.loc 1 1070 0
 3808 0084 7B6F     		ldr	r3, [r7, #116]
 3809 0086 45F20252 		movw	r2, #21762
 3810 008a 9342     		cmp	r3, r2
 3811 008c 03D1     		bne	.L218
1071:ad5940.c      ****   else if(i == 0x5500)
 3812              		.loc 1 1071 0
 3813 008e 094B     		ldr	r3, .L220+8
 3814 0090 0122     		movs	r2, #1
 3815 0092 1A70     		strb	r2, [r3]
 3816              		.loc 1 1088 0
 3817 0094 06E0     		b	.L219
 3818              	.L218:
1072:ad5940.c      ****     bIsS2silicon = bFALSE;
 3819              		.loc 1 1072 0
 3820 0096 7B6F     		ldr	r3, [r7, #116]
 3821 0098 B3F5AA4F 		cmp	r3, #21760
 3822 009c 02D1     		bne	.L219
1073:ad5940.c      **** #ifdef ADI_DEBUG
 3823              		.loc 1 1073 0
 3824 009e 054B     		ldr	r3, .L220+8
 3825 00a0 0022     		movs	r2, #0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 88


 3826 00a2 1A70     		strb	r2, [r3]
 3827              	.L219:
 3828              		.loc 1 1088 0
 3829 00a4 00BF     		nop
 3830 00a6 7837     		adds	r7, r7, #120
 3831              		.cfi_def_cfa_offset 8
 3832 00a8 BD46     		mov	sp, r7
 3833              		.cfi_def_cfa_register 13
 3834              		@ sp needed
 3835 00aa 80BD     		pop	{r7, pc}
 3836              	.L221:
 3837              		.align	2
 3838              	.L220:
 3839 00ac 8C000000 		.word	.LC14
 3840 00b0 00000000 		.word	SeqGenDB
 3841 00b4 00000000 		.word	bIsS2silicon
 3842              		.cfi_endproc
 3843              	.LFE34:
 3844              		.size	AD5940_Initialize, .-AD5940_Initialize
 3845              		.section	.text.AD5940_AFECtrlS,"ax",%progbits
 3846              		.align	2
 3847              		.global	AD5940_AFECtrlS
 3848              		.thumb
 3849              		.thumb_func
 3850              		.type	AD5940_AFECtrlS, %function
 3851              	AD5940_AFECtrlS:
 3852              	.LFB35:
1089:ad5940.c      **** 
1090:ad5940.c      **** /**
1091:ad5940.c      ****  * @brief Control most AFE digital and analog block within one register access.
1092:ad5940.c      ****  * @param AfeCtrlSet: A set of blocks that will be controlled select it from @ref AFECTRL_Const Bel
1093:ad5940.c      ****  *        - AFECTRL_HPREFPWR: Control high power reference(bandgap).
1094:ad5940.c      ****  *        - AFECTRL_WG|AFECTRL_ADCPWR: The OR'ed control set. Control Waveform generator and ADC po
1095:ad5940.c      ****  * @param State: Enable or disable selected control set signal. Select from @BoolFlag
1096:ad5940.c      ****  *        - bFALSE: Disable or power down selected block(s).
1097:ad5940.c      ****  *        - bTRUE:  Enable all selected block(s).
1098:ad5940.c      ****    @return return none.
1099:ad5940.c      **** */
1100:ad5940.c      **** void AD5940_AFECtrlS(uint32_t AfeCtrlSet, BoolFlag State)
1101:ad5940.c      **** {
 3853              		.loc 1 1101 0
 3854              		.cfi_startproc
 3855              		@ args = 0, pretend = 0, frame = 16
 3856              		@ frame_needed = 1, uses_anonymous_args = 0
 3857 0000 80B5     		push	{r7, lr}
 3858              		.cfi_def_cfa_offset 8
 3859              		.cfi_offset 7, -8
 3860              		.cfi_offset 14, -4
 3861 0002 84B0     		sub	sp, sp, #16
 3862              		.cfi_def_cfa_offset 24
 3863 0004 00AF     		add	r7, sp, #0
 3864              		.cfi_def_cfa_register 7
 3865 0006 7860     		str	r0, [r7, #4]
 3866 0008 0B46     		mov	r3, r1
 3867 000a FB70     		strb	r3, [r7, #3]
1102:ad5940.c      ****   /* Check parameters */
1103:ad5940.c      ****   uint32_t tempreg;
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 89


1104:ad5940.c      ****   tempreg = AD5940_ReadReg(REG_AFE_AFECON);
 3868              		.loc 1 1104 0
 3869 000c 4FF40050 		mov	r0, #8192
 3870 0010 FFF7FEFF 		bl	AD5940_ReadReg
 3871 0014 F860     		str	r0, [r7, #12]
1105:ad5940.c      ****   if (State == bTRUE) {
 3872              		.loc 1 1105 0
 3873 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3874 0018 012B     		cmp	r3, #1
 3875 001a 1ED1     		bne	.L223
1106:ad5940.c      ****     /* Clear bits to enable HPREF and ALDOLimit*/
1107:ad5940.c      ****     if (AfeCtrlSet & AFECTRL_HPREFPWR) {
 3876              		.loc 1 1107 0
 3877 001c 7B68     		ldr	r3, [r7, #4]
 3878 001e 03F02003 		and	r3, r3, #32
 3879 0022 002B     		cmp	r3, #0
 3880 0024 07D0     		beq	.L224
1108:ad5940.c      ****         tempreg &= ~BITM_AFE_AFECON_HPREFDIS;
 3881              		.loc 1 1108 0
 3882 0026 FB68     		ldr	r3, [r7, #12]
 3883 0028 23F02003 		bic	r3, r3, #32
 3884 002c FB60     		str	r3, [r7, #12]
1109:ad5940.c      ****         AfeCtrlSet &= ~AFECTRL_HPREFPWR;
 3885              		.loc 1 1109 0
 3886 002e 7B68     		ldr	r3, [r7, #4]
 3887 0030 23F02003 		bic	r3, r3, #32
 3888 0034 7B60     		str	r3, [r7, #4]
 3889              	.L224:
1110:ad5940.c      ****     }
1111:ad5940.c      ****     if(AfeCtrlSet & AFECTRL_ALDOLIMIT)
 3890              		.loc 1 1111 0
 3891 0036 7B68     		ldr	r3, [r7, #4]
 3892 0038 03F40023 		and	r3, r3, #524288
 3893 003c 002B     		cmp	r3, #0
 3894 003e 07D0     		beq	.L225
1112:ad5940.c      ****     {
1113:ad5940.c      ****       tempreg &= ~BITM_AFE_AFECON_ALDOILIMITEN;
 3895              		.loc 1 1113 0
 3896 0040 FB68     		ldr	r3, [r7, #12]
 3897 0042 23F40023 		bic	r3, r3, #524288
 3898 0046 FB60     		str	r3, [r7, #12]
1114:ad5940.c      ****       AfeCtrlSet &= ~AFECTRL_ALDOLIMIT;
 3899              		.loc 1 1114 0
 3900 0048 7B68     		ldr	r3, [r7, #4]
 3901 004a 23F40023 		bic	r3, r3, #524288
 3902 004e 7B60     		str	r3, [r7, #4]
 3903              	.L225:
1115:ad5940.c      ****     }
1116:ad5940.c      ****     tempreg |= AfeCtrlSet;
 3904              		.loc 1 1116 0
 3905 0050 FA68     		ldr	r2, [r7, #12]
 3906 0052 7B68     		ldr	r3, [r7, #4]
 3907 0054 1343     		orrs	r3, r3, r2
 3908 0056 FB60     		str	r3, [r7, #12]
 3909 0058 1EE0     		b	.L226
 3910              	.L223:
1117:ad5940.c      ****   }
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 90


1118:ad5940.c      ****   else
1119:ad5940.c      ****   {
1120:ad5940.c      ****     /* Set bits to Disable HPREF and ALDOLimit*/
1121:ad5940.c      ****     if(AfeCtrlSet & AFECTRL_HPREFPWR)
 3911              		.loc 1 1121 0
 3912 005a 7B68     		ldr	r3, [r7, #4]
 3913 005c 03F02003 		and	r3, r3, #32
 3914 0060 002B     		cmp	r3, #0
 3915 0062 07D0     		beq	.L227
1122:ad5940.c      ****     {
1123:ad5940.c      ****         tempreg |= BITM_AFE_AFECON_HPREFDIS;
 3916              		.loc 1 1123 0
 3917 0064 FB68     		ldr	r3, [r7, #12]
 3918 0066 43F02003 		orr	r3, r3, #32
 3919 006a FB60     		str	r3, [r7, #12]
1124:ad5940.c      ****         AfeCtrlSet &= ~AFECTRL_HPREFPWR;
 3920              		.loc 1 1124 0
 3921 006c 7B68     		ldr	r3, [r7, #4]
 3922 006e 23F02003 		bic	r3, r3, #32
 3923 0072 7B60     		str	r3, [r7, #4]
 3924              	.L227:
1125:ad5940.c      ****     }
1126:ad5940.c      ****     if(AfeCtrlSet & AFECTRL_ALDOLIMIT)
 3925              		.loc 1 1126 0
 3926 0074 7B68     		ldr	r3, [r7, #4]
 3927 0076 03F40023 		and	r3, r3, #524288
 3928 007a 002B     		cmp	r3, #0
 3929 007c 07D0     		beq	.L228
1127:ad5940.c      ****     {
1128:ad5940.c      ****       tempreg |= BITM_AFE_AFECON_ALDOILIMITEN;
 3930              		.loc 1 1128 0
 3931 007e FB68     		ldr	r3, [r7, #12]
 3932 0080 43F40023 		orr	r3, r3, #524288
 3933 0084 FB60     		str	r3, [r7, #12]
1129:ad5940.c      ****       AfeCtrlSet &= ~AFECTRL_ALDOLIMIT;
 3934              		.loc 1 1129 0
 3935 0086 7B68     		ldr	r3, [r7, #4]
 3936 0088 23F40023 		bic	r3, r3, #524288
 3937 008c 7B60     		str	r3, [r7, #4]
 3938              	.L228:
1130:ad5940.c      ****     }
1131:ad5940.c      ****     tempreg &= ~AfeCtrlSet;
 3939              		.loc 1 1131 0
 3940 008e 7B68     		ldr	r3, [r7, #4]
 3941 0090 DB43     		mvns	r3, r3
 3942 0092 FA68     		ldr	r2, [r7, #12]
 3943 0094 1340     		ands	r3, r3, r2
 3944 0096 FB60     		str	r3, [r7, #12]
 3945              	.L226:
1132:ad5940.c      ****   }
1133:ad5940.c      ****   AD5940_WriteReg(REG_AFE_AFECON, tempreg);
 3946              		.loc 1 1133 0
 3947 0098 F968     		ldr	r1, [r7, #12]
 3948 009a 4FF40050 		mov	r0, #8192
 3949 009e FFF7FEFF 		bl	AD5940_WriteReg
1134:ad5940.c      **** }
 3950              		.loc 1 1134 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 91


 3951 00a2 00BF     		nop
 3952 00a4 1037     		adds	r7, r7, #16
 3953              		.cfi_def_cfa_offset 8
 3954 00a6 BD46     		mov	sp, r7
 3955              		.cfi_def_cfa_register 13
 3956              		@ sp needed
 3957 00a8 80BD     		pop	{r7, pc}
 3958              		.cfi_endproc
 3959              	.LFE35:
 3960              		.size	AD5940_AFECtrlS, .-AD5940_AFECtrlS
 3961 00aa 00BF     		.section	.text.AD5940_LPModeCtrlS,"ax",%progbits
 3962              		.align	2
 3963              		.global	AD5940_LPModeCtrlS
 3964              		.thumb
 3965              		.thumb_func
 3966              		.type	AD5940_LPModeCtrlS, %function
 3967              	AD5940_LPModeCtrlS:
 3968              	.LFB36:
1135:ad5940.c      **** /** When LP mode is enabled, some functions are under control of LPMODECON, rather than original re
1136:ad5940.c      **** /** @warning LPMODE is key protected, this function only takes effect after AD5940_LPModeEnS(bTRUE)
1137:ad5940.c      **** /**
1138:ad5940.c      ****  * @brief For LP mode, use one register to control most AFE digital and analog block.
1139:ad5940.c      ****  * @details The parameter means the blocks. The selected block will be enabled. All others will be 
1140:ad5940.c      ****  *          The method to enable/disable blocks are defined by register LPMODECON, either by cleari
1141:ad5940.c      ****  * @param EnSet: A set of blocks that will be enabled. Select it from @ref LPMODECTRL_Const. All ot
1142:ad5940.c      ****  *        - LPMODECTRL_ALDOPWR|LPMODECTRL_HFOSCEN: Turn on ALDO and HFOSC, disable all others.
1143:ad5940.c      ****  *        - LPMODECTRL_ALL: Enable all blocks.
1144:ad5940.c      ****    @return return none.
1145:ad5940.c      **** */
1146:ad5940.c      **** AD5940Err AD5940_LPModeCtrlS(uint32_t EnSet)
1147:ad5940.c      **** {
 3969              		.loc 1 1147 0
 3970              		.cfi_startproc
 3971              		@ args = 0, pretend = 0, frame = 16
 3972              		@ frame_needed = 1, uses_anonymous_args = 0
 3973 0000 80B5     		push	{r7, lr}
 3974              		.cfi_def_cfa_offset 8
 3975              		.cfi_offset 7, -8
 3976              		.cfi_offset 14, -4
 3977 0002 84B0     		sub	sp, sp, #16
 3978              		.cfi_def_cfa_offset 24
 3979 0004 00AF     		add	r7, sp, #0
 3980              		.cfi_def_cfa_register 7
 3981 0006 7860     		str	r0, [r7, #4]
1148:ad5940.c      ****   /* Check parameters */
1149:ad5940.c      ****   uint32_t tempreg;
1150:ad5940.c      ****   uint32_t DisSet;    /* The blocks to be disabled */
1151:ad5940.c      ****   DisSet = LPMODECTRL_ALL & (~EnSet);
 3982              		.loc 1 1151 0
 3983 0008 7B68     		ldr	r3, [r7, #4]
 3984 000a DB43     		mvns	r3, r3
 3985 000c C3F30803 		ubfx	r3, r3, #0, #9
 3986 0010 BB60     		str	r3, [r7, #8]
1152:ad5940.c      ****   tempreg = AD5940_ReadReg(REG_AFE_LPMODECON);
 3987              		.loc 1 1152 0
 3988 0012 42F21410 		movw	r0, #8468
 3989 0016 FFF7FEFF 		bl	AD5940_ReadReg
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 92


 3990 001a F860     		str	r0, [r7, #12]
1153:ad5940.c      ****   /* Enable selected set */
1154:ad5940.c      ****   {
1155:ad5940.c      ****     /* Clear bits to enable HFOSC, HPREF, ALDO */
1156:ad5940.c      ****     if (EnSet & LPMODECTRL_HFOSCEN) {
 3991              		.loc 1 1156 0
 3992 001c 7B68     		ldr	r3, [r7, #4]
 3993 001e 03F00103 		and	r3, r3, #1
 3994 0022 002B     		cmp	r3, #0
 3995 0024 07D0     		beq	.L230
1157:ad5940.c      ****         tempreg &= ~BITM_AFE_LPMODECON_HFOSCPD;
 3996              		.loc 1 1157 0
 3997 0026 FB68     		ldr	r3, [r7, #12]
 3998 0028 23F00103 		bic	r3, r3, #1
 3999 002c FB60     		str	r3, [r7, #12]
1158:ad5940.c      ****         EnSet &= ~LPMODECTRL_HFOSCEN;
 4000              		.loc 1 1158 0
 4001 002e 7B68     		ldr	r3, [r7, #4]
 4002 0030 23F00103 		bic	r3, r3, #1
 4003 0034 7B60     		str	r3, [r7, #4]
 4004              	.L230:
1159:ad5940.c      ****     }
1160:ad5940.c      ****     if(EnSet & LPMODECTRL_HPREFPWR)
 4005              		.loc 1 1160 0
 4006 0036 7B68     		ldr	r3, [r7, #4]
 4007 0038 03F00203 		and	r3, r3, #2
 4008 003c 002B     		cmp	r3, #0
 4009 003e 07D0     		beq	.L231
1161:ad5940.c      ****     {
1162:ad5940.c      ****       tempreg &= ~BITM_AFE_LPMODECON_HPREFDIS;
 4010              		.loc 1 1162 0
 4011 0040 FB68     		ldr	r3, [r7, #12]
 4012 0042 23F00203 		bic	r3, r3, #2
 4013 0046 FB60     		str	r3, [r7, #12]
1163:ad5940.c      ****       EnSet &= ~LPMODECTRL_HPREFPWR;
 4014              		.loc 1 1163 0
 4015 0048 7B68     		ldr	r3, [r7, #4]
 4016 004a 23F00203 		bic	r3, r3, #2
 4017 004e 7B60     		str	r3, [r7, #4]
 4018              	.L231:
1164:ad5940.c      ****     }
1165:ad5940.c      ****     if(EnSet & LPMODECTRL_ALDOPWR)
 4019              		.loc 1 1165 0
 4020 0050 7B68     		ldr	r3, [r7, #4]
 4021 0052 03F48073 		and	r3, r3, #256
 4022 0056 002B     		cmp	r3, #0
 4023 0058 07D0     		beq	.L232
1166:ad5940.c      ****     {
1167:ad5940.c      ****       tempreg &= ~BITM_AFE_LPMODECON_ALDOEN;
 4024              		.loc 1 1167 0
 4025 005a FB68     		ldr	r3, [r7, #12]
 4026 005c 23F48073 		bic	r3, r3, #256
 4027 0060 FB60     		str	r3, [r7, #12]
1168:ad5940.c      ****       EnSet &= ~LPMODECTRL_ALDOPWR;
 4028              		.loc 1 1168 0
 4029 0062 7B68     		ldr	r3, [r7, #4]
 4030 0064 23F48073 		bic	r3, r3, #256
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 93


 4031 0068 7B60     		str	r3, [r7, #4]
 4032              	.L232:
1169:ad5940.c      ****     }
1170:ad5940.c      ****     tempreg |= EnSet; /* Set other bits to enable function */
 4033              		.loc 1 1170 0
 4034 006a FA68     		ldr	r2, [r7, #12]
 4035 006c 7B68     		ldr	r3, [r7, #4]
 4036 006e 1343     		orrs	r3, r3, r2
 4037 0070 FB60     		str	r3, [r7, #12]
1171:ad5940.c      ****   }
1172:ad5940.c      ****   /* Disable other blocks */
1173:ad5940.c      ****   {
1174:ad5940.c      ****     /* Set bits to disable HFOSC, HPREF, ALDO */
1175:ad5940.c      ****     if (DisSet & LPMODECTRL_HFOSCEN) {
 4038              		.loc 1 1175 0
 4039 0072 BB68     		ldr	r3, [r7, #8]
 4040 0074 03F00103 		and	r3, r3, #1
 4041 0078 002B     		cmp	r3, #0
 4042 007a 07D0     		beq	.L233
1176:ad5940.c      ****         tempreg |= BITM_AFE_LPMODECON_HFOSCPD;
 4043              		.loc 1 1176 0
 4044 007c FB68     		ldr	r3, [r7, #12]
 4045 007e 43F00103 		orr	r3, r3, #1
 4046 0082 FB60     		str	r3, [r7, #12]
1177:ad5940.c      ****         DisSet &= ~LPMODECTRL_HFOSCEN;
 4047              		.loc 1 1177 0
 4048 0084 BB68     		ldr	r3, [r7, #8]
 4049 0086 23F00103 		bic	r3, r3, #1
 4050 008a BB60     		str	r3, [r7, #8]
 4051              	.L233:
1178:ad5940.c      ****     }
1179:ad5940.c      ****     if(DisSet & LPMODECTRL_HPREFPWR)
 4052              		.loc 1 1179 0
 4053 008c BB68     		ldr	r3, [r7, #8]
 4054 008e 03F00203 		and	r3, r3, #2
 4055 0092 002B     		cmp	r3, #0
 4056 0094 07D0     		beq	.L234
1180:ad5940.c      ****     {
1181:ad5940.c      ****       tempreg |= BITM_AFE_LPMODECON_HPREFDIS;
 4057              		.loc 1 1181 0
 4058 0096 FB68     		ldr	r3, [r7, #12]
 4059 0098 43F00203 		orr	r3, r3, #2
 4060 009c FB60     		str	r3, [r7, #12]
1182:ad5940.c      ****       DisSet &= ~LPMODECTRL_HPREFPWR;
 4061              		.loc 1 1182 0
 4062 009e BB68     		ldr	r3, [r7, #8]
 4063 00a0 23F00203 		bic	r3, r3, #2
 4064 00a4 BB60     		str	r3, [r7, #8]
 4065              	.L234:
1183:ad5940.c      ****     }
1184:ad5940.c      ****     if(DisSet & LPMODECTRL_ALDOPWR)
 4066              		.loc 1 1184 0
 4067 00a6 BB68     		ldr	r3, [r7, #8]
 4068 00a8 03F48073 		and	r3, r3, #256
 4069 00ac 002B     		cmp	r3, #0
 4070 00ae 07D0     		beq	.L235
1185:ad5940.c      ****     {
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 94


1186:ad5940.c      ****       tempreg |= BITM_AFE_LPMODECON_ALDOEN;
 4071              		.loc 1 1186 0
 4072 00b0 FB68     		ldr	r3, [r7, #12]
 4073 00b2 43F48073 		orr	r3, r3, #256
 4074 00b6 FB60     		str	r3, [r7, #12]
1187:ad5940.c      ****       DisSet &= ~LPMODECTRL_ALDOPWR;
 4075              		.loc 1 1187 0
 4076 00b8 BB68     		ldr	r3, [r7, #8]
 4077 00ba 23F48073 		bic	r3, r3, #256
 4078 00be BB60     		str	r3, [r7, #8]
 4079              	.L235:
1188:ad5940.c      ****     }
1189:ad5940.c      ****     tempreg &= ~DisSet; /* Clear other bits to disable function */
 4080              		.loc 1 1189 0
 4081 00c0 BB68     		ldr	r3, [r7, #8]
 4082 00c2 DB43     		mvns	r3, r3
 4083 00c4 FA68     		ldr	r2, [r7, #12]
 4084 00c6 1340     		ands	r3, r3, r2
 4085 00c8 FB60     		str	r3, [r7, #12]
1190:ad5940.c      ****   }
1191:ad5940.c      ****   AD5940_WriteReg(REG_AFE_LPMODECON, tempreg);
 4086              		.loc 1 1191 0
 4087 00ca F968     		ldr	r1, [r7, #12]
 4088 00cc 42F21410 		movw	r0, #8468
 4089 00d0 FFF7FEFF 		bl	AD5940_WriteReg
1192:ad5940.c      **** 
1193:ad5940.c      ****   return AD5940ERR_OK;
 4090              		.loc 1 1193 0
 4091 00d4 0023     		movs	r3, #0
1194:ad5940.c      **** }
 4092              		.loc 1 1194 0
 4093 00d6 1846     		mov	r0, r3
 4094 00d8 1037     		adds	r7, r7, #16
 4095              		.cfi_def_cfa_offset 8
 4096 00da BD46     		mov	sp, r7
 4097              		.cfi_def_cfa_register 13
 4098              		@ sp needed
 4099 00dc 80BD     		pop	{r7, pc}
 4100              		.cfi_endproc
 4101              	.LFE36:
 4102              		.size	AD5940_LPModeCtrlS, .-AD5940_LPModeCtrlS
 4103 00de 00BF     		.section	.text.AD5940_AFEPwrBW,"ax",%progbits
 4104              		.align	2
 4105              		.global	AD5940_AFEPwrBW
 4106              		.thumb
 4107              		.thumb_func
 4108              		.type	AD5940_AFEPwrBW, %function
 4109              	AD5940_AFEPwrBW:
 4110              	.LFB37:
1195:ad5940.c      **** 
1196:ad5940.c      **** /**
1197:ad5940.c      ****    @brief Set AFE power mode and system bandwidth include HSDAC, Excitation-buffer, HSTIA and ADC e
1198:ad5940.c      ****    @param AfePwr : {AFEPWR_LP, AFEPWR_HP}
1199:ad5940.c      ****           Select parameters from @ref AFEPWR_Const
1200:ad5940.c      ****           - AFEPWR_LP: Set AFE to low power mode
1201:ad5940.c      ****           - AFEPWR_HP: Set AFE to High speed mode to support 200kHz.
1202:ad5940.c      ****    @param AfeBw : {AFEBW_AUTOSET, AFEBW_50KHZ, AFEBW_100KHZ, AFEBW_250KHZ}
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 95


1203:ad5940.c      ****           - AFEBW_AUTOSET: Set the bandwidth automatically based on WGFCW frequency word.
1204:ad5940.c      ****           - AFEBW_50KHZ: Set system bandwidth to 50kHz.
1205:ad5940.c      ****           - AFEBW_100KHZ: Set system bandwidth to 100kHz.
1206:ad5940.c      ****           - AFEBW_250KHZ: Set system bandwidth to 250kHz.
1207:ad5940.c      ****    @return return none.
1208:ad5940.c      **** */
1209:ad5940.c      **** void AD5940_AFEPwrBW(uint32_t AfePwr, uint32_t AfeBw)
1210:ad5940.c      **** {
 4111              		.loc 1 1210 0
 4112              		.cfi_startproc
 4113              		@ args = 0, pretend = 0, frame = 16
 4114              		@ frame_needed = 1, uses_anonymous_args = 0
 4115 0000 80B5     		push	{r7, lr}
 4116              		.cfi_def_cfa_offset 8
 4117              		.cfi_offset 7, -8
 4118              		.cfi_offset 14, -4
 4119 0002 84B0     		sub	sp, sp, #16
 4120              		.cfi_def_cfa_offset 24
 4121 0004 00AF     		add	r7, sp, #0
 4122              		.cfi_def_cfa_register 7
 4123 0006 7860     		str	r0, [r7, #4]
 4124 0008 3960     		str	r1, [r7]
1211:ad5940.c      ****   //check parameters
1212:ad5940.c      ****   uint32_t tempreg;
1213:ad5940.c      ****   tempreg = AfePwr;
 4125              		.loc 1 1213 0
 4126 000a 7B68     		ldr	r3, [r7, #4]
 4127 000c FB60     		str	r3, [r7, #12]
1214:ad5940.c      ****   tempreg |= AfeBw << BITP_AFE_PMBW_SYSBW;
 4128              		.loc 1 1214 0
 4129 000e 3B68     		ldr	r3, [r7]
 4130 0010 9B00     		lsls	r3, r3, #2
 4131 0012 FA68     		ldr	r2, [r7, #12]
 4132 0014 1343     		orrs	r3, r3, r2
 4133 0016 FB60     		str	r3, [r7, #12]
1215:ad5940.c      ****   AD5940_WriteReg(REG_AFE_PMBW, tempreg);
 4134              		.loc 1 1215 0
 4135 0018 F968     		ldr	r1, [r7, #12]
 4136 001a 42F2F020 		movw	r0, #8944
 4137 001e FFF7FEFF 		bl	AD5940_WriteReg
1216:ad5940.c      **** }
 4138              		.loc 1 1216 0
 4139 0022 00BF     		nop
 4140 0024 1037     		adds	r7, r7, #16
 4141              		.cfi_def_cfa_offset 8
 4142 0026 BD46     		mov	sp, r7
 4143              		.cfi_def_cfa_register 13
 4144              		@ sp needed
 4145 0028 80BD     		pop	{r7, pc}
 4146              		.cfi_endproc
 4147              	.LFE37:
 4148              		.size	AD5940_AFEPwrBW, .-AD5940_AFEPwrBW
 4149 002a 00BF     		.section	.text.AD5940_REFCfgS,"ax",%progbits
 4150              		.align	2
 4151              		.global	AD5940_REFCfgS
 4152              		.thumb
 4153              		.thumb_func
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 96


 4154              		.type	AD5940_REFCfgS, %function
 4155              	AD5940_REFCfgS:
 4156              	.LFB38:
1217:ad5940.c      **** 
1218:ad5940.c      **** /**
1219:ad5940.c      ****    @brief Configure reference buffer include 1.8V/1.1V high/low power buffers.
1220:ad5940.c      ****    @param pBufCfg :Pointer to buffer configure structure;
1221:ad5940.c      ****    @return return none.
1222:ad5940.c      **** */
1223:ad5940.c      **** void AD5940_REFCfgS(AFERefCfg_Type *pBufCfg)
1224:ad5940.c      **** {
 4157              		.loc 1 1224 0
 4158              		.cfi_startproc
 4159              		@ args = 0, pretend = 0, frame = 16
 4160              		@ frame_needed = 1, uses_anonymous_args = 0
 4161 0000 80B5     		push	{r7, lr}
 4162              		.cfi_def_cfa_offset 8
 4163              		.cfi_offset 7, -8
 4164              		.cfi_offset 14, -4
 4165 0002 84B0     		sub	sp, sp, #16
 4166              		.cfi_def_cfa_offset 24
 4167 0004 00AF     		add	r7, sp, #0
 4168              		.cfi_def_cfa_register 7
 4169 0006 7860     		str	r0, [r7, #4]
1225:ad5940.c      ****   uint32_t tempreg;
1226:ad5940.c      ****   
1227:ad5940.c      ****   /* HP Reference(bandgap) */
1228:ad5940.c      ****   tempreg = AD5940_ReadReg(REG_AFE_AFECON);
 4170              		.loc 1 1228 0
 4171 0008 4FF40050 		mov	r0, #8192
 4172 000c FFF7FEFF 		bl	AD5940_ReadReg
 4173 0010 F860     		str	r0, [r7, #12]
1229:ad5940.c      ****   tempreg &= ~BITM_AFE_AFECON_HPREFDIS;
 4174              		.loc 1 1229 0
 4175 0012 FB68     		ldr	r3, [r7, #12]
 4176 0014 23F02003 		bic	r3, r3, #32
 4177 0018 FB60     		str	r3, [r7, #12]
1230:ad5940.c      ****   if(pBufCfg->HpBandgapEn == bFALSE)
 4178              		.loc 1 1230 0
 4179 001a 7B68     		ldr	r3, [r7, #4]
 4180 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4181 001e 002B     		cmp	r3, #0
 4182 0020 03D1     		bne	.L239
1231:ad5940.c      ****     tempreg |= BITM_AFE_AFECON_HPREFDIS;
 4183              		.loc 1 1231 0
 4184 0022 FB68     		ldr	r3, [r7, #12]
 4185 0024 43F02003 		orr	r3, r3, #32
 4186 0028 FB60     		str	r3, [r7, #12]
 4187              	.L239:
1232:ad5940.c      ****   AD5940_WriteReg(REG_AFE_AFECON, tempreg);
 4188              		.loc 1 1232 0
 4189 002a F968     		ldr	r1, [r7, #12]
 4190 002c 4FF40050 		mov	r0, #8192
 4191 0030 FFF7FEFF 		bl	AD5940_WriteReg
1233:ad5940.c      ****   /* Reference buffer configure */
1234:ad5940.c      ****   tempreg = AD5940_ReadReg(REG_AFE_BUFSENCON);
 4192              		.loc 1 1234 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 97


 4193 0034 4FF40650 		mov	r0, #8576
 4194 0038 FFF7FEFF 		bl	AD5940_ReadReg
 4195 003c F860     		str	r0, [r7, #12]
1235:ad5940.c      ****   if(pBufCfg->Hp1V8BuffEn == bTRUE)
 4196              		.loc 1 1235 0
 4197 003e 7B68     		ldr	r3, [r7, #4]
 4198 0040 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4199 0042 012B     		cmp	r3, #1
 4200 0044 03D1     		bne	.L240
1236:ad5940.c      ****     tempreg |= BITM_AFE_BUFSENCON_V1P8HPADCEN;
 4201              		.loc 1 1236 0
 4202 0046 FB68     		ldr	r3, [r7, #12]
 4203 0048 43F00103 		orr	r3, r3, #1
 4204 004c FB60     		str	r3, [r7, #12]
 4205              	.L240:
1237:ad5940.c      ****   if(pBufCfg->Hp1V1BuffEn == bTRUE)
 4206              		.loc 1 1237 0
 4207 004e 7B68     		ldr	r3, [r7, #4]
 4208 0050 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 4209 0052 012B     		cmp	r3, #1
 4210 0054 03D1     		bne	.L241
1238:ad5940.c      ****     tempreg |= BITM_AFE_BUFSENCON_V1P1HPADCEN;
 4211              		.loc 1 1238 0
 4212 0056 FB68     		ldr	r3, [r7, #12]
 4213 0058 43F01003 		orr	r3, r3, #16
 4214 005c FB60     		str	r3, [r7, #12]
 4215              	.L241:
1239:ad5940.c      ****   if(pBufCfg->Lp1V8BuffEn == bTRUE)
 4216              		.loc 1 1239 0
 4217 005e 7B68     		ldr	r3, [r7, #4]
 4218 0060 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4219 0062 012B     		cmp	r3, #1
 4220 0064 03D1     		bne	.L242
1240:ad5940.c      ****     tempreg |= BITM_AFE_BUFSENCON_V1P8LPADCEN;
 4221              		.loc 1 1240 0
 4222 0066 FB68     		ldr	r3, [r7, #12]
 4223 0068 43F00403 		orr	r3, r3, #4
 4224 006c FB60     		str	r3, [r7, #12]
 4225              	.L242:
1241:ad5940.c      ****   if(pBufCfg->Lp1V1BuffEn == bTRUE)
 4226              		.loc 1 1241 0
 4227 006e 7B68     		ldr	r3, [r7, #4]
 4228 0070 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4229 0072 012B     		cmp	r3, #1
 4230 0074 03D1     		bne	.L243
1242:ad5940.c      ****     tempreg |= BITM_AFE_BUFSENCON_V1P1LPADCEN;
 4231              		.loc 1 1242 0
 4232 0076 FB68     		ldr	r3, [r7, #12]
 4233 0078 43F02003 		orr	r3, r3, #32
 4234 007c FB60     		str	r3, [r7, #12]
 4235              	.L243:
1243:ad5940.c      ****   if(pBufCfg->Hp1V8ThemBuff == bTRUE)
 4236              		.loc 1 1243 0
 4237 007e 7B68     		ldr	r3, [r7, #4]
 4238 0080 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 4239 0082 012B     		cmp	r3, #1
 4240 0084 03D1     		bne	.L244
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 98


1244:ad5940.c      ****     tempreg |= BITM_AFE_BUFSENCON_V1P8THERMSTEN;
 4241              		.loc 1 1244 0
 4242 0086 FB68     		ldr	r3, [r7, #12]
 4243 0088 43F48073 		orr	r3, r3, #256
 4244 008c FB60     		str	r3, [r7, #12]
 4245              	.L244:
1245:ad5940.c      ****   if(pBufCfg->Hp1V8Ilimit == bTRUE)
 4246              		.loc 1 1245 0
 4247 008e 7B68     		ldr	r3, [r7, #4]
 4248 0090 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 4249 0092 012B     		cmp	r3, #1
 4250 0094 03D1     		bne	.L245
1246:ad5940.c      ****     tempreg |= BITM_AFE_BUFSENCON_V1P8HPADCILIMITEN;
 4251              		.loc 1 1246 0
 4252 0096 FB68     		ldr	r3, [r7, #12]
 4253 0098 43F00203 		orr	r3, r3, #2
 4254 009c FB60     		str	r3, [r7, #12]
 4255              	.L245:
1247:ad5940.c      ****   if(pBufCfg->Disc1V8Cap == bTRUE)
 4256              		.loc 1 1247 0
 4257 009e 7B68     		ldr	r3, [r7, #4]
 4258 00a0 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 4259 00a2 012B     		cmp	r3, #1
 4260 00a4 03D1     		bne	.L246
1248:ad5940.c      ****     tempreg |= BITM_AFE_BUFSENCON_V1P8HPADCCHGDIS;
 4261              		.loc 1 1248 0
 4262 00a6 FB68     		ldr	r3, [r7, #12]
 4263 00a8 43F00803 		orr	r3, r3, #8
 4264 00ac FB60     		str	r3, [r7, #12]
 4265              	.L246:
1249:ad5940.c      ****   if(pBufCfg->Disc1V1Cap == bTRUE)
 4266              		.loc 1 1249 0
 4267 00ae 7B68     		ldr	r3, [r7, #4]
 4268 00b0 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 4269 00b2 012B     		cmp	r3, #1
 4270 00b4 03D1     		bne	.L247
1250:ad5940.c      ****     tempreg |= BITM_AFE_BUFSENCON_V1P1LPADCCHGDIS;
 4271              		.loc 1 1250 0
 4272 00b6 FB68     		ldr	r3, [r7, #12]
 4273 00b8 43F04003 		orr	r3, r3, #64
 4274 00bc FB60     		str	r3, [r7, #12]
 4275              	.L247:
1251:ad5940.c      ****   AD5940_WriteReg(REG_AFE_BUFSENCON, tempreg);
 4276              		.loc 1 1251 0
 4277 00be F968     		ldr	r1, [r7, #12]
 4278 00c0 4FF40650 		mov	r0, #8576
 4279 00c4 FFF7FEFF 		bl	AD5940_WriteReg
1252:ad5940.c      **** 
1253:ad5940.c      ****   /* LPREFBUFCON */
1254:ad5940.c      ****   tempreg = 0;
 4280              		.loc 1 1254 0
 4281 00c8 0023     		movs	r3, #0
 4282 00ca FB60     		str	r3, [r7, #12]
1255:ad5940.c      ****   if(pBufCfg->LpRefBufEn == bFALSE)
 4283              		.loc 1 1255 0
 4284 00cc 7B68     		ldr	r3, [r7, #4]
 4285 00ce 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 99


 4286 00d0 002B     		cmp	r3, #0
 4287 00d2 03D1     		bne	.L248
1256:ad5940.c      ****     tempreg |= BITM_AFE_LPREFBUFCON_LPBUF2P5DIS;
 4288              		.loc 1 1256 0
 4289 00d4 FB68     		ldr	r3, [r7, #12]
 4290 00d6 43F00203 		orr	r3, r3, #2
 4291 00da FB60     		str	r3, [r7, #12]
 4292              	.L248:
1257:ad5940.c      ****   if(pBufCfg->LpBandgapEn == bFALSE)
 4293              		.loc 1 1257 0
 4294 00dc 7B68     		ldr	r3, [r7, #4]
 4295 00de 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4296 00e0 002B     		cmp	r3, #0
 4297 00e2 03D1     		bne	.L249
1258:ad5940.c      ****     tempreg |= BITM_AFE_LPREFBUFCON_LPREFDIS;
 4298              		.loc 1 1258 0
 4299 00e4 FB68     		ldr	r3, [r7, #12]
 4300 00e6 43F00103 		orr	r3, r3, #1
 4301 00ea FB60     		str	r3, [r7, #12]
 4302              	.L249:
1259:ad5940.c      ****   if(pBufCfg->LpRefBoostEn == bTRUE)
 4303              		.loc 1 1259 0
 4304 00ec 7B68     		ldr	r3, [r7, #4]
 4305 00ee DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 4306 00f0 012B     		cmp	r3, #1
 4307 00f2 03D1     		bne	.L250
1260:ad5940.c      ****     tempreg |= BITM_AFE_LPREFBUFCON_BOOSTCURRENT;
 4308              		.loc 1 1260 0
 4309 00f4 FB68     		ldr	r3, [r7, #12]
 4310 00f6 43F00403 		orr	r3, r3, #4
 4311 00fa FB60     		str	r3, [r7, #12]
 4312              	.L250:
1261:ad5940.c      ****   AD5940_WriteReg(REG_AFE_LPREFBUFCON, tempreg);
 4313              		.loc 1 1261 0
 4314 00fc F968     		ldr	r1, [r7, #12]
 4315 00fe 42F25000 		movw	r0, #8272
 4316 0102 FFF7FEFF 		bl	AD5940_WriteReg
1262:ad5940.c      **** }
 4317              		.loc 1 1262 0
 4318 0106 00BF     		nop
 4319 0108 1037     		adds	r7, r7, #16
 4320              		.cfi_def_cfa_offset 8
 4321 010a BD46     		mov	sp, r7
 4322              		.cfi_def_cfa_register 13
 4323              		@ sp needed
 4324 010c 80BD     		pop	{r7, pc}
 4325              		.cfi_endproc
 4326              	.LFE38:
 4327              		.size	AD5940_REFCfgS, .-AD5940_REFCfgS
 4328 010e 00BF     		.section	.text.AD5940_HSLoopCfgS,"ax",%progbits
 4329              		.align	2
 4330              		.global	AD5940_HSLoopCfgS
 4331              		.thumb
 4332              		.thumb_func
 4333              		.type	AD5940_HSLoopCfgS, %function
 4334              	AD5940_HSLoopCfgS:
 4335              	.LFB39:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 100


1263:ad5940.c      **** /**
1264:ad5940.c      ****  * @} End of AFE_Control_Functions
1265:ad5940.c      ****  * @} End of AFE_Control
1266:ad5940.c      ****  * */
1267:ad5940.c      **** 
1268:ad5940.c      **** /**
1269:ad5940.c      ****  * @defgroup High_Speed_Loop
1270:ad5940.c      ****  * @brief The high speed loop
1271:ad5940.c      ****  * @{
1272:ad5940.c      ****  *    @defgroup High_Speed_Loop_Functions
1273:ad5940.c      ****  *    @{
1274:ad5940.c      **** */
1275:ad5940.c      **** 
1276:ad5940.c      **** /**
1277:ad5940.c      ****    @brief Configure High speed loop(high bandwidth loop or 
1278:ad5940.c      ****           called excitation loop). This configuration includes HSDAC, HSTIA and Switch matrix. 
1279:ad5940.c      ****    @param pHsLoopCfg : Pointer to configure structure;
1280:ad5940.c      ****    @return return none.
1281:ad5940.c      **** */
1282:ad5940.c      **** void AD5940_HSLoopCfgS(HSLoopCfg_Type *pHsLoopCfg)
1283:ad5940.c      **** {
 4336              		.loc 1 1283 0
 4337              		.cfi_startproc
 4338              		@ args = 0, pretend = 0, frame = 8
 4339              		@ frame_needed = 1, uses_anonymous_args = 0
 4340 0000 80B5     		push	{r7, lr}
 4341              		.cfi_def_cfa_offset 8
 4342              		.cfi_offset 7, -8
 4343              		.cfi_offset 14, -4
 4344 0002 82B0     		sub	sp, sp, #8
 4345              		.cfi_def_cfa_offset 16
 4346 0004 00AF     		add	r7, sp, #0
 4347              		.cfi_def_cfa_register 7
 4348 0006 7860     		str	r0, [r7, #4]
1284:ad5940.c      ****   AD5940_HSDacCfgS(&pHsLoopCfg->HsDacCfg);
 4349              		.loc 1 1284 0
 4350 0008 7B68     		ldr	r3, [r7, #4]
 4351 000a 1033     		adds	r3, r3, #16
 4352 000c 1846     		mov	r0, r3
 4353 000e FFF7FEFF 		bl	AD5940_HSDacCfgS
1285:ad5940.c      ****   AD5940_HSTIACfgS(&pHsLoopCfg->HsTiaCfg);
 4354              		.loc 1 1285 0
 4355 0012 7B68     		ldr	r3, [r7, #4]
 4356 0014 5033     		adds	r3, r3, #80
 4357 0016 1846     		mov	r0, r3
 4358 0018 FFF7FEFF 		bl	AD5940_HSTIACfgS
1286:ad5940.c      ****   AD5940_SWMatrixCfgS(&pHsLoopCfg->SWMatCfg);
 4359              		.loc 1 1286 0
 4360 001c 7B68     		ldr	r3, [r7, #4]
 4361 001e 1846     		mov	r0, r3
 4362 0020 FFF7FEFF 		bl	AD5940_SWMatrixCfgS
1287:ad5940.c      ****   AD5940_WGCfgS(&pHsLoopCfg->WgCfg);
 4363              		.loc 1 1287 0
 4364 0024 7B68     		ldr	r3, [r7, #4]
 4365 0026 1C33     		adds	r3, r3, #28
 4366 0028 1846     		mov	r0, r3
 4367 002a FFF7FEFF 		bl	AD5940_WGCfgS
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 101


1288:ad5940.c      **** }
 4368              		.loc 1 1288 0
 4369 002e 00BF     		nop
 4370 0030 0837     		adds	r7, r7, #8
 4371              		.cfi_def_cfa_offset 8
 4372 0032 BD46     		mov	sp, r7
 4373              		.cfi_def_cfa_register 13
 4374              		@ sp needed
 4375 0034 80BD     		pop	{r7, pc}
 4376              		.cfi_endproc
 4377              	.LFE39:
 4378              		.size	AD5940_HSLoopCfgS, .-AD5940_HSLoopCfgS
 4379 0036 00BF     		.section	.text.AD5940_SWMatrixCfgS,"ax",%progbits
 4380              		.align	2
 4381              		.global	AD5940_SWMatrixCfgS
 4382              		.thumb
 4383              		.thumb_func
 4384              		.type	AD5940_SWMatrixCfgS, %function
 4385              	AD5940_SWMatrixCfgS:
 4386              	.LFB40:
1289:ad5940.c      **** 
1290:ad5940.c      **** /**
1291:ad5940.c      ****    @brief Initialize switch matrix
1292:ad5940.c      ****    @param pSwMatrix: Pointer to configuration structure
1293:ad5940.c      ****    @return return none.
1294:ad5940.c      **** */
1295:ad5940.c      **** void AD5940_SWMatrixCfgS(SWMatrixCfg_Type *pSwMatrix)
1296:ad5940.c      **** {
 4387              		.loc 1 1296 0
 4388              		.cfi_startproc
 4389              		@ args = 0, pretend = 0, frame = 8
 4390              		@ frame_needed = 1, uses_anonymous_args = 0
 4391 0000 80B5     		push	{r7, lr}
 4392              		.cfi_def_cfa_offset 8
 4393              		.cfi_offset 7, -8
 4394              		.cfi_offset 14, -4
 4395 0002 82B0     		sub	sp, sp, #8
 4396              		.cfi_def_cfa_offset 16
 4397 0004 00AF     		add	r7, sp, #0
 4398              		.cfi_def_cfa_register 7
 4399 0006 7860     		str	r0, [r7, #4]
1297:ad5940.c      ****   AD5940_WriteReg(REG_AFE_DSWFULLCON, pSwMatrix->Dswitch);
 4400              		.loc 1 1297 0
 4401 0008 7B68     		ldr	r3, [r7, #4]
 4402 000a 1B68     		ldr	r3, [r3]
 4403 000c 1946     		mov	r1, r3
 4404 000e 42F25010 		movw	r0, #8528
 4405 0012 FFF7FEFF 		bl	AD5940_WriteReg
1298:ad5940.c      ****   AD5940_WriteReg(REG_AFE_PSWFULLCON, pSwMatrix->Pswitch);
 4406              		.loc 1 1298 0
 4407 0016 7B68     		ldr	r3, [r7, #4]
 4408 0018 5B68     		ldr	r3, [r3, #4]
 4409 001a 1946     		mov	r1, r3
 4410 001c 42F25810 		movw	r0, #8536
 4411 0020 FFF7FEFF 		bl	AD5940_WriteReg
1299:ad5940.c      ****   AD5940_WriteReg(REG_AFE_NSWFULLCON, pSwMatrix->Nswitch);
 4412              		.loc 1 1299 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 102


 4413 0024 7B68     		ldr	r3, [r7, #4]
 4414 0026 9B68     		ldr	r3, [r3, #8]
 4415 0028 1946     		mov	r1, r3
 4416 002a 42F25410 		movw	r0, #8532
 4417 002e FFF7FEFF 		bl	AD5940_WriteReg
1300:ad5940.c      ****   AD5940_WriteReg(REG_AFE_TSWFULLCON, pSwMatrix->Tswitch);
 4418              		.loc 1 1300 0
 4419 0032 7B68     		ldr	r3, [r7, #4]
 4420 0034 DB68     		ldr	r3, [r3, #12]
 4421 0036 1946     		mov	r1, r3
 4422 0038 42F25C10 		movw	r0, #8540
 4423 003c FFF7FEFF 		bl	AD5940_WriteReg
1301:ad5940.c      ****   AD5940_WriteReg(REG_AFE_SWCON, BITM_AFE_SWCON_SWSOURCESEL); /* Update switch configuration */
 4424              		.loc 1 1301 0
 4425 0040 4FF48031 		mov	r1, #65536
 4426 0044 42F20C00 		movw	r0, #8204
 4427 0048 FFF7FEFF 		bl	AD5940_WriteReg
1302:ad5940.c      **** }
 4428              		.loc 1 1302 0
 4429 004c 00BF     		nop
 4430 004e 0837     		adds	r7, r7, #8
 4431              		.cfi_def_cfa_offset 8
 4432 0050 BD46     		mov	sp, r7
 4433              		.cfi_def_cfa_register 13
 4434              		@ sp needed
 4435 0052 80BD     		pop	{r7, pc}
 4436              		.cfi_endproc
 4437              	.LFE40:
 4438              		.size	AD5940_SWMatrixCfgS, .-AD5940_SWMatrixCfgS
 4439              		.section	.text.AD5940_HSDacCfgS,"ax",%progbits
 4440              		.align	2
 4441              		.global	AD5940_HSDacCfgS
 4442              		.thumb
 4443              		.thumb_func
 4444              		.type	AD5940_HSDacCfgS, %function
 4445              	AD5940_HSDacCfgS:
 4446              	.LFB41:
1303:ad5940.c      **** 
1304:ad5940.c      **** /**
1305:ad5940.c      ****    @brief Initialize HSDAC
1306:ad5940.c      ****    @param pHsDacCfg: Pointer to configuration structure
1307:ad5940.c      ****    @return return none.
1308:ad5940.c      **** */
1309:ad5940.c      **** void AD5940_HSDacCfgS(HSDACCfg_Type *pHsDacCfg)
1310:ad5940.c      **** {
 4447              		.loc 1 1310 0
 4448              		.cfi_startproc
 4449              		@ args = 0, pretend = 0, frame = 16
 4450              		@ frame_needed = 1, uses_anonymous_args = 0
 4451 0000 80B5     		push	{r7, lr}
 4452              		.cfi_def_cfa_offset 8
 4453              		.cfi_offset 7, -8
 4454              		.cfi_offset 14, -4
 4455 0002 84B0     		sub	sp, sp, #16
 4456              		.cfi_def_cfa_offset 24
 4457 0004 00AF     		add	r7, sp, #0
 4458              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 103


 4459 0006 7860     		str	r0, [r7, #4]
1311:ad5940.c      ****   uint32_t tempreg;
1312:ad5940.c      ****   //Check parameters
1313:ad5940.c      ****   tempreg = 0;
 4460              		.loc 1 1313 0
 4461 0008 0023     		movs	r3, #0
 4462 000a FB60     		str	r3, [r7, #12]
1314:ad5940.c      ****   if(pHsDacCfg->ExcitBufGain == EXCITBUFGAIN_0P25)
 4463              		.loc 1 1314 0
 4464 000c 7B68     		ldr	r3, [r7, #4]
 4465 000e 1B68     		ldr	r3, [r3]
 4466 0010 012B     		cmp	r3, #1
 4467 0012 03D1     		bne	.L254
1315:ad5940.c      ****     tempreg |= BITM_AFE_HSDACCON_INAMPGNMDE; /* Enable attenuator */
 4468              		.loc 1 1315 0
 4469 0014 FB68     		ldr	r3, [r7, #12]
 4470 0016 43F48053 		orr	r3, r3, #4096
 4471 001a FB60     		str	r3, [r7, #12]
 4472              	.L254:
1316:ad5940.c      ****   if(pHsDacCfg->HsDacGain == HSDACGAIN_0P2)
 4473              		.loc 1 1316 0
 4474 001c 7B68     		ldr	r3, [r7, #4]
 4475 001e 5B68     		ldr	r3, [r3, #4]
 4476 0020 012B     		cmp	r3, #1
 4477 0022 03D1     		bne	.L255
1317:ad5940.c      ****     tempreg |= BITM_AFE_HSDACCON_ATTENEN; /* Enable attenuator */
 4478              		.loc 1 1317 0
 4479 0024 FB68     		ldr	r3, [r7, #12]
 4480 0026 43F00103 		orr	r3, r3, #1
 4481 002a FB60     		str	r3, [r7, #12]
 4482              	.L255:
1318:ad5940.c      ****   tempreg |= (pHsDacCfg->HsDacUpdateRate&0xff)<<BITP_AFE_HSDACCON_RATE;
 4483              		.loc 1 1318 0
 4484 002c 7B68     		ldr	r3, [r7, #4]
 4485 002e 9B68     		ldr	r3, [r3, #8]
 4486 0030 5B00     		lsls	r3, r3, #1
 4487 0032 03F4FF73 		and	r3, r3, #510
 4488 0036 FA68     		ldr	r2, [r7, #12]
 4489 0038 1343     		orrs	r3, r3, r2
 4490 003a FB60     		str	r3, [r7, #12]
1319:ad5940.c      ****   AD5940_WriteReg(REG_AFE_HSDACCON, tempreg);
 4491              		.loc 1 1319 0
 4492 003c F968     		ldr	r1, [r7, #12]
 4493 003e 42F21000 		movw	r0, #8208
 4494 0042 FFF7FEFF 		bl	AD5940_WriteReg
1320:ad5940.c      **** }
 4495              		.loc 1 1320 0
 4496 0046 00BF     		nop
 4497 0048 1037     		adds	r7, r7, #16
 4498              		.cfi_def_cfa_offset 8
 4499 004a BD46     		mov	sp, r7
 4500              		.cfi_def_cfa_register 13
 4501              		@ sp needed
 4502 004c 80BD     		pop	{r7, pc}
 4503              		.cfi_endproc
 4504              	.LFE41:
 4505              		.size	AD5940_HSDacCfgS, .-AD5940_HSDacCfgS
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 104


 4506 004e 00BF     		.section	.rodata
 4507              		.align	2
 4508              	.LC15:
 4509 00fc 00       		.byte	0
 4510 00fd 01       		.byte	1
 4511 00fe 02       		.byte	2
 4512 00ff 03       		.byte	3
 4513 0100 06       		.byte	6
 4514 0101 03       		.byte	3
 4515 0102 04       		.byte	4
 4516 0103 05       		.byte	5
 4517 0104 06       		.byte	6
 4518 0105 07       		.byte	7
 4519 0106 07       		.byte	7
 4520 0107 07       		.byte	7
 4521 0108 09       		.byte	9
 4522 0109 09       		.byte	9
 4523 010a 0A       		.byte	10
 4524              		.section	.text.__AD5940_SetDExRTIA,"ax",%progbits
 4525              		.align	2
 4526              		.thumb
 4527              		.thumb_func
 4528              		.type	__AD5940_SetDExRTIA, %function
 4529              	__AD5940_SetDExRTIA:
 4530              	.LFB42:
1321:ad5940.c      **** 
1322:ad5940.c      **** 
1323:ad5940.c      **** static void __AD5940_SetDExRTIA(uint32_t DExPin, uint32_t DeRtia, uint32_t DeRload)
1324:ad5940.c      **** {
 4531              		.loc 1 1324 0
 4532              		.cfi_startproc
 4533              		@ args = 0, pretend = 0, frame = 40
 4534              		@ frame_needed = 1, uses_anonymous_args = 0
 4535 0000 90B5     		push	{r4, r7, lr}
 4536              		.cfi_def_cfa_offset 12
 4537              		.cfi_offset 4, -12
 4538              		.cfi_offset 7, -8
 4539              		.cfi_offset 14, -4
 4540 0002 8BB0     		sub	sp, sp, #44
 4541              		.cfi_def_cfa_offset 56
 4542 0004 00AF     		add	r7, sp, #0
 4543              		.cfi_def_cfa_register 7
 4544 0006 F860     		str	r0, [r7, #12]
 4545 0008 B960     		str	r1, [r7, #8]
 4546 000a 7A60     		str	r2, [r7, #4]
1325:ad5940.c      ****   uint32_t tempreg;
1326:ad5940.c      ****   /* deal with HSTIA DE RTIA */
1327:ad5940.c      ****   if(DeRtia >= HSTIADERTIA_OPEN)
 4547              		.loc 1 1327 0
 4548 000c BB68     		ldr	r3, [r7, #8]
 4549 000e 0A2B     		cmp	r3, #10
 4550 0010 02D9     		bls	.L257
1328:ad5940.c      ****     tempreg = 0x1f << 3;  /* bit field HPTIRES03CON[7:3] */
 4551              		.loc 1 1328 0
 4552 0012 F823     		movs	r3, #248
 4553 0014 7B62     		str	r3, [r7, #36]
 4554 0016 27E0     		b	.L258
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 105


 4555              	.L257:
1329:ad5940.c      ****   else if(DeRtia >= HSTIADERTIA_1K)
 4556              		.loc 1 1329 0
 4557 0018 BB68     		ldr	r3, [r7, #8]
 4558 001a 022B     		cmp	r3, #2
 4559 001c 04D9     		bls	.L259
1330:ad5940.c      ****   {
1331:ad5940.c      ****     tempreg = (DeRtia - 3 + 11) << 3;
 4560              		.loc 1 1331 0
 4561 001e BB68     		ldr	r3, [r7, #8]
 4562 0020 0833     		adds	r3, r3, #8
 4563 0022 DB00     		lsls	r3, r3, #3
 4564 0024 7B62     		str	r3, [r7, #36]
 4565 0026 1FE0     		b	.L258
 4566              	.L259:
 4567              	.LBB11:
1332:ad5940.c      ****   }
1333:ad5940.c      ****   else  /* DERTIA 50/100/200Ohm */
1334:ad5940.c      ****   {
1335:ad5940.c      ****     const uint8_t DeRtiaTable[3][5] = 
 4568              		.loc 1 1335 0
 4569 0028 1A4A     		ldr	r2, .L265
 4570 002a 07F11403 		add	r3, r7, #20
 4571 002e 1446     		mov	r4, r2
 4572 0030 2068     		ldr	r0, [r4]	@ unaligned
 4573 0032 6168     		ldr	r1, [r4, #4]	@ unaligned
 4574 0034 A268     		ldr	r2, [r4, #8]	@ unaligned
 4575 0036 07C3     		stmia	r3!, {r0, r1, r2}
 4576 0038 A289     		ldrh	r2, [r4, #12]	@ unaligned
 4577 003a A17B     		ldrb	r1, [r4, #14]
 4578 003c 1A80     		strh	r2, [r3]	@ unaligned
 4579 003e 0A46     		mov	r2, r1
 4580 0040 9A70     		strb	r2, [r3, #2]
1336:ad5940.c      ****     {
1337:ad5940.c      **** //Rload  0      10    30    50    100 
1338:ad5940.c      **** 			{0x00, 0x01, 0x02, 0x03, 0x06}, /* RTIA 50Ohm */
1339:ad5940.c      **** 			{0x03, 0x04, 0x05, 0x06, 0x07}, /* RTIA 100Ohm */
1340:ad5940.c      **** 			{0x07, 0x07, 0x09, 0x09, 0x0a}, /* RTIA 200Ohm */
1341:ad5940.c      ****     };
1342:ad5940.c      ****     if(DeRload < HSTIADERLOAD_OPEN)
 4581              		.loc 1 1342 0
 4582 0042 7B68     		ldr	r3, [r7, #4]
 4583 0044 042B     		cmp	r3, #4
 4584 0046 0DD8     		bhi	.L260
1343:ad5940.c      ****       tempreg = (uint32_t)(DeRtiaTable[DeRtia][DeRload])<<3;
 4585              		.loc 1 1343 0
 4586 0048 BA68     		ldr	r2, [r7, #8]
 4587 004a 1346     		mov	r3, r2
 4588 004c 9B00     		lsls	r3, r3, #2
 4589 004e 1344     		add	r3, r3, r2
 4590 0050 07F12802 		add	r2, r7, #40
 4591 0054 1A44     		add	r2, r2, r3
 4592 0056 7B68     		ldr	r3, [r7, #4]
 4593 0058 1344     		add	r3, r3, r2
 4594 005a 143B     		subs	r3, r3, #20
 4595 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4596 005e DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 106


 4597 0060 7B62     		str	r3, [r7, #36]
 4598 0062 01E0     		b	.L258
 4599              	.L260:
1344:ad5940.c      ****     else
1345:ad5940.c      ****       tempreg = (0x1f)<<3;  /* Set it to HSTIADERTIA_OPEN. This setting is illegal */
 4600              		.loc 1 1345 0
 4601 0064 F823     		movs	r3, #248
 4602 0066 7B62     		str	r3, [r7, #36]
 4603              	.L258:
 4604              	.LBE11:
1346:ad5940.c      ****   }
1347:ad5940.c      ****   /* deal with HSTIA Rload */
1348:ad5940.c      ****   tempreg |= DeRload;
 4605              		.loc 1 1348 0
 4606 0068 7A6A     		ldr	r2, [r7, #36]
 4607 006a 7B68     		ldr	r3, [r7, #4]
 4608 006c 1343     		orrs	r3, r3, r2
 4609 006e 7B62     		str	r3, [r7, #36]
1349:ad5940.c      ****   if(DExPin) //DE1
 4610              		.loc 1 1349 0
 4611 0070 FB68     		ldr	r3, [r7, #12]
 4612 0072 002B     		cmp	r3, #0
 4613 0074 05D0     		beq	.L262
1350:ad5940.c      ****     AD5940_WriteReg(REG_AFE_DE1RESCON, tempreg);
 4614              		.loc 1 1350 0
 4615 0076 796A     		ldr	r1, [r7, #36]
 4616 0078 42F2F400 		movw	r0, #8436
 4617 007c FFF7FEFF 		bl	AD5940_WriteReg
1351:ad5940.c      ****   else  //DE0
1352:ad5940.c      ****     AD5940_WriteReg(REG_AFE_DE0RESCON, tempreg);
1353:ad5940.c      **** }
 4618              		.loc 1 1353 0
 4619 0080 04E0     		b	.L264
 4620              	.L262:
1352:ad5940.c      **** }
 4621              		.loc 1 1352 0
 4622 0082 796A     		ldr	r1, [r7, #36]
 4623 0084 42F2F800 		movw	r0, #8440
 4624 0088 FFF7FEFF 		bl	AD5940_WriteReg
 4625              	.L264:
 4626              		.loc 1 1353 0
 4627 008c 00BF     		nop
 4628 008e 2C37     		adds	r7, r7, #44
 4629              		.cfi_def_cfa_offset 12
 4630 0090 BD46     		mov	sp, r7
 4631              		.cfi_def_cfa_register 13
 4632              		@ sp needed
 4633 0092 90BD     		pop	{r4, r7, pc}
 4634              	.L266:
 4635              		.align	2
 4636              	.L265:
 4637 0094 FC000000 		.word	.LC15
 4638              		.cfi_endproc
 4639              	.LFE42:
 4640              		.size	__AD5940_SetDExRTIA, .-__AD5940_SetDExRTIA
 4641              		.section	.text.AD5940_HSTIACfgS,"ax",%progbits
 4642              		.align	2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 107


 4643              		.global	AD5940_HSTIACfgS
 4644              		.thumb
 4645              		.thumb_func
 4646              		.type	AD5940_HSTIACfgS, %function
 4647              	AD5940_HSTIACfgS:
 4648              	.LFB43:
1354:ad5940.c      **** 
1355:ad5940.c      **** /**
1356:ad5940.c      ****    @brief Initialize High speed TIA amplifier
1357:ad5940.c      ****    @param pHsTiaCfg: Pointer to configuration structure
1358:ad5940.c      ****    @return return none.
1359:ad5940.c      **** */
1360:ad5940.c      **** AD5940Err AD5940_HSTIACfgS(HSTIACfg_Type *pHsTiaCfg)
1361:ad5940.c      **** {
 4649              		.loc 1 1361 0
 4650              		.cfi_startproc
 4651              		@ args = 0, pretend = 0, frame = 16
 4652              		@ frame_needed = 1, uses_anonymous_args = 0
 4653 0000 80B5     		push	{r7, lr}
 4654              		.cfi_def_cfa_offset 8
 4655              		.cfi_offset 7, -8
 4656              		.cfi_offset 14, -4
 4657 0002 84B0     		sub	sp, sp, #16
 4658              		.cfi_def_cfa_offset 24
 4659 0004 00AF     		add	r7, sp, #0
 4660              		.cfi_def_cfa_register 7
 4661 0006 7860     		str	r0, [r7, #4]
1362:ad5940.c      ****   uint32_t tempreg;
1363:ad5940.c      ****   //Check parameters
1364:ad5940.c      ****   if(pHsTiaCfg == NULL) return AD5940ERR_NULLP;
 4662              		.loc 1 1364 0
 4663 0008 7B68     		ldr	r3, [r7, #4]
 4664 000a 002B     		cmp	r3, #0
 4665 000c 02D1     		bne	.L268
 4666              		.loc 1 1364 0 is_stmt 0 discriminator 1
 4667 000e 6FF00203 		mvn	r3, #2
 4668 0012 3FE0     		b	.L269
 4669              	.L268:
1365:ad5940.c      ****     /* Available parameter is 1k, 5k,...,160k, short, OPEN */
1366:ad5940.c      ****   if(pHsTiaCfg->HstiaDeRtia < HSTIADERTIA_1K)
 4670              		.loc 1 1366 0 is_stmt 1
 4671 0014 7B68     		ldr	r3, [r7, #4]
 4672 0016 1B69     		ldr	r3, [r3, #16]
 4673 0018 022B     		cmp	r3, #2
 4674 001a 02D8     		bhi	.L270
1367:ad5940.c      ****     return AD5940ERR_PARA;
 4675              		.loc 1 1367 0
 4676 001c 6FF00103 		mvn	r3, #1
 4677 0020 38E0     		b	.L269
 4678              	.L270:
1368:ad5940.c      ****   if(pHsTiaCfg->HstiaDeRtia > HSTIADERTIA_OPEN)
 4679              		.loc 1 1368 0
 4680 0022 7B68     		ldr	r3, [r7, #4]
 4681 0024 1B69     		ldr	r3, [r3, #16]
 4682 0026 0B2B     		cmp	r3, #11
 4683 0028 02D9     		bls	.L271
1369:ad5940.c      ****     return AD5940ERR_PARA;  /* Parameter is invalid */
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 108


 4684              		.loc 1 1369 0
 4685 002a 6FF00103 		mvn	r3, #1
 4686 002e 31E0     		b	.L269
 4687              	.L271:
1370:ad5940.c      **** 
1371:ad5940.c      ****   if(pHsTiaCfg->HstiaDeRload > HSTIADERLOAD_OPEN)
 4688              		.loc 1 1371 0
 4689 0030 7B68     		ldr	r3, [r7, #4]
 4690 0032 5B69     		ldr	r3, [r3, #20]
 4691 0034 052B     		cmp	r3, #5
 4692 0036 02D9     		bls	.L272
1372:ad5940.c      ****     return AD5940ERR_PARA;  /* Available parameter is OPEN, 0R,..., 100R */
 4693              		.loc 1 1372 0
 4694 0038 6FF00103 		mvn	r3, #1
 4695 003c 2AE0     		b	.L269
 4696              	.L272:
1373:ad5940.c      **** 
1374:ad5940.c      ****   tempreg = 0;
 4697              		.loc 1 1374 0
 4698 003e 0023     		movs	r3, #0
 4699 0040 FB60     		str	r3, [r7, #12]
1375:ad5940.c      ****   tempreg |= pHsTiaCfg->HstiaBias;
 4700              		.loc 1 1375 0
 4701 0042 7B68     		ldr	r3, [r7, #4]
 4702 0044 1B68     		ldr	r3, [r3]
 4703 0046 FA68     		ldr	r2, [r7, #12]
 4704 0048 1343     		orrs	r3, r3, r2
 4705 004a FB60     		str	r3, [r7, #12]
1376:ad5940.c      ****   AD5940_WriteReg(REG_AFE_HSTIACON, tempreg);
 4706              		.loc 1 1376 0
 4707 004c F968     		ldr	r1, [r7, #12]
 4708 004e 42F2FC00 		movw	r0, #8444
 4709 0052 FFF7FEFF 		bl	AD5940_WriteReg
1377:ad5940.c      ****   /* HSRTIACON */
1378:ad5940.c      ****   /* Calculate CTIA value */
1379:ad5940.c      ****   tempreg = pHsTiaCfg->HstiaCtia << BITP_AFE_HSRTIACON_CTIACON;
 4710              		.loc 1 1379 0
 4711 0056 7B68     		ldr	r3, [r7, #4]
 4712 0058 9B68     		ldr	r3, [r3, #8]
 4713 005a 5B01     		lsls	r3, r3, #5
 4714 005c FB60     		str	r3, [r7, #12]
1380:ad5940.c      ****   tempreg |= pHsTiaCfg->HstiaRtiaSel;
 4715              		.loc 1 1380 0
 4716 005e 7B68     		ldr	r3, [r7, #4]
 4717 0060 5B68     		ldr	r3, [r3, #4]
 4718 0062 FA68     		ldr	r2, [r7, #12]
 4719 0064 1343     		orrs	r3, r3, r2
 4720 0066 FB60     		str	r3, [r7, #12]
1381:ad5940.c      ****   if(pHsTiaCfg->DiodeClose == bTRUE)
 4721              		.loc 1 1381 0
 4722 0068 7B68     		ldr	r3, [r7, #4]
 4723 006a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 4724 006c 012B     		cmp	r3, #1
 4725 006e 03D1     		bne	.L273
1382:ad5940.c      ****     tempreg |= BITM_AFE_HSRTIACON_TIASW6CON; /* Close switch 6 */
 4726              		.loc 1 1382 0
 4727 0070 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 109


 4728 0072 43F01003 		orr	r3, r3, #16
 4729 0076 FB60     		str	r3, [r7, #12]
 4730              	.L273:
1383:ad5940.c      ****   AD5940_WriteReg(REG_AFE_HSRTIACON, tempreg);
 4731              		.loc 1 1383 0
 4732 0078 F968     		ldr	r1, [r7, #12]
 4733 007a 42F2F000 		movw	r0, #8432
 4734 007e FFF7FEFF 		bl	AD5940_WriteReg
1384:ad5940.c      ****   /* DExRESCON */
1385:ad5940.c      ****   __AD5940_SetDExRTIA(0, pHsTiaCfg->HstiaDeRtia, pHsTiaCfg->HstiaDeRload);
 4735              		.loc 1 1385 0
 4736 0082 7B68     		ldr	r3, [r7, #4]
 4737 0084 1969     		ldr	r1, [r3, #16]
 4738 0086 7B68     		ldr	r3, [r7, #4]
 4739 0088 5B69     		ldr	r3, [r3, #20]
 4740 008a 1A46     		mov	r2, r3
 4741 008c 0020     		movs	r0, #0
 4742 008e FFF7FEFF 		bl	__AD5940_SetDExRTIA
1386:ad5940.c      **** #ifdef CHIPSEL_M355
1387:ad5940.c      ****   __AD5940_SetDExRTIA(1, pHsTiaCfg->HstiaDe1Rtia, pHsTiaCfg->HstiaDe1Rload);
1388:ad5940.c      **** #endif
1389:ad5940.c      **** 
1390:ad5940.c      ****   /* Done */
1391:ad5940.c      ****   return AD5940ERR_OK;
 4743              		.loc 1 1391 0
 4744 0092 0023     		movs	r3, #0
 4745              	.L269:
1392:ad5940.c      **** }
 4746              		.loc 1 1392 0
 4747 0094 1846     		mov	r0, r3
 4748 0096 1037     		adds	r7, r7, #16
 4749              		.cfi_def_cfa_offset 8
 4750 0098 BD46     		mov	sp, r7
 4751              		.cfi_def_cfa_register 13
 4752              		@ sp needed
 4753 009a 80BD     		pop	{r7, pc}
 4754              		.cfi_endproc
 4755              	.LFE43:
 4756              		.size	AD5940_HSTIACfgS, .-AD5940_HSTIACfgS
 4757              		.section	.text.AD5940_HSRTIACfgS,"ax",%progbits
 4758              		.align	2
 4759              		.global	AD5940_HSRTIACfgS
 4760              		.thumb
 4761              		.thumb_func
 4762              		.type	AD5940_HSRTIACfgS, %function
 4763              	AD5940_HSRTIACfgS:
 4764              	.LFB44:
1393:ad5940.c      **** /**
1394:ad5940.c      ****  * @brief Configure HSTIA RTIA resistor and keep other parameters unchanged.
1395:ad5940.c      ****  * @param HSTIARtia: The RTIA setting, select it from @ref HSTIARTIA_Const
1396:ad5940.c      ****  * @return return none.
1397:ad5940.c      **** */
1398:ad5940.c      **** void AD5940_HSRTIACfgS(uint32_t HSTIARtia)
1399:ad5940.c      **** {
 4765              		.loc 1 1399 0
 4766              		.cfi_startproc
 4767              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 110


 4768              		@ frame_needed = 1, uses_anonymous_args = 0
 4769 0000 80B5     		push	{r7, lr}
 4770              		.cfi_def_cfa_offset 8
 4771              		.cfi_offset 7, -8
 4772              		.cfi_offset 14, -4
 4773 0002 84B0     		sub	sp, sp, #16
 4774              		.cfi_def_cfa_offset 24
 4775 0004 00AF     		add	r7, sp, #0
 4776              		.cfi_def_cfa_register 7
 4777 0006 7860     		str	r0, [r7, #4]
1400:ad5940.c      ****   uint32_t tempreg;
1401:ad5940.c      ****   tempreg = AD5940_ReadReg(REG_AFE_HSRTIACON);
 4778              		.loc 1 1401 0
 4779 0008 42F2F000 		movw	r0, #8432
 4780 000c FFF7FEFF 		bl	AD5940_ReadReg
 4781 0010 F860     		str	r0, [r7, #12]
1402:ad5940.c      ****   tempreg &= ~BITM_AFE_HSRTIACON_RTIACON;
 4782              		.loc 1 1402 0
 4783 0012 FB68     		ldr	r3, [r7, #12]
 4784 0014 23F00F03 		bic	r3, r3, #15
 4785 0018 FB60     		str	r3, [r7, #12]
1403:ad5940.c      ****   HSTIARtia &= BITM_AFE_HSRTIACON_RTIACON;
 4786              		.loc 1 1403 0
 4787 001a 7B68     		ldr	r3, [r7, #4]
 4788 001c 03F00F03 		and	r3, r3, #15
 4789 0020 7B60     		str	r3, [r7, #4]
1404:ad5940.c      ****   tempreg |= HSTIARtia<<BITP_AFE_HSRTIACON_RTIACON;
 4790              		.loc 1 1404 0
 4791 0022 FA68     		ldr	r2, [r7, #12]
 4792 0024 7B68     		ldr	r3, [r7, #4]
 4793 0026 1343     		orrs	r3, r3, r2
 4794 0028 FB60     		str	r3, [r7, #12]
1405:ad5940.c      ****   AD5940_WriteReg(REG_AFE_HSRTIACON, tempreg);
 4795              		.loc 1 1405 0
 4796 002a F968     		ldr	r1, [r7, #12]
 4797 002c 42F2F000 		movw	r0, #8432
 4798 0030 FFF7FEFF 		bl	AD5940_WriteReg
1406:ad5940.c      **** }
 4799              		.loc 1 1406 0
 4800 0034 00BF     		nop
 4801 0036 1037     		adds	r7, r7, #16
 4802              		.cfi_def_cfa_offset 8
 4803 0038 BD46     		mov	sp, r7
 4804              		.cfi_def_cfa_register 13
 4805              		@ sp needed
 4806 003a 80BD     		pop	{r7, pc}
 4807              		.cfi_endproc
 4808              	.LFE44:
 4809              		.size	AD5940_HSRTIACfgS, .-AD5940_HSRTIACfgS
 4810              		.section	.text.AD5940_WGCfgS,"ax",%progbits
 4811              		.align	2
 4812              		.global	AD5940_WGCfgS
 4813              		.thumb
 4814              		.thumb_func
 4815              		.type	AD5940_WGCfgS, %function
 4816              	AD5940_WGCfgS:
 4817              	.LFB45:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 111


1407:ad5940.c      **** 
1408:ad5940.c      **** /**
1409:ad5940.c      ****  * @defgroup Waveform_Generator_Functions
1410:ad5940.c      ****  * @{
1411:ad5940.c      **** */
1412:ad5940.c      **** /**
1413:ad5940.c      ****  * @brief Initialize waveform generator
1414:ad5940.c      ****  * @param pWGInit: Pointer to configuration structure
1415:ad5940.c      ****  * @return return none.
1416:ad5940.c      **** */
1417:ad5940.c      **** void AD5940_WGCfgS(WGCfg_Type *pWGInit)
1418:ad5940.c      **** {
 4818              		.loc 1 1418 0
 4819              		.cfi_startproc
 4820              		@ args = 0, pretend = 0, frame = 16
 4821              		@ frame_needed = 1, uses_anonymous_args = 0
 4822 0000 80B5     		push	{r7, lr}
 4823              		.cfi_def_cfa_offset 8
 4824              		.cfi_offset 7, -8
 4825              		.cfi_offset 14, -4
 4826 0002 84B0     		sub	sp, sp, #16
 4827              		.cfi_def_cfa_offset 24
 4828 0004 00AF     		add	r7, sp, #0
 4829              		.cfi_def_cfa_register 7
 4830 0006 7860     		str	r0, [r7, #4]
1419:ad5940.c      ****   //Check parameters
1420:ad5940.c      ****   uint32_t tempreg;
1421:ad5940.c      ****   if(pWGInit->WgType == WGTYPE_SIN)
 4831              		.loc 1 1421 0
 4832 0008 7B68     		ldr	r3, [r7, #4]
 4833 000a 1B68     		ldr	r3, [r3]
 4834 000c 022B     		cmp	r3, #2
 4835 000e 1CD1     		bne	.L276
1422:ad5940.c      ****   {
1423:ad5940.c      ****     /* Configure Sine wave Generator */
1424:ad5940.c      ****     AD5940_WriteReg(REG_AFE_WGFCW, pWGInit->SinCfg.SinFreqWord);
 4836              		.loc 1 1424 0
 4837 0010 7B68     		ldr	r3, [r7, #4]
 4838 0012 1B6A     		ldr	r3, [r3, #32]
 4839 0014 1946     		mov	r1, r3
 4840 0016 42F23000 		movw	r0, #8240
 4841 001a FFF7FEFF 		bl	AD5940_WriteReg
1425:ad5940.c      ****     AD5940_WriteReg(REG_AFE_WGAMPLITUDE, pWGInit->SinCfg.SinAmplitudeWord);
 4842              		.loc 1 1425 0
 4843 001e 7B68     		ldr	r3, [r7, #4]
 4844 0020 5B6A     		ldr	r3, [r3, #36]
 4845 0022 1946     		mov	r1, r3
 4846 0024 42F23C00 		movw	r0, #8252
 4847 0028 FFF7FEFF 		bl	AD5940_WriteReg
1426:ad5940.c      ****     AD5940_WriteReg(REG_AFE_WGOFFSET, pWGInit->SinCfg.SinOffsetWord);
 4848              		.loc 1 1426 0
 4849 002c 7B68     		ldr	r3, [r7, #4]
 4850 002e 9B6A     		ldr	r3, [r3, #40]
 4851 0030 1946     		mov	r1, r3
 4852 0032 42F23800 		movw	r0, #8248
 4853 0036 FFF7FEFF 		bl	AD5940_WriteReg
1427:ad5940.c      ****     AD5940_WriteReg(REG_AFE_WGPHASE, pWGInit->SinCfg.SinPhaseWord);
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 112


 4854              		.loc 1 1427 0
 4855 003a 7B68     		ldr	r3, [r7, #4]
 4856 003c DB6A     		ldr	r3, [r3, #44]
 4857 003e 1946     		mov	r1, r3
 4858 0040 42F23400 		movw	r0, #8244
 4859 0044 FFF7FEFF 		bl	AD5940_WriteReg
 4860 0048 35E0     		b	.L277
 4861              	.L276:
1428:ad5940.c      ****   }
1429:ad5940.c      ****   else if(pWGInit->WgType == WGTYPE_TRAPZ)
 4862              		.loc 1 1429 0
 4863 004a 7B68     		ldr	r3, [r7, #4]
 4864 004c 1B68     		ldr	r3, [r3]
 4865 004e 032B     		cmp	r3, #3
 4866 0050 2AD1     		bne	.L278
1430:ad5940.c      ****   {
1431:ad5940.c      ****     /* Configure Trapezoid Generator */
1432:ad5940.c      ****     AD5940_WriteReg(REG_AFE_WGDCLEVEL1, pWGInit->TrapzCfg.WGTrapzDCLevel1);
 4867              		.loc 1 1432 0
 4868 0052 7B68     		ldr	r3, [r7, #4]
 4869 0054 9B68     		ldr	r3, [r3, #8]
 4870 0056 1946     		mov	r1, r3
 4871 0058 42F21800 		movw	r0, #8216
 4872 005c FFF7FEFF 		bl	AD5940_WriteReg
1433:ad5940.c      ****     AD5940_WriteReg(REG_AFE_WGDCLEVEL2, pWGInit->TrapzCfg.WGTrapzDCLevel2);
 4873              		.loc 1 1433 0
 4874 0060 7B68     		ldr	r3, [r7, #4]
 4875 0062 DB68     		ldr	r3, [r3, #12]
 4876 0064 1946     		mov	r1, r3
 4877 0066 42F21C00 		movw	r0, #8220
 4878 006a FFF7FEFF 		bl	AD5940_WriteReg
1434:ad5940.c      ****     AD5940_WriteReg(REG_AFE_WGDELAY1, pWGInit->TrapzCfg.WGTrapzDelay1);
 4879              		.loc 1 1434 0
 4880 006e 7B68     		ldr	r3, [r7, #4]
 4881 0070 1B69     		ldr	r3, [r3, #16]
 4882 0072 1946     		mov	r1, r3
 4883 0074 42F22000 		movw	r0, #8224
 4884 0078 FFF7FEFF 		bl	AD5940_WriteReg
1435:ad5940.c      ****     AD5940_WriteReg(REG_AFE_WGDELAY2, pWGInit->TrapzCfg.WGTrapzDelay2);
 4885              		.loc 1 1435 0
 4886 007c 7B68     		ldr	r3, [r7, #4]
 4887 007e 5B69     		ldr	r3, [r3, #20]
 4888 0080 1946     		mov	r1, r3
 4889 0082 42F22800 		movw	r0, #8232
 4890 0086 FFF7FEFF 		bl	AD5940_WriteReg
1436:ad5940.c      ****     AD5940_WriteReg(REG_AFE_WGSLOPE1, pWGInit->TrapzCfg.WGTrapzSlope1);
 4891              		.loc 1 1436 0
 4892 008a 7B68     		ldr	r3, [r7, #4]
 4893 008c 9B69     		ldr	r3, [r3, #24]
 4894 008e 1946     		mov	r1, r3
 4895 0090 42F22400 		movw	r0, #8228
 4896 0094 FFF7FEFF 		bl	AD5940_WriteReg
1437:ad5940.c      ****     AD5940_WriteReg(REG_AFE_WGSLOPE2, pWGInit->TrapzCfg.WGTrapzSlope2);
 4897              		.loc 1 1437 0
 4898 0098 7B68     		ldr	r3, [r7, #4]
 4899 009a DB69     		ldr	r3, [r3, #28]
 4900 009c 1946     		mov	r1, r3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 113


 4901 009e 42F22C00 		movw	r0, #8236
 4902 00a2 FFF7FEFF 		bl	AD5940_WriteReg
 4903 00a6 06E0     		b	.L277
 4904              	.L278:
1438:ad5940.c      ****   }
1439:ad5940.c      ****   else
1440:ad5940.c      ****   {
1441:ad5940.c      ****     /* Write DAC data. It's only have effect when WgType set to WGTYPE_MMR */ 
1442:ad5940.c      ****     AD5940_WriteReg(REG_AFE_HSDACDAT, pWGInit->WgCode);
 4905              		.loc 1 1442 0
 4906 00a8 7B68     		ldr	r3, [r7, #4]
 4907 00aa 1B6B     		ldr	r3, [r3, #48]
 4908 00ac 1946     		mov	r1, r3
 4909 00ae 42F24800 		movw	r0, #8264
 4910 00b2 FFF7FEFF 		bl	AD5940_WriteReg
 4911              	.L277:
1443:ad5940.c      ****   }
1444:ad5940.c      ****   tempreg = 0;
 4912              		.loc 1 1444 0
 4913 00b6 0023     		movs	r3, #0
 4914 00b8 FB60     		str	r3, [r7, #12]
1445:ad5940.c      ****   
1446:ad5940.c      ****   if(pWGInit->GainCalEn == bTRUE)
 4915              		.loc 1 1446 0
 4916 00ba 7B68     		ldr	r3, [r7, #4]
 4917 00bc 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4918 00be 012B     		cmp	r3, #1
 4919 00c0 03D1     		bne	.L279
1447:ad5940.c      ****     tempreg |= BITM_AFE_WGCON_DACGAINCAL;
 4920              		.loc 1 1447 0
 4921 00c2 FB68     		ldr	r3, [r7, #12]
 4922 00c4 43F02003 		orr	r3, r3, #32
 4923 00c8 FB60     		str	r3, [r7, #12]
 4924              	.L279:
1448:ad5940.c      ****   if(pWGInit->OffsetCalEn == bTRUE)
 4925              		.loc 1 1448 0
 4926 00ca 7B68     		ldr	r3, [r7, #4]
 4927 00cc 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4928 00ce 012B     		cmp	r3, #1
 4929 00d0 03D1     		bne	.L280
1449:ad5940.c      ****     tempreg |= BITM_AFE_WGCON_DACOFFSETCAL;
 4930              		.loc 1 1449 0
 4931 00d2 FB68     		ldr	r3, [r7, #12]
 4932 00d4 43F01003 		orr	r3, r3, #16
 4933 00d8 FB60     		str	r3, [r7, #12]
 4934              	.L280:
1450:ad5940.c      ****   tempreg |= (pWGInit->WgType) << BITP_AFE_WGCON_TYPESEL;
 4935              		.loc 1 1450 0
 4936 00da 7B68     		ldr	r3, [r7, #4]
 4937 00dc 1B68     		ldr	r3, [r3]
 4938 00de 5B00     		lsls	r3, r3, #1
 4939 00e0 FA68     		ldr	r2, [r7, #12]
 4940 00e2 1343     		orrs	r3, r3, r2
 4941 00e4 FB60     		str	r3, [r7, #12]
1451:ad5940.c      ****   AD5940_WriteReg(REG_AFE_WGCON, tempreg);
 4942              		.loc 1 1451 0
 4943 00e6 F968     		ldr	r1, [r7, #12]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 114


 4944 00e8 42F21400 		movw	r0, #8212
 4945 00ec FFF7FEFF 		bl	AD5940_WriteReg
1452:ad5940.c      **** }
 4946              		.loc 1 1452 0
 4947 00f0 00BF     		nop
 4948 00f2 1037     		adds	r7, r7, #16
 4949              		.cfi_def_cfa_offset 8
 4950 00f4 BD46     		mov	sp, r7
 4951              		.cfi_def_cfa_register 13
 4952              		@ sp needed
 4953 00f6 80BD     		pop	{r7, pc}
 4954              		.cfi_endproc
 4955              	.LFE45:
 4956              		.size	AD5940_WGCfgS, .-AD5940_WGCfgS
 4957              		.section	.text.AD5940_WGDACCodeS,"ax",%progbits
 4958              		.align	2
 4959              		.global	AD5940_WGDACCodeS
 4960              		.thumb
 4961              		.thumb_func
 4962              		.type	AD5940_WGDACCodeS, %function
 4963              	AD5940_WGDACCodeS:
 4964              	.LFB46:
1453:ad5940.c      **** 
1454:ad5940.c      **** /**
1455:ad5940.c      ****  * @brief Write HSDAC code directly when WG configured to MMR type
1456:ad5940.c      ****  * @param code: The 12-bit HSDAC code.
1457:ad5940.c      ****  * @return return none.
1458:ad5940.c      **** */
1459:ad5940.c      **** AD5940Err AD5940_WGDACCodeS(uint32_t code)
1460:ad5940.c      **** {
 4965              		.loc 1 1460 0
 4966              		.cfi_startproc
 4967              		@ args = 0, pretend = 0, frame = 8
 4968              		@ frame_needed = 1, uses_anonymous_args = 0
 4969 0000 80B5     		push	{r7, lr}
 4970              		.cfi_def_cfa_offset 8
 4971              		.cfi_offset 7, -8
 4972              		.cfi_offset 14, -4
 4973 0002 82B0     		sub	sp, sp, #8
 4974              		.cfi_def_cfa_offset 16
 4975 0004 00AF     		add	r7, sp, #0
 4976              		.cfi_def_cfa_register 7
 4977 0006 7860     		str	r0, [r7, #4]
1461:ad5940.c      ****   code &= 0xfff;
 4978              		.loc 1 1461 0
 4979 0008 7B68     		ldr	r3, [r7, #4]
 4980 000a C3F30B03 		ubfx	r3, r3, #0, #12
 4981 000e 7B60     		str	r3, [r7, #4]
1462:ad5940.c      ****   AD5940_WriteReg(REG_AFE_HSDACDAT, code);
 4982              		.loc 1 1462 0
 4983 0010 7968     		ldr	r1, [r7, #4]
 4984 0012 42F24800 		movw	r0, #8264
 4985 0016 FFF7FEFF 		bl	AD5940_WriteReg
1463:ad5940.c      ****   return AD5940ERR_OK;
 4986              		.loc 1 1463 0
 4987 001a 0023     		movs	r3, #0
1464:ad5940.c      **** }
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 115


 4988              		.loc 1 1464 0
 4989 001c 1846     		mov	r0, r3
 4990 001e 0837     		adds	r7, r7, #8
 4991              		.cfi_def_cfa_offset 8
 4992 0020 BD46     		mov	sp, r7
 4993              		.cfi_def_cfa_register 13
 4994              		@ sp needed
 4995 0022 80BD     		pop	{r7, pc}
 4996              		.cfi_endproc
 4997              	.LFE46:
 4998              		.size	AD5940_WGDACCodeS, .-AD5940_WGDACCodeS
 4999              		.section	.text.AD5940_WGFreqCtrlS,"ax",%progbits
 5000              		.align	2
 5001              		.global	AD5940_WGFreqCtrlS
 5002              		.thumb
 5003              		.thumb_func
 5004              		.type	AD5940_WGFreqCtrlS, %function
 5005              	AD5940_WGFreqCtrlS:
 5006              	.LFB47:
1465:ad5940.c      **** 
1466:ad5940.c      **** /**
1467:ad5940.c      ****  * @brief Update WG SIN wave frequency in Hz.
1468:ad5940.c      ****  * @param SinFreqHz: The desired frequency in Hz.
1469:ad5940.c      ****  * @param WGClock: The clock for WG. It's same as system clock and the default value is internal 16
1470:ad5940.c      ****  * @return return none.
1471:ad5940.c      **** */
1472:ad5940.c      **** void AD5940_WGFreqCtrlS(float SinFreqHz, float WGClock)
1473:ad5940.c      **** {
 5007              		.loc 1 1473 0
 5008              		.cfi_startproc
 5009              		@ args = 0, pretend = 0, frame = 16
 5010              		@ frame_needed = 1, uses_anonymous_args = 0
 5011 0000 80B5     		push	{r7, lr}
 5012              		.cfi_def_cfa_offset 8
 5013              		.cfi_offset 7, -8
 5014              		.cfi_offset 14, -4
 5015 0002 84B0     		sub	sp, sp, #16
 5016              		.cfi_def_cfa_offset 24
 5017 0004 00AF     		add	r7, sp, #0
 5018              		.cfi_def_cfa_register 7
 5019 0006 7860     		str	r0, [r7, #4]	@ float
 5020 0008 3960     		str	r1, [r7]	@ float
1474:ad5940.c      ****   uint32_t freq_word;
1475:ad5940.c      ****   freq_word = AD5940_WGFreqWordCal(SinFreqHz, WGClock);
 5021              		.loc 1 1475 0
 5022 000a 3968     		ldr	r1, [r7]	@ float
 5023 000c 7868     		ldr	r0, [r7, #4]	@ float
 5024 000e FFF7FEFF 		bl	AD5940_WGFreqWordCal
 5025 0012 F860     		str	r0, [r7, #12]
1476:ad5940.c      ****   AD5940_WriteReg(REG_AFE_WGFCW, freq_word);
 5026              		.loc 1 1476 0
 5027 0014 F968     		ldr	r1, [r7, #12]
 5028 0016 42F23000 		movw	r0, #8240
 5029 001a FFF7FEFF 		bl	AD5940_WriteReg
1477:ad5940.c      **** }
 5030              		.loc 1 1477 0
 5031 001e 00BF     		nop
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 116


 5032 0020 1037     		adds	r7, r7, #16
 5033              		.cfi_def_cfa_offset 8
 5034 0022 BD46     		mov	sp, r7
 5035              		.cfi_def_cfa_register 13
 5036              		@ sp needed
 5037 0024 80BD     		pop	{r7, pc}
 5038              		.cfi_endproc
 5039              	.LFE47:
 5040              		.size	AD5940_WGFreqCtrlS, .-AD5940_WGFreqCtrlS
 5041              		.global	__aeabi_fcmpeq
 5042              		.global	__aeabi_l2f
 5043 0026 00BF     		.section	.text.AD5940_WGFreqWordCal,"ax",%progbits
 5044              		.align	2
 5045              		.global	AD5940_WGFreqWordCal
 5046              		.thumb
 5047              		.thumb_func
 5048              		.type	AD5940_WGFreqWordCal, %function
 5049              	AD5940_WGFreqWordCal:
 5050              	.LFB48:
1478:ad5940.c      **** 
1479:ad5940.c      **** /**
1480:ad5940.c      ****    @brief Calculate sine wave generator frequency word. The maxim frequency is 250kHz-1LSB
1481:ad5940.c      ****    @param SinFreqHz : Target frequency in Hz unit.
1482:ad5940.c      ****    @param WGClock: Waveform generator clock frequency in Hz unit. The clock is sourced from system 
1483:ad5940.c      ****    @return return none.
1484:ad5940.c      **** */
1485:ad5940.c      **** uint32_t AD5940_WGFreqWordCal(float SinFreqHz, float WGClock)
1486:ad5940.c      **** {
 5051              		.loc 1 1486 0
 5052              		.cfi_startproc
 5053              		@ args = 0, pretend = 0, frame = 16
 5054              		@ frame_needed = 1, uses_anonymous_args = 0
 5055 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5056              		.cfi_def_cfa_offset 20
 5057              		.cfi_offset 4, -20
 5058              		.cfi_offset 5, -16
 5059              		.cfi_offset 6, -12
 5060              		.cfi_offset 7, -8
 5061              		.cfi_offset 14, -4
 5062 0002 85B0     		sub	sp, sp, #20
 5063              		.cfi_def_cfa_offset 40
 5064 0004 00AF     		add	r7, sp, #0
 5065              		.cfi_def_cfa_register 7
 5066 0006 7860     		str	r0, [r7, #4]	@ float
 5067 0008 3960     		str	r1, [r7]	@ float
1487:ad5940.c      ****   uint32_t temp;
1488:ad5940.c      ****   uint32_t __BITWIDTH_WGFCW = 26;
 5068              		.loc 1 1488 0
 5069 000a 1A23     		movs	r3, #26
 5070 000c BB60     		str	r3, [r7, #8]
1489:ad5940.c      ****   if(bIsS2silicon == bTRUE)
 5071              		.loc 1 1489 0
 5072 000e 2A4B     		ldr	r3, .L296
 5073 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5074 0012 012B     		cmp	r3, #1
 5075 0014 01D1     		bne	.L285
1490:ad5940.c      ****     __BITWIDTH_WGFCW = 30;
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 117


 5076              		.loc 1 1490 0
 5077 0016 1E23     		movs	r3, #30
 5078 0018 BB60     		str	r3, [r7, #8]
 5079              	.L285:
1491:ad5940.c      ****   if(WGClock == 0) return 0;
 5080              		.loc 1 1491 0
 5081 001a 4FF00001 		mov	r1, #0
 5082 001e 3868     		ldr	r0, [r7]	@ float
 5083 0020 FFF7FEFF 		bl	__aeabi_fcmpeq
 5084 0024 0346     		mov	r3, r0
 5085 0026 002B     		cmp	r3, #0
 5086 0028 01D0     		beq	.L295
 5087              		.loc 1 1491 0 is_stmt 0 discriminator 1
 5088 002a 0023     		movs	r3, #0
 5089 002c 3FE0     		b	.L288
 5090              	.L295:
1492:ad5940.c      ****   temp = (uint32_t)(SinFreqHz*(1LL<<__BITWIDTH_WGFCW)/WGClock + 0.5f);
 5091              		.loc 1 1492 0 is_stmt 1
 5092 002e 4FF00102 		mov	r2, #1
 5093 0032 4FF00003 		mov	r3, #0
 5094 0036 B968     		ldr	r1, [r7, #8]
 5095 0038 A1F12006 		sub	r6, r1, #32
 5096 003c C1F12000 		rsb	r0, r1, #32
 5097 0040 03FA01F5 		lsl	r5, r3, r1
 5098 0044 02FA06F6 		lsl	r6, r2, r6
 5099 0048 3543     		orrs	r5, r5, r6
 5100 004a 22FA00F0 		lsr	r0, r2, r0
 5101 004e 0543     		orrs	r5, r5, r0
 5102 0050 02FA01F4 		lsl	r4, r2, r1
 5103 0054 2046     		mov	r0, r4
 5104 0056 2946     		mov	r1, r5
 5105 0058 FFF7FEFF 		bl	__aeabi_l2f
 5106 005c 0346     		mov	r3, r0
 5107 005e 7968     		ldr	r1, [r7, #4]	@ float
 5108 0060 1846     		mov	r0, r3
 5109 0062 FFF7FEFF 		bl	__aeabi_fmul
 5110 0066 0346     		mov	r3, r0
 5111 0068 3968     		ldr	r1, [r7]	@ float
 5112 006a 1846     		mov	r0, r3
 5113 006c FFF7FEFF 		bl	__aeabi_fdiv
 5114 0070 0346     		mov	r3, r0
 5115 0072 4FF07C51 		mov	r1, #1056964608
 5116 0076 1846     		mov	r0, r3
 5117 0078 FFF7FEFF 		bl	__aeabi_fadd
 5118 007c 0346     		mov	r3, r0
 5119 007e 1846     		mov	r0, r3
 5120 0080 FFF7FEFF 		bl	__aeabi_f2uiz
 5121 0084 0346     		mov	r3, r0
 5122 0086 FB60     		str	r3, [r7, #12]
1493:ad5940.c      ****   if(temp > ((__BITWIDTH_WGFCW == 26)?0xfffff:0xffffff))
 5123              		.loc 1 1493 0
 5124 0088 BB68     		ldr	r3, [r7, #8]
 5125 008a 1A2B     		cmp	r3, #26
 5126 008c 01D1     		bne	.L289
 5127              		.loc 1 1493 0 is_stmt 0 discriminator 1
 5128 008e 0B4A     		ldr	r2, .L296+4
 5129 0090 01E0     		b	.L290
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 118


 5130              	.L289:
 5131              		.loc 1 1493 0 discriminator 2
 5132 0092 6FF07F42 		mvn	r2, #-16777216
 5133              	.L290:
 5134              		.loc 1 1493 0 discriminator 4
 5135 0096 FB68     		ldr	r3, [r7, #12]
 5136 0098 9A42     		cmp	r2, r3
 5137 009a 07D2     		bcs	.L291
1494:ad5940.c      ****     temp = (__BITWIDTH_WGFCW == 26)?0xfffff:0xffffff;
 5138              		.loc 1 1494 0 is_stmt 1
 5139 009c BB68     		ldr	r3, [r7, #8]
 5140 009e 1A2B     		cmp	r3, #26
 5141 00a0 01D1     		bne	.L292
 5142              		.loc 1 1494 0 is_stmt 0 discriminator 1
 5143 00a2 064B     		ldr	r3, .L296+4
 5144 00a4 01E0     		b	.L293
 5145              	.L292:
 5146              		.loc 1 1494 0 discriminator 2
 5147 00a6 6FF07F43 		mvn	r3, #-16777216
 5148              	.L293:
 5149              		.loc 1 1494 0 discriminator 4
 5150 00aa FB60     		str	r3, [r7, #12]
 5151              	.L291:
1495:ad5940.c      ****   
1496:ad5940.c      ****   return temp;
 5152              		.loc 1 1496 0 is_stmt 1
 5153 00ac FB68     		ldr	r3, [r7, #12]
 5154              	.L288:
1497:ad5940.c      **** }
 5155              		.loc 1 1497 0
 5156 00ae 1846     		mov	r0, r3
 5157 00b0 1437     		adds	r7, r7, #20
 5158              		.cfi_def_cfa_offset 20
 5159 00b2 BD46     		mov	sp, r7
 5160              		.cfi_def_cfa_register 13
 5161              		@ sp needed
 5162 00b4 F0BD     		pop	{r4, r5, r6, r7, pc}
 5163              	.L297:
 5164 00b6 00BF     		.align	2
 5165              	.L296:
 5166 00b8 00000000 		.word	bIsS2silicon
 5167 00bc FFFF0F00 		.word	1048575
 5168              		.cfi_endproc
 5169              	.LFE48:
 5170              		.size	AD5940_WGFreqWordCal, .-AD5940_WGFreqWordCal
 5171              		.section	.text.AD5940_LPLoopCfgS,"ax",%progbits
 5172              		.align	2
 5173              		.global	AD5940_LPLoopCfgS
 5174              		.thumb
 5175              		.thumb_func
 5176              		.type	AD5940_LPLoopCfgS, %function
 5177              	AD5940_LPLoopCfgS:
 5178              	.LFB49:
1498:ad5940.c      **** 
1499:ad5940.c      **** /**
1500:ad5940.c      ****  * @} Waveform_Generator_Functions
1501:ad5940.c      ****  * @} High_Speed_Loop_Functions
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 119


1502:ad5940.c      ****  * @} High_Speed_Loop
1503:ad5940.c      **** */
1504:ad5940.c      **** 
1505:ad5940.c      **** 
1506:ad5940.c      **** /**
1507:ad5940.c      ****  * @defgroup Low_Power_Loop
1508:ad5940.c      ****  * @brief The low power loop.
1509:ad5940.c      ****  * @{
1510:ad5940.c      ****  *    @defgroup Low_Power_Loop_Functions
1511:ad5940.c      ****  *    @{
1512:ad5940.c      **** */
1513:ad5940.c      **** 
1514:ad5940.c      **** /**
1515:ad5940.c      ****    @brief Configure low power loop include LPDAC LPAmp(PA and TIA)
1516:ad5940.c      ****    @param pLpLoopCfg: Pointer to configure structure;
1517:ad5940.c      ****    @return return none.
1518:ad5940.c      **** */
1519:ad5940.c      **** void AD5940_LPLoopCfgS(LPLoopCfg_Type *pLpLoopCfg)
1520:ad5940.c      **** {
 5179              		.loc 1 1520 0
 5180              		.cfi_startproc
 5181              		@ args = 0, pretend = 0, frame = 8
 5182              		@ frame_needed = 1, uses_anonymous_args = 0
 5183 0000 80B5     		push	{r7, lr}
 5184              		.cfi_def_cfa_offset 8
 5185              		.cfi_offset 7, -8
 5186              		.cfi_offset 14, -4
 5187 0002 82B0     		sub	sp, sp, #8
 5188              		.cfi_def_cfa_offset 16
 5189 0004 00AF     		add	r7, sp, #0
 5190              		.cfi_def_cfa_register 7
 5191 0006 7860     		str	r0, [r7, #4]
1521:ad5940.c      ****   AD5940_LPDACCfgS(&pLpLoopCfg->LpDacCfg);
 5192              		.loc 1 1521 0
 5193 0008 7B68     		ldr	r3, [r7, #4]
 5194 000a 1846     		mov	r0, r3
 5195 000c FFF7FEFF 		bl	AD5940_LPDACCfgS
1522:ad5940.c      ****   AD5940_LPAMPCfgS(&pLpLoopCfg->LpAmpCfg);
 5196              		.loc 1 1522 0
 5197 0010 7B68     		ldr	r3, [r7, #4]
 5198 0012 2033     		adds	r3, r3, #32
 5199 0014 1846     		mov	r0, r3
 5200 0016 FFF7FEFF 		bl	AD5940_LPAMPCfgS
1523:ad5940.c      **** }
 5201              		.loc 1 1523 0
 5202 001a 00BF     		nop
 5203 001c 0837     		adds	r7, r7, #8
 5204              		.cfi_def_cfa_offset 8
 5205 001e BD46     		mov	sp, r7
 5206              		.cfi_def_cfa_register 13
 5207              		@ sp needed
 5208 0020 80BD     		pop	{r7, pc}
 5209              		.cfi_endproc
 5210              	.LFE49:
 5211              		.size	AD5940_LPLoopCfgS, .-AD5940_LPLoopCfgS
 5212 0022 00BF     		.section	.text.AD5940_LPDACCfgS,"ax",%progbits
 5213              		.align	2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 120


 5214              		.global	AD5940_LPDACCfgS
 5215              		.thumb
 5216              		.thumb_func
 5217              		.type	AD5940_LPDACCfgS, %function
 5218              	AD5940_LPDACCfgS:
 5219              	.LFB50:
1524:ad5940.c      **** 
1525:ad5940.c      **** /**
1526:ad5940.c      ****    @brief Initialize LPDAC
1527:ad5940.c      ****    @param pLpDacCfg: Pointer to configuration structure
1528:ad5940.c      ****    @return return none.
1529:ad5940.c      **** */
1530:ad5940.c      **** void AD5940_LPDACCfgS(LPDACCfg_Type *pLpDacCfg)
1531:ad5940.c      **** {
 5220              		.loc 1 1531 0
 5221              		.cfi_startproc
 5222              		@ args = 0, pretend = 0, frame = 16
 5223              		@ frame_needed = 1, uses_anonymous_args = 0
 5224 0000 80B5     		push	{r7, lr}
 5225              		.cfi_def_cfa_offset 8
 5226              		.cfi_offset 7, -8
 5227              		.cfi_offset 14, -4
 5228 0002 84B0     		sub	sp, sp, #16
 5229              		.cfi_def_cfa_offset 24
 5230 0004 00AF     		add	r7, sp, #0
 5231              		.cfi_def_cfa_register 7
 5232 0006 7860     		str	r0, [r7, #4]
1532:ad5940.c      ****   uint32_t tempreg;
1533:ad5940.c      ****   tempreg = 0;
 5233              		.loc 1 1533 0
 5234 0008 0023     		movs	r3, #0
 5235 000a FB60     		str	r3, [r7, #12]
1534:ad5940.c      ****   tempreg = (pLpDacCfg->LpDacSrc)<<BITP_AFE_LPDACCON0_WAVETYPE;
 5236              		.loc 1 1534 0
 5237 000c 7B68     		ldr	r3, [r7, #4]
 5238 000e 5B68     		ldr	r3, [r3, #4]
 5239 0010 9B01     		lsls	r3, r3, #6
 5240 0012 FB60     		str	r3, [r7, #12]
1535:ad5940.c      ****   tempreg |= (pLpDacCfg->LpDacVzeroMux)<<BITP_AFE_LPDACCON0_VZEROMUX;
 5241              		.loc 1 1535 0
 5242 0014 7B68     		ldr	r3, [r7, #4]
 5243 0016 9B68     		ldr	r3, [r3, #8]
 5244 0018 1B01     		lsls	r3, r3, #4
 5245 001a FA68     		ldr	r2, [r7, #12]
 5246 001c 1343     		orrs	r3, r3, r2
 5247 001e FB60     		str	r3, [r7, #12]
1536:ad5940.c      ****   tempreg |= (pLpDacCfg->LpDacVbiasMux)<<BITP_AFE_LPDACCON0_VBIASMUX;
 5248              		.loc 1 1536 0
 5249 0020 7B68     		ldr	r3, [r7, #4]
 5250 0022 DB68     		ldr	r3, [r3, #12]
 5251 0024 DB00     		lsls	r3, r3, #3
 5252 0026 FA68     		ldr	r2, [r7, #12]
 5253 0028 1343     		orrs	r3, r3, r2
 5254 002a FB60     		str	r3, [r7, #12]
1537:ad5940.c      ****   tempreg |= (pLpDacCfg->LpDacRef)<<BITP_AFE_LPDACCON0_REFSEL;
 5255              		.loc 1 1537 0
 5256 002c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 121


 5257 002e 5B69     		ldr	r3, [r3, #20]
 5258 0030 9B00     		lsls	r3, r3, #2
 5259 0032 FA68     		ldr	r2, [r7, #12]
 5260 0034 1343     		orrs	r3, r3, r2
 5261 0036 FB60     		str	r3, [r7, #12]
1538:ad5940.c      ****   if(pLpDacCfg->DataRst == bFALSE)
 5262              		.loc 1 1538 0
 5263 0038 7B68     		ldr	r3, [r7, #4]
 5264 003a 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 5265 003c 002B     		cmp	r3, #0
 5266 003e 03D1     		bne	.L300
1539:ad5940.c      ****     tempreg |= BITM_AFE_LPDACCON0_RSTEN;
 5267              		.loc 1 1539 0
 5268 0040 FB68     		ldr	r3, [r7, #12]
 5269 0042 43F00103 		orr	r3, r3, #1
 5270 0046 FB60     		str	r3, [r7, #12]
 5271              	.L300:
1540:ad5940.c      ****   if(pLpDacCfg->PowerEn == bFALSE)
 5272              		.loc 1 1540 0
 5273 0048 7B68     		ldr	r3, [r7, #4]
 5274 004a 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 5275 004c 002B     		cmp	r3, #0
 5276 004e 03D1     		bne	.L301
1541:ad5940.c      ****     tempreg |= BITM_AFE_LPDACCON0_PWDEN;
 5277              		.loc 1 1541 0
 5278 0050 FB68     		ldr	r3, [r7, #12]
 5279 0052 43F00203 		orr	r3, r3, #2
 5280 0056 FB60     		str	r3, [r7, #12]
 5281              	.L301:
1542:ad5940.c      ****   if(pLpDacCfg->LpdacSel == LPDAC0)
 5282              		.loc 1 1542 0
 5283 0058 7B68     		ldr	r3, [r7, #4]
 5284 005a 1B68     		ldr	r3, [r3]
 5285 005c 002B     		cmp	r3, #0
 5286 005e 17D1     		bne	.L302
1543:ad5940.c      ****   {
1544:ad5940.c      ****     AD5940_WriteReg(REG_AFE_LPDACCON0, tempreg);
 5287              		.loc 1 1544 0
 5288 0060 F968     		ldr	r1, [r7, #12]
 5289 0062 42F22810 		movw	r0, #8488
 5290 0066 FFF7FEFF 		bl	AD5940_WriteReg
1545:ad5940.c      ****     AD5940_LPDAC0WriteS(pLpDacCfg->DacData12Bit, pLpDacCfg->DacData6Bit);
 5291              		.loc 1 1545 0
 5292 006a 7B68     		ldr	r3, [r7, #4]
 5293 006c 5A8B     		ldrh	r2, [r3, #26]
 5294 006e 7B68     		ldr	r3, [r7, #4]
 5295 0070 9B8B     		ldrh	r3, [r3, #28]
 5296 0072 DBB2     		uxtb	r3, r3
 5297 0074 1946     		mov	r1, r3
 5298 0076 1046     		mov	r0, r2
 5299 0078 FFF7FEFF 		bl	AD5940_LPDAC0WriteS
1546:ad5940.c      ****     AD5940_WriteReg(REG_AFE_LPDACSW0, pLpDacCfg->LpDacSW|BITM_AFE_LPDACSW0_LPMODEDIS);  /* Overwrit
 5300              		.loc 1 1546 0
 5301 007c 7B68     		ldr	r3, [r7, #4]
 5302 007e 1B69     		ldr	r3, [r3, #16]
 5303 0080 43F02003 		orr	r3, r3, #32
 5304 0084 1946     		mov	r1, r3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 122


 5305 0086 42F22410 		movw	r0, #8484
 5306 008a FFF7FEFF 		bl	AD5940_WriteReg
1547:ad5940.c      ****   }
1548:ad5940.c      ****   else
1549:ad5940.c      ****   {
1550:ad5940.c      ****     AD5940_WriteReg(REG_AFE_LPDACCON1, tempreg);
1551:ad5940.c      ****     AD5940_LPDAC1WriteS(pLpDacCfg->DacData12Bit, pLpDacCfg->DacData6Bit);
1552:ad5940.c      ****     AD5940_WriteReg(REG_AFE_LPDACSW1, pLpDacCfg->LpDacSW|BITM_AFE_LPDACSW0_LPMODEDIS);  /* Overwrit
1553:ad5940.c      ****   }
1554:ad5940.c      **** }
 5307              		.loc 1 1554 0
 5308 008e 16E0     		b	.L304
 5309              	.L302:
1550:ad5940.c      ****     AD5940_LPDAC1WriteS(pLpDacCfg->DacData12Bit, pLpDacCfg->DacData6Bit);
 5310              		.loc 1 1550 0
 5311 0090 F968     		ldr	r1, [r7, #12]
 5312 0092 42F23410 		movw	r0, #8500
 5313 0096 FFF7FEFF 		bl	AD5940_WriteReg
1551:ad5940.c      ****     AD5940_WriteReg(REG_AFE_LPDACSW1, pLpDacCfg->LpDacSW|BITM_AFE_LPDACSW0_LPMODEDIS);  /* Overwrit
 5314              		.loc 1 1551 0
 5315 009a 7B68     		ldr	r3, [r7, #4]
 5316 009c 5A8B     		ldrh	r2, [r3, #26]
 5317 009e 7B68     		ldr	r3, [r7, #4]
 5318 00a0 9B8B     		ldrh	r3, [r3, #28]
 5319 00a2 DBB2     		uxtb	r3, r3
 5320 00a4 1946     		mov	r1, r3
 5321 00a6 1046     		mov	r0, r2
 5322 00a8 FFF7FEFF 		bl	AD5940_LPDAC1WriteS
1552:ad5940.c      ****   }
 5323              		.loc 1 1552 0
 5324 00ac 7B68     		ldr	r3, [r7, #4]
 5325 00ae 1B69     		ldr	r3, [r3, #16]
 5326 00b0 43F02003 		orr	r3, r3, #32
 5327 00b4 1946     		mov	r1, r3
 5328 00b6 42F23010 		movw	r0, #8496
 5329 00ba FFF7FEFF 		bl	AD5940_WriteReg
 5330              	.L304:
 5331              		.loc 1 1554 0
 5332 00be 00BF     		nop
 5333 00c0 1037     		adds	r7, r7, #16
 5334              		.cfi_def_cfa_offset 8
 5335 00c2 BD46     		mov	sp, r7
 5336              		.cfi_def_cfa_register 13
 5337              		@ sp needed
 5338 00c4 80BD     		pop	{r7, pc}
 5339              		.cfi_endproc
 5340              	.LFE50:
 5341              		.size	AD5940_LPDACCfgS, .-AD5940_LPDACCfgS
 5342 00c6 00BF     		.section	.text.AD5940_LPDACWriteS,"ax",%progbits
 5343              		.align	2
 5344              		.global	AD5940_LPDACWriteS
 5345              		.thumb
 5346              		.thumb_func
 5347              		.type	AD5940_LPDACWriteS, %function
 5348              	AD5940_LPDACWriteS:
 5349              	.LFB51:
1555:ad5940.c      **** 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 123


1556:ad5940.c      **** /**
1557:ad5940.c      ****    @brief Write LPDAC data
1558:ad5940.c      ****    @param Data12Bit: 12Bit DAC data
1559:ad5940.c      ****    @param Data6Bit: 6Bit DAC data
1560:ad5940.c      ****    @return return none.
1561:ad5940.c      **** */
1562:ad5940.c      **** void AD5940_LPDACWriteS(uint16_t Data12Bit, uint8_t Data6Bit)
1563:ad5940.c      **** {
 5350              		.loc 1 1563 0
 5351              		.cfi_startproc
 5352              		@ args = 0, pretend = 0, frame = 8
 5353              		@ frame_needed = 1, uses_anonymous_args = 0
 5354 0000 80B5     		push	{r7, lr}
 5355              		.cfi_def_cfa_offset 8
 5356              		.cfi_offset 7, -8
 5357              		.cfi_offset 14, -4
 5358 0002 82B0     		sub	sp, sp, #8
 5359              		.cfi_def_cfa_offset 16
 5360 0004 00AF     		add	r7, sp, #0
 5361              		.cfi_def_cfa_register 7
 5362 0006 0346     		mov	r3, r0
 5363 0008 0A46     		mov	r2, r1
 5364 000a FB80     		strh	r3, [r7, #6]	@ movhi
 5365 000c 1346     		mov	r3, r2
 5366 000e 7B71     		strb	r3, [r7, #5]
1564:ad5940.c      ****   /* Check parameter */
1565:ad5940.c      ****   Data6Bit &= 0x3f;
 5367              		.loc 1 1565 0
 5368 0010 7B79     		ldrb	r3, [r7, #5]
 5369 0012 03F03F03 		and	r3, r3, #63
 5370 0016 7B71     		strb	r3, [r7, #5]
1566:ad5940.c      ****   Data12Bit &= 0xfff;
 5371              		.loc 1 1566 0
 5372 0018 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5373 001a C3F30B03 		ubfx	r3, r3, #0, #12
 5374 001e FB80     		strh	r3, [r7, #6]	@ movhi
1567:ad5940.c      ****   AD5940_WriteReg(REG_AFE_LPDACDAT0, ((uint32_t)Data6Bit<<12)|Data12Bit);
 5375              		.loc 1 1567 0
 5376 0020 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 5377 0022 1A03     		lsls	r2, r3, #12
 5378 0024 FB88     		ldrh	r3, [r7, #6]
 5379 0026 1343     		orrs	r3, r3, r2
 5380 0028 1946     		mov	r1, r3
 5381 002a 42F22010 		movw	r0, #8480
 5382 002e FFF7FEFF 		bl	AD5940_WriteReg
1568:ad5940.c      **** }
 5383              		.loc 1 1568 0
 5384 0032 00BF     		nop
 5385 0034 0837     		adds	r7, r7, #8
 5386              		.cfi_def_cfa_offset 8
 5387 0036 BD46     		mov	sp, r7
 5388              		.cfi_def_cfa_register 13
 5389              		@ sp needed
 5390 0038 80BD     		pop	{r7, pc}
 5391              		.cfi_endproc
 5392              	.LFE51:
 5393              		.size	AD5940_LPDACWriteS, .-AD5940_LPDACWriteS
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 124


 5394 003a 00BF     		.section	.text.AD5940_LPDAC0WriteS,"ax",%progbits
 5395              		.align	2
 5396              		.global	AD5940_LPDAC0WriteS
 5397              		.thumb
 5398              		.thumb_func
 5399              		.type	AD5940_LPDAC0WriteS, %function
 5400              	AD5940_LPDAC0WriteS:
 5401              	.LFB52:
1569:ad5940.c      **** 
1570:ad5940.c      **** /**
1571:ad5940.c      ****    @brief Write LPDAC0 data
1572:ad5940.c      ****    @param Data12Bit: 12Bit DAC data
1573:ad5940.c      ****    @param Data6Bit: 6Bit DAC data
1574:ad5940.c      ****    @return return none.
1575:ad5940.c      **** */
1576:ad5940.c      **** void AD5940_LPDAC0WriteS(uint16_t Data12Bit, uint8_t Data6Bit)
1577:ad5940.c      **** {
 5402              		.loc 1 1577 0
 5403              		.cfi_startproc
 5404              		@ args = 0, pretend = 0, frame = 8
 5405              		@ frame_needed = 1, uses_anonymous_args = 0
 5406 0000 80B5     		push	{r7, lr}
 5407              		.cfi_def_cfa_offset 8
 5408              		.cfi_offset 7, -8
 5409              		.cfi_offset 14, -4
 5410 0002 82B0     		sub	sp, sp, #8
 5411              		.cfi_def_cfa_offset 16
 5412 0004 00AF     		add	r7, sp, #0
 5413              		.cfi_def_cfa_register 7
 5414 0006 0346     		mov	r3, r0
 5415 0008 0A46     		mov	r2, r1
 5416 000a FB80     		strh	r3, [r7, #6]	@ movhi
 5417 000c 1346     		mov	r3, r2
 5418 000e 7B71     		strb	r3, [r7, #5]
1578:ad5940.c      ****   /* Check parameter */
1579:ad5940.c      ****   Data6Bit &= 0x3f;
 5419              		.loc 1 1579 0
 5420 0010 7B79     		ldrb	r3, [r7, #5]
 5421 0012 03F03F03 		and	r3, r3, #63
 5422 0016 7B71     		strb	r3, [r7, #5]
1580:ad5940.c      ****   Data12Bit &= 0xfff;
 5423              		.loc 1 1580 0
 5424 0018 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5425 001a C3F30B03 		ubfx	r3, r3, #0, #12
 5426 001e FB80     		strh	r3, [r7, #6]	@ movhi
1581:ad5940.c      ****   AD5940_WriteReg(REG_AFE_LPDACDAT0, ((uint32_t)Data6Bit<<12)|Data12Bit);
 5427              		.loc 1 1581 0
 5428 0020 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 5429 0022 1A03     		lsls	r2, r3, #12
 5430 0024 FB88     		ldrh	r3, [r7, #6]
 5431 0026 1343     		orrs	r3, r3, r2
 5432 0028 1946     		mov	r1, r3
 5433 002a 42F22010 		movw	r0, #8480
 5434 002e FFF7FEFF 		bl	AD5940_WriteReg
1582:ad5940.c      **** }
 5435              		.loc 1 1582 0
 5436 0032 00BF     		nop
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 125


 5437 0034 0837     		adds	r7, r7, #8
 5438              		.cfi_def_cfa_offset 8
 5439 0036 BD46     		mov	sp, r7
 5440              		.cfi_def_cfa_register 13
 5441              		@ sp needed
 5442 0038 80BD     		pop	{r7, pc}
 5443              		.cfi_endproc
 5444              	.LFE52:
 5445              		.size	AD5940_LPDAC0WriteS, .-AD5940_LPDAC0WriteS
 5446 003a 00BF     		.section	.text.AD5940_LPDAC1WriteS,"ax",%progbits
 5447              		.align	2
 5448              		.global	AD5940_LPDAC1WriteS
 5449              		.thumb
 5450              		.thumb_func
 5451              		.type	AD5940_LPDAC1WriteS, %function
 5452              	AD5940_LPDAC1WriteS:
 5453              	.LFB53:
1583:ad5940.c      **** 
1584:ad5940.c      **** /**
1585:ad5940.c      ****    @brief Write LPDAC1 data
1586:ad5940.c      ****    @param Data12Bit: 12Bit DAC data
1587:ad5940.c      ****    @param Data6Bit: 6Bit DAC data
1588:ad5940.c      ****    @return return none.
1589:ad5940.c      **** */
1590:ad5940.c      **** void AD5940_LPDAC1WriteS(uint16_t Data12Bit, uint8_t Data6Bit)
1591:ad5940.c      **** {
 5454              		.loc 1 1591 0
 5455              		.cfi_startproc
 5456              		@ args = 0, pretend = 0, frame = 8
 5457              		@ frame_needed = 1, uses_anonymous_args = 0
 5458 0000 80B5     		push	{r7, lr}
 5459              		.cfi_def_cfa_offset 8
 5460              		.cfi_offset 7, -8
 5461              		.cfi_offset 14, -4
 5462 0002 82B0     		sub	sp, sp, #8
 5463              		.cfi_def_cfa_offset 16
 5464 0004 00AF     		add	r7, sp, #0
 5465              		.cfi_def_cfa_register 7
 5466 0006 0346     		mov	r3, r0
 5467 0008 0A46     		mov	r2, r1
 5468 000a FB80     		strh	r3, [r7, #6]	@ movhi
 5469 000c 1346     		mov	r3, r2
 5470 000e 7B71     		strb	r3, [r7, #5]
1592:ad5940.c      ****   /* Check parameter */
1593:ad5940.c      ****   Data6Bit &= 0x3f;
 5471              		.loc 1 1593 0
 5472 0010 7B79     		ldrb	r3, [r7, #5]
 5473 0012 03F03F03 		and	r3, r3, #63
 5474 0016 7B71     		strb	r3, [r7, #5]
1594:ad5940.c      ****   Data12Bit &= 0xfff;
 5475              		.loc 1 1594 0
 5476 0018 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5477 001a C3F30B03 		ubfx	r3, r3, #0, #12
 5478 001e FB80     		strh	r3, [r7, #6]	@ movhi
1595:ad5940.c      ****   AD5940_WriteReg(REG_AFE_LPDACDAT1, ((uint32_t)Data6Bit<<12)|Data12Bit);
 5479              		.loc 1 1595 0
 5480 0020 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 126


 5481 0022 1A03     		lsls	r2, r3, #12
 5482 0024 FB88     		ldrh	r3, [r7, #6]
 5483 0026 1343     		orrs	r3, r3, r2
 5484 0028 1946     		mov	r1, r3
 5485 002a 42F22C10 		movw	r0, #8492
 5486 002e FFF7FEFF 		bl	AD5940_WriteReg
1596:ad5940.c      **** }
 5487              		.loc 1 1596 0
 5488 0032 00BF     		nop
 5489 0034 0837     		adds	r7, r7, #8
 5490              		.cfi_def_cfa_offset 8
 5491 0036 BD46     		mov	sp, r7
 5492              		.cfi_def_cfa_register 13
 5493              		@ sp needed
 5494 0038 80BD     		pop	{r7, pc}
 5495              		.cfi_endproc
 5496              	.LFE53:
 5497              		.size	AD5940_LPDAC1WriteS, .-AD5940_LPDAC1WriteS
 5498 003a 00BF     		.section	.text.AD5940_LPAMPCfgS,"ax",%progbits
 5499              		.align	2
 5500              		.global	AD5940_LPAMPCfgS
 5501              		.thumb
 5502              		.thumb_func
 5503              		.type	AD5940_LPAMPCfgS, %function
 5504              	AD5940_LPAMPCfgS:
 5505              	.LFB54:
1597:ad5940.c      **** 
1598:ad5940.c      **** /**
1599:ad5940.c      ****    @brief Initialize LP TIA and PA
1600:ad5940.c      ****    @param pLpAmpCfg: Pointer to configuration structure
1601:ad5940.c      ****    @return return none.
1602:ad5940.c      **** */
1603:ad5940.c      **** void AD5940_LPAMPCfgS(LPAmpCfg_Type *pLpAmpCfg)
1604:ad5940.c      **** {
 5506              		.loc 1 1604 0
 5507              		.cfi_startproc
 5508              		@ args = 0, pretend = 0, frame = 16
 5509              		@ frame_needed = 1, uses_anonymous_args = 0
 5510 0000 80B5     		push	{r7, lr}
 5511              		.cfi_def_cfa_offset 8
 5512              		.cfi_offset 7, -8
 5513              		.cfi_offset 14, -4
 5514 0002 84B0     		sub	sp, sp, #16
 5515              		.cfi_def_cfa_offset 24
 5516 0004 00AF     		add	r7, sp, #0
 5517              		.cfi_def_cfa_register 7
 5518 0006 7860     		str	r0, [r7, #4]
1605:ad5940.c      ****   //check parameters
1606:ad5940.c      ****   uint32_t tempreg;
1607:ad5940.c      **** 
1608:ad5940.c      ****   tempreg = 0;
 5519              		.loc 1 1608 0
 5520 0008 0023     		movs	r3, #0
 5521 000a FB60     		str	r3, [r7, #12]
1609:ad5940.c      ****   if(pLpAmpCfg->LpPaPwrEn == bFALSE)
 5522              		.loc 1 1609 0
 5523 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 127


 5524 000e 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 5525 0010 002B     		cmp	r3, #0
 5526 0012 03D1     		bne	.L309
1610:ad5940.c      ****     tempreg |= BITM_AFE_LPTIACON0_PAPDEN; 
 5527              		.loc 1 1610 0
 5528 0014 FB68     		ldr	r3, [r7, #12]
 5529 0016 43F00203 		orr	r3, r3, #2
 5530 001a FB60     		str	r3, [r7, #12]
 5531              	.L309:
1611:ad5940.c      ****   if(pLpAmpCfg->LpTiaPwrEn == bFALSE)
 5532              		.loc 1 1611 0
 5533 001c 7B68     		ldr	r3, [r7, #4]
 5534 001e 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 5535 0020 002B     		cmp	r3, #0
 5536 0022 03D1     		bne	.L310
1612:ad5940.c      ****     tempreg |= BITM_AFE_LPTIACON0_TIAPDEN;
 5537              		.loc 1 1612 0
 5538 0024 FB68     		ldr	r3, [r7, #12]
 5539 0026 43F00103 		orr	r3, r3, #1
 5540 002a FB60     		str	r3, [r7, #12]
 5541              	.L310:
1613:ad5940.c      ****   if(pLpAmpCfg->LpAmpPwrMod == LPAMPPWR_HALF) 
 5542              		.loc 1 1613 0
 5543 002c 7B68     		ldr	r3, [r7, #4]
 5544 002e 1B69     		ldr	r3, [r3, #16]
 5545 0030 042B     		cmp	r3, #4
 5546 0032 04D1     		bne	.L311
1614:ad5940.c      ****     tempreg |= BITM_AFE_LPTIACON0_HALFPWR;
 5547              		.loc 1 1614 0
 5548 0034 FB68     		ldr	r3, [r7, #12]
 5549 0036 43F00403 		orr	r3, r3, #4
 5550 003a FB60     		str	r3, [r7, #12]
 5551 003c 05E0     		b	.L312
 5552              	.L311:
1615:ad5940.c      ****   else
1616:ad5940.c      ****   {
1617:ad5940.c      ****     tempreg |= pLpAmpCfg->LpAmpPwrMod<<BITP_AFE_LPTIACON0_IBOOST;
 5553              		.loc 1 1617 0
 5554 003e 7B68     		ldr	r3, [r7, #4]
 5555 0040 1B69     		ldr	r3, [r3, #16]
 5556 0042 DB00     		lsls	r3, r3, #3
 5557 0044 FA68     		ldr	r2, [r7, #12]
 5558 0046 1343     		orrs	r3, r3, r2
 5559 0048 FB60     		str	r3, [r7, #12]
 5560              	.L312:
1618:ad5940.c      ****   }
1619:ad5940.c      ****   tempreg |= pLpAmpCfg->LpTiaRtia<<BITP_AFE_LPTIACON0_TIAGAIN;
 5561              		.loc 1 1619 0
 5562 004a 7B68     		ldr	r3, [r7, #4]
 5563 004c DB68     		ldr	r3, [r3, #12]
 5564 004e 5B01     		lsls	r3, r3, #5
 5565 0050 FA68     		ldr	r2, [r7, #12]
 5566 0052 1343     		orrs	r3, r3, r2
 5567 0054 FB60     		str	r3, [r7, #12]
1620:ad5940.c      ****   tempreg |= pLpAmpCfg->LpTiaRload<<BITP_AFE_LPTIACON0_TIARL;
 5568              		.loc 1 1620 0
 5569 0056 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 128


 5570 0058 9B68     		ldr	r3, [r3, #8]
 5571 005a 9B02     		lsls	r3, r3, #10
 5572 005c FA68     		ldr	r2, [r7, #12]
 5573 005e 1343     		orrs	r3, r3, r2
 5574 0060 FB60     		str	r3, [r7, #12]
1621:ad5940.c      ****   tempreg |= pLpAmpCfg->LpTiaRf<<BITP_AFE_LPTIACON0_TIARF;
 5575              		.loc 1 1621 0
 5576 0062 7B68     		ldr	r3, [r7, #4]
 5577 0064 5B68     		ldr	r3, [r3, #4]
 5578 0066 5B03     		lsls	r3, r3, #13
 5579 0068 FA68     		ldr	r2, [r7, #12]
 5580 006a 1343     		orrs	r3, r3, r2
 5581 006c FB60     		str	r3, [r7, #12]
1622:ad5940.c      ****   if(pLpAmpCfg->LpAmpSel == LPAMP0)
 5582              		.loc 1 1622 0
 5583 006e 7B68     		ldr	r3, [r7, #4]
 5584 0070 1B68     		ldr	r3, [r3]
 5585 0072 002B     		cmp	r3, #0
 5586 0074 0CD1     		bne	.L313
1623:ad5940.c      ****   {
1624:ad5940.c      ****     AD5940_WriteReg(REG_AFE_LPTIACON0, tempreg);
 5587              		.loc 1 1624 0
 5588 0076 F968     		ldr	r1, [r7, #12]
 5589 0078 42F2EC00 		movw	r0, #8428
 5590 007c FFF7FEFF 		bl	AD5940_WriteReg
1625:ad5940.c      ****     AD5940_WriteReg(REG_AFE_LPTIASW0, pLpAmpCfg->LpTiaSW);
 5591              		.loc 1 1625 0
 5592 0080 7B68     		ldr	r3, [r7, #4]
 5593 0082 5B69     		ldr	r3, [r3, #20]
 5594 0084 1946     		mov	r1, r3
 5595 0086 42F2E400 		movw	r0, #8420
 5596 008a FFF7FEFF 		bl	AD5940_WriteReg
1626:ad5940.c      ****   }
1627:ad5940.c      ****   else
1628:ad5940.c      ****   {
1629:ad5940.c      ****     AD5940_WriteReg(REG_AFE_LPTIACON1, tempreg);
1630:ad5940.c      ****     AD5940_WriteReg(REG_AFE_LPTIASW1, pLpAmpCfg->LpTiaSW);
1631:ad5940.c      ****   }
1632:ad5940.c      **** }
 5597              		.loc 1 1632 0
 5598 008e 0BE0     		b	.L315
 5599              	.L313:
1629:ad5940.c      ****     AD5940_WriteReg(REG_AFE_LPTIASW1, pLpAmpCfg->LpTiaSW);
 5600              		.loc 1 1629 0
 5601 0090 F968     		ldr	r1, [r7, #12]
 5602 0092 42F2E800 		movw	r0, #8424
 5603 0096 FFF7FEFF 		bl	AD5940_WriteReg
1630:ad5940.c      ****   }
 5604              		.loc 1 1630 0
 5605 009a 7B68     		ldr	r3, [r7, #4]
 5606 009c 5B69     		ldr	r3, [r3, #20]
 5607 009e 1946     		mov	r1, r3
 5608 00a0 42F2E000 		movw	r0, #8416
 5609 00a4 FFF7FEFF 		bl	AD5940_WriteReg
 5610              	.L315:
 5611              		.loc 1 1632 0
 5612 00a8 00BF     		nop
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 129


 5613 00aa 1037     		adds	r7, r7, #16
 5614              		.cfi_def_cfa_offset 8
 5615 00ac BD46     		mov	sp, r7
 5616              		.cfi_def_cfa_register 13
 5617              		@ sp needed
 5618 00ae 80BD     		pop	{r7, pc}
 5619              		.cfi_endproc
 5620              	.LFE54:
 5621              		.size	AD5940_LPAMPCfgS, .-AD5940_LPAMPCfgS
 5622              		.section	.text.AD5940_DSPCfgS,"ax",%progbits
 5623              		.align	2
 5624              		.global	AD5940_DSPCfgS
 5625              		.thumb
 5626              		.thumb_func
 5627              		.type	AD5940_DSPCfgS, %function
 5628              	AD5940_DSPCfgS:
 5629              	.LFB55:
1633:ad5940.c      **** /**
1634:ad5940.c      ****  * @} Low_Power_Loop_Functions
1635:ad5940.c      ****  * @} Low_Power_Loop
1636:ad5940.c      **** */
1637:ad5940.c      **** 
1638:ad5940.c      **** 
1639:ad5940.c      **** /**
1640:ad5940.c      ****  * @defgroup DSP_Block
1641:ad5940.c      ****  * @brief DSP block includes ADC, filters, DFT and statistic functions. 
1642:ad5940.c      ****  * @{
1643:ad5940.c      ****  *    @defgroup DSP_Block_Functions
1644:ad5940.c      ****  *    @{
1645:ad5940.c      ****  * */
1646:ad5940.c      **** 
1647:ad5940.c      **** /**
1648:ad5940.c      ****    @brief Configure low power loop include LPDAC LPAmp(PA and TIA)
1649:ad5940.c      ****    @param pDSPCfg: Pointer to configure structure;
1650:ad5940.c      ****    @return return none.
1651:ad5940.c      **** */
1652:ad5940.c      **** void AD5940_DSPCfgS(DSPCfg_Type *pDSPCfg)
1653:ad5940.c      **** {
 5630              		.loc 1 1653 0
 5631              		.cfi_startproc
 5632              		@ args = 0, pretend = 0, frame = 8
 5633              		@ frame_needed = 1, uses_anonymous_args = 0
 5634 0000 80B5     		push	{r7, lr}
 5635              		.cfi_def_cfa_offset 8
 5636              		.cfi_offset 7, -8
 5637              		.cfi_offset 14, -4
 5638 0002 82B0     		sub	sp, sp, #8
 5639              		.cfi_def_cfa_offset 16
 5640 0004 00AF     		add	r7, sp, #0
 5641              		.cfi_def_cfa_register 7
 5642 0006 7860     		str	r0, [r7, #4]
1654:ad5940.c      ****   AD5940_ADCBaseCfgS(&pDSPCfg->ADCBaseCfg);
 5643              		.loc 1 1654 0
 5644 0008 7B68     		ldr	r3, [r7, #4]
 5645 000a 1846     		mov	r0, r3
 5646 000c FFF7FEFF 		bl	AD5940_ADCBaseCfgS
1655:ad5940.c      ****   AD5940_ADCFilterCfgS(&pDSPCfg->ADCFilterCfg);
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 130


 5647              		.loc 1 1655 0
 5648 0010 7B68     		ldr	r3, [r7, #4]
 5649 0012 0C33     		adds	r3, r3, #12
 5650 0014 1846     		mov	r0, r3
 5651 0016 FFF7FEFF 		bl	AD5940_ADCFilterCfgS
1656:ad5940.c      ****   AD5940_ADCDigCompCfgS(&pDSPCfg->ADCDigCompCfg);
 5652              		.loc 1 1656 0
 5653 001a 7B68     		ldr	r3, [r7, #4]
 5654 001c 2033     		adds	r3, r3, #32
 5655 001e 1846     		mov	r0, r3
 5656 0020 FFF7FEFF 		bl	AD5940_ADCDigCompCfgS
1657:ad5940.c      ****   AD5940_DFTCfgS(&pDSPCfg->DftCfg);
 5657              		.loc 1 1657 0
 5658 0024 7B68     		ldr	r3, [r7, #4]
 5659 0026 2833     		adds	r3, r3, #40
 5660 0028 1846     		mov	r0, r3
 5661 002a FFF7FEFF 		bl	AD5940_DFTCfgS
1658:ad5940.c      ****   AD5940_StatisticCfgS(&pDSPCfg->StatCfg);
 5662              		.loc 1 1658 0
 5663 002e 7B68     		ldr	r3, [r7, #4]
 5664 0030 3433     		adds	r3, r3, #52
 5665 0032 1846     		mov	r0, r3
 5666 0034 FFF7FEFF 		bl	AD5940_StatisticCfgS
1659:ad5940.c      **** }
 5667              		.loc 1 1659 0
 5668 0038 00BF     		nop
 5669 003a 0837     		adds	r7, r7, #8
 5670              		.cfi_def_cfa_offset 8
 5671 003c BD46     		mov	sp, r7
 5672              		.cfi_def_cfa_register 13
 5673              		@ sp needed
 5674 003e 80BD     		pop	{r7, pc}
 5675              		.cfi_endproc
 5676              	.LFE55:
 5677              		.size	AD5940_DSPCfgS, .-AD5940_DSPCfgS
 5678              		.section	.text.AD5940_ReadAfeResult,"ax",%progbits
 5679              		.align	2
 5680              		.global	AD5940_ReadAfeResult
 5681              		.thumb
 5682              		.thumb_func
 5683              		.type	AD5940_ReadAfeResult, %function
 5684              	AD5940_ReadAfeResult:
 5685              	.LFB56:
1660:ad5940.c      **** 
1661:ad5940.c      **** /**
1662:ad5940.c      ****    @brief Read AD5940 generated data like ADC and DFT etc.
1663:ad5940.c      ****    @param AfeResultSel: available parameters are @ref AFERESULT_Const
1664:ad5940.c      ****           - AFERESULT_SINC3: Read SINC3 filter data result
1665:ad5940.c      ****           - AFERESULT_SINC2: Read SINC2+NOTCH filter result, when Notch filter is bypassed, the res
1666:ad5940.c      ****           - AFERESULT_STATSVAR: Statistic variance result
1667:ad5940.c      ****    @return return data read back.
1668:ad5940.c      **** */
1669:ad5940.c      **** uint32_t AD5940_ReadAfeResult(uint32_t AfeResultSel)
1670:ad5940.c      **** {
 5686              		.loc 1 1670 0
 5687              		.cfi_startproc
 5688              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 131


 5689              		@ frame_needed = 1, uses_anonymous_args = 0
 5690 0000 80B5     		push	{r7, lr}
 5691              		.cfi_def_cfa_offset 8
 5692              		.cfi_offset 7, -8
 5693              		.cfi_offset 14, -4
 5694 0002 84B0     		sub	sp, sp, #16
 5695              		.cfi_def_cfa_offset 24
 5696 0004 00AF     		add	r7, sp, #0
 5697              		.cfi_def_cfa_register 7
 5698 0006 7860     		str	r0, [r7, #4]
1671:ad5940.c      ****   uint32_t rd = 0;
 5699              		.loc 1 1671 0
 5700 0008 0023     		movs	r3, #0
 5701 000a FB60     		str	r3, [r7, #12]
1672:ad5940.c      ****   //PARA_CHECK((AfeResultSel));
1673:ad5940.c      ****   switch (AfeResultSel)
 5702              		.loc 1 1673 0
 5703 000c 7B68     		ldr	r3, [r7, #4]
 5704 000e 062B     		cmp	r3, #6
 5705 0010 3AD8     		bhi	.L318
 5706 0012 01A2     		adr	r2, .L320
 5707 0014 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5708              		.p2align 2
 5709              	.L320:
 5710 0018 35000000 		.word	.L319+1
 5711 001c 41000000 		.word	.L321+1
 5712 0020 4D000000 		.word	.L322+1
 5713 0024 59000000 		.word	.L323+1
 5714 0028 65000000 		.word	.L324+1
 5715 002c 71000000 		.word	.L325+1
 5716 0030 7D000000 		.word	.L326+1
 5717              		.p2align 1
 5718              	.L319:
1674:ad5940.c      ****   {
1675:ad5940.c      ****     case AFERESULT_SINC3:
1676:ad5940.c      ****       rd = AD5940_ReadReg(REG_AFE_ADCDAT);
 5719              		.loc 1 1676 0
 5720 0034 42F27400 		movw	r0, #8308
 5721 0038 FFF7FEFF 		bl	AD5940_ReadReg
 5722 003c F860     		str	r0, [r7, #12]
1677:ad5940.c      ****       break;
 5723              		.loc 1 1677 0
 5724 003e 23E0     		b	.L318
 5725              	.L321:
1678:ad5940.c      ****     case AFERESULT_SINC2:
1679:ad5940.c      ****       rd = AD5940_ReadReg(REG_AFE_SINC2DAT);
 5726              		.loc 1 1679 0
 5727 0040 4FF40250 		mov	r0, #8320
 5728 0044 FFF7FEFF 		bl	AD5940_ReadReg
 5729 0048 F860     		str	r0, [r7, #12]
1680:ad5940.c      ****       break;
 5730              		.loc 1 1680 0
 5731 004a 1DE0     		b	.L318
 5732              	.L322:
1681:ad5940.c      ****     case AFERESULT_TEMPSENSOR:
1682:ad5940.c      ****       rd = AD5940_ReadReg(REG_AFE_TEMPSENSDAT);
 5733              		.loc 1 1682 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 132


 5734 004c 42F28400 		movw	r0, #8324
 5735 0050 FFF7FEFF 		bl	AD5940_ReadReg
 5736 0054 F860     		str	r0, [r7, #12]
1683:ad5940.c      ****       break;
 5737              		.loc 1 1683 0
 5738 0056 17E0     		b	.L318
 5739              	.L323:
1684:ad5940.c      ****     case AFERESULT_DFTREAL:
1685:ad5940.c      ****       rd = AD5940_ReadReg(REG_AFE_DFTREAL);
 5740              		.loc 1 1685 0
 5741 0058 42F27800 		movw	r0, #8312
 5742 005c FFF7FEFF 		bl	AD5940_ReadReg
 5743 0060 F860     		str	r0, [r7, #12]
1686:ad5940.c      ****       break;
 5744              		.loc 1 1686 0
 5745 0062 11E0     		b	.L318
 5746              	.L324:
1687:ad5940.c      ****     case AFERESULT_DFTIMAGE:
1688:ad5940.c      ****       rd = AD5940_ReadReg(REG_AFE_DFTIMAG);
 5747              		.loc 1 1688 0
 5748 0064 42F27C00 		movw	r0, #8316
 5749 0068 FFF7FEFF 		bl	AD5940_ReadReg
 5750 006c F860     		str	r0, [r7, #12]
1689:ad5940.c      ****       break;
 5751              		.loc 1 1689 0
 5752 006e 0BE0     		b	.L318
 5753              	.L325:
1690:ad5940.c      ****     case AFERESULT_STATSMEAN:
1691:ad5940.c      ****       rd = AD5940_ReadReg(REG_AFE_STATSMEAN);
 5754              		.loc 1 1691 0
 5755 0070 42F2C810 		movw	r0, #8648
 5756 0074 FFF7FEFF 		bl	AD5940_ReadReg
 5757 0078 F860     		str	r0, [r7, #12]
1692:ad5940.c      ****       break;
 5758              		.loc 1 1692 0
 5759 007a 05E0     		b	.L318
 5760              	.L326:
1693:ad5940.c      ****     case AFERESULT_STATSVAR:
1694:ad5940.c      ****       rd = AD5940_ReadReg(REG_AFE_STATSVAR);
 5761              		.loc 1 1694 0
 5762 007c 4FF40750 		mov	r0, #8640
 5763 0080 FFF7FEFF 		bl	AD5940_ReadReg
 5764 0084 F860     		str	r0, [r7, #12]
1695:ad5940.c      ****       break;
 5765              		.loc 1 1695 0
 5766 0086 00BF     		nop
 5767              	.L318:
1696:ad5940.c      ****   }
1697:ad5940.c      ****   
1698:ad5940.c      ****   return rd;
 5768              		.loc 1 1698 0
 5769 0088 FB68     		ldr	r3, [r7, #12]
1699:ad5940.c      **** }
 5770              		.loc 1 1699 0
 5771 008a 1846     		mov	r0, r3
 5772 008c 1037     		adds	r7, r7, #16
 5773              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 133


 5774 008e BD46     		mov	sp, r7
 5775              		.cfi_def_cfa_register 13
 5776              		@ sp needed
 5777 0090 80BD     		pop	{r7, pc}
 5778              		.cfi_endproc
 5779              	.LFE56:
 5780              		.size	AD5940_ReadAfeResult, .-AD5940_ReadAfeResult
 5781 0092 00BF     		.section	.text.AD5940_ADCBaseCfgS,"ax",%progbits
 5782              		.align	2
 5783              		.global	AD5940_ADCBaseCfgS
 5784              		.thumb
 5785              		.thumb_func
 5786              		.type	AD5940_ADCBaseCfgS, %function
 5787              	AD5940_ADCBaseCfgS:
 5788              	.LFB57:
1700:ad5940.c      **** 
1701:ad5940.c      **** /**
1702:ad5940.c      ****  *  @defgroup ADC_Block_Functions
1703:ad5940.c      ****  *  @{
1704:ad5940.c      **** */
1705:ad5940.c      **** 
1706:ad5940.c      **** /**
1707:ad5940.c      ****    @brief Initializes ADC peripheral according to the specified parameters in the pADCInit.
1708:ad5940.c      ****    @param pADCInit: Pointer to ADC initialize structure.
1709:ad5940.c      ****    @return return none.
1710:ad5940.c      **** */
1711:ad5940.c      **** void AD5940_ADCBaseCfgS(ADCBaseCfg_Type *pADCInit)
1712:ad5940.c      **** {
 5789              		.loc 1 1712 0
 5790              		.cfi_startproc
 5791              		@ args = 0, pretend = 0, frame = 16
 5792              		@ frame_needed = 1, uses_anonymous_args = 0
 5793 0000 80B5     		push	{r7, lr}
 5794              		.cfi_def_cfa_offset 8
 5795              		.cfi_offset 7, -8
 5796              		.cfi_offset 14, -4
 5797 0002 84B0     		sub	sp, sp, #16
 5798              		.cfi_def_cfa_offset 24
 5799 0004 00AF     		add	r7, sp, #0
 5800              		.cfi_def_cfa_register 7
 5801 0006 7860     		str	r0, [r7, #4]
1713:ad5940.c      ****   uint32_t tempreg = 0;
 5802              		.loc 1 1713 0
 5803 0008 0023     		movs	r3, #0
 5804 000a FB60     		str	r3, [r7, #12]
1714:ad5940.c      ****   //PARA_CHECK(IS_ADCMUXP(pADCInit->ADCMuxP));
1715:ad5940.c      ****   //PARA_CHECK(IS_ADCMUXN(pADCInit->ADCMuxN));
1716:ad5940.c      ****   PARA_CHECK(IS_ADCPGA(pADCInit->ADCPga));
1717:ad5940.c      ****   PARA_CHECK(IS_ADCAAF(pADCInit->ADCAAF));
1718:ad5940.c      **** 
1719:ad5940.c      ****   tempreg = pADCInit->ADCMuxP;
 5805              		.loc 1 1719 0
 5806 000c 7B68     		ldr	r3, [r7, #4]
 5807 000e 1B68     		ldr	r3, [r3]
 5808 0010 FB60     		str	r3, [r7, #12]
1720:ad5940.c      ****   tempreg |= (uint32_t)(pADCInit->ADCMuxN)<<BITP_AFE_ADCCON_MUXSELN;
 5809              		.loc 1 1720 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 134


 5810 0012 7B68     		ldr	r3, [r7, #4]
 5811 0014 5B68     		ldr	r3, [r3, #4]
 5812 0016 1B02     		lsls	r3, r3, #8
 5813 0018 FA68     		ldr	r2, [r7, #12]
 5814 001a 1343     		orrs	r3, r3, r2
 5815 001c FB60     		str	r3, [r7, #12]
1721:ad5940.c      ****   //if(pADCInit->OffCancEnable == bTRUE)
1722:ad5940.c      ****   //  tempreg |= BITM_AFE_ADCCON_GNOFSELPGA;
1723:ad5940.c      ****   tempreg |= (uint32_t)(pADCInit->ADCPga)<<BITP_AFE_ADCCON_GNPGA;
 5816              		.loc 1 1723 0
 5817 001e 7B68     		ldr	r3, [r7, #4]
 5818 0020 9B68     		ldr	r3, [r3, #8]
 5819 0022 1B04     		lsls	r3, r3, #16
 5820 0024 FA68     		ldr	r2, [r7, #12]
 5821 0026 1343     		orrs	r3, r3, r2
 5822 0028 FB60     		str	r3, [r7, #12]
1724:ad5940.c      **** 
1725:ad5940.c      ****   AD5940_WriteReg(REG_AFE_ADCCON, tempreg);
 5823              		.loc 1 1725 0
 5824 002a F968     		ldr	r1, [r7, #12]
 5825 002c 42F2A810 		movw	r0, #8616
 5826 0030 FFF7FEFF 		bl	AD5940_WriteReg
1726:ad5940.c      **** }
 5827              		.loc 1 1726 0
 5828 0034 00BF     		nop
 5829 0036 1037     		adds	r7, r7, #16
 5830              		.cfi_def_cfa_offset 8
 5831 0038 BD46     		mov	sp, r7
 5832              		.cfi_def_cfa_register 13
 5833              		@ sp needed
 5834 003a 80BD     		pop	{r7, pc}
 5835              		.cfi_endproc
 5836              	.LFE57:
 5837              		.size	AD5940_ADCBaseCfgS, .-AD5940_ADCBaseCfgS
 5838              		.section	.text.AD5940_ADCFilterCfgS,"ax",%progbits
 5839              		.align	2
 5840              		.global	AD5940_ADCFilterCfgS
 5841              		.thumb
 5842              		.thumb_func
 5843              		.type	AD5940_ADCFilterCfgS, %function
 5844              	AD5940_ADCFilterCfgS:
 5845              	.LFB58:
1727:ad5940.c      **** 
1728:ad5940.c      **** /**
1729:ad5940.c      ****    @brief Initializes ADC filter according to the specified parameters in the pFiltCfg.
1730:ad5940.c      ****    @param pFiltCfg: Pointer to filter initialize structure.
1731:ad5940.c      ****    @return return none.
1732:ad5940.c      **** */
1733:ad5940.c      **** void AD5940_ADCFilterCfgS(ADCFilterCfg_Type *pFiltCfg)
1734:ad5940.c      **** {
 5846              		.loc 1 1734 0
 5847              		.cfi_startproc
 5848              		@ args = 0, pretend = 0, frame = 16
 5849              		@ frame_needed = 1, uses_anonymous_args = 0
 5850 0000 80B5     		push	{r7, lr}
 5851              		.cfi_def_cfa_offset 8
 5852              		.cfi_offset 7, -8
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 135


 5853              		.cfi_offset 14, -4
 5854 0002 84B0     		sub	sp, sp, #16
 5855              		.cfi_def_cfa_offset 24
 5856 0004 00AF     		add	r7, sp, #0
 5857              		.cfi_def_cfa_register 7
 5858 0006 7860     		str	r0, [r7, #4]
1735:ad5940.c      ****   uint32_t tempreg;
1736:ad5940.c      ****   PARA_CHECK(IS_ADCSINC3OSR(pFiltCfg->ADCSinc3Osr));
1737:ad5940.c      ****   PARA_CHECK(IS_ADCSINC2OSR(pFiltCfg->ADCSinc2Osr));
1738:ad5940.c      ****   PARA_CHECK(IS_ADCAVGNUM(pFiltCfg->ADCAvgNum));
1739:ad5940.c      ****   PARA_CHECK(IS_ADCRATE(pFiltCfg->ADCRate));
1740:ad5940.c      **** 
1741:ad5940.c      ****   tempreg = AD5940_ReadReg(REG_AFE_ADCFILTERCON);
 5859              		.loc 1 1741 0
 5860 0008 42F24400 		movw	r0, #8260
 5861 000c FFF7FEFF 		bl	AD5940_ReadReg
 5862 0010 F860     		str	r0, [r7, #12]
1742:ad5940.c      ****   tempreg &= BITM_AFE_ADCFILTERCON_AVRGEN; /* Keep this bit setting. */
 5863              		.loc 1 1742 0
 5864 0012 FB68     		ldr	r3, [r7, #12]
 5865 0014 03F08003 		and	r3, r3, #128
 5866 0018 FB60     		str	r3, [r7, #12]
1743:ad5940.c      **** 
1744:ad5940.c      ****   tempreg |= pFiltCfg->ADCRate;
 5867              		.loc 1 1744 0
 5868 001a 7B68     		ldr	r3, [r7, #4]
 5869 001c DB68     		ldr	r3, [r3, #12]
 5870 001e FA68     		ldr	r2, [r7, #12]
 5871 0020 1343     		orrs	r3, r3, r2
 5872 0022 FB60     		str	r3, [r7, #12]
1745:ad5940.c      ****   if(pFiltCfg->BpNotch == bTRUE)
 5873              		.loc 1 1745 0
 5874 0024 7B68     		ldr	r3, [r7, #4]
 5875 0026 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 5876 0028 012B     		cmp	r3, #1
 5877 002a 03D1     		bne	.L330
1746:ad5940.c      ****     tempreg |= BITM_AFE_ADCFILTERCON_LPFBYPEN;
 5878              		.loc 1 1746 0
 5879 002c FB68     		ldr	r3, [r7, #12]
 5880 002e 43F01003 		orr	r3, r3, #16
 5881 0032 FB60     		str	r3, [r7, #12]
 5882              	.L330:
1747:ad5940.c      ****   if(pFiltCfg->BpSinc3 == bTRUE)
 5883              		.loc 1 1747 0
 5884 0034 7B68     		ldr	r3, [r7, #4]
 5885 0036 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 5886 0038 012B     		cmp	r3, #1
 5887 003a 03D1     		bne	.L331
1748:ad5940.c      ****     tempreg |= BITM_AFE_ADCFILTERCON_SINC3BYP;
 5888              		.loc 1 1748 0
 5889 003c FB68     		ldr	r3, [r7, #12]
 5890 003e 43F04003 		orr	r3, r3, #64
 5891 0042 FB60     		str	r3, [r7, #12]
 5892              	.L331:
1749:ad5940.c      ****   /**
1750:ad5940.c      ****    * Average filter is enabled when DFT source is @ref DFTSRC_AVG in function @ref AD5940_DFTCfgS.
1751:ad5940.c      ****    * Once average function is enabled, it's automatically set as DFT source, register DFTCON.DFTINS
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 136


1752:ad5940.c      ****    */
1753:ad5940.c      ****   //if(pFiltCfg->AverageEnable == bTRUE)
1754:ad5940.c      ****   //  tempreg |= BITM_AFE_ADCFILTERCON_AVRGEN;
1755:ad5940.c      ****   tempreg |= (uint32_t)(pFiltCfg->ADCSinc2Osr)<<BITP_AFE_ADCFILTERCON_SINC2OSR;
 5893              		.loc 1 1755 0
 5894 0044 7B68     		ldr	r3, [r7, #4]
 5895 0046 5B68     		ldr	r3, [r3, #4]
 5896 0048 1B02     		lsls	r3, r3, #8
 5897 004a FA68     		ldr	r2, [r7, #12]
 5898 004c 1343     		orrs	r3, r3, r2
 5899 004e FB60     		str	r3, [r7, #12]
1756:ad5940.c      ****   tempreg |= (uint32_t)(pFiltCfg->ADCSinc3Osr)<<BITP_AFE_ADCFILTERCON_SINC3OSR;
 5900              		.loc 1 1756 0
 5901 0050 7B68     		ldr	r3, [r7, #4]
 5902 0052 1B68     		ldr	r3, [r3]
 5903 0054 1B03     		lsls	r3, r3, #12
 5904 0056 FA68     		ldr	r2, [r7, #12]
 5905 0058 1343     		orrs	r3, r3, r2
 5906 005a FB60     		str	r3, [r7, #12]
1757:ad5940.c      ****   tempreg |= (uint32_t)(pFiltCfg->ADCAvgNum)<<BITP_AFE_ADCFILTERCON_AVRGNUM;
 5907              		.loc 1 1757 0
 5908 005c 7B68     		ldr	r3, [r7, #4]
 5909 005e 9B68     		ldr	r3, [r3, #8]
 5910 0060 9B03     		lsls	r3, r3, #14
 5911 0062 FA68     		ldr	r2, [r7, #12]
 5912 0064 1343     		orrs	r3, r3, r2
 5913 0066 FB60     		str	r3, [r7, #12]
1758:ad5940.c      **** 
1759:ad5940.c      ****   AD5940_WriteReg(REG_AFE_ADCFILTERCON, tempreg);
 5914              		.loc 1 1759 0
 5915 0068 F968     		ldr	r1, [r7, #12]
 5916 006a 42F24400 		movw	r0, #8260
 5917 006e FFF7FEFF 		bl	AD5940_WriteReg
1760:ad5940.c      **** 
1761:ad5940.c      ****   /* SINC2+Notch has a block enable/disable bit in AFECON register */
1762:ad5940.c      ****   if(pFiltCfg->Sinc2NotchEnable)
 5918              		.loc 1 1762 0
 5919 0072 7B68     		ldr	r3, [r7, #4]
 5920 0074 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 5921 0076 002B     		cmp	r3, #0
 5922 0078 04D0     		beq	.L333
1763:ad5940.c      ****   {
1764:ad5940.c      ****     AD5940_AFECtrlS(AFECTRL_SINC2NOTCH,bTRUE);
 5923              		.loc 1 1764 0
 5924 007a 0121     		movs	r1, #1
 5925 007c 4FF48030 		mov	r0, #65536
 5926 0080 FFF7FEFF 		bl	AD5940_AFECtrlS
 5927              	.L333:
1765:ad5940.c      ****   }
1766:ad5940.c      **** }
 5928              		.loc 1 1766 0
 5929 0084 00BF     		nop
 5930 0086 1037     		adds	r7, r7, #16
 5931              		.cfi_def_cfa_offset 8
 5932 0088 BD46     		mov	sp, r7
 5933              		.cfi_def_cfa_register 13
 5934              		@ sp needed
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 137


 5935 008a 80BD     		pop	{r7, pc}
 5936              		.cfi_endproc
 5937              	.LFE58:
 5938              		.size	AD5940_ADCFilterCfgS, .-AD5940_ADCFilterCfgS
 5939              		.section	.text.AD5940_ADCPowerCtrlS,"ax",%progbits
 5940              		.align	2
 5941              		.global	AD5940_ADCPowerCtrlS
 5942              		.thumb
 5943              		.thumb_func
 5944              		.type	AD5940_ADCPowerCtrlS, %function
 5945              	AD5940_ADCPowerCtrlS:
 5946              	.LFB59:
1767:ad5940.c      **** 
1768:ad5940.c      **** /**
1769:ad5940.c      ****    @brief Power up or power down ADC block(including ADC PGA and FRONTBUF).
1770:ad5940.c      ****    @param State : {bTRUE, bFALSE}
1771:ad5940.c      ****           - bTRUE: Power up ADC
1772:ad5940.c      ****           - bFALSE: Power down ADC
1773:ad5940.c      ****    @return return none.
1774:ad5940.c      **** */
1775:ad5940.c      **** void AD5940_ADCPowerCtrlS(BoolFlag State)
1776:ad5940.c      **** {
 5947              		.loc 1 1776 0
 5948              		.cfi_startproc
 5949              		@ args = 0, pretend = 0, frame = 16
 5950              		@ frame_needed = 1, uses_anonymous_args = 0
 5951 0000 80B5     		push	{r7, lr}
 5952              		.cfi_def_cfa_offset 8
 5953              		.cfi_offset 7, -8
 5954              		.cfi_offset 14, -4
 5955 0002 84B0     		sub	sp, sp, #16
 5956              		.cfi_def_cfa_offset 24
 5957 0004 00AF     		add	r7, sp, #0
 5958              		.cfi_def_cfa_register 7
 5959 0006 0346     		mov	r3, r0
 5960 0008 FB71     		strb	r3, [r7, #7]
1777:ad5940.c      ****   uint32_t tempreg;
1778:ad5940.c      ****   tempreg = AD5940_ReadReg(REG_AFE_AFECON);
 5961              		.loc 1 1778 0
 5962 000a 4FF40050 		mov	r0, #8192
 5963 000e FFF7FEFF 		bl	AD5940_ReadReg
 5964 0012 F860     		str	r0, [r7, #12]
1779:ad5940.c      ****   if(State == bTRUE)
 5965              		.loc 1 1779 0
 5966 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5967 0016 012B     		cmp	r3, #1
 5968 0018 04D1     		bne	.L335
1780:ad5940.c      ****   {
1781:ad5940.c      ****     tempreg |= BITM_AFE_AFECON_ADCEN;
 5969              		.loc 1 1781 0
 5970 001a FB68     		ldr	r3, [r7, #12]
 5971 001c 43F08003 		orr	r3, r3, #128
 5972 0020 FB60     		str	r3, [r7, #12]
 5973 0022 03E0     		b	.L336
 5974              	.L335:
1782:ad5940.c      ****   }
1783:ad5940.c      ****   else
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 138


1784:ad5940.c      ****   {
1785:ad5940.c      ****     tempreg &= ~BITM_AFE_AFECON_ADCEN;
 5975              		.loc 1 1785 0
 5976 0024 FB68     		ldr	r3, [r7, #12]
 5977 0026 23F08003 		bic	r3, r3, #128
 5978 002a FB60     		str	r3, [r7, #12]
 5979              	.L336:
1786:ad5940.c      ****   }
1787:ad5940.c      ****   AD5940_WriteReg(REG_AFE_AFECON,tempreg);
 5980              		.loc 1 1787 0
 5981 002c F968     		ldr	r1, [r7, #12]
 5982 002e 4FF40050 		mov	r0, #8192
 5983 0032 FFF7FEFF 		bl	AD5940_WriteReg
1788:ad5940.c      **** }
 5984              		.loc 1 1788 0
 5985 0036 00BF     		nop
 5986 0038 1037     		adds	r7, r7, #16
 5987              		.cfi_def_cfa_offset 8
 5988 003a BD46     		mov	sp, r7
 5989              		.cfi_def_cfa_register 13
 5990              		@ sp needed
 5991 003c 80BD     		pop	{r7, pc}
 5992              		.cfi_endproc
 5993              	.LFE59:
 5994              		.size	AD5940_ADCPowerCtrlS, .-AD5940_ADCPowerCtrlS
 5995 003e 00BF     		.section	.text.AD5940_ADCConvtCtrlS,"ax",%progbits
 5996              		.align	2
 5997              		.global	AD5940_ADCConvtCtrlS
 5998              		.thumb
 5999              		.thumb_func
 6000              		.type	AD5940_ADCConvtCtrlS, %function
 6001              	AD5940_ADCConvtCtrlS:
 6002              	.LFB60:
1789:ad5940.c      **** 
1790:ad5940.c      **** /**
1791:ad5940.c      ****    @brief Start or stop ADC convert.
1792:ad5940.c      ****    @param State : {bTRUE, bFALSE}
1793:ad5940.c      ****           - bTRUE: Start ADC convert
1794:ad5940.c      ****           - bFALSE: Stop ADC convert
1795:ad5940.c      ****    @return return none.
1796:ad5940.c      **** */
1797:ad5940.c      **** void AD5940_ADCConvtCtrlS(BoolFlag State)
1798:ad5940.c      **** {
 6003              		.loc 1 1798 0
 6004              		.cfi_startproc
 6005              		@ args = 0, pretend = 0, frame = 16
 6006              		@ frame_needed = 1, uses_anonymous_args = 0
 6007 0000 80B5     		push	{r7, lr}
 6008              		.cfi_def_cfa_offset 8
 6009              		.cfi_offset 7, -8
 6010              		.cfi_offset 14, -4
 6011 0002 84B0     		sub	sp, sp, #16
 6012              		.cfi_def_cfa_offset 24
 6013 0004 00AF     		add	r7, sp, #0
 6014              		.cfi_def_cfa_register 7
 6015 0006 0346     		mov	r3, r0
 6016 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 139


1799:ad5940.c      ****   uint32_t tempreg;
1800:ad5940.c      ****   tempreg = AD5940_ReadReg(REG_AFE_AFECON);
 6017              		.loc 1 1800 0
 6018 000a 4FF40050 		mov	r0, #8192
 6019 000e FFF7FEFF 		bl	AD5940_ReadReg
 6020 0012 F860     		str	r0, [r7, #12]
1801:ad5940.c      ****   if(State == bTRUE)
 6021              		.loc 1 1801 0
 6022 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6023 0016 012B     		cmp	r3, #1
 6024 0018 04D1     		bne	.L338
1802:ad5940.c      ****   {
1803:ad5940.c      ****     tempreg |= BITM_AFE_AFECON_ADCCONVEN;
 6025              		.loc 1 1803 0
 6026 001a FB68     		ldr	r3, [r7, #12]
 6027 001c 43F48073 		orr	r3, r3, #256
 6028 0020 FB60     		str	r3, [r7, #12]
 6029 0022 03E0     		b	.L339
 6030              	.L338:
1804:ad5940.c      ****   }
1805:ad5940.c      ****   else
1806:ad5940.c      ****   {
1807:ad5940.c      ****     tempreg &= ~BITM_AFE_AFECON_ADCCONVEN;
 6031              		.loc 1 1807 0
 6032 0024 FB68     		ldr	r3, [r7, #12]
 6033 0026 23F48073 		bic	r3, r3, #256
 6034 002a FB60     		str	r3, [r7, #12]
 6035              	.L339:
1808:ad5940.c      ****   }
1809:ad5940.c      ****   AD5940_WriteReg(REG_AFE_AFECON,tempreg);
 6036              		.loc 1 1809 0
 6037 002c F968     		ldr	r1, [r7, #12]
 6038 002e 4FF40050 		mov	r0, #8192
 6039 0032 FFF7FEFF 		bl	AD5940_WriteReg
1810:ad5940.c      **** }
 6040              		.loc 1 1810 0
 6041 0036 00BF     		nop
 6042 0038 1037     		adds	r7, r7, #16
 6043              		.cfi_def_cfa_offset 8
 6044 003a BD46     		mov	sp, r7
 6045              		.cfi_def_cfa_register 13
 6046              		@ sp needed
 6047 003c 80BD     		pop	{r7, pc}
 6048              		.cfi_endproc
 6049              	.LFE60:
 6050              		.size	AD5940_ADCConvtCtrlS, .-AD5940_ADCConvtCtrlS
 6051 003e 00BF     		.section	.text.AD5940_ADCMuxCfgS,"ax",%progbits
 6052              		.align	2
 6053              		.global	AD5940_ADCMuxCfgS
 6054              		.thumb
 6055              		.thumb_func
 6056              		.type	AD5940_ADCMuxCfgS, %function
 6057              	AD5940_ADCMuxCfgS:
 6058              	.LFB61:
1811:ad5940.c      **** 
1812:ad5940.c      **** /**
1813:ad5940.c      ****    @brief Configure ADC input MUX
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 140


1814:ad5940.c      ****    @param ADCMuxP : {ADCMUXP_FLOAT, ADCMUXP_HSTIA_P, ,,, ,ADCMUXP_P_NODE}
1815:ad5940.c      ****           - ADCMUXP_FLOAT: float ADC MUX positive input
1816:ad5940.c      ****           - ADCMUXP_HSTIA_P: High speed TIA output sense terminal
1817:ad5940.c      ****           - ADCMUXP_P_NODE: Excitation loop P node
1818:ad5940.c      ****    @param ADCMuxN : {ADCMUXP_FLOAT, ADCMUXP_HSTIA_P, ,,, ,ADCMUXP_P_NODE}
1819:ad5940.c      ****           - ADCMUXP_FLOAT: float ADC MUX positive input
1820:ad5940.c      ****           - ADCMUXP_HSTIA_P: High speed TIA output sense terminal
1821:ad5940.c      ****           - ADCMUXP_P_NODE: Excitation loop P node
1822:ad5940.c      **** 
1823:ad5940.c      ****    @return return none.
1824:ad5940.c      **** */
1825:ad5940.c      **** void AD5940_ADCMuxCfgS(uint32_t ADCMuxP, uint32_t ADCMuxN)
1826:ad5940.c      **** {
 6059              		.loc 1 1826 0
 6060              		.cfi_startproc
 6061              		@ args = 0, pretend = 0, frame = 16
 6062              		@ frame_needed = 1, uses_anonymous_args = 0
 6063 0000 80B5     		push	{r7, lr}
 6064              		.cfi_def_cfa_offset 8
 6065              		.cfi_offset 7, -8
 6066              		.cfi_offset 14, -4
 6067 0002 84B0     		sub	sp, sp, #16
 6068              		.cfi_def_cfa_offset 24
 6069 0004 00AF     		add	r7, sp, #0
 6070              		.cfi_def_cfa_register 7
 6071 0006 7860     		str	r0, [r7, #4]
 6072 0008 3960     		str	r1, [r7]
1827:ad5940.c      ****   uint32_t tempreg;
1828:ad5940.c      ****   //PARA_CHECK(IS_ADCMUXP(ADCMuxP));
1829:ad5940.c      ****   //PARA_CHECK(IS_ADCMUXN(ADCMuxN));
1830:ad5940.c      ****   
1831:ad5940.c      ****   tempreg = AD5940_ReadReg(REG_AFE_ADCCON);
 6073              		.loc 1 1831 0
 6074 000a 42F2A810 		movw	r0, #8616
 6075 000e FFF7FEFF 		bl	AD5940_ReadReg
 6076 0012 F860     		str	r0, [r7, #12]
1832:ad5940.c      ****   tempreg &= ~(BITM_AFE_ADCCON_MUXSELN|BITM_AFE_ADCCON_MUXSELP);
 6077              		.loc 1 1832 0
 6078 0014 FB68     		ldr	r3, [r7, #12]
 6079 0016 23F4F953 		bic	r3, r3, #7968
 6080 001a 23F01F03 		bic	r3, r3, #31
 6081 001e FB60     		str	r3, [r7, #12]
1833:ad5940.c      ****   tempreg |= ADCMuxP<<BITP_AFE_ADCCON_MUXSELP;
 6082              		.loc 1 1833 0
 6083 0020 FA68     		ldr	r2, [r7, #12]
 6084 0022 7B68     		ldr	r3, [r7, #4]
 6085 0024 1343     		orrs	r3, r3, r2
 6086 0026 FB60     		str	r3, [r7, #12]
1834:ad5940.c      ****   tempreg |= ADCMuxN<<BITP_AFE_ADCCON_MUXSELN;
 6087              		.loc 1 1834 0
 6088 0028 3B68     		ldr	r3, [r7]
 6089 002a 1B02     		lsls	r3, r3, #8
 6090 002c FA68     		ldr	r2, [r7, #12]
 6091 002e 1343     		orrs	r3, r3, r2
 6092 0030 FB60     		str	r3, [r7, #12]
1835:ad5940.c      ****   AD5940_WriteReg(REG_AFE_ADCCON, tempreg);
 6093              		.loc 1 1835 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 141


 6094 0032 F968     		ldr	r1, [r7, #12]
 6095 0034 42F2A810 		movw	r0, #8616
 6096 0038 FFF7FEFF 		bl	AD5940_WriteReg
1836:ad5940.c      **** }
 6097              		.loc 1 1836 0
 6098 003c 00BF     		nop
 6099 003e 1037     		adds	r7, r7, #16
 6100              		.cfi_def_cfa_offset 8
 6101 0040 BD46     		mov	sp, r7
 6102              		.cfi_def_cfa_register 13
 6103              		@ sp needed
 6104 0042 80BD     		pop	{r7, pc}
 6105              		.cfi_endproc
 6106              	.LFE61:
 6107              		.size	AD5940_ADCMuxCfgS, .-AD5940_ADCMuxCfgS
 6108              		.section	.text.AD5940_ADCDigCompCfgS,"ax",%progbits
 6109              		.align	2
 6110              		.global	AD5940_ADCDigCompCfgS
 6111              		.thumb
 6112              		.thumb_func
 6113              		.type	AD5940_ADCDigCompCfgS, %function
 6114              	AD5940_ADCDigCompCfgS:
 6115              	.LFB62:
1837:ad5940.c      **** 
1838:ad5940.c      **** /**
1839:ad5940.c      ****    @brief Set ADC digital comparator function
1840:ad5940.c      ****    @param pCompCfg: Pointer to configuration structure
1841:ad5940.c      ****    @return return none.
1842:ad5940.c      **** */
1843:ad5940.c      **** void AD5940_ADCDigCompCfgS(ADCDigComp_Type *pCompCfg)
1844:ad5940.c      **** {
 6116              		.loc 1 1844 0
 6117              		.cfi_startproc
 6118              		@ args = 0, pretend = 0, frame = 8
 6119              		@ frame_needed = 1, uses_anonymous_args = 0
 6120 0000 80B5     		push	{r7, lr}
 6121              		.cfi_def_cfa_offset 8
 6122              		.cfi_offset 7, -8
 6123              		.cfi_offset 14, -4
 6124 0002 82B0     		sub	sp, sp, #8
 6125              		.cfi_def_cfa_offset 16
 6126 0004 00AF     		add	r7, sp, #0
 6127              		.cfi_def_cfa_register 7
 6128 0006 7860     		str	r0, [r7, #4]
1845:ad5940.c      ****   //PARA_CHECK((AfeResultSel));
1846:ad5940.c      ****   AD5940_WriteReg(REG_AFE_ADCMIN, pCompCfg->ADCMin);
 6129              		.loc 1 1846 0
 6130 0008 7B68     		ldr	r3, [r7, #4]
 6131 000a 1B88     		ldrh	r3, [r3]
 6132 000c 1946     		mov	r1, r3
 6133 000e 42F2A800 		movw	r0, #8360
 6134 0012 FFF7FEFF 		bl	AD5940_WriteReg
1847:ad5940.c      ****   AD5940_WriteReg(REG_AFE_ADCMINSM, pCompCfg->ADCMinHys);
 6135              		.loc 1 1847 0
 6136 0016 7B68     		ldr	r3, [r7, #4]
 6137 0018 5B88     		ldrh	r3, [r3, #2]
 6138 001a 1946     		mov	r1, r3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 142


 6139 001c 42F2AC00 		movw	r0, #8364
 6140 0020 FFF7FEFF 		bl	AD5940_WriteReg
1848:ad5940.c      ****   AD5940_WriteReg(REG_AFE_ADCMAX, pCompCfg->ADCMax);
 6141              		.loc 1 1848 0
 6142 0024 7B68     		ldr	r3, [r7, #4]
 6143 0026 9B88     		ldrh	r3, [r3, #4]
 6144 0028 1946     		mov	r1, r3
 6145 002a 42F2B000 		movw	r0, #8368
 6146 002e FFF7FEFF 		bl	AD5940_WriteReg
1849:ad5940.c      ****   AD5940_WriteReg(REG_AFE_ADCMAXSMEN, pCompCfg->ADCMaxHys);
 6147              		.loc 1 1849 0
 6148 0032 7B68     		ldr	r3, [r7, #4]
 6149 0034 DB88     		ldrh	r3, [r3, #6]
 6150 0036 1946     		mov	r1, r3
 6151 0038 42F2B400 		movw	r0, #8372
 6152 003c FFF7FEFF 		bl	AD5940_WriteReg
1850:ad5940.c      **** }
 6153              		.loc 1 1850 0
 6154 0040 00BF     		nop
 6155 0042 0837     		adds	r7, r7, #8
 6156              		.cfi_def_cfa_offset 8
 6157 0044 BD46     		mov	sp, r7
 6158              		.cfi_def_cfa_register 13
 6159              		@ sp needed
 6160 0046 80BD     		pop	{r7, pc}
 6161              		.cfi_endproc
 6162              	.LFE62:
 6163              		.size	AD5940_ADCDigCompCfgS, .-AD5940_ADCDigCompCfgS
 6164              		.section	.text.AD5940_StatisticCfgS,"ax",%progbits
 6165              		.align	2
 6166              		.global	AD5940_StatisticCfgS
 6167              		.thumb
 6168              		.thumb_func
 6169              		.type	AD5940_StatisticCfgS, %function
 6170              	AD5940_StatisticCfgS:
 6171              	.LFB63:
1851:ad5940.c      **** /** @} ADC_Block_Functions */
1852:ad5940.c      **** 
1853:ad5940.c      **** /**
1854:ad5940.c      ****    @brief Configure statistic functions
1855:ad5940.c      ****    @param pStatCfg: Pointer to configuration structure
1856:ad5940.c      ****    @return return none.
1857:ad5940.c      **** */
1858:ad5940.c      **** void AD5940_StatisticCfgS(StatCfg_Type *pStatCfg)
1859:ad5940.c      **** {
 6172              		.loc 1 1859 0
 6173              		.cfi_startproc
 6174              		@ args = 0, pretend = 0, frame = 16
 6175              		@ frame_needed = 1, uses_anonymous_args = 0
 6176 0000 80B5     		push	{r7, lr}
 6177              		.cfi_def_cfa_offset 8
 6178              		.cfi_offset 7, -8
 6179              		.cfi_offset 14, -4
 6180 0002 84B0     		sub	sp, sp, #16
 6181              		.cfi_def_cfa_offset 24
 6182 0004 00AF     		add	r7, sp, #0
 6183              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 143


 6184 0006 7860     		str	r0, [r7, #4]
1860:ad5940.c      ****   uint32_t tempreg;
1861:ad5940.c      ****   //check parameters
1862:ad5940.c      ****   tempreg = 0;
 6185              		.loc 1 1862 0
 6186 0008 0023     		movs	r3, #0
 6187 000a FB60     		str	r3, [r7, #12]
1863:ad5940.c      ****   if(pStatCfg->StatEnable == bTRUE)
 6188              		.loc 1 1863 0
 6189 000c 7B68     		ldr	r3, [r7, #4]
 6190 000e 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 6191 0010 012B     		cmp	r3, #1
 6192 0012 03D1     		bne	.L343
1864:ad5940.c      ****     tempreg |= BITM_AFE_STATSCON_STATSEN;
 6193              		.loc 1 1864 0
 6194 0014 FB68     		ldr	r3, [r7, #12]
 6195 0016 43F00103 		orr	r3, r3, #1
 6196 001a FB60     		str	r3, [r7, #12]
 6197              	.L343:
1865:ad5940.c      ****   tempreg |= (pStatCfg->StatSample) << BITP_AFE_STATSCON_SAMPLENUM;
 6198              		.loc 1 1865 0
 6199 001c 7B68     		ldr	r3, [r7, #4]
 6200 001e 5B68     		ldr	r3, [r3, #4]
 6201 0020 1B01     		lsls	r3, r3, #4
 6202 0022 FA68     		ldr	r2, [r7, #12]
 6203 0024 1343     		orrs	r3, r3, r2
 6204 0026 FB60     		str	r3, [r7, #12]
1866:ad5940.c      ****   tempreg |= (pStatCfg->StatDev) << BITP_AFE_STATSCON_STDDEV;
 6205              		.loc 1 1866 0
 6206 0028 7B68     		ldr	r3, [r7, #4]
 6207 002a 1B68     		ldr	r3, [r3]
 6208 002c DB01     		lsls	r3, r3, #7
 6209 002e FA68     		ldr	r2, [r7, #12]
 6210 0030 1343     		orrs	r3, r3, r2
 6211 0032 FB60     		str	r3, [r7, #12]
1867:ad5940.c      ****   AD5940_WriteReg(REG_AFE_STATSCON, tempreg);
 6212              		.loc 1 1867 0
 6213 0034 F968     		ldr	r1, [r7, #12]
 6214 0036 42F2C410 		movw	r0, #8644
 6215 003a FFF7FEFF 		bl	AD5940_WriteReg
1868:ad5940.c      **** }
 6216              		.loc 1 1868 0
 6217 003e 00BF     		nop
 6218 0040 1037     		adds	r7, r7, #16
 6219              		.cfi_def_cfa_offset 8
 6220 0042 BD46     		mov	sp, r7
 6221              		.cfi_def_cfa_register 13
 6222              		@ sp needed
 6223 0044 80BD     		pop	{r7, pc}
 6224              		.cfi_endproc
 6225              	.LFE63:
 6226              		.size	AD5940_StatisticCfgS, .-AD5940_StatisticCfgS
 6227 0046 00BF     		.section	.text.AD5940_ADCRepeatCfgS,"ax",%progbits
 6228              		.align	2
 6229              		.global	AD5940_ADCRepeatCfgS
 6230              		.thumb
 6231              		.thumb_func
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 144


 6232              		.type	AD5940_ADCRepeatCfgS, %function
 6233              	AD5940_ADCRepeatCfgS:
 6234              	.LFB64:
1869:ad5940.c      **** 
1870:ad5940.c      **** /**
1871:ad5940.c      ****  * @brief Set ADC Repeat convert function number. Turn off ADC automatically after Number samples o
1872:ad5940.c      ****  * @param Number: Specify after how much ADC raw data need to sample before shutdown ADC
1873:ad5940.c      ****  * @return return none.
1874:ad5940.c      **** */
1875:ad5940.c      **** void AD5940_ADCRepeatCfgS(uint32_t Number)
1876:ad5940.c      **** {
 6235              		.loc 1 1876 0
 6236              		.cfi_startproc
 6237              		@ args = 0, pretend = 0, frame = 8
 6238              		@ frame_needed = 1, uses_anonymous_args = 0
 6239 0000 80B5     		push	{r7, lr}
 6240              		.cfi_def_cfa_offset 8
 6241              		.cfi_offset 7, -8
 6242              		.cfi_offset 14, -4
 6243 0002 82B0     		sub	sp, sp, #8
 6244              		.cfi_def_cfa_offset 16
 6245 0004 00AF     		add	r7, sp, #0
 6246              		.cfi_def_cfa_register 7
 6247 0006 7860     		str	r0, [r7, #4]
1877:ad5940.c      ****   //check parameter if(number<255)
1878:ad5940.c      ****   AD5940_WriteReg(REG_AFE_REPEATADCCNV, Number<<BITP_AFE_REPEATADCCNV_NUM);
 6248              		.loc 1 1878 0
 6249 0008 7B68     		ldr	r3, [r7, #4]
 6250 000a 1B01     		lsls	r3, r3, #4
 6251 000c 1946     		mov	r1, r3
 6252 000e 42F2F010 		movw	r0, #8688
 6253 0012 FFF7FEFF 		bl	AD5940_WriteReg
1879:ad5940.c      **** }
 6254              		.loc 1 1879 0
 6255 0016 00BF     		nop
 6256 0018 0837     		adds	r7, r7, #8
 6257              		.cfi_def_cfa_offset 8
 6258 001a BD46     		mov	sp, r7
 6259              		.cfi_def_cfa_register 13
 6260              		@ sp needed
 6261 001c 80BD     		pop	{r7, pc}
 6262              		.cfi_endproc
 6263              	.LFE64:
 6264              		.size	AD5940_ADCRepeatCfgS, .-AD5940_ADCRepeatCfgS
 6265 001e 00BF     		.section	.text.AD5940_DFTCfgS,"ax",%progbits
 6266              		.align	2
 6267              		.global	AD5940_DFTCfgS
 6268              		.thumb
 6269              		.thumb_func
 6270              		.type	AD5940_DFTCfgS, %function
 6271              	AD5940_DFTCfgS:
 6272              	.LFB65:
1880:ad5940.c      **** 
1881:ad5940.c      **** /**
1882:ad5940.c      ****    @brief Configure DFT number and source and hanning window
1883:ad5940.c      ****    @param pDftCfg: Pointer to configuration structure
1884:ad5940.c      ****    @return return none.
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 145


1885:ad5940.c      **** */
1886:ad5940.c      **** void AD5940_DFTCfgS(DFTCfg_Type *pDftCfg)
1887:ad5940.c      **** {
 6273              		.loc 1 1887 0
 6274              		.cfi_startproc
 6275              		@ args = 0, pretend = 0, frame = 16
 6276              		@ frame_needed = 1, uses_anonymous_args = 0
 6277 0000 80B5     		push	{r7, lr}
 6278              		.cfi_def_cfa_offset 8
 6279              		.cfi_offset 7, -8
 6280              		.cfi_offset 14, -4
 6281 0002 84B0     		sub	sp, sp, #16
 6282              		.cfi_def_cfa_offset 24
 6283 0004 00AF     		add	r7, sp, #0
 6284              		.cfi_def_cfa_register 7
 6285 0006 7860     		str	r0, [r7, #4]
1888:ad5940.c      ****   uint32_t reg_dftcon, reg_adcfilter;
1889:ad5940.c      **** 
1890:ad5940.c      ****   reg_dftcon = 0;
 6286              		.loc 1 1890 0
 6287 0008 0023     		movs	r3, #0
 6288 000a FB60     		str	r3, [r7, #12]
1891:ad5940.c      ****   /* Deal with DFTSRC_AVG. Once average function is enabled, it's automatically set as DFT source *
1892:ad5940.c      ****   reg_adcfilter = AD5940_ReadReg(REG_AFE_ADCFILTERCON);
 6289              		.loc 1 1892 0
 6290 000c 42F24400 		movw	r0, #8260
 6291 0010 FFF7FEFF 		bl	AD5940_ReadReg
 6292 0014 B860     		str	r0, [r7, #8]
1893:ad5940.c      ****   if(pDftCfg->DftSrc == DFTSRC_AVG)
 6293              		.loc 1 1893 0
 6294 0016 7B68     		ldr	r3, [r7, #4]
 6295 0018 5B68     		ldr	r3, [r3, #4]
 6296 001a 032B     		cmp	r3, #3
 6297 001c 09D1     		bne	.L346
1894:ad5940.c      ****   {
1895:ad5940.c      ****     reg_adcfilter |= BITM_AFE_ADCFILTERCON_AVRGEN;
 6298              		.loc 1 1895 0
 6299 001e BB68     		ldr	r3, [r7, #8]
 6300 0020 43F08003 		orr	r3, r3, #128
 6301 0024 BB60     		str	r3, [r7, #8]
1896:ad5940.c      ****     AD5940_WriteReg(REG_AFE_ADCFILTERCON, reg_adcfilter);
 6302              		.loc 1 1896 0
 6303 0026 B968     		ldr	r1, [r7, #8]
 6304 0028 42F24400 		movw	r0, #8260
 6305 002c FFF7FEFF 		bl	AD5940_WriteReg
 6306 0030 0EE0     		b	.L347
 6307              	.L346:
1897:ad5940.c      ****   }
1898:ad5940.c      ****   else
1899:ad5940.c      ****   {
1900:ad5940.c      ****     /* Disable Average function and set correct DFT source */
1901:ad5940.c      ****     reg_adcfilter &= ~BITM_AFE_ADCFILTERCON_AVRGEN;
 6308              		.loc 1 1901 0
 6309 0032 BB68     		ldr	r3, [r7, #8]
 6310 0034 23F08003 		bic	r3, r3, #128
 6311 0038 BB60     		str	r3, [r7, #8]
1902:ad5940.c      ****     AD5940_WriteReg(REG_AFE_ADCFILTERCON, reg_adcfilter);
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 146


 6312              		.loc 1 1902 0
 6313 003a B968     		ldr	r1, [r7, #8]
 6314 003c 42F24400 		movw	r0, #8260
 6315 0040 FFF7FEFF 		bl	AD5940_WriteReg
1903:ad5940.c      **** 
1904:ad5940.c      ****     /* Set new DFT source */
1905:ad5940.c      ****     reg_dftcon |= (pDftCfg->DftSrc) << BITP_AFE_DFTCON_DFTINSEL;
 6316              		.loc 1 1905 0
 6317 0044 7B68     		ldr	r3, [r7, #4]
 6318 0046 5B68     		ldr	r3, [r3, #4]
 6319 0048 1B05     		lsls	r3, r3, #20
 6320 004a FA68     		ldr	r2, [r7, #12]
 6321 004c 1343     		orrs	r3, r3, r2
 6322 004e FB60     		str	r3, [r7, #12]
 6323              	.L347:
1906:ad5940.c      ****   }
1907:ad5940.c      ****   /* Set DFT number */
1908:ad5940.c      ****   reg_dftcon |= (pDftCfg->DftNum) << BITP_AFE_DFTCON_DFTNUM;
 6324              		.loc 1 1908 0
 6325 0050 7B68     		ldr	r3, [r7, #4]
 6326 0052 1B68     		ldr	r3, [r3]
 6327 0054 1B01     		lsls	r3, r3, #4
 6328 0056 FA68     		ldr	r2, [r7, #12]
 6329 0058 1343     		orrs	r3, r3, r2
 6330 005a FB60     		str	r3, [r7, #12]
1909:ad5940.c      ****   
1910:ad5940.c      ****   if(pDftCfg->HanWinEn == bTRUE)
 6331              		.loc 1 1910 0
 6332 005c 7B68     		ldr	r3, [r7, #4]
 6333 005e 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 6334 0060 012B     		cmp	r3, #1
 6335 0062 03D1     		bne	.L348
1911:ad5940.c      ****     reg_dftcon |= BITM_AFE_DFTCON_HANNINGEN;
 6336              		.loc 1 1911 0
 6337 0064 FB68     		ldr	r3, [r7, #12]
 6338 0066 43F00103 		orr	r3, r3, #1
 6339 006a FB60     		str	r3, [r7, #12]
 6340              	.L348:
1912:ad5940.c      ****   AD5940_WriteReg(REG_AFE_DFTCON, reg_dftcon);
 6341              		.loc 1 1912 0
 6342 006c F968     		ldr	r1, [r7, #12]
 6343 006e 42F2D000 		movw	r0, #8400
 6344 0072 FFF7FEFF 		bl	AD5940_WriteReg
1913:ad5940.c      **** }
 6345              		.loc 1 1913 0
 6346 0076 00BF     		nop
 6347 0078 1037     		adds	r7, r7, #16
 6348              		.cfi_def_cfa_offset 8
 6349 007a BD46     		mov	sp, r7
 6350              		.cfi_def_cfa_register 13
 6351              		@ sp needed
 6352 007c 80BD     		pop	{r7, pc}
 6353              		.cfi_endproc
 6354              	.LFE65:
 6355              		.size	AD5940_DFTCfgS, .-AD5940_DFTCfgS
 6356 007e 00BF     		.section	.text.AD5940_FIFOCfg,"ax",%progbits
 6357              		.align	2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 147


 6358              		.global	AD5940_FIFOCfg
 6359              		.thumb
 6360              		.thumb_func
 6361              		.type	AD5940_FIFOCfg, %function
 6362              	AD5940_FIFOCfg:
 6363              	.LFB66:
1914:ad5940.c      **** 
1915:ad5940.c      **** /**
1916:ad5940.c      ****  * @} DSP_Block_Functions
1917:ad5940.c      ****  * @} DSP_Block
1918:ad5940.c      **** */
1919:ad5940.c      **** 
1920:ad5940.c      **** /**
1921:ad5940.c      ****  * @defgroup Sequencer_FIFO
1922:ad5940.c      ****  * @brief Sequencer and FIFO.
1923:ad5940.c      ****  * @{
1924:ad5940.c      ****  *    @defgroup Sequencer_FIFO_Functions
1925:ad5940.c      ****  *    @{
1926:ad5940.c      **** */
1927:ad5940.c      **** 
1928:ad5940.c      **** /**
1929:ad5940.c      ****    @brief Configure AD5940 FIFO
1930:ad5940.c      ****    @param pFifoCfg: Pointer to configuration structure.
1931:ad5940.c      ****    @return return none.
1932:ad5940.c      **** */
1933:ad5940.c      **** void AD5940_FIFOCfg(FIFOCfg_Type *pFifoCfg)
1934:ad5940.c      **** {
 6364              		.loc 1 1934 0
 6365              		.cfi_startproc
 6366              		@ args = 0, pretend = 0, frame = 16
 6367              		@ frame_needed = 1, uses_anonymous_args = 0
 6368 0000 80B5     		push	{r7, lr}
 6369              		.cfi_def_cfa_offset 8
 6370              		.cfi_offset 7, -8
 6371              		.cfi_offset 14, -4
 6372 0002 84B0     		sub	sp, sp, #16
 6373              		.cfi_def_cfa_offset 24
 6374 0004 00AF     		add	r7, sp, #0
 6375              		.cfi_def_cfa_register 7
 6376 0006 7860     		str	r0, [r7, #4]
1935:ad5940.c      ****   uint32_t tempreg;
1936:ad5940.c      ****   //check parameters
1937:ad5940.c      ****   AD5940_WriteReg(REG_AFE_FIFOCON, 0);  /* Disable FIFO firstly! */
 6377              		.loc 1 1937 0
 6378 0008 0021     		movs	r1, #0
 6379 000a 42F20800 		movw	r0, #8200
 6380 000e FFF7FEFF 		bl	AD5940_WriteReg
1938:ad5940.c      ****   /* CMDDATACON register. Configure this firstly */
1939:ad5940.c      ****   tempreg = AD5940_ReadReg(REG_AFE_CMDDATACON);
 6381              		.loc 1 1939 0
 6382 0012 42F2D810 		movw	r0, #8664
 6383 0016 FFF7FEFF 		bl	AD5940_ReadReg
 6384 001a F860     		str	r0, [r7, #12]
1940:ad5940.c      ****   tempreg &= BITM_AFE_CMDDATACON_CMD_MEM_SEL|BITM_AFE_CMDDATACON_CMDMEMMDE; /* Keep sequencer memor
 6385              		.loc 1 1940 0
 6386 001c FB68     		ldr	r3, [r7, #12]
 6387 001e 03F03F03 		and	r3, r3, #63
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 148


 6388 0022 FB60     		str	r3, [r7, #12]
1941:ad5940.c      ****   tempreg |= pFifoCfg->FIFOMode << BITP_AFE_CMDDATACON_DATAMEMMDE; 				  /* Data FIFO mode: stream 
 6389              		.loc 1 1941 0
 6390 0024 7B68     		ldr	r3, [r7, #4]
 6391 0026 5B68     		ldr	r3, [r3, #4]
 6392 0028 5B02     		lsls	r3, r3, #9
 6393 002a FA68     		ldr	r2, [r7, #12]
 6394 002c 1343     		orrs	r3, r3, r2
 6395 002e FB60     		str	r3, [r7, #12]
1942:ad5940.c      ****   tempreg |= pFifoCfg->FIFOSize << BITP_AFE_CMDDATACON_DATA_MEM_SEL;  		  /* Data FIFO memory size 
 6396              		.loc 1 1942 0
 6397 0030 7B68     		ldr	r3, [r7, #4]
 6398 0032 9B68     		ldr	r3, [r3, #8]
 6399 0034 9B01     		lsls	r3, r3, #6
 6400 0036 FA68     		ldr	r2, [r7, #12]
 6401 0038 1343     		orrs	r3, r3, r2
 6402 003a FB60     		str	r3, [r7, #12]
1943:ad5940.c      ****   /* The reset memory can be used for sequencer, configure it by function AD5940_SEQCfg() */
1944:ad5940.c      ****   AD5940_WriteReg(REG_AFE_CMDDATACON, tempreg);
 6403              		.loc 1 1944 0
 6404 003c F968     		ldr	r1, [r7, #12]
 6405 003e 42F2D810 		movw	r0, #8664
 6406 0042 FFF7FEFF 		bl	AD5940_WriteReg
1945:ad5940.c      **** 
1946:ad5940.c      ****   /* FIFO Threshold */
1947:ad5940.c      ****   AD5940_WriteReg(REG_AFE_DATAFIFOTHRES, pFifoCfg->FIFOThresh << BITP_AFE_DATAFIFOTHRES_HIGHTHRES);
 6407              		.loc 1 1947 0
 6408 0046 7B68     		ldr	r3, [r7, #4]
 6409 0048 1B69     		ldr	r3, [r3, #16]
 6410 004a 1B04     		lsls	r3, r3, #16
 6411 004c 1946     		mov	r1, r3
 6412 004e 42F2E010 		movw	r0, #8672
 6413 0052 FFF7FEFF 		bl	AD5940_WriteReg
1948:ad5940.c      ****   /* FIFOCON register. Final step is to enable FIFO */
1949:ad5940.c      ****   tempreg = 0;
 6414              		.loc 1 1949 0
 6415 0056 0023     		movs	r3, #0
 6416 0058 FB60     		str	r3, [r7, #12]
1950:ad5940.c      ****   if(pFifoCfg->FIFOEn == bTRUE)
 6417              		.loc 1 1950 0
 6418 005a 7B68     		ldr	r3, [r7, #4]
 6419 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6420 005e 012B     		cmp	r3, #1
 6421 0060 03D1     		bne	.L350
1951:ad5940.c      ****     tempreg |= BITM_AFE_FIFOCON_DATAFIFOEN;																/* Enable FIFO after everything set. */
 6422              		.loc 1 1951 0
 6423 0062 FB68     		ldr	r3, [r7, #12]
 6424 0064 43F40063 		orr	r3, r3, #2048
 6425 0068 FB60     		str	r3, [r7, #12]
 6426              	.L350:
1952:ad5940.c      ****   tempreg |= pFifoCfg->FIFOSrc << BITP_AFE_FIFOCON_DATAFIFOSRCSEL;
 6427              		.loc 1 1952 0
 6428 006a 7B68     		ldr	r3, [r7, #4]
 6429 006c DB68     		ldr	r3, [r3, #12]
 6430 006e 5B03     		lsls	r3, r3, #13
 6431 0070 FA68     		ldr	r2, [r7, #12]
 6432 0072 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 149


 6433 0074 FB60     		str	r3, [r7, #12]
1953:ad5940.c      ****   AD5940_WriteReg(REG_AFE_FIFOCON, tempreg);
 6434              		.loc 1 1953 0
 6435 0076 F968     		ldr	r1, [r7, #12]
 6436 0078 42F20800 		movw	r0, #8200
 6437 007c FFF7FEFF 		bl	AD5940_WriteReg
1954:ad5940.c      **** }
 6438              		.loc 1 1954 0
 6439 0080 00BF     		nop
 6440 0082 1037     		adds	r7, r7, #16
 6441              		.cfi_def_cfa_offset 8
 6442 0084 BD46     		mov	sp, r7
 6443              		.cfi_def_cfa_register 13
 6444              		@ sp needed
 6445 0086 80BD     		pop	{r7, pc}
 6446              		.cfi_endproc
 6447              	.LFE66:
 6448              		.size	AD5940_FIFOCfg, .-AD5940_FIFOCfg
 6449              		.section	.text.AD5940_FIFOGetCfg,"ax",%progbits
 6450              		.align	2
 6451              		.global	AD5940_FIFOGetCfg
 6452              		.thumb
 6453              		.thumb_func
 6454              		.type	AD5940_FIFOGetCfg, %function
 6455              	AD5940_FIFOGetCfg:
 6456              	.LFB67:
1955:ad5940.c      **** 
1956:ad5940.c      **** /**
1957:ad5940.c      ****    @brief Read current FIFO configuration.
1958:ad5940.c      ****    @param pFifoCfg: Pointer to a buffer that used to store FIFO configuration.
1959:ad5940.c      ****    @return return AD5940ERR_OK if succeed.
1960:ad5940.c      **** */
1961:ad5940.c      **** AD5940Err AD5940_FIFOGetCfg(FIFOCfg_Type *pFifoCfg)
1962:ad5940.c      **** {
 6457              		.loc 1 1962 0
 6458              		.cfi_startproc
 6459              		@ args = 0, pretend = 0, frame = 16
 6460              		@ frame_needed = 1, uses_anonymous_args = 0
 6461 0000 80B5     		push	{r7, lr}
 6462              		.cfi_def_cfa_offset 8
 6463              		.cfi_offset 7, -8
 6464              		.cfi_offset 14, -4
 6465 0002 84B0     		sub	sp, sp, #16
 6466              		.cfi_def_cfa_offset 24
 6467 0004 00AF     		add	r7, sp, #0
 6468              		.cfi_def_cfa_register 7
 6469 0006 7860     		str	r0, [r7, #4]
1963:ad5940.c      ****   uint32_t tempreg;
1964:ad5940.c      ****   //check parameters
1965:ad5940.c      ****   if(pFifoCfg == NULL) return AD5940ERR_NULLP;
 6470              		.loc 1 1965 0
 6471 0008 7B68     		ldr	r3, [r7, #4]
 6472 000a 002B     		cmp	r3, #0
 6473 000c 02D1     		bne	.L352
 6474              		.loc 1 1965 0 is_stmt 0 discriminator 1
 6475 000e 6FF00203 		mvn	r3, #2
 6476 0012 32E0     		b	.L353
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 150


 6477              	.L352:
1966:ad5940.c      ****   /* CMDDATACON register. */
1967:ad5940.c      ****   tempreg = AD5940_ReadReg(REG_AFE_CMDDATACON);
 6478              		.loc 1 1967 0 is_stmt 1
 6479 0014 42F2D810 		movw	r0, #8664
 6480 0018 FFF7FEFF 		bl	AD5940_ReadReg
 6481 001c F860     		str	r0, [r7, #12]
1968:ad5940.c      ****   pFifoCfg->FIFOMode = (tempreg&BITM_AFE_CMDDATACON_DATAMEMMDE)>>BITP_AFE_CMDDATACON_DATAMEMMDE;
 6482              		.loc 1 1968 0
 6483 001e FB68     		ldr	r3, [r7, #12]
 6484 0020 5B0A     		lsrs	r3, r3, #9
 6485 0022 03F00702 		and	r2, r3, #7
 6486 0026 7B68     		ldr	r3, [r7, #4]
 6487 0028 5A60     		str	r2, [r3, #4]
1969:ad5940.c      ****   pFifoCfg->FIFOSize = (tempreg&BITM_AFE_CMDDATACON_DATA_MEM_SEL)>>BITP_AFE_CMDDATACON_DATA_MEM_SEL
 6488              		.loc 1 1969 0
 6489 002a FB68     		ldr	r3, [r7, #12]
 6490 002c 9B09     		lsrs	r3, r3, #6
 6491 002e 03F00702 		and	r2, r3, #7
 6492 0032 7B68     		ldr	r3, [r7, #4]
 6493 0034 9A60     		str	r2, [r3, #8]
1970:ad5940.c      **** 
1971:ad5940.c      ****   /* FIFO Threshold */
1972:ad5940.c      ****   tempreg = AD5940_ReadReg(REG_AFE_DATAFIFOTHRES);
 6494              		.loc 1 1972 0
 6495 0036 42F2E010 		movw	r0, #8672
 6496 003a FFF7FEFF 		bl	AD5940_ReadReg
 6497 003e F860     		str	r0, [r7, #12]
1973:ad5940.c      ****   pFifoCfg->FIFOThresh = (tempreg&BITM_AFE_DATAFIFOTHRES_HIGHTHRES)>>BITP_AFE_DATAFIFOTHRES_HIGHTHR
 6498              		.loc 1 1973 0
 6499 0040 FB68     		ldr	r3, [r7, #12]
 6500 0042 1B0C     		lsrs	r3, r3, #16
 6501 0044 C3F30A02 		ubfx	r2, r3, #0, #11
 6502 0048 7B68     		ldr	r3, [r7, #4]
 6503 004a 1A61     		str	r2, [r3, #16]
1974:ad5940.c      ****   /* FIFOCON register. */
1975:ad5940.c      ****   tempreg = AD5940_ReadReg(REG_AFE_FIFOCON);
 6504              		.loc 1 1975 0
 6505 004c 42F20800 		movw	r0, #8200
 6506 0050 FFF7FEFF 		bl	AD5940_ReadReg
 6507 0054 F860     		str	r0, [r7, #12]
1976:ad5940.c      ****   pFifoCfg->FIFOEn = (tempreg&BITM_AFE_FIFOCON_DATAFIFOEN)?bTRUE:bFALSE;
 6508              		.loc 1 1976 0
 6509 0056 FB68     		ldr	r3, [r7, #12]
 6510 0058 03F40063 		and	r3, r3, #2048
 6511 005c 002B     		cmp	r3, #0
 6512 005e 14BF     		ite	ne
 6513 0060 0123     		movne	r3, #1
 6514 0062 0023     		moveq	r3, #0
 6515 0064 DBB2     		uxtb	r3, r3
 6516 0066 1A46     		mov	r2, r3
 6517 0068 7B68     		ldr	r3, [r7, #4]
 6518 006a 1A70     		strb	r2, [r3]
1977:ad5940.c      ****   pFifoCfg->FIFOSrc = (tempreg&BITM_AFE_FIFOCON_DATAFIFOSRCSEL)>>BITP_AFE_FIFOCON_DATAFIFOSRCSEL;
 6519              		.loc 1 1977 0
 6520 006c FB68     		ldr	r3, [r7, #12]
 6521 006e 5B0B     		lsrs	r3, r3, #13
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 151


 6522 0070 03F00702 		and	r2, r3, #7
 6523 0074 7B68     		ldr	r3, [r7, #4]
 6524 0076 DA60     		str	r2, [r3, #12]
1978:ad5940.c      **** 
1979:ad5940.c      ****   return AD5940ERR_OK;
 6525              		.loc 1 1979 0
 6526 0078 0023     		movs	r3, #0
 6527              	.L353:
1980:ad5940.c      **** }
 6528              		.loc 1 1980 0
 6529 007a 1846     		mov	r0, r3
 6530 007c 1037     		adds	r7, r7, #16
 6531              		.cfi_def_cfa_offset 8
 6532 007e BD46     		mov	sp, r7
 6533              		.cfi_def_cfa_register 13
 6534              		@ sp needed
 6535 0080 80BD     		pop	{r7, pc}
 6536              		.cfi_endproc
 6537              	.LFE67:
 6538              		.size	AD5940_FIFOGetCfg, .-AD5940_FIFOGetCfg
 6539 0082 00BF     		.section	.text.AD5940_FIFOCtrlS,"ax",%progbits
 6540              		.align	2
 6541              		.global	AD5940_FIFOCtrlS
 6542              		.thumb
 6543              		.thumb_func
 6544              		.type	AD5940_FIFOCtrlS, %function
 6545              	AD5940_FIFOCtrlS:
 6546              	.LFB68:
1981:ad5940.c      **** 
1982:ad5940.c      **** /**
1983:ad5940.c      ****  * @brief Configure AD5940 FIFO Source and enable or disable FIFO.
1984:ad5940.c      ****  * @param FifoSrc : available choices are @ref FIFOSRC_Const 
1985:ad5940.c      ****  *      - FIFOSRC_SINC3       SINC3 data
1986:ad5940.c      ****  *      - FIFOSRC_DFT         DFT real and imaginary part 
1987:ad5940.c      ****  *      - FIFOSRC_SINC2NOTCH  SINC2+NOTCH block. Notch can be bypassed, so SINC2 data can be feed t
1988:ad5940.c      ****  *      - FIFOSRC_VAR         Statistic variance output 
1989:ad5940.c      ****  *      - FIFOSRC_MEAN        Statistic mean output
1990:ad5940.c      ****  * @param FifoEn: enable or disable the FIFO.
1991:ad5940.c      ****  * @return return none.
1992:ad5940.c      **** */
1993:ad5940.c      **** void AD5940_FIFOCtrlS(uint32_t FifoSrc, BoolFlag FifoEn)
1994:ad5940.c      **** {
 6547              		.loc 1 1994 0
 6548              		.cfi_startproc
 6549              		@ args = 0, pretend = 0, frame = 16
 6550              		@ frame_needed = 1, uses_anonymous_args = 0
 6551 0000 80B5     		push	{r7, lr}
 6552              		.cfi_def_cfa_offset 8
 6553              		.cfi_offset 7, -8
 6554              		.cfi_offset 14, -4
 6555 0002 84B0     		sub	sp, sp, #16
 6556              		.cfi_def_cfa_offset 24
 6557 0004 00AF     		add	r7, sp, #0
 6558              		.cfi_def_cfa_register 7
 6559 0006 7860     		str	r0, [r7, #4]
 6560 0008 0B46     		mov	r3, r1
 6561 000a FB70     		strb	r3, [r7, #3]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 152


1995:ad5940.c      ****   uint32_t tempreg;
1996:ad5940.c      **** 
1997:ad5940.c      ****   tempreg = 0;
 6562              		.loc 1 1997 0
 6563 000c 0023     		movs	r3, #0
 6564 000e FB60     		str	r3, [r7, #12]
1998:ad5940.c      ****   if(FifoEn == bTRUE)
 6565              		.loc 1 1998 0
 6566 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6567 0012 012B     		cmp	r3, #1
 6568 0014 03D1     		bne	.L355
1999:ad5940.c      ****     tempreg |= BITM_AFE_FIFOCON_DATAFIFOEN;
 6569              		.loc 1 1999 0
 6570 0016 FB68     		ldr	r3, [r7, #12]
 6571 0018 43F40063 		orr	r3, r3, #2048
 6572 001c FB60     		str	r3, [r7, #12]
 6573              	.L355:
2000:ad5940.c      ****   tempreg |= FifoSrc << BITP_AFE_FIFOCON_DATAFIFOSRCSEL;
 6574              		.loc 1 2000 0
 6575 001e 7B68     		ldr	r3, [r7, #4]
 6576 0020 5B03     		lsls	r3, r3, #13
 6577 0022 FA68     		ldr	r2, [r7, #12]
 6578 0024 1343     		orrs	r3, r3, r2
 6579 0026 FB60     		str	r3, [r7, #12]
2001:ad5940.c      ****   AD5940_WriteReg(REG_AFE_FIFOCON, tempreg);
 6580              		.loc 1 2001 0
 6581 0028 F968     		ldr	r1, [r7, #12]
 6582 002a 42F20800 		movw	r0, #8200
 6583 002e FFF7FEFF 		bl	AD5940_WriteReg
2002:ad5940.c      **** }
 6584              		.loc 1 2002 0
 6585 0032 00BF     		nop
 6586 0034 1037     		adds	r7, r7, #16
 6587              		.cfi_def_cfa_offset 8
 6588 0036 BD46     		mov	sp, r7
 6589              		.cfi_def_cfa_register 13
 6590              		@ sp needed
 6591 0038 80BD     		pop	{r7, pc}
 6592              		.cfi_endproc
 6593              	.LFE68:
 6594              		.size	AD5940_FIFOCtrlS, .-AD5940_FIFOCtrlS
 6595 003a 00BF     		.section	.text.AD5940_FIFOThrshSet,"ax",%progbits
 6596              		.align	2
 6597              		.global	AD5940_FIFOThrshSet
 6598              		.thumb
 6599              		.thumb_func
 6600              		.type	AD5940_FIFOThrshSet, %function
 6601              	AD5940_FIFOThrshSet:
 6602              	.LFB69:
2003:ad5940.c      **** 
2004:ad5940.c      **** /**
2005:ad5940.c      ****  * @brief Configure AD5940 Data FIFO threshold value
2006:ad5940.c      ****    @param FIFOThresh: FIFO threshold value
2007:ad5940.c      ****    @return return none.
2008:ad5940.c      **** */
2009:ad5940.c      **** void AD5940_FIFOThrshSet(uint32_t FIFOThresh)
2010:ad5940.c      **** {
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 153


 6603              		.loc 1 2010 0
 6604              		.cfi_startproc
 6605              		@ args = 0, pretend = 0, frame = 8
 6606              		@ frame_needed = 1, uses_anonymous_args = 0
 6607 0000 80B5     		push	{r7, lr}
 6608              		.cfi_def_cfa_offset 8
 6609              		.cfi_offset 7, -8
 6610              		.cfi_offset 14, -4
 6611 0002 82B0     		sub	sp, sp, #8
 6612              		.cfi_def_cfa_offset 16
 6613 0004 00AF     		add	r7, sp, #0
 6614              		.cfi_def_cfa_register 7
 6615 0006 7860     		str	r0, [r7, #4]
2011:ad5940.c      ****   /* FIFO Threshold */
2012:ad5940.c      ****   AD5940_WriteReg(REG_AFE_DATAFIFOTHRES, FIFOThresh << BITP_AFE_DATAFIFOTHRES_HIGHTHRES);
 6616              		.loc 1 2012 0
 6617 0008 7B68     		ldr	r3, [r7, #4]
 6618 000a 1B04     		lsls	r3, r3, #16
 6619 000c 1946     		mov	r1, r3
 6620 000e 42F2E010 		movw	r0, #8672
 6621 0012 FFF7FEFF 		bl	AD5940_WriteReg
2013:ad5940.c      **** }
 6622              		.loc 1 2013 0
 6623 0016 00BF     		nop
 6624 0018 0837     		adds	r7, r7, #8
 6625              		.cfi_def_cfa_offset 8
 6626 001a BD46     		mov	sp, r7
 6627              		.cfi_def_cfa_register 13
 6628              		@ sp needed
 6629 001c 80BD     		pop	{r7, pc}
 6630              		.cfi_endproc
 6631              	.LFE69:
 6632              		.size	AD5940_FIFOThrshSet, .-AD5940_FIFOThrshSet
 6633 001e 00BF     		.section	.text.AD5940_FIFOGetCnt,"ax",%progbits
 6634              		.align	2
 6635              		.global	AD5940_FIFOGetCnt
 6636              		.thumb
 6637              		.thumb_func
 6638              		.type	AD5940_FIFOGetCnt, %function
 6639              	AD5940_FIFOGetCnt:
 6640              	.LFB70:
2014:ad5940.c      **** 
2015:ad5940.c      **** /**
2016:ad5940.c      ****  * @brief Get Data count in FIFO
2017:ad5940.c      ****  * @return return none.
2018:ad5940.c      **** */
2019:ad5940.c      **** uint32_t AD5940_FIFOGetCnt(void)
2020:ad5940.c      **** {
 6641              		.loc 1 2020 0
 6642              		.cfi_startproc
 6643              		@ args = 0, pretend = 0, frame = 0
 6644              		@ frame_needed = 1, uses_anonymous_args = 0
 6645 0000 80B5     		push	{r7, lr}
 6646              		.cfi_def_cfa_offset 8
 6647              		.cfi_offset 7, -8
 6648              		.cfi_offset 14, -4
 6649 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 154


 6650              		.cfi_def_cfa_register 7
2021:ad5940.c      ****   return AD5940_ReadReg(REG_AFE_FIFOCNTSTA) >> BITP_AFE_FIFOCNTSTA_DATAFIFOCNTSTA;
 6651              		.loc 1 2021 0
 6652 0004 4FF40850 		mov	r0, #8704
 6653 0008 FFF7FEFF 		bl	AD5940_ReadReg
 6654 000c 0346     		mov	r3, r0
 6655 000e 1B0C     		lsrs	r3, r3, #16
2022:ad5940.c      **** }
 6656              		.loc 1 2022 0
 6657 0010 1846     		mov	r0, r3
 6658 0012 80BD     		pop	{r7, pc}
 6659              		.cfi_endproc
 6660              	.LFE70:
 6661              		.size	AD5940_FIFOGetCnt, .-AD5940_FIFOGetCnt
 6662              		.section	.text.AD5940_SEQCfg,"ax",%progbits
 6663              		.align	2
 6664              		.global	AD5940_SEQCfg
 6665              		.thumb
 6666              		.thumb_func
 6667              		.type	AD5940_SEQCfg, %function
 6668              	AD5940_SEQCfg:
 6669              	.LFB71:
2023:ad5940.c      **** 
2024:ad5940.c      **** 
2025:ad5940.c      **** /* Sequencer */
2026:ad5940.c      **** /**
2027:ad5940.c      ****  * @brief Initialize Sequencer
2028:ad5940.c      ****  * @param pSeqCfg: Pointer to configuration structure
2029:ad5940.c      ****    @return return none.
2030:ad5940.c      **** */
2031:ad5940.c      **** void AD5940_SEQCfg(SEQCfg_Type *pSeqCfg)
2032:ad5940.c      **** {
 6670              		.loc 1 2032 0
 6671              		.cfi_startproc
 6672              		@ args = 0, pretend = 0, frame = 16
 6673              		@ frame_needed = 1, uses_anonymous_args = 0
 6674 0000 80B5     		push	{r7, lr}
 6675              		.cfi_def_cfa_offset 8
 6676              		.cfi_offset 7, -8
 6677              		.cfi_offset 14, -4
 6678 0002 84B0     		sub	sp, sp, #16
 6679              		.cfi_def_cfa_offset 24
 6680 0004 00AF     		add	r7, sp, #0
 6681              		.cfi_def_cfa_register 7
 6682 0006 7860     		str	r0, [r7, #4]
2033:ad5940.c      ****   /* check parameters */
2034:ad5940.c      ****   uint32_t tempreg, fifocon;
2035:ad5940.c      ****   
2036:ad5940.c      ****   fifocon = AD5940_ReadReg(REG_AFE_FIFOCON);
 6683              		.loc 1 2036 0
 6684 0008 42F20800 		movw	r0, #8200
 6685 000c FFF7FEFF 		bl	AD5940_ReadReg
 6686 0010 B860     		str	r0, [r7, #8]
2037:ad5940.c      ****   AD5940_WriteReg(REG_AFE_FIFOCON, 0);  /* Disable FIFO before changing memory configuration */
 6687              		.loc 1 2037 0
 6688 0012 0021     		movs	r1, #0
 6689 0014 42F20800 		movw	r0, #8200
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 155


 6690 0018 FFF7FEFF 		bl	AD5940_WriteReg
2038:ad5940.c      ****   /* Configure CMDDATACON register */
2039:ad5940.c      ****   tempreg = AD5940_ReadReg(REG_AFE_CMDDATACON);
 6691              		.loc 1 2039 0
 6692 001c 42F2D810 		movw	r0, #8664
 6693 0020 FFF7FEFF 		bl	AD5940_ReadReg
 6694 0024 F860     		str	r0, [r7, #12]
2040:ad5940.c      ****   tempreg &= ~(BITM_AFE_CMDDATACON_CMDMEMMDE|BITM_AFE_CMDDATACON_CMD_MEM_SEL);  /* Clear settings f
 6695              		.loc 1 2040 0
 6696 0026 FB68     		ldr	r3, [r7, #12]
 6697 0028 23F03F03 		bic	r3, r3, #63
 6698 002c FB60     		str	r3, [r7, #12]
2041:ad5940.c      ****   tempreg |= (1L) << BITP_AFE_CMDDATACON_CMDMEMMDE;    										  /* Sequencer is always in memory
 6699              		.loc 1 2041 0
 6700 002e FB68     		ldr	r3, [r7, #12]
 6701 0030 43F00803 		orr	r3, r3, #8
 6702 0034 FB60     		str	r3, [r7, #12]
2042:ad5940.c      ****   tempreg |= (pSeqCfg->SeqMemSize) << BITP_AFE_CMDDATACON_CMD_MEM_SEL; 	
 6703              		.loc 1 2042 0
 6704 0036 7B68     		ldr	r3, [r7, #4]
 6705 0038 1B68     		ldr	r3, [r3]
 6706 003a FA68     		ldr	r2, [r7, #12]
 6707 003c 1343     		orrs	r3, r3, r2
 6708 003e FB60     		str	r3, [r7, #12]
2043:ad5940.c      ****   AD5940_WriteReg(REG_AFE_CMDDATACON, tempreg);
 6709              		.loc 1 2043 0
 6710 0040 F968     		ldr	r1, [r7, #12]
 6711 0042 42F2D810 		movw	r0, #8664
 6712 0046 FFF7FEFF 		bl	AD5940_WriteReg
2044:ad5940.c      **** 
2045:ad5940.c      ****   if(pSeqCfg->SeqCntCRCClr)
 6713              		.loc 1 2045 0
 6714 004a 7B68     		ldr	r3, [r7, #4]
 6715 004c DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 6716 004e 002B     		cmp	r3, #0
 6717 0050 09D0     		beq	.L360
2046:ad5940.c      ****   {
2047:ad5940.c      ****     AD5940_WriteReg(REG_AFE_SEQCON, 0);  /* Disable sequencer firstly */
 6718              		.loc 1 2047 0
 6719 0052 0021     		movs	r1, #0
 6720 0054 42F20400 		movw	r0, #8196
 6721 0058 FFF7FEFF 		bl	AD5940_WriteReg
2048:ad5940.c      ****     AD5940_WriteReg(REG_AFE_SEQCNT, 0);  /* When sequencer is disabled, any write to SEQCNT will cl
 6722              		.loc 1 2048 0
 6723 005c 0021     		movs	r1, #0
 6724 005e 42F26400 		movw	r0, #8292
 6725 0062 FFF7FEFF 		bl	AD5940_WriteReg
 6726              	.L360:
2049:ad5940.c      ****   }
2050:ad5940.c      ****   tempreg = 0;
 6727              		.loc 1 2050 0
 6728 0066 0023     		movs	r3, #0
 6729 0068 FB60     		str	r3, [r7, #12]
2051:ad5940.c      ****   if(pSeqCfg->SeqEnable == bTRUE)
 6730              		.loc 1 2051 0
 6731 006a 7B68     		ldr	r3, [r7, #4]
 6732 006c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 156


 6733 006e 012B     		cmp	r3, #1
 6734 0070 03D1     		bne	.L361
2052:ad5940.c      ****     tempreg |= BITM_AFE_SEQCON_SEQEN;
 6735              		.loc 1 2052 0
 6736 0072 FB68     		ldr	r3, [r7, #12]
 6737 0074 43F00103 		orr	r3, r3, #1
 6738 0078 FB60     		str	r3, [r7, #12]
 6739              	.L361:
2053:ad5940.c      ****   tempreg |= (pSeqCfg->SeqWrTimer) << BITP_AFE_SEQCON_SEQWRTMR;
 6740              		.loc 1 2053 0
 6741 007a 7B68     		ldr	r3, [r7, #4]
 6742 007c 9B68     		ldr	r3, [r3, #8]
 6743 007e 1B02     		lsls	r3, r3, #8
 6744 0080 FA68     		ldr	r2, [r7, #12]
 6745 0082 1343     		orrs	r3, r3, r2
 6746 0084 FB60     		str	r3, [r7, #12]
2054:ad5940.c      ****   AD5940_WriteReg(REG_AFE_SEQCON, tempreg);
 6747              		.loc 1 2054 0
 6748 0086 F968     		ldr	r1, [r7, #12]
 6749 0088 42F20400 		movw	r0, #8196
 6750 008c FFF7FEFF 		bl	AD5940_WriteReg
2055:ad5940.c      ****   AD5940_WriteReg(REG_AFE_FIFOCON, fifocon);  /* restore FIFO configuration */
 6751              		.loc 1 2055 0
 6752 0090 B968     		ldr	r1, [r7, #8]
 6753 0092 42F20800 		movw	r0, #8200
 6754 0096 FFF7FEFF 		bl	AD5940_WriteReg
2056:ad5940.c      **** 
2057:ad5940.c      ****   // tempreg = 0;
2058:ad5940.c      ****   // if(pSeqCfg->SeqBreakEn)
2059:ad5940.c      ****   //   tempreg |= 0x01;  // add register definition? bitm_afe_
2060:ad5940.c      ****   // if(pSeqCfg->SeqIgnoreEn)
2061:ad5940.c      ****   //   tempreg |= 0x02;  
2062:ad5940.c      ****   // AD5940_WriteReg(0x21dc, tempreg);
2063:ad5940.c      **** }
 6755              		.loc 1 2063 0
 6756 009a 00BF     		nop
 6757 009c 1037     		adds	r7, r7, #16
 6758              		.cfi_def_cfa_offset 8
 6759 009e BD46     		mov	sp, r7
 6760              		.cfi_def_cfa_register 13
 6761              		@ sp needed
 6762 00a0 80BD     		pop	{r7, pc}
 6763              		.cfi_endproc
 6764              	.LFE71:
 6765              		.size	AD5940_SEQCfg, .-AD5940_SEQCfg
 6766 00a2 00BF     		.section	.text.AD5940_SEQGetCfg,"ax",%progbits
 6767              		.align	2
 6768              		.global	AD5940_SEQGetCfg
 6769              		.thumb
 6770              		.thumb_func
 6771              		.type	AD5940_SEQGetCfg, %function
 6772              	AD5940_SEQGetCfg:
 6773              	.LFB72:
2064:ad5940.c      **** /**
2065:ad5940.c      ****  * @brief Read back current sequencer configuration and store it to pSeqCfg
2066:ad5940.c      ****  * @param pSeqCfg: Pointer to structure
2067:ad5940.c      ****  * @return return AD5940ERR_OK if succeed.
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 157


2068:ad5940.c      **** */
2069:ad5940.c      **** AD5940Err AD5940_SEQGetCfg(SEQCfg_Type *pSeqCfg)
2070:ad5940.c      **** {
 6774              		.loc 1 2070 0
 6775              		.cfi_startproc
 6776              		@ args = 0, pretend = 0, frame = 16
 6777              		@ frame_needed = 1, uses_anonymous_args = 0
 6778 0000 80B5     		push	{r7, lr}
 6779              		.cfi_def_cfa_offset 8
 6780              		.cfi_offset 7, -8
 6781              		.cfi_offset 14, -4
 6782 0002 84B0     		sub	sp, sp, #16
 6783              		.cfi_def_cfa_offset 24
 6784 0004 00AF     		add	r7, sp, #0
 6785              		.cfi_def_cfa_register 7
 6786 0006 7860     		str	r0, [r7, #4]
2071:ad5940.c      ****   /* check parameters */
2072:ad5940.c      ****   uint32_t tempreg;
2073:ad5940.c      ****   if(pSeqCfg == NULL)
 6787              		.loc 1 2073 0
 6788 0008 7B68     		ldr	r3, [r7, #4]
 6789 000a 002B     		cmp	r3, #0
 6790 000c 02D1     		bne	.L363
2074:ad5940.c      ****     return AD5940ERR_NULLP;
 6791              		.loc 1 2074 0
 6792 000e 6FF00203 		mvn	r3, #2
 6793 0012 22E0     		b	.L364
 6794              	.L363:
2075:ad5940.c      ****   /* Read CMDDATACON register */
2076:ad5940.c      ****   tempreg = AD5940_ReadReg(REG_AFE_CMDDATACON);
 6795              		.loc 1 2076 0
 6796 0014 42F2D810 		movw	r0, #8664
 6797 0018 FFF7FEFF 		bl	AD5940_ReadReg
 6798 001c F860     		str	r0, [r7, #12]
2077:ad5940.c      ****   pSeqCfg->SeqMemSize = (tempreg&BITM_AFE_CMDDATACON_CMD_MEM_SEL) >> BITP_AFE_CMDDATACON_CMD_MEM_SE
 6799              		.loc 1 2077 0
 6800 001e FB68     		ldr	r3, [r7, #12]
 6801 0020 03F00702 		and	r2, r3, #7
 6802 0024 7B68     		ldr	r3, [r7, #4]
 6803 0026 1A60     		str	r2, [r3]
2078:ad5940.c      ****   pSeqCfg->SeqCntCRCClr = bFALSE; /* Has no meaning */
 6804              		.loc 1 2078 0
 6805 0028 7B68     		ldr	r3, [r7, #4]
 6806 002a 0022     		movs	r2, #0
 6807 002c DA71     		strb	r2, [r3, #7]
2079:ad5940.c      ****   /* SEQCON register */
2080:ad5940.c      ****   tempreg = AD5940_ReadReg(REG_AFE_SEQCON);
 6808              		.loc 1 2080 0
 6809 002e 42F20400 		movw	r0, #8196
 6810 0032 FFF7FEFF 		bl	AD5940_ReadReg
 6811 0036 F860     		str	r0, [r7, #12]
2081:ad5940.c      ****   pSeqCfg->SeqEnable = (tempreg&BITM_AFE_SEQCON_SEQEN)?bTRUE:bFALSE;
 6812              		.loc 1 2081 0
 6813 0038 FB68     		ldr	r3, [r7, #12]
 6814 003a 03F00103 		and	r3, r3, #1
 6815 003e 002B     		cmp	r3, #0
 6816 0040 14BF     		ite	ne
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 158


 6817 0042 0123     		movne	r3, #1
 6818 0044 0023     		moveq	r3, #0
 6819 0046 DBB2     		uxtb	r3, r3
 6820 0048 1A46     		mov	r2, r3
 6821 004a 7B68     		ldr	r3, [r7, #4]
 6822 004c 1A71     		strb	r2, [r3, #4]
2082:ad5940.c      ****   pSeqCfg->SeqWrTimer = (tempreg&BITM_AFE_SEQCON_SEQWRTMR) >> BITP_AFE_SEQCON_SEQWRTMR;
 6823              		.loc 1 2082 0
 6824 004e FB68     		ldr	r3, [r7, #12]
 6825 0050 1B0A     		lsrs	r3, r3, #8
 6826 0052 DAB2     		uxtb	r2, r3
 6827 0054 7B68     		ldr	r3, [r7, #4]
 6828 0056 9A60     		str	r2, [r3, #8]
2083:ad5940.c      ****   return AD5940ERR_OK;
 6829              		.loc 1 2083 0
 6830 0058 0023     		movs	r3, #0
 6831              	.L364:
2084:ad5940.c      **** }
 6832              		.loc 1 2084 0
 6833 005a 1846     		mov	r0, r3
 6834 005c 1037     		adds	r7, r7, #16
 6835              		.cfi_def_cfa_offset 8
 6836 005e BD46     		mov	sp, r7
 6837              		.cfi_def_cfa_register 13
 6838              		@ sp needed
 6839 0060 80BD     		pop	{r7, pc}
 6840              		.cfi_endproc
 6841              	.LFE72:
 6842              		.size	AD5940_SEQGetCfg, .-AD5940_SEQGetCfg
 6843 0062 00BF     		.section	.text.AD5940_SEQCtrlS,"ax",%progbits
 6844              		.align	2
 6845              		.global	AD5940_SEQCtrlS
 6846              		.thumb
 6847              		.thumb_func
 6848              		.type	AD5940_SEQCtrlS, %function
 6849              	AD5940_SEQCtrlS:
 6850              	.LFB73:
2085:ad5940.c      **** 
2086:ad5940.c      **** /**
2087:ad5940.c      ****  * @brief Enable or Disable sequencer. 
2088:ad5940.c      ****  * @note Only after valid trigger signal, sequencer can run.
2089:ad5940.c      ****  * @return return none.
2090:ad5940.c      **** */
2091:ad5940.c      **** void AD5940_SEQCtrlS(BoolFlag SeqEn)
2092:ad5940.c      **** {
 6851              		.loc 1 2092 0
 6852              		.cfi_startproc
 6853              		@ args = 0, pretend = 0, frame = 16
 6854              		@ frame_needed = 1, uses_anonymous_args = 0
 6855 0000 80B5     		push	{r7, lr}
 6856              		.cfi_def_cfa_offset 8
 6857              		.cfi_offset 7, -8
 6858              		.cfi_offset 14, -4
 6859 0002 84B0     		sub	sp, sp, #16
 6860              		.cfi_def_cfa_offset 24
 6861 0004 00AF     		add	r7, sp, #0
 6862              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 159


 6863 0006 0346     		mov	r3, r0
 6864 0008 FB71     		strb	r3, [r7, #7]
2093:ad5940.c      ****   uint32_t tempreg = AD5940_ReadReg(REG_AFE_SEQCON);
 6865              		.loc 1 2093 0
 6866 000a 42F20400 		movw	r0, #8196
 6867 000e FFF7FEFF 		bl	AD5940_ReadReg
 6868 0012 F860     		str	r0, [r7, #12]
2094:ad5940.c      ****   if(SeqEn == bTRUE)
 6869              		.loc 1 2094 0
 6870 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6871 0016 012B     		cmp	r3, #1
 6872 0018 04D1     		bne	.L366
2095:ad5940.c      ****     tempreg |= BITM_AFE_SEQCON_SEQEN;
 6873              		.loc 1 2095 0
 6874 001a FB68     		ldr	r3, [r7, #12]
 6875 001c 43F00103 		orr	r3, r3, #1
 6876 0020 FB60     		str	r3, [r7, #12]
 6877 0022 03E0     		b	.L367
 6878              	.L366:
2096:ad5940.c      ****   else
2097:ad5940.c      ****     tempreg &= ~BITM_AFE_SEQCON_SEQEN;
 6879              		.loc 1 2097 0
 6880 0024 FB68     		ldr	r3, [r7, #12]
 6881 0026 23F00103 		bic	r3, r3, #1
 6882 002a FB60     		str	r3, [r7, #12]
 6883              	.L367:
2098:ad5940.c      **** 
2099:ad5940.c      ****   AD5940_WriteReg(REG_AFE_SEQCON, tempreg);
 6884              		.loc 1 2099 0
 6885 002c F968     		ldr	r1, [r7, #12]
 6886 002e 42F20400 		movw	r0, #8196
 6887 0032 FFF7FEFF 		bl	AD5940_WriteReg
2100:ad5940.c      **** }
 6888              		.loc 1 2100 0
 6889 0036 00BF     		nop
 6890 0038 1037     		adds	r7, r7, #16
 6891              		.cfi_def_cfa_offset 8
 6892 003a BD46     		mov	sp, r7
 6893              		.cfi_def_cfa_register 13
 6894              		@ sp needed
 6895 003c 80BD     		pop	{r7, pc}
 6896              		.cfi_endproc
 6897              	.LFE73:
 6898              		.size	AD5940_SEQCtrlS, .-AD5940_SEQCtrlS
 6899 003e 00BF     		.section	.text.AD5940_SEQHaltS,"ax",%progbits
 6900              		.align	2
 6901              		.global	AD5940_SEQHaltS
 6902              		.thumb
 6903              		.thumb_func
 6904              		.type	AD5940_SEQHaltS, %function
 6905              	AD5940_SEQHaltS:
 6906              	.LFB74:
2101:ad5940.c      **** 
2102:ad5940.c      **** /**
2103:ad5940.c      ****  * @brief Halt sequencer immediately. Use this to debug. In normal application, there is no situati
2104:ad5940.c      ****  * @return return none.
2105:ad5940.c      **** */
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 160


2106:ad5940.c      **** void AD5940_SEQHaltS(void)
2107:ad5940.c      **** {
 6907              		.loc 1 2107 0
 6908              		.cfi_startproc
 6909              		@ args = 0, pretend = 0, frame = 0
 6910              		@ frame_needed = 1, uses_anonymous_args = 0
 6911 0000 80B5     		push	{r7, lr}
 6912              		.cfi_def_cfa_offset 8
 6913              		.cfi_offset 7, -8
 6914              		.cfi_offset 14, -4
 6915 0002 00AF     		add	r7, sp, #0
 6916              		.cfi_def_cfa_register 7
2108:ad5940.c      ****   AD5940_WriteReg(REG_AFE_SEQCON, BITM_AFE_SEQCON_SEQHALT|BITM_AFE_SEQCON_SEQEN);
 6917              		.loc 1 2108 0
 6918 0004 1121     		movs	r1, #17
 6919 0006 42F20400 		movw	r0, #8196
 6920 000a FFF7FEFF 		bl	AD5940_WriteReg
2109:ad5940.c      **** }
 6921              		.loc 1 2109 0
 6922 000e 00BF     		nop
 6923 0010 80BD     		pop	{r7, pc}
 6924              		.cfi_endproc
 6925              	.LFE74:
 6926              		.size	AD5940_SEQHaltS, .-AD5940_SEQHaltS
 6927 0012 00BF     		.section	.text.AD5940_SEQMmrTrig,"ax",%progbits
 6928              		.align	2
 6929              		.global	AD5940_SEQMmrTrig
 6930              		.thumb
 6931              		.thumb_func
 6932              		.type	AD5940_SEQMmrTrig, %function
 6933              	AD5940_SEQMmrTrig:
 6934              	.LFB75:
2110:ad5940.c      **** 
2111:ad5940.c      **** /**
2112:ad5940.c      ****  * @brief Trigger sequencer by register write.
2113:ad5940.c      ****  * @return return none.
2114:ad5940.c      **** **/
2115:ad5940.c      **** void AD5940_SEQMmrTrig(uint32_t SeqId)
2116:ad5940.c      **** {
 6935              		.loc 1 2116 0
 6936              		.cfi_startproc
 6937              		@ args = 0, pretend = 0, frame = 8
 6938              		@ frame_needed = 1, uses_anonymous_args = 0
 6939 0000 80B5     		push	{r7, lr}
 6940              		.cfi_def_cfa_offset 8
 6941              		.cfi_offset 7, -8
 6942              		.cfi_offset 14, -4
 6943 0002 82B0     		sub	sp, sp, #8
 6944              		.cfi_def_cfa_offset 16
 6945 0004 00AF     		add	r7, sp, #0
 6946              		.cfi_def_cfa_register 7
 6947 0006 7860     		str	r0, [r7, #4]
2117:ad5940.c      ****   if(SeqId > SEQID_3)
 6948              		.loc 1 2117 0
 6949 0008 7B68     		ldr	r3, [r7, #4]
 6950 000a 032B     		cmp	r3, #3
 6951 000c 09D8     		bhi	.L372
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 161


2118:ad5940.c      ****     return;
2119:ad5940.c      ****   AD5940_WriteReg(REG_AFECON_TRIGSEQ, 1L<<SeqId);
 6952              		.loc 1 2119 0
 6953 000e 0122     		movs	r2, #1
 6954 0010 7B68     		ldr	r3, [r7, #4]
 6955 0012 02FA03F3 		lsl	r3, r2, r3
 6956 0016 1946     		mov	r1, r3
 6957 0018 4FF48660 		mov	r0, #1072
 6958 001c FFF7FEFF 		bl	AD5940_WriteReg
 6959 0020 00E0     		b	.L369
 6960              	.L372:
2118:ad5940.c      ****     return;
 6961              		.loc 1 2118 0
 6962 0022 00BF     		nop
 6963              	.L369:
2120:ad5940.c      **** }
 6964              		.loc 1 2120 0
 6965 0024 0837     		adds	r7, r7, #8
 6966              		.cfi_def_cfa_offset 8
 6967 0026 BD46     		mov	sp, r7
 6968              		.cfi_def_cfa_register 13
 6969              		@ sp needed
 6970 0028 80BD     		pop	{r7, pc}
 6971              		.cfi_endproc
 6972              	.LFE75:
 6973              		.size	AD5940_SEQMmrTrig, .-AD5940_SEQMmrTrig
 6974 002a 00BF     		.section	.text.AD5940_SEQCmdWrite,"ax",%progbits
 6975              		.align	2
 6976              		.global	AD5940_SEQCmdWrite
 6977              		.thumb
 6978              		.thumb_func
 6979              		.type	AD5940_SEQCmdWrite, %function
 6980              	AD5940_SEQCmdWrite:
 6981              	.LFB76:
2121:ad5940.c      **** 
2122:ad5940.c      **** /**
2123:ad5940.c      ****  * @brief Write sequencer commands to AD5940 SRAM.
2124:ad5940.c      ****  * @return return none.
2125:ad5940.c      **** **/
2126:ad5940.c      **** void AD5940_SEQCmdWrite(uint32_t StartAddr, const uint32_t *pCommand, uint32_t CmdCnt)
2127:ad5940.c      **** {
 6982              		.loc 1 2127 0
 6983              		.cfi_startproc
 6984              		@ args = 0, pretend = 0, frame = 16
 6985              		@ frame_needed = 1, uses_anonymous_args = 0
 6986 0000 80B5     		push	{r7, lr}
 6987              		.cfi_def_cfa_offset 8
 6988              		.cfi_offset 7, -8
 6989              		.cfi_offset 14, -4
 6990 0002 84B0     		sub	sp, sp, #16
 6991              		.cfi_def_cfa_offset 24
 6992 0004 00AF     		add	r7, sp, #0
 6993              		.cfi_def_cfa_register 7
 6994 0006 F860     		str	r0, [r7, #12]
 6995 0008 B960     		str	r1, [r7, #8]
 6996 000a 7A60     		str	r2, [r7, #4]
2128:ad5940.c      ****   while(CmdCnt--)
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 162


 6997              		.loc 1 2128 0
 6998 000c 10E0     		b	.L374
 6999              	.L375:
2129:ad5940.c      ****   {
2130:ad5940.c      ****     AD5940_WriteReg(REG_AFE_CMDFIFOWADDR, StartAddr++);
 7000              		.loc 1 2130 0
 7001 000e FB68     		ldr	r3, [r7, #12]
 7002 0010 5A1C     		adds	r2, r3, #1
 7003 0012 FA60     		str	r2, [r7, #12]
 7004 0014 1946     		mov	r1, r3
 7005 0016 42F2D410 		movw	r0, #8660
 7006 001a FFF7FEFF 		bl	AD5940_WriteReg
2131:ad5940.c      ****     AD5940_WriteReg(REG_AFE_CMDFIFOWRITE, *pCommand++);
 7007              		.loc 1 2131 0
 7008 001e BB68     		ldr	r3, [r7, #8]
 7009 0020 1A1D     		adds	r2, r3, #4
 7010 0022 BA60     		str	r2, [r7, #8]
 7011 0024 1B68     		ldr	r3, [r3]
 7012 0026 1946     		mov	r1, r3
 7013 0028 42F27000 		movw	r0, #8304
 7014 002c FFF7FEFF 		bl	AD5940_WriteReg
 7015              	.L374:
2128:ad5940.c      ****   while(CmdCnt--)
 7016              		.loc 1 2128 0
 7017 0030 7B68     		ldr	r3, [r7, #4]
 7018 0032 5A1E     		subs	r2, r3, #1
 7019 0034 7A60     		str	r2, [r7, #4]
 7020 0036 002B     		cmp	r3, #0
 7021 0038 E9D1     		bne	.L375
2132:ad5940.c      ****   }
2133:ad5940.c      **** }
 7022              		.loc 1 2133 0
 7023 003a 00BF     		nop
 7024 003c 1037     		adds	r7, r7, #16
 7025              		.cfi_def_cfa_offset 8
 7026 003e BD46     		mov	sp, r7
 7027              		.cfi_def_cfa_register 13
 7028              		@ sp needed
 7029 0040 80BD     		pop	{r7, pc}
 7030              		.cfi_endproc
 7031              	.LFE76:
 7032              		.size	AD5940_SEQCmdWrite, .-AD5940_SEQCmdWrite
 7033 0042 00BF     		.section	.text.AD5940_SEQInfoCfg,"ax",%progbits
 7034              		.align	2
 7035              		.global	AD5940_SEQInfoCfg
 7036              		.thumb
 7037              		.thumb_func
 7038              		.type	AD5940_SEQInfoCfg, %function
 7039              	AD5940_SEQInfoCfg:
 7040              	.LFB77:
2134:ad5940.c      **** 
2135:ad5940.c      **** /**
2136:ad5940.c      ****    @brief Initialize Sequence INFO. 
2137:ad5940.c      ****    @details There are four set of registers that record sequence information. 
2138:ad5940.c      ****           The info contains command start address in SRAM and sequence length. 
2139:ad5940.c      ****           Hardware can automatically manage these four sequences. If the application 
2140:ad5940.c      ****           requires more than 4 sequences, user should manually record the sequence 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 163


2141:ad5940.c      ****           Info(address and length) in MCU.
2142:ad5940.c      ****    @param pSeq: Pointer to configuration structure. Specify sequence start address in SRAM and sequ
2143:ad5940.c      ****    @return return none.
2144:ad5940.c      **** */
2145:ad5940.c      **** void AD5940_SEQInfoCfg(SEQInfo_Type *pSeq)
2146:ad5940.c      **** {
 7041              		.loc 1 2146 0
 7042              		.cfi_startproc
 7043              		@ args = 0, pretend = 0, frame = 8
 7044              		@ frame_needed = 1, uses_anonymous_args = 0
 7045 0000 80B5     		push	{r7, lr}
 7046              		.cfi_def_cfa_offset 8
 7047              		.cfi_offset 7, -8
 7048              		.cfi_offset 14, -4
 7049 0002 82B0     		sub	sp, sp, #8
 7050              		.cfi_def_cfa_offset 16
 7051 0004 00AF     		add	r7, sp, #0
 7052              		.cfi_def_cfa_register 7
 7053 0006 7860     		str	r0, [r7, #4]
2147:ad5940.c      ****   switch(pSeq->SeqId)
 7054              		.loc 1 2147 0
 7055 0008 7B68     		ldr	r3, [r7, #4]
 7056 000a 1B68     		ldr	r3, [r3]
 7057 000c 032B     		cmp	r3, #3
 7058 000e 3BD8     		bhi	.L385
 7059 0010 01A2     		adr	r2, .L379
 7060 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7061 0016 00BF     		.p2align 2
 7062              	.L379:
 7063 0018 29000000 		.word	.L378+1
 7064 001c 41000000 		.word	.L380+1
 7065 0020 59000000 		.word	.L381+1
 7066 0024 71000000 		.word	.L382+1
 7067              		.p2align 1
 7068              	.L378:
2148:ad5940.c      ****   {
2149:ad5940.c      ****     case SEQID_0:
2150:ad5940.c      ****     /* Configure SEQINFO register */
2151:ad5940.c      ****     AD5940_WriteReg(REG_AFE_SEQ0INFO, (pSeq->SeqLen<< 16) | pSeq->SeqRamAddr);
 7069              		.loc 1 2151 0
 7070 0028 7B68     		ldr	r3, [r7, #4]
 7071 002a 9B68     		ldr	r3, [r3, #8]
 7072 002c 1A04     		lsls	r2, r3, #16
 7073 002e 7B68     		ldr	r3, [r7, #4]
 7074 0030 5B68     		ldr	r3, [r3, #4]
 7075 0032 1343     		orrs	r3, r3, r2
 7076 0034 1946     		mov	r1, r3
 7077 0036 42F2CC10 		movw	r0, #8652
 7078 003a FFF7FEFF 		bl	AD5940_WriteReg
2152:ad5940.c      ****     break;
 7079              		.loc 1 2152 0
 7080 003e 24E0     		b	.L383
 7081              	.L380:
2153:ad5940.c      ****     case SEQID_1:
2154:ad5940.c      ****     AD5940_WriteReg(REG_AFE_SEQ1INFO, (pSeq->SeqLen<< 16) | pSeq->SeqRamAddr);
 7082              		.loc 1 2154 0
 7083 0040 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 164


 7084 0042 9B68     		ldr	r3, [r3, #8]
 7085 0044 1A04     		lsls	r2, r3, #16
 7086 0046 7B68     		ldr	r3, [r7, #4]
 7087 0048 5B68     		ldr	r3, [r3, #4]
 7088 004a 1343     		orrs	r3, r3, r2
 7089 004c 1946     		mov	r1, r3
 7090 004e 42F2E810 		movw	r0, #8680
 7091 0052 FFF7FEFF 		bl	AD5940_WriteReg
2155:ad5940.c      ****     break;
 7092              		.loc 1 2155 0
 7093 0056 18E0     		b	.L383
 7094              	.L381:
2156:ad5940.c      ****     case SEQID_2:
2157:ad5940.c      ****     AD5940_WriteReg(REG_AFE_SEQ2INFO, (pSeq->SeqLen<< 16) | pSeq->SeqRamAddr);
 7095              		.loc 1 2157 0
 7096 0058 7B68     		ldr	r3, [r7, #4]
 7097 005a 9B68     		ldr	r3, [r3, #8]
 7098 005c 1A04     		lsls	r2, r3, #16
 7099 005e 7B68     		ldr	r3, [r7, #4]
 7100 0060 5B68     		ldr	r3, [r3, #4]
 7101 0062 1343     		orrs	r3, r3, r2
 7102 0064 1946     		mov	r1, r3
 7103 0066 42F2D010 		movw	r0, #8656
 7104 006a FFF7FEFF 		bl	AD5940_WriteReg
2158:ad5940.c      ****     break;
 7105              		.loc 1 2158 0
 7106 006e 0CE0     		b	.L383
 7107              	.L382:
2159:ad5940.c      ****     case SEQID_3:
2160:ad5940.c      ****     AD5940_WriteReg(REG_AFE_SEQ3INFO, (pSeq->SeqLen<< 16) | pSeq->SeqRamAddr);
 7108              		.loc 1 2160 0
 7109 0070 7B68     		ldr	r3, [r7, #4]
 7110 0072 9B68     		ldr	r3, [r3, #8]
 7111 0074 1A04     		lsls	r2, r3, #16
 7112 0076 7B68     		ldr	r3, [r7, #4]
 7113 0078 5B68     		ldr	r3, [r3, #4]
 7114 007a 1343     		orrs	r3, r3, r2
 7115 007c 1946     		mov	r1, r3
 7116 007e 42F2E410 		movw	r0, #8676
 7117 0082 FFF7FEFF 		bl	AD5940_WriteReg
2161:ad5940.c      ****     break;
 7118              		.loc 1 2161 0
 7119 0086 00E0     		b	.L383
 7120              	.L385:
2162:ad5940.c      ****     default:
2163:ad5940.c      ****     break;
 7121              		.loc 1 2163 0
 7122 0088 00BF     		nop
 7123              	.L383:
2164:ad5940.c      ****   }
2165:ad5940.c      ****   if(pSeq->WriteSRAM == bTRUE)
 7124              		.loc 1 2165 0
 7125 008a 7B68     		ldr	r3, [r7, #4]
 7126 008c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 7127 008e 012B     		cmp	r3, #1
 7128 0090 08D1     		bne	.L386
2166:ad5940.c      ****   {
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 165


2167:ad5940.c      ****     AD5940_SEQCmdWrite(pSeq->SeqRamAddr, pSeq->pSeqCmd, pSeq->SeqLen);
 7129              		.loc 1 2167 0
 7130 0092 7B68     		ldr	r3, [r7, #4]
 7131 0094 5868     		ldr	r0, [r3, #4]
 7132 0096 7B68     		ldr	r3, [r7, #4]
 7133 0098 1969     		ldr	r1, [r3, #16]
 7134 009a 7B68     		ldr	r3, [r7, #4]
 7135 009c 9B68     		ldr	r3, [r3, #8]
 7136 009e 1A46     		mov	r2, r3
 7137 00a0 FFF7FEFF 		bl	AD5940_SEQCmdWrite
 7138              	.L386:
2168:ad5940.c      ****   }
2169:ad5940.c      **** }
 7139              		.loc 1 2169 0
 7140 00a4 00BF     		nop
 7141 00a6 0837     		adds	r7, r7, #8
 7142              		.cfi_def_cfa_offset 8
 7143 00a8 BD46     		mov	sp, r7
 7144              		.cfi_def_cfa_register 13
 7145              		@ sp needed
 7146 00aa 80BD     		pop	{r7, pc}
 7147              		.cfi_endproc
 7148              	.LFE77:
 7149              		.size	AD5940_SEQInfoCfg, .-AD5940_SEQInfoCfg
 7150              		.section	.text.AD5940_SEQInfoGet,"ax",%progbits
 7151              		.align	2
 7152              		.global	AD5940_SEQInfoGet
 7153              		.thumb
 7154              		.thumb_func
 7155              		.type	AD5940_SEQInfoGet, %function
 7156              	AD5940_SEQInfoGet:
 7157              	.LFB78:
2170:ad5940.c      **** 
2171:ad5940.c      **** /**
2172:ad5940.c      ****  * @brief Get sequence info: start address and sequence length.
2173:ad5940.c      ****  * @param SeqId: Select from {SEQID_0, SEQID_1, SEQID_2, SEQID_3}
2174:ad5940.c      ****           - Select which sequence we want to get the information. 
2175:ad5940.c      ****    @param pSeqInfo: Pointer to sequence info structure. 
2176:ad5940.c      ****    @return return AD5940ERR_OK when succeed.
2177:ad5940.c      **** */
2178:ad5940.c      **** AD5940Err AD5940_SEQInfoGet(uint32_t SeqId, SEQInfo_Type *pSeqInfo)
2179:ad5940.c      **** {
 7158              		.loc 1 2179 0
 7159              		.cfi_startproc
 7160              		@ args = 0, pretend = 0, frame = 16
 7161              		@ frame_needed = 1, uses_anonymous_args = 0
 7162 0000 80B5     		push	{r7, lr}
 7163              		.cfi_def_cfa_offset 8
 7164              		.cfi_offset 7, -8
 7165              		.cfi_offset 14, -4
 7166 0002 84B0     		sub	sp, sp, #16
 7167              		.cfi_def_cfa_offset 24
 7168 0004 00AF     		add	r7, sp, #0
 7169              		.cfi_def_cfa_register 7
 7170 0006 7860     		str	r0, [r7, #4]
 7171 0008 3960     		str	r1, [r7]
2180:ad5940.c      ****   uint32_t tempreg;
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 166


2181:ad5940.c      ****   if(pSeqInfo == NULL) return AD5940ERR_NULLP;
 7172              		.loc 1 2181 0
 7173 000a 3B68     		ldr	r3, [r7]
 7174 000c 002B     		cmp	r3, #0
 7175 000e 02D1     		bne	.L388
 7176              		.loc 1 2181 0 is_stmt 0 discriminator 1
 7177 0010 6FF00203 		mvn	r3, #2
 7178 0014 3EE0     		b	.L389
 7179              	.L388:
2182:ad5940.c      ****   switch(SeqId)
 7180              		.loc 1 2182 0 is_stmt 1
 7181 0016 7B68     		ldr	r3, [r7, #4]
 7182 0018 032B     		cmp	r3, #3
 7183 001a 23D8     		bhi	.L390
 7184 001c 01A2     		adr	r2, .L392
 7185 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7186 0022 00BF     		.p2align 2
 7187              	.L392:
 7188 0024 35000000 		.word	.L391+1
 7189 0028 41000000 		.word	.L393+1
 7190 002c 4D000000 		.word	.L394+1
 7191 0030 59000000 		.word	.L395+1
 7192              		.p2align 1
 7193              	.L391:
2183:ad5940.c      ****   {
2184:ad5940.c      ****     case SEQID_0:
2185:ad5940.c      ****     tempreg = AD5940_ReadReg(REG_AFE_SEQ0INFO);
 7194              		.loc 1 2185 0
 7195 0034 42F2CC10 		movw	r0, #8652
 7196 0038 FFF7FEFF 		bl	AD5940_ReadReg
 7197 003c F860     		str	r0, [r7, #12]
2186:ad5940.c      ****     break;
 7198              		.loc 1 2186 0
 7199 003e 14E0     		b	.L396
 7200              	.L393:
2187:ad5940.c      ****     case SEQID_1:
2188:ad5940.c      ****     tempreg = AD5940_ReadReg(REG_AFE_SEQ1INFO);
 7201              		.loc 1 2188 0
 7202 0040 42F2E810 		movw	r0, #8680
 7203 0044 FFF7FEFF 		bl	AD5940_ReadReg
 7204 0048 F860     		str	r0, [r7, #12]
2189:ad5940.c      ****     break;
 7205              		.loc 1 2189 0
 7206 004a 0EE0     		b	.L396
 7207              	.L394:
2190:ad5940.c      ****     case SEQID_2:
2191:ad5940.c      ****     tempreg = AD5940_ReadReg(REG_AFE_SEQ2INFO);
 7208              		.loc 1 2191 0
 7209 004c 42F2D010 		movw	r0, #8656
 7210 0050 FFF7FEFF 		bl	AD5940_ReadReg
 7211 0054 F860     		str	r0, [r7, #12]
2192:ad5940.c      ****     break;
 7212              		.loc 1 2192 0
 7213 0056 08E0     		b	.L396
 7214              	.L395:
2193:ad5940.c      ****     case SEQID_3:
2194:ad5940.c      ****     tempreg = AD5940_ReadReg(REG_AFE_SEQ3INFO);
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 167


 7215              		.loc 1 2194 0
 7216 0058 42F2E410 		movw	r0, #8676
 7217 005c FFF7FEFF 		bl	AD5940_ReadReg
 7218 0060 F860     		str	r0, [r7, #12]
2195:ad5940.c      ****     break;
 7219              		.loc 1 2195 0
 7220 0062 02E0     		b	.L396
 7221              	.L390:
2196:ad5940.c      ****     default:
2197:ad5940.c      **** 			return AD5940ERR_PARA;
 7222              		.loc 1 2197 0
 7223 0064 6FF00103 		mvn	r3, #1
 7224 0068 14E0     		b	.L389
 7225              	.L396:
2198:ad5940.c      ****   }
2199:ad5940.c      ****   pSeqInfo->pSeqCmd = 0;    /* We don't know where you store the sequence in MCU SRAM */
 7226              		.loc 1 2199 0
 7227 006a 3B68     		ldr	r3, [r7]
 7228 006c 0022     		movs	r2, #0
 7229 006e 1A61     		str	r2, [r3, #16]
2200:ad5940.c      ****   pSeqInfo->SeqId = SeqId;
 7230              		.loc 1 2200 0
 7231 0070 3B68     		ldr	r3, [r7]
 7232 0072 7A68     		ldr	r2, [r7, #4]
 7233 0074 1A60     		str	r2, [r3]
2201:ad5940.c      ****   pSeqInfo->SeqLen = (tempreg>>16)&0x7ff;
 7234              		.loc 1 2201 0
 7235 0076 FB68     		ldr	r3, [r7, #12]
 7236 0078 1B0C     		lsrs	r3, r3, #16
 7237 007a C3F30A02 		ubfx	r2, r3, #0, #11
 7238 007e 3B68     		ldr	r3, [r7]
 7239 0080 9A60     		str	r2, [r3, #8]
2202:ad5940.c      ****   pSeqInfo->SeqRamAddr = tempreg&0x7ff;
 7240              		.loc 1 2202 0
 7241 0082 FB68     		ldr	r3, [r7, #12]
 7242 0084 C3F30A02 		ubfx	r2, r3, #0, #11
 7243 0088 3B68     		ldr	r3, [r7]
 7244 008a 5A60     		str	r2, [r3, #4]
2203:ad5940.c      ****   pSeqInfo->WriteSRAM = bFALSE;  /* Don't care */
 7245              		.loc 1 2203 0
 7246 008c 3B68     		ldr	r3, [r7]
 7247 008e 0022     		movs	r2, #0
 7248 0090 1A73     		strb	r2, [r3, #12]
2204:ad5940.c      **** 
2205:ad5940.c      ****   return AD5940ERR_OK;
 7249              		.loc 1 2205 0
 7250 0092 0023     		movs	r3, #0
 7251              	.L389:
2206:ad5940.c      **** }
 7252              		.loc 1 2206 0
 7253 0094 1846     		mov	r0, r3
 7254 0096 1037     		adds	r7, r7, #16
 7255              		.cfi_def_cfa_offset 8
 7256 0098 BD46     		mov	sp, r7
 7257              		.cfi_def_cfa_register 13
 7258              		@ sp needed
 7259 009a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 168


 7260              		.cfi_endproc
 7261              	.LFE78:
 7262              		.size	AD5940_SEQInfoGet, .-AD5940_SEQInfoGet
 7263              		.section	.text.AD5940_SEQGpioCtrlS,"ax",%progbits
 7264              		.align	2
 7265              		.global	AD5940_SEQGpioCtrlS
 7266              		.thumb
 7267              		.thumb_func
 7268              		.type	AD5940_SEQGpioCtrlS, %function
 7269              	AD5940_SEQGpioCtrlS:
 7270              	.LFB79:
2207:ad5940.c      **** 
2208:ad5940.c      **** 
2209:ad5940.c      **** /**
2210:ad5940.c      ****    @brief Control GPIO with register SYNCEXTDEVICE. Because sequencer have no ability to access reg
2211:ad5940.c      ****          so we use this register for sequencer.
2212:ad5940.c      ****    @param Gpio : Select from {AGPIO_Pin0|AGPIO_Pin1|AGPIO_Pin2|AGPIO_Pin3|AGPIO_Pin4|AGPIO_Pin5|AGP
2213:ad5940.c      ****           - The combination of GPIO pins. The selected pins will be set to High. Others will be pul
2214:ad5940.c      ****    @return return None.
2215:ad5940.c      **** 
2216:ad5940.c      **** **/
2217:ad5940.c      **** void AD5940_SEQGpioCtrlS(uint32_t Gpio)
2218:ad5940.c      **** {
 7271              		.loc 1 2218 0
 7272              		.cfi_startproc
 7273              		@ args = 0, pretend = 0, frame = 8
 7274              		@ frame_needed = 1, uses_anonymous_args = 0
 7275 0000 80B5     		push	{r7, lr}
 7276              		.cfi_def_cfa_offset 8
 7277              		.cfi_offset 7, -8
 7278              		.cfi_offset 14, -4
 7279 0002 82B0     		sub	sp, sp, #8
 7280              		.cfi_def_cfa_offset 16
 7281 0004 00AF     		add	r7, sp, #0
 7282              		.cfi_def_cfa_register 7
 7283 0006 7860     		str	r0, [r7, #4]
2219:ad5940.c      ****   AD5940_WriteReg(REG_AFE_SYNCEXTDEVICE, Gpio);
 7284              		.loc 1 2219 0
 7285 0008 7968     		ldr	r1, [r7, #4]
 7286 000a 42F25400 		movw	r0, #8276
 7287 000e FFF7FEFF 		bl	AD5940_WriteReg
2220:ad5940.c      **** }
 7288              		.loc 1 2220 0
 7289 0012 00BF     		nop
 7290 0014 0837     		adds	r7, r7, #8
 7291              		.cfi_def_cfa_offset 8
 7292 0016 BD46     		mov	sp, r7
 7293              		.cfi_def_cfa_register 13
 7294              		@ sp needed
 7295 0018 80BD     		pop	{r7, pc}
 7296              		.cfi_endproc
 7297              	.LFE79:
 7298              		.size	AD5940_SEQGpioCtrlS, .-AD5940_SEQGpioCtrlS
 7299 001a 00BF     		.section	.text.AD5940_SEQTimeOutRd,"ax",%progbits
 7300              		.align	2
 7301              		.global	AD5940_SEQTimeOutRd
 7302              		.thumb
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 169


 7303              		.thumb_func
 7304              		.type	AD5940_SEQTimeOutRd, %function
 7305              	AD5940_SEQTimeOutRd:
 7306              	.LFB80:
2221:ad5940.c      **** 
2222:ad5940.c      **** /**
2223:ad5940.c      ****  * @brief Read back current count down timer value for Sequencer Timer Out command.
2224:ad5940.c      ****  * @return return register value of Sequencer Timer out value.
2225:ad5940.c      **** **/
2226:ad5940.c      **** uint32_t AD5940_SEQTimeOutRd(void)
2227:ad5940.c      **** {
 7307              		.loc 1 2227 0
 7308              		.cfi_startproc
 7309              		@ args = 0, pretend = 0, frame = 0
 7310              		@ frame_needed = 1, uses_anonymous_args = 0
 7311 0000 80B5     		push	{r7, lr}
 7312              		.cfi_def_cfa_offset 8
 7313              		.cfi_offset 7, -8
 7314              		.cfi_offset 14, -4
 7315 0002 00AF     		add	r7, sp, #0
 7316              		.cfi_def_cfa_register 7
2228:ad5940.c      ****   return AD5940_ReadReg(REG_AFE_SEQTIMEOUT);
 7317              		.loc 1 2228 0
 7318 0004 42F26800 		movw	r0, #8296
 7319 0008 FFF7FEFF 		bl	AD5940_ReadReg
 7320 000c 0346     		mov	r3, r0
2229:ad5940.c      **** }
 7321              		.loc 1 2229 0
 7322 000e 1846     		mov	r0, r3
 7323 0010 80BD     		pop	{r7, pc}
 7324              		.cfi_endproc
 7325              	.LFE80:
 7326              		.size	AD5940_SEQTimeOutRd, .-AD5940_SEQTimeOutRd
 7327 0012 00BF     		.section	.text.AD5940_SEQGpioTrigCfg,"ax",%progbits
 7328              		.align	2
 7329              		.global	AD5940_SEQGpioTrigCfg
 7330              		.thumb
 7331              		.thumb_func
 7332              		.type	AD5940_SEQGpioTrigCfg, %function
 7333              	AD5940_SEQGpioTrigCfg:
 7334              	.LFB81:
2230:ad5940.c      **** 
2231:ad5940.c      **** /**
2232:ad5940.c      ****  * @brief Configure GPIO to allow it to trigger corresponding sequence(SEQ0/1/2/3).
2233:ad5940.c      ****  * @details There are four sequences. We can use GPIO to trigger each sequence. For example,
2234:ad5940.c      ****  *          GP0 or GP4 can be used to trigger sequence0 and GP3 or GP7 to trigger sequence3.
2235:ad5940.c      ****  *          There are five mode available to detect pin action: Rising edge, falling edge, both ris
2236:ad5940.c      ****  *          edge, low level or high level.
2237:ad5940.c      ****  *          Be careful to use level detection. The trigger signal is always available if the pin le
2238:ad5940.c      ****  *          Once the sequence is done, it will immediately run again if the pin level is still matc
2239:ad5940.c      ****  * @return return AD5940ERR_OK if succeed.
2240:ad5940.c      **** **/
2241:ad5940.c      **** AD5940Err AD5940_SEQGpioTrigCfg(SeqGpioTrig_Cfg *pSeqGpioTrigCfg)
2242:ad5940.c      **** {
 7335              		.loc 1 2242 0
 7336              		.cfi_startproc
 7337              		@ args = 0, pretend = 0, frame = 40
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 170


 7338              		@ frame_needed = 1, uses_anonymous_args = 0
 7339 0000 80B5     		push	{r7, lr}
 7340              		.cfi_def_cfa_offset 8
 7341              		.cfi_offset 7, -8
 7342              		.cfi_offset 14, -4
 7343 0002 8AB0     		sub	sp, sp, #40
 7344              		.cfi_def_cfa_offset 48
 7345 0004 00AF     		add	r7, sp, #0
 7346              		.cfi_def_cfa_register 7
 7347 0006 7860     		str	r0, [r7, #4]
2243:ad5940.c      ****   uint32_t reg_ei0con, reg_ei1con;
2244:ad5940.c      ****   uint32_t pin_count, pin_mask;
2245:ad5940.c      ****   uint32_t mode, en;
2246:ad5940.c      ****   if(pSeqGpioTrigCfg == NULL)
 7348              		.loc 1 2246 0
 7349 0008 7B68     		ldr	r3, [r7, #4]
 7350 000a 002B     		cmp	r3, #0
 7351 000c 02D1     		bne	.L401
2247:ad5940.c      ****     return AD5940ERR_NULLP;
 7352              		.loc 1 2247 0
 7353 000e 6FF00203 		mvn	r3, #2
 7354 0012 77E0     		b	.L402
 7355              	.L401:
2248:ad5940.c      ****   reg_ei0con = AD5940_ReadReg(REG_ALLON_EI0CON);
 7356              		.loc 1 2248 0
 7357 0014 4FF42260 		mov	r0, #2592
 7358 0018 FFF7FEFF 		bl	AD5940_ReadReg
 7359 001c B861     		str	r0, [r7, #24]
2249:ad5940.c      ****   reg_ei1con = AD5940_ReadReg(REG_ALLON_EI1CON);
 7360              		.loc 1 2249 0
 7361 001e 40F62420 		movw	r0, #2596
 7362 0022 FFF7FEFF 		bl	AD5940_ReadReg
 7363 0026 7862     		str	r0, [r7, #36]
2250:ad5940.c      **** 
2251:ad5940.c      ****   pin_count = 0;    /* Start from pin0 */
 7364              		.loc 1 2251 0
 7365 0028 0023     		movs	r3, #0
 7366 002a 3B62     		str	r3, [r7, #32]
2252:ad5940.c      ****   pin_mask = 0x01;  /* start from pin0, mask 0x01 */
 7367              		.loc 1 2252 0
 7368 002c 0123     		movs	r3, #1
 7369 002e FB61     		str	r3, [r7, #28]
2253:ad5940.c      ****   pSeqGpioTrigCfg->SeqPinTrigMode &= 0x07;  /* 3bit width */
 7370              		.loc 1 2253 0
 7371 0030 7B68     		ldr	r3, [r7, #4]
 7372 0032 5B68     		ldr	r3, [r3, #4]
 7373 0034 03F00702 		and	r2, r3, #7
 7374 0038 7B68     		ldr	r3, [r7, #4]
 7375 003a 5A60     		str	r2, [r3, #4]
2254:ad5940.c      **** 
2255:ad5940.c      ****   mode = pSeqGpioTrigCfg->SeqPinTrigMode;
 7376              		.loc 1 2255 0
 7377 003c 7B68     		ldr	r3, [r7, #4]
 7378 003e 5B68     		ldr	r3, [r3, #4]
 7379 0040 7B61     		str	r3, [r7, #20]
2256:ad5940.c      ****   en = pSeqGpioTrigCfg->bEnable?1:0;
 7380              		.loc 1 2256 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 171


 7381 0042 7B68     		ldr	r3, [r7, #4]
 7382 0044 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 7383 0046 002B     		cmp	r3, #0
 7384 0048 14BF     		ite	ne
 7385 004a 0123     		movne	r3, #1
 7386 004c 0023     		moveq	r3, #0
 7387 004e DBB2     		uxtb	r3, r3
 7388 0050 3B61     		str	r3, [r7, #16]
 7389              	.L407:
 7390              	.LBB12:
2257:ad5940.c      ****   for(;;)
2258:ad5940.c      ****   {
2259:ad5940.c      ****     uint32_t bit_position;
2260:ad5940.c      ****     if(pSeqGpioTrigCfg->PinSel&pin_mask)
 7391              		.loc 1 2260 0
 7392 0052 7B68     		ldr	r3, [r7, #4]
 7393 0054 1A68     		ldr	r2, [r3]
 7394 0056 FB69     		ldr	r3, [r7, #28]
 7395 0058 1340     		ands	r3, r3, r2
 7396 005a 002B     		cmp	r3, #0
 7397 005c 3CD0     		beq	.L403
2261:ad5940.c      ****     {
2262:ad5940.c      ****       if(pin_count < 4) /* EI0CON register */
 7398              		.loc 1 2262 0
 7399 005e 3B6A     		ldr	r3, [r7, #32]
 7400 0060 032B     		cmp	r3, #3
 7401 0062 1BD8     		bhi	.L404
2263:ad5940.c      ****       {
2264:ad5940.c      ****         bit_position = pin_count*4;
 7402              		.loc 1 2264 0
 7403 0064 3B6A     		ldr	r3, [r7, #32]
 7404 0066 9B00     		lsls	r3, r3, #2
 7405 0068 FB60     		str	r3, [r7, #12]
2265:ad5940.c      ****         reg_ei1con &= ~(0xfL<<bit_position); /* Clear bits */
 7406              		.loc 1 2265 0
 7407 006a 0F22     		movs	r2, #15
 7408 006c FB68     		ldr	r3, [r7, #12]
 7409 006e 02FA03F3 		lsl	r3, r2, r3
 7410 0072 DB43     		mvns	r3, r3
 7411 0074 1A46     		mov	r2, r3
 7412 0076 7B6A     		ldr	r3, [r7, #36]
 7413 0078 1340     		ands	r3, r3, r2
 7414 007a 7B62     		str	r3, [r7, #36]
2266:ad5940.c      ****         reg_ei1con |= mode << bit_position;
 7415              		.loc 1 2266 0
 7416 007c 7A69     		ldr	r2, [r7, #20]
 7417 007e FB68     		ldr	r3, [r7, #12]
 7418 0080 02FA03F3 		lsl	r3, r2, r3
 7419 0084 7A6A     		ldr	r2, [r7, #36]
 7420 0086 1343     		orrs	r3, r3, r2
 7421 0088 7B62     		str	r3, [r7, #36]
2267:ad5940.c      ****         reg_ei1con |= en << (bit_position + 3); /* bit offset 3 is the EN bit. */
 7422              		.loc 1 2267 0
 7423 008a FB68     		ldr	r3, [r7, #12]
 7424 008c 0333     		adds	r3, r3, #3
 7425 008e 3A69     		ldr	r2, [r7, #16]
 7426 0090 02FA03F3 		lsl	r3, r2, r3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 172


 7427 0094 7A6A     		ldr	r2, [r7, #36]
 7428 0096 1343     		orrs	r3, r3, r2
 7429 0098 7B62     		str	r3, [r7, #36]
 7430 009a 1DE0     		b	.L403
 7431              	.L404:
2268:ad5940.c      ****       }
2269:ad5940.c      ****       else
2270:ad5940.c      ****       {
2271:ad5940.c      ****         bit_position = (pin_count-4)*4;
 7432              		.loc 1 2271 0
 7433 009c 3B6A     		ldr	r3, [r7, #32]
 7434 009e 03F18043 		add	r3, r3, #1073741824
 7435 00a2 043B     		subs	r3, r3, #4
 7436 00a4 9B00     		lsls	r3, r3, #2
 7437 00a6 FB60     		str	r3, [r7, #12]
2272:ad5940.c      ****         reg_ei1con &= ~(0xfL<<bit_position); /* Clear bits */
 7438              		.loc 1 2272 0
 7439 00a8 0F22     		movs	r2, #15
 7440 00aa FB68     		ldr	r3, [r7, #12]
 7441 00ac 02FA03F3 		lsl	r3, r2, r3
 7442 00b0 DB43     		mvns	r3, r3
 7443 00b2 1A46     		mov	r2, r3
 7444 00b4 7B6A     		ldr	r3, [r7, #36]
 7445 00b6 1340     		ands	r3, r3, r2
 7446 00b8 7B62     		str	r3, [r7, #36]
2273:ad5940.c      ****         reg_ei1con |= mode << bit_position;
 7447              		.loc 1 2273 0
 7448 00ba 7A69     		ldr	r2, [r7, #20]
 7449 00bc FB68     		ldr	r3, [r7, #12]
 7450 00be 02FA03F3 		lsl	r3, r2, r3
 7451 00c2 7A6A     		ldr	r2, [r7, #36]
 7452 00c4 1343     		orrs	r3, r3, r2
 7453 00c6 7B62     		str	r3, [r7, #36]
2274:ad5940.c      ****         reg_ei1con |= en << (bit_position + 3); /* bit offset 3 is the EN bit. */
 7454              		.loc 1 2274 0
 7455 00c8 FB68     		ldr	r3, [r7, #12]
 7456 00ca 0333     		adds	r3, r3, #3
 7457 00cc 3A69     		ldr	r2, [r7, #16]
 7458 00ce 02FA03F3 		lsl	r3, r2, r3
 7459 00d2 7A6A     		ldr	r2, [r7, #36]
 7460 00d4 1343     		orrs	r3, r3, r2
 7461 00d6 7B62     		str	r3, [r7, #36]
 7462              	.L403:
2275:ad5940.c      ****       }
2276:ad5940.c      ****     }
2277:ad5940.c      ****     pin_count ++;
 7463              		.loc 1 2277 0
 7464 00d8 3B6A     		ldr	r3, [r7, #32]
 7465 00da 0133     		adds	r3, r3, #1
 7466 00dc 3B62     		str	r3, [r7, #32]
2278:ad5940.c      ****     pin_mask <<= 1;
 7467              		.loc 1 2278 0
 7468 00de FB69     		ldr	r3, [r7, #28]
 7469 00e0 5B00     		lsls	r3, r3, #1
 7470 00e2 FB61     		str	r3, [r7, #28]
2279:ad5940.c      ****     if(pin_count == 8)
 7471              		.loc 1 2279 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 173


 7472 00e4 3B6A     		ldr	r3, [r7, #32]
 7473 00e6 082B     		cmp	r3, #8
 7474 00e8 00D0     		beq	.L409
 7475              	.LBE12:
2280:ad5940.c      ****       break;
2281:ad5940.c      ****   }
 7476              		.loc 1 2281 0
 7477 00ea B2E7     		b	.L407
 7478              	.L409:
 7479              	.LBB13:
2280:ad5940.c      ****       break;
 7480              		.loc 1 2280 0
 7481 00ec 00BF     		nop
 7482              	.LBE13:
2282:ad5940.c      ****   AD5940_WriteReg(REG_ALLON_EI0CON, reg_ei0con);
 7483              		.loc 1 2282 0
 7484 00ee B969     		ldr	r1, [r7, #24]
 7485 00f0 4FF42260 		mov	r0, #2592
 7486 00f4 FFF7FEFF 		bl	AD5940_WriteReg
2283:ad5940.c      ****   AD5940_WriteReg(REG_ALLON_EI0CON, reg_ei1con);
 7487              		.loc 1 2283 0
 7488 00f8 796A     		ldr	r1, [r7, #36]
 7489 00fa 4FF42260 		mov	r0, #2592
 7490 00fe FFF7FEFF 		bl	AD5940_WriteReg
2284:ad5940.c      ****   return AD5940ERR_OK;
 7491              		.loc 1 2284 0
 7492 0102 0023     		movs	r3, #0
 7493              	.L402:
2285:ad5940.c      **** }
 7494              		.loc 1 2285 0
 7495 0104 1846     		mov	r0, r3
 7496 0106 2837     		adds	r7, r7, #40
 7497              		.cfi_def_cfa_offset 8
 7498 0108 BD46     		mov	sp, r7
 7499              		.cfi_def_cfa_register 13
 7500              		@ sp needed
 7501 010a 80BD     		pop	{r7, pc}
 7502              		.cfi_endproc
 7503              	.LFE81:
 7504              		.size	AD5940_SEQGpioTrigCfg, .-AD5940_SEQGpioTrigCfg
 7505              		.section	.text.AD5940_WUPTCfg,"ax",%progbits
 7506              		.align	2
 7507              		.global	AD5940_WUPTCfg
 7508              		.thumb
 7509              		.thumb_func
 7510              		.type	AD5940_WUPTCfg, %function
 7511              	AD5940_WUPTCfg:
 7512              	.LFB82:
2286:ad5940.c      **** 
2287:ad5940.c      **** /**
2288:ad5940.c      ****  * @brief Configure Wakeup Timer
2289:ad5940.c      ****  * @param pWuptCfg: Pointer to configuration structure.
2290:ad5940.c      ****  * @return return none.
2291:ad5940.c      **** */
2292:ad5940.c      **** void AD5940_WUPTCfg(WUPTCfg_Type *pWuptCfg)
2293:ad5940.c      **** {
 7513              		.loc 1 2293 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 174


 7514              		.cfi_startproc
 7515              		@ args = 0, pretend = 0, frame = 16
 7516              		@ frame_needed = 1, uses_anonymous_args = 0
 7517 0000 80B5     		push	{r7, lr}
 7518              		.cfi_def_cfa_offset 8
 7519              		.cfi_offset 7, -8
 7520              		.cfi_offset 14, -4
 7521 0002 84B0     		sub	sp, sp, #16
 7522              		.cfi_def_cfa_offset 24
 7523 0004 00AF     		add	r7, sp, #0
 7524              		.cfi_def_cfa_register 7
 7525 0006 7860     		str	r0, [r7, #4]
2294:ad5940.c      ****   uint32_t tempreg;
2295:ad5940.c      ****   //check parameters
2296:ad5940.c      ****   /* Sleep and Wakeup time */
2297:ad5940.c      ****   AD5940_WriteReg(REG_WUPTMR_SEQ0WUPL, (pWuptCfg->SeqxWakeupTime[0] & 0xFFFF));    
 7526              		.loc 1 2297 0
 7527 0008 7B68     		ldr	r3, [r7, #4]
 7528 000a 5B6B     		ldr	r3, [r3, #52]
 7529 000c 9BB2     		uxth	r3, r3
 7530 000e 1946     		mov	r1, r3
 7531 0010 40F60800 		movw	r0, #2056
 7532 0014 FFF7FEFF 		bl	AD5940_WriteReg
2298:ad5940.c      ****   AD5940_WriteReg(REG_WUPTMR_SEQ0WUPH, (pWuptCfg->SeqxWakeupTime[0] & 0xF0000)>>16);
 7533              		.loc 1 2298 0
 7534 0018 7B68     		ldr	r3, [r7, #4]
 7535 001a 5B6B     		ldr	r3, [r3, #52]
 7536 001c 1B0C     		lsrs	r3, r3, #16
 7537 001e 03F00F03 		and	r3, r3, #15
 7538 0022 1946     		mov	r1, r3
 7539 0024 40F60C00 		movw	r0, #2060
 7540 0028 FFF7FEFF 		bl	AD5940_WriteReg
2299:ad5940.c      ****   AD5940_WriteReg(REG_WUPTMR_SEQ0SLEEPL, (pWuptCfg->SeqxSleepTime[0] & 0xFFFF));    
 7541              		.loc 1 2299 0
 7542 002c 7B68     		ldr	r3, [r7, #4]
 7543 002e 5B6A     		ldr	r3, [r3, #36]
 7544 0030 9BB2     		uxth	r3, r3
 7545 0032 1946     		mov	r1, r3
 7546 0034 4FF40160 		mov	r0, #2064
 7547 0038 FFF7FEFF 		bl	AD5940_WriteReg
2300:ad5940.c      ****   AD5940_WriteReg(REG_WUPTMR_SEQ0SLEEPH, (pWuptCfg->SeqxSleepTime[0] & 0xF0000)>>16);
 7548              		.loc 1 2300 0
 7549 003c 7B68     		ldr	r3, [r7, #4]
 7550 003e 5B6A     		ldr	r3, [r3, #36]
 7551 0040 1B0C     		lsrs	r3, r3, #16
 7552 0042 03F00F03 		and	r3, r3, #15
 7553 0046 1946     		mov	r1, r3
 7554 0048 40F61400 		movw	r0, #2068
 7555 004c FFF7FEFF 		bl	AD5940_WriteReg
2301:ad5940.c      **** 
2302:ad5940.c      ****   AD5940_WriteReg(REG_WUPTMR_SEQ1WUPL, (pWuptCfg->SeqxWakeupTime[1] & 0xFFFF));    
 7556              		.loc 1 2302 0
 7557 0050 7B68     		ldr	r3, [r7, #4]
 7558 0052 9B6B     		ldr	r3, [r3, #56]
 7559 0054 9BB2     		uxth	r3, r3
 7560 0056 1946     		mov	r1, r3
 7561 0058 40F61800 		movw	r0, #2072
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 175


 7562 005c FFF7FEFF 		bl	AD5940_WriteReg
2303:ad5940.c      ****   AD5940_WriteReg(REG_WUPTMR_SEQ1WUPH, (pWuptCfg->SeqxWakeupTime[1] & 0xF0000)>>16);
 7563              		.loc 1 2303 0
 7564 0060 7B68     		ldr	r3, [r7, #4]
 7565 0062 9B6B     		ldr	r3, [r3, #56]
 7566 0064 1B0C     		lsrs	r3, r3, #16
 7567 0066 03F00F03 		and	r3, r3, #15
 7568 006a 1946     		mov	r1, r3
 7569 006c 40F61C00 		movw	r0, #2076
 7570 0070 FFF7FEFF 		bl	AD5940_WriteReg
2304:ad5940.c      ****   AD5940_WriteReg(REG_WUPTMR_SEQ1SLEEPL, (pWuptCfg->SeqxSleepTime[1] & 0xFFFF));    
 7571              		.loc 1 2304 0
 7572 0074 7B68     		ldr	r3, [r7, #4]
 7573 0076 9B6A     		ldr	r3, [r3, #40]
 7574 0078 9BB2     		uxth	r3, r3
 7575 007a 1946     		mov	r1, r3
 7576 007c 4FF40260 		mov	r0, #2080
 7577 0080 FFF7FEFF 		bl	AD5940_WriteReg
2305:ad5940.c      ****   AD5940_WriteReg(REG_WUPTMR_SEQ1SLEEPH, (pWuptCfg->SeqxSleepTime[1] & 0xF0000)>>16);
 7578              		.loc 1 2305 0
 7579 0084 7B68     		ldr	r3, [r7, #4]
 7580 0086 9B6A     		ldr	r3, [r3, #40]
 7581 0088 1B0C     		lsrs	r3, r3, #16
 7582 008a 03F00F03 		and	r3, r3, #15
 7583 008e 1946     		mov	r1, r3
 7584 0090 40F62400 		movw	r0, #2084
 7585 0094 FFF7FEFF 		bl	AD5940_WriteReg
2306:ad5940.c      **** 
2307:ad5940.c      ****   AD5940_WriteReg(REG_WUPTMR_SEQ2WUPL, (pWuptCfg->SeqxWakeupTime[2] & 0xFFFF));    
 7586              		.loc 1 2307 0
 7587 0098 7B68     		ldr	r3, [r7, #4]
 7588 009a DB6B     		ldr	r3, [r3, #60]
 7589 009c 9BB2     		uxth	r3, r3
 7590 009e 1946     		mov	r1, r3
 7591 00a0 40F62800 		movw	r0, #2088
 7592 00a4 FFF7FEFF 		bl	AD5940_WriteReg
2308:ad5940.c      ****   AD5940_WriteReg(REG_WUPTMR_SEQ2WUPH, (pWuptCfg->SeqxWakeupTime[2] & 0xF0000)>>16);
 7593              		.loc 1 2308 0
 7594 00a8 7B68     		ldr	r3, [r7, #4]
 7595 00aa DB6B     		ldr	r3, [r3, #60]
 7596 00ac 1B0C     		lsrs	r3, r3, #16
 7597 00ae 03F00F03 		and	r3, r3, #15
 7598 00b2 1946     		mov	r1, r3
 7599 00b4 40F62C00 		movw	r0, #2092
 7600 00b8 FFF7FEFF 		bl	AD5940_WriteReg
2309:ad5940.c      ****   AD5940_WriteReg(REG_WUPTMR_SEQ2SLEEPL, (pWuptCfg->SeqxSleepTime[2] & 0xFFFF));    
 7601              		.loc 1 2309 0
 7602 00bc 7B68     		ldr	r3, [r7, #4]
 7603 00be DB6A     		ldr	r3, [r3, #44]
 7604 00c0 9BB2     		uxth	r3, r3
 7605 00c2 1946     		mov	r1, r3
 7606 00c4 4FF40360 		mov	r0, #2096
 7607 00c8 FFF7FEFF 		bl	AD5940_WriteReg
2310:ad5940.c      ****   AD5940_WriteReg(REG_WUPTMR_SEQ2SLEEPH, (pWuptCfg->SeqxSleepTime[2] & 0xF0000)>>16);
 7608              		.loc 1 2310 0
 7609 00cc 7B68     		ldr	r3, [r7, #4]
 7610 00ce DB6A     		ldr	r3, [r3, #44]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 176


 7611 00d0 1B0C     		lsrs	r3, r3, #16
 7612 00d2 03F00F03 		and	r3, r3, #15
 7613 00d6 1946     		mov	r1, r3
 7614 00d8 40F63400 		movw	r0, #2100
 7615 00dc FFF7FEFF 		bl	AD5940_WriteReg
2311:ad5940.c      **** 
2312:ad5940.c      ****   AD5940_WriteReg(REG_WUPTMR_SEQ3WUPL, (pWuptCfg->SeqxWakeupTime[3] & 0xFFFF));    
 7616              		.loc 1 2312 0
 7617 00e0 7B68     		ldr	r3, [r7, #4]
 7618 00e2 1B6C     		ldr	r3, [r3, #64]
 7619 00e4 9BB2     		uxth	r3, r3
 7620 00e6 1946     		mov	r1, r3
 7621 00e8 40F63800 		movw	r0, #2104
 7622 00ec FFF7FEFF 		bl	AD5940_WriteReg
2313:ad5940.c      ****   AD5940_WriteReg(REG_WUPTMR_SEQ3WUPH, (pWuptCfg->SeqxWakeupTime[3] & 0xF0000)>>16);
 7623              		.loc 1 2313 0
 7624 00f0 7B68     		ldr	r3, [r7, #4]
 7625 00f2 1B6C     		ldr	r3, [r3, #64]
 7626 00f4 1B0C     		lsrs	r3, r3, #16
 7627 00f6 03F00F03 		and	r3, r3, #15
 7628 00fa 1946     		mov	r1, r3
 7629 00fc 40F63C00 		movw	r0, #2108
 7630 0100 FFF7FEFF 		bl	AD5940_WriteReg
2314:ad5940.c      ****   AD5940_WriteReg(REG_WUPTMR_SEQ3SLEEPL, (pWuptCfg->SeqxSleepTime[3] & 0xFFFF));    
 7631              		.loc 1 2314 0
 7632 0104 7B68     		ldr	r3, [r7, #4]
 7633 0106 1B6B     		ldr	r3, [r3, #48]
 7634 0108 9BB2     		uxth	r3, r3
 7635 010a 1946     		mov	r1, r3
 7636 010c 4FF40460 		mov	r0, #2112
 7637 0110 FFF7FEFF 		bl	AD5940_WriteReg
2315:ad5940.c      ****   AD5940_WriteReg(REG_WUPTMR_SEQ3SLEEPH, (pWuptCfg->SeqxSleepTime[3] & 0xF0000)>>16);
 7638              		.loc 1 2315 0
 7639 0114 7B68     		ldr	r3, [r7, #4]
 7640 0116 1B6B     		ldr	r3, [r3, #48]
 7641 0118 1B0C     		lsrs	r3, r3, #16
 7642 011a 03F00F03 		and	r3, r3, #15
 7643 011e 1946     		mov	r1, r3
 7644 0120 40F64400 		movw	r0, #2116
 7645 0124 FFF7FEFF 		bl	AD5940_WriteReg
2316:ad5940.c      ****   
2317:ad5940.c      ****   /* TMRCON register */
2318:ad5940.c      ****   //if(pWuptCfg->WakeupEn == bTRUE)  /* enable use Wupt to wakeup AFE */
2319:ad5940.c      ****   /* We always allow Wupt to wakeup AFE automatically. */
2320:ad5940.c      ****   AD5940_WriteReg(REG_ALLON_TMRCON, BITM_ALLON_TMRCON_TMRINTEN);
 7646              		.loc 1 2320 0
 7647 0128 0121     		movs	r1, #1
 7648 012a 40F61C20 		movw	r0, #2588
 7649 012e FFF7FEFF 		bl	AD5940_WriteReg
2321:ad5940.c      ****   /* Wupt order */
2322:ad5940.c      ****   tempreg = 0;
 7650              		.loc 1 2322 0
 7651 0132 0023     		movs	r3, #0
 7652 0134 FB60     		str	r3, [r7, #12]
2323:ad5940.c      ****   tempreg |= (pWuptCfg->WuptOrder[0]&0x03) << BITP_WUPTMR_SEQORDER_SEQA; /* position A */
 7653              		.loc 1 2323 0
 7654 0136 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 177


 7655 0138 5B68     		ldr	r3, [r3, #4]
 7656 013a 03F00303 		and	r3, r3, #3
 7657 013e FA68     		ldr	r2, [r7, #12]
 7658 0140 1343     		orrs	r3, r3, r2
 7659 0142 FB60     		str	r3, [r7, #12]
2324:ad5940.c      ****   tempreg |= (pWuptCfg->WuptOrder[1]&0x03) << BITP_WUPTMR_SEQORDER_SEQB; /* position B */
 7660              		.loc 1 2324 0
 7661 0144 7B68     		ldr	r3, [r7, #4]
 7662 0146 9B68     		ldr	r3, [r3, #8]
 7663 0148 9B00     		lsls	r3, r3, #2
 7664 014a 03F00C03 		and	r3, r3, #12
 7665 014e FA68     		ldr	r2, [r7, #12]
 7666 0150 1343     		orrs	r3, r3, r2
 7667 0152 FB60     		str	r3, [r7, #12]
2325:ad5940.c      ****   tempreg |= (pWuptCfg->WuptOrder[2]&0x03) << BITP_WUPTMR_SEQORDER_SEQC; /* position C */
 7668              		.loc 1 2325 0
 7669 0154 7B68     		ldr	r3, [r7, #4]
 7670 0156 DB68     		ldr	r3, [r3, #12]
 7671 0158 1B01     		lsls	r3, r3, #4
 7672 015a 03F03003 		and	r3, r3, #48
 7673 015e FA68     		ldr	r2, [r7, #12]
 7674 0160 1343     		orrs	r3, r3, r2
 7675 0162 FB60     		str	r3, [r7, #12]
2326:ad5940.c      ****   tempreg |= (pWuptCfg->WuptOrder[3]&0x03) << BITP_WUPTMR_SEQORDER_SEQD; /* position D */
 7676              		.loc 1 2326 0
 7677 0164 7B68     		ldr	r3, [r7, #4]
 7678 0166 1B69     		ldr	r3, [r3, #16]
 7679 0168 9B01     		lsls	r3, r3, #6
 7680 016a DBB2     		uxtb	r3, r3
 7681 016c FA68     		ldr	r2, [r7, #12]
 7682 016e 1343     		orrs	r3, r3, r2
 7683 0170 FB60     		str	r3, [r7, #12]
2327:ad5940.c      ****   tempreg |= (pWuptCfg->WuptOrder[4]&0x03) << BITP_WUPTMR_SEQORDER_SEQE; /* position E */
 7684              		.loc 1 2327 0
 7685 0172 7B68     		ldr	r3, [r7, #4]
 7686 0174 5B69     		ldr	r3, [r3, #20]
 7687 0176 1B02     		lsls	r3, r3, #8
 7688 0178 03F44073 		and	r3, r3, #768
 7689 017c FA68     		ldr	r2, [r7, #12]
 7690 017e 1343     		orrs	r3, r3, r2
 7691 0180 FB60     		str	r3, [r7, #12]
2328:ad5940.c      ****   tempreg |= (pWuptCfg->WuptOrder[5]&0x03) << BITP_WUPTMR_SEQORDER_SEQF; /* position F */
 7692              		.loc 1 2328 0
 7693 0182 7B68     		ldr	r3, [r7, #4]
 7694 0184 9B69     		ldr	r3, [r3, #24]
 7695 0186 9B02     		lsls	r3, r3, #10
 7696 0188 03F44063 		and	r3, r3, #3072
 7697 018c FA68     		ldr	r2, [r7, #12]
 7698 018e 1343     		orrs	r3, r3, r2
 7699 0190 FB60     		str	r3, [r7, #12]
2329:ad5940.c      ****   tempreg |= (pWuptCfg->WuptOrder[6]&0x03) << BITP_WUPTMR_SEQORDER_SEQG; /* position G */
 7700              		.loc 1 2329 0
 7701 0192 7B68     		ldr	r3, [r7, #4]
 7702 0194 DB69     		ldr	r3, [r3, #28]
 7703 0196 1B03     		lsls	r3, r3, #12
 7704 0198 03F44053 		and	r3, r3, #12288
 7705 019c FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 178


 7706 019e 1343     		orrs	r3, r3, r2
 7707 01a0 FB60     		str	r3, [r7, #12]
2330:ad5940.c      ****   tempreg |= (pWuptCfg->WuptOrder[7]&0x03) << BITP_WUPTMR_SEQORDER_SEQH; /* position H */
 7708              		.loc 1 2330 0
 7709 01a2 7B68     		ldr	r3, [r7, #4]
 7710 01a4 1B6A     		ldr	r3, [r3, #32]
 7711 01a6 9B03     		lsls	r3, r3, #14
 7712 01a8 9BB2     		uxth	r3, r3
 7713 01aa FA68     		ldr	r2, [r7, #12]
 7714 01ac 1343     		orrs	r3, r3, r2
 7715 01ae FB60     		str	r3, [r7, #12]
2331:ad5940.c      ****   AD5940_WriteReg(REG_WUPTMR_SEQORDER, tempreg);
 7716              		.loc 1 2331 0
 7717 01b0 F968     		ldr	r1, [r7, #12]
 7718 01b2 40F60400 		movw	r0, #2052
 7719 01b6 FFF7FEFF 		bl	AD5940_WriteReg
2332:ad5940.c      **** 
2333:ad5940.c      ****   tempreg = 0;
 7720              		.loc 1 2333 0
 7721 01ba 0023     		movs	r3, #0
 7722 01bc FB60     		str	r3, [r7, #12]
2334:ad5940.c      ****   if(pWuptCfg->WuptEn == bTRUE)
 7723              		.loc 1 2334 0
 7724 01be 7B68     		ldr	r3, [r7, #4]
 7725 01c0 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 7726 01c4 012B     		cmp	r3, #1
 7727 01c6 03D1     		bne	.L411
2335:ad5940.c      ****     tempreg |= BITM_WUPTMR_CON_EN;
 7728              		.loc 1 2335 0
 7729 01c8 FB68     		ldr	r3, [r7, #12]
 7730 01ca 43F00103 		orr	r3, r3, #1
 7731 01ce FB60     		str	r3, [r7, #12]
 7732              	.L411:
2336:ad5940.c      ****   /* We always allow Wupt to trigger sequencer */
2337:ad5940.c      ****   tempreg |= pWuptCfg->WuptEndSeq << BITP_WUPTMR_CON_ENDSEQ;
 7733              		.loc 1 2337 0
 7734 01d0 7B68     		ldr	r3, [r7, #4]
 7735 01d2 1B68     		ldr	r3, [r3]
 7736 01d4 5B00     		lsls	r3, r3, #1
 7737 01d6 FA68     		ldr	r2, [r7, #12]
 7738 01d8 1343     		orrs	r3, r3, r2
 7739 01da FB60     		str	r3, [r7, #12]
2338:ad5940.c      ****   //tempreg |= 1L<<4;
2339:ad5940.c      ****   AD5940_WriteReg(REG_WUPTMR_CON, tempreg);
 7740              		.loc 1 2339 0
 7741 01dc F968     		ldr	r1, [r7, #12]
 7742 01de 4FF40060 		mov	r0, #2048
 7743 01e2 FFF7FEFF 		bl	AD5940_WriteReg
2340:ad5940.c      **** }
 7744              		.loc 1 2340 0
 7745 01e6 00BF     		nop
 7746 01e8 1037     		adds	r7, r7, #16
 7747              		.cfi_def_cfa_offset 8
 7748 01ea BD46     		mov	sp, r7
 7749              		.cfi_def_cfa_register 13
 7750              		@ sp needed
 7751 01ec 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 179


 7752              		.cfi_endproc
 7753              	.LFE82:
 7754              		.size	AD5940_WUPTCfg, .-AD5940_WUPTCfg
 7755 01ee 00BF     		.section	.text.AD5940_WUPTCtrl,"ax",%progbits
 7756              		.align	2
 7757              		.global	AD5940_WUPTCtrl
 7758              		.thumb
 7759              		.thumb_func
 7760              		.type	AD5940_WUPTCtrl, %function
 7761              	AD5940_WUPTCtrl:
 7762              	.LFB83:
2341:ad5940.c      **** 
2342:ad5940.c      **** /**
2343:ad5940.c      ****  * @brief Enable or disable wakeup timer
2344:ad5940.c      ****  * @param Enable : {bTRUE, bFALSE}
2345:ad5940.c      ****  *        - bTRUE: enable wakeup timer
2346:ad5940.c      ****  *        - bFALSE: Disable wakeup timer
2347:ad5940.c      ****  * @return return none.
2348:ad5940.c      **** */
2349:ad5940.c      **** void AD5940_WUPTCtrl(BoolFlag Enable)
2350:ad5940.c      **** {
 7763              		.loc 1 2350 0
 7764              		.cfi_startproc
 7765              		@ args = 0, pretend = 0, frame = 16
 7766              		@ frame_needed = 1, uses_anonymous_args = 0
 7767 0000 80B5     		push	{r7, lr}
 7768              		.cfi_def_cfa_offset 8
 7769              		.cfi_offset 7, -8
 7770              		.cfi_offset 14, -4
 7771 0002 84B0     		sub	sp, sp, #16
 7772              		.cfi_def_cfa_offset 24
 7773 0004 00AF     		add	r7, sp, #0
 7774              		.cfi_def_cfa_register 7
 7775 0006 0346     		mov	r3, r0
 7776 0008 FB71     		strb	r3, [r7, #7]
2351:ad5940.c      ****   uint16_t tempreg;
2352:ad5940.c      ****   tempreg = AD5940_ReadReg(REG_WUPTMR_CON);
 7777              		.loc 1 2352 0
 7778 000a 4FF40060 		mov	r0, #2048
 7779 000e FFF7FEFF 		bl	AD5940_ReadReg
 7780 0012 0346     		mov	r3, r0
 7781 0014 FB81     		strh	r3, [r7, #14]	@ movhi
2353:ad5940.c      ****   tempreg &= ~BITM_WUPTMR_CON_EN;
 7782              		.loc 1 2353 0
 7783 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7784 0018 23F00103 		bic	r3, r3, #1
 7785 001c FB81     		strh	r3, [r7, #14]	@ movhi
2354:ad5940.c      **** 
2355:ad5940.c      ****   if(Enable == bTRUE)
 7786              		.loc 1 2355 0
 7787 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7788 0020 012B     		cmp	r3, #1
 7789 0022 03D1     		bne	.L413
2356:ad5940.c      ****     tempreg |= BITM_WUPTMR_CON_EN;
 7790              		.loc 1 2356 0
 7791 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7792 0026 43F00103 		orr	r3, r3, #1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 180


 7793 002a FB81     		strh	r3, [r7, #14]	@ movhi
 7794              	.L413:
2357:ad5940.c      ****   
2358:ad5940.c      ****   AD5940_WriteReg(REG_WUPTMR_CON, tempreg);
 7795              		.loc 1 2358 0
 7796 002c FB89     		ldrh	r3, [r7, #14]
 7797 002e 1946     		mov	r1, r3
 7798 0030 4FF40060 		mov	r0, #2048
 7799 0034 FFF7FEFF 		bl	AD5940_WriteReg
2359:ad5940.c      **** }
 7800              		.loc 1 2359 0
 7801 0038 00BF     		nop
 7802 003a 1037     		adds	r7, r7, #16
 7803              		.cfi_def_cfa_offset 8
 7804 003c BD46     		mov	sp, r7
 7805              		.cfi_def_cfa_register 13
 7806              		@ sp needed
 7807 003e 80BD     		pop	{r7, pc}
 7808              		.cfi_endproc
 7809              	.LFE83:
 7810              		.size	AD5940_WUPTCtrl, .-AD5940_WUPTCtrl
 7811              		.section	.text.AD5940_WUPTTime,"ax",%progbits
 7812              		.align	2
 7813              		.global	AD5940_WUPTTime
 7814              		.thumb
 7815              		.thumb_func
 7816              		.type	AD5940_WUPTTime, %function
 7817              	AD5940_WUPTTime:
 7818              	.LFB84:
2360:ad5940.c      **** 
2361:ad5940.c      **** /**
2362:ad5940.c      ****  * @brief Configure WakeupTimer.
2363:ad5940.c      ****  * @param SeqId: Select from SEQID_0/1/2/3. The wakeup timer will load corresponding value from fou
2364:ad5940.c      ****  * @param SleepTime: After how much time, AFE will try to enter hibernate. We disabled this feature
2365:ad5940.c      ****  * @param WakeupTime: After how much time, AFE will wakeup and trigger corresponding sequencer.
2366:ad5940.c      ****  * @note By SleepTime and WakeupTime, the sequencer is triggered periodically and period is (SleepT
2367:ad5940.c      ****  * @return return none.
2368:ad5940.c      **** */
2369:ad5940.c      **** AD5940Err AD5940_WUPTTime(uint32_t SeqId, uint32_t SleepTime, uint32_t WakeupTime)
2370:ad5940.c      **** {
 7819              		.loc 1 2370 0
 7820              		.cfi_startproc
 7821              		@ args = 0, pretend = 0, frame = 16
 7822              		@ frame_needed = 1, uses_anonymous_args = 0
 7823 0000 80B5     		push	{r7, lr}
 7824              		.cfi_def_cfa_offset 8
 7825              		.cfi_offset 7, -8
 7826              		.cfi_offset 14, -4
 7827 0002 84B0     		sub	sp, sp, #16
 7828              		.cfi_def_cfa_offset 24
 7829 0004 00AF     		add	r7, sp, #0
 7830              		.cfi_def_cfa_register 7
 7831 0006 F860     		str	r0, [r7, #12]
 7832 0008 B960     		str	r1, [r7, #8]
 7833 000a 7A60     		str	r2, [r7, #4]
2371:ad5940.c      ****   switch (SeqId)
 7834              		.loc 1 2371 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 181


 7835 000c FB68     		ldr	r3, [r7, #12]
 7836 000e 032B     		cmp	r3, #3
 7837 0010 00F29080 		bhi	.L415
 7838 0014 01A2     		adr	r2, .L417
 7839 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7840 001a 00BF     		.p2align 2
 7841              	.L417:
 7842 001c 2D000000 		.word	.L416+1
 7843 0020 6F000000 		.word	.L418+1
 7844 0024 B1000000 		.word	.L419+1
 7845 0028 F3000000 		.word	.L420+1
 7846              		.p2align 1
 7847              	.L416:
2372:ad5940.c      ****   {
2373:ad5940.c      ****     case SEQID_0:
2374:ad5940.c      ****     {
2375:ad5940.c      ****       AD5940_WriteReg(REG_WUPTMR_SEQ0WUPL, (WakeupTime & 0xFFFF));    
 7848              		.loc 1 2375 0
 7849 002c 7B68     		ldr	r3, [r7, #4]
 7850 002e 9BB2     		uxth	r3, r3
 7851 0030 1946     		mov	r1, r3
 7852 0032 40F60800 		movw	r0, #2056
 7853 0036 FFF7FEFF 		bl	AD5940_WriteReg
2376:ad5940.c      ****       AD5940_WriteReg(REG_WUPTMR_SEQ0WUPH, (WakeupTime & 0xF0000)>>16);
 7854              		.loc 1 2376 0
 7855 003a 7B68     		ldr	r3, [r7, #4]
 7856 003c 1B0C     		lsrs	r3, r3, #16
 7857 003e 03F00F03 		and	r3, r3, #15
 7858 0042 1946     		mov	r1, r3
 7859 0044 40F60C00 		movw	r0, #2060
 7860 0048 FFF7FEFF 		bl	AD5940_WriteReg
2377:ad5940.c      ****       AD5940_WriteReg(REG_WUPTMR_SEQ0SLEEPL, (SleepTime & 0xFFFF));    
 7861              		.loc 1 2377 0
 7862 004c BB68     		ldr	r3, [r7, #8]
 7863 004e 9BB2     		uxth	r3, r3
 7864 0050 1946     		mov	r1, r3
 7865 0052 4FF40160 		mov	r0, #2064
 7866 0056 FFF7FEFF 		bl	AD5940_WriteReg
2378:ad5940.c      ****       AD5940_WriteReg(REG_WUPTMR_SEQ0SLEEPH, (SleepTime & 0xF0000)>>16);
 7867              		.loc 1 2378 0
 7868 005a BB68     		ldr	r3, [r7, #8]
 7869 005c 1B0C     		lsrs	r3, r3, #16
 7870 005e 03F00F03 		and	r3, r3, #15
 7871 0062 1946     		mov	r1, r3
 7872 0064 40F61400 		movw	r0, #2068
 7873 0068 FFF7FEFF 		bl	AD5940_WriteReg
2379:ad5940.c      ****       break;
 7874              		.loc 1 2379 0
 7875 006c 65E0     		b	.L421
 7876              	.L418:
2380:ad5940.c      ****     }
2381:ad5940.c      ****     case SEQID_1:
2382:ad5940.c      ****     {
2383:ad5940.c      ****       AD5940_WriteReg(REG_WUPTMR_SEQ1WUPL, (WakeupTime & 0xFFFF));    
 7877              		.loc 1 2383 0
 7878 006e 7B68     		ldr	r3, [r7, #4]
 7879 0070 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 182


 7880 0072 1946     		mov	r1, r3
 7881 0074 40F61800 		movw	r0, #2072
 7882 0078 FFF7FEFF 		bl	AD5940_WriteReg
2384:ad5940.c      ****       AD5940_WriteReg(REG_WUPTMR_SEQ1WUPH, (WakeupTime & 0xF0000)>>16);
 7883              		.loc 1 2384 0
 7884 007c 7B68     		ldr	r3, [r7, #4]
 7885 007e 1B0C     		lsrs	r3, r3, #16
 7886 0080 03F00F03 		and	r3, r3, #15
 7887 0084 1946     		mov	r1, r3
 7888 0086 40F61C00 		movw	r0, #2076
 7889 008a FFF7FEFF 		bl	AD5940_WriteReg
2385:ad5940.c      ****       AD5940_WriteReg(REG_WUPTMR_SEQ1SLEEPL, (SleepTime & 0xFFFF));    
 7890              		.loc 1 2385 0
 7891 008e BB68     		ldr	r3, [r7, #8]
 7892 0090 9BB2     		uxth	r3, r3
 7893 0092 1946     		mov	r1, r3
 7894 0094 4FF40260 		mov	r0, #2080
 7895 0098 FFF7FEFF 		bl	AD5940_WriteReg
2386:ad5940.c      ****       AD5940_WriteReg(REG_WUPTMR_SEQ1SLEEPH, (SleepTime & 0xF0000)>>16);
 7896              		.loc 1 2386 0
 7897 009c BB68     		ldr	r3, [r7, #8]
 7898 009e 1B0C     		lsrs	r3, r3, #16
 7899 00a0 03F00F03 		and	r3, r3, #15
 7900 00a4 1946     		mov	r1, r3
 7901 00a6 40F62400 		movw	r0, #2084
 7902 00aa FFF7FEFF 		bl	AD5940_WriteReg
2387:ad5940.c      ****       break;
 7903              		.loc 1 2387 0
 7904 00ae 44E0     		b	.L421
 7905              	.L419:
2388:ad5940.c      ****     }
2389:ad5940.c      ****     case SEQID_2:
2390:ad5940.c      ****     {
2391:ad5940.c      ****       AD5940_WriteReg(REG_WUPTMR_SEQ2WUPL, (WakeupTime & 0xFFFF));    
 7906              		.loc 1 2391 0
 7907 00b0 7B68     		ldr	r3, [r7, #4]
 7908 00b2 9BB2     		uxth	r3, r3
 7909 00b4 1946     		mov	r1, r3
 7910 00b6 40F62800 		movw	r0, #2088
 7911 00ba FFF7FEFF 		bl	AD5940_WriteReg
2392:ad5940.c      ****       AD5940_WriteReg(REG_WUPTMR_SEQ2WUPH, (WakeupTime & 0xF0000)>>16);
 7912              		.loc 1 2392 0
 7913 00be 7B68     		ldr	r3, [r7, #4]
 7914 00c0 1B0C     		lsrs	r3, r3, #16
 7915 00c2 03F00F03 		and	r3, r3, #15
 7916 00c6 1946     		mov	r1, r3
 7917 00c8 40F62C00 		movw	r0, #2092
 7918 00cc FFF7FEFF 		bl	AD5940_WriteReg
2393:ad5940.c      ****       AD5940_WriteReg(REG_WUPTMR_SEQ2SLEEPL, (SleepTime & 0xFFFF));    
 7919              		.loc 1 2393 0
 7920 00d0 BB68     		ldr	r3, [r7, #8]
 7921 00d2 9BB2     		uxth	r3, r3
 7922 00d4 1946     		mov	r1, r3
 7923 00d6 4FF40360 		mov	r0, #2096
 7924 00da FFF7FEFF 		bl	AD5940_WriteReg
2394:ad5940.c      ****       AD5940_WriteReg(REG_WUPTMR_SEQ2SLEEPH, (SleepTime & 0xF0000)>>16);
 7925              		.loc 1 2394 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 183


 7926 00de BB68     		ldr	r3, [r7, #8]
 7927 00e0 1B0C     		lsrs	r3, r3, #16
 7928 00e2 03F00F03 		and	r3, r3, #15
 7929 00e6 1946     		mov	r1, r3
 7930 00e8 40F63400 		movw	r0, #2100
 7931 00ec FFF7FEFF 		bl	AD5940_WriteReg
2395:ad5940.c      ****       break;
 7932              		.loc 1 2395 0
 7933 00f0 23E0     		b	.L421
 7934              	.L420:
2396:ad5940.c      ****     }
2397:ad5940.c      ****     case SEQID_3:
2398:ad5940.c      ****     {
2399:ad5940.c      ****       AD5940_WriteReg(REG_WUPTMR_SEQ3WUPL, (WakeupTime & 0xFFFF));    
 7935              		.loc 1 2399 0
 7936 00f2 7B68     		ldr	r3, [r7, #4]
 7937 00f4 9BB2     		uxth	r3, r3
 7938 00f6 1946     		mov	r1, r3
 7939 00f8 40F63800 		movw	r0, #2104
 7940 00fc FFF7FEFF 		bl	AD5940_WriteReg
2400:ad5940.c      ****       AD5940_WriteReg(REG_WUPTMR_SEQ3WUPH, (WakeupTime & 0xF0000)>>16);
 7941              		.loc 1 2400 0
 7942 0100 7B68     		ldr	r3, [r7, #4]
 7943 0102 1B0C     		lsrs	r3, r3, #16
 7944 0104 03F00F03 		and	r3, r3, #15
 7945 0108 1946     		mov	r1, r3
 7946 010a 40F63C00 		movw	r0, #2108
 7947 010e FFF7FEFF 		bl	AD5940_WriteReg
2401:ad5940.c      ****       AD5940_WriteReg(REG_WUPTMR_SEQ3SLEEPL, (SleepTime & 0xFFFF));    
 7948              		.loc 1 2401 0
 7949 0112 BB68     		ldr	r3, [r7, #8]
 7950 0114 9BB2     		uxth	r3, r3
 7951 0116 1946     		mov	r1, r3
 7952 0118 4FF40460 		mov	r0, #2112
 7953 011c FFF7FEFF 		bl	AD5940_WriteReg
2402:ad5940.c      ****       AD5940_WriteReg(REG_WUPTMR_SEQ3SLEEPH, (SleepTime & 0xF0000)>>16);
 7954              		.loc 1 2402 0
 7955 0120 BB68     		ldr	r3, [r7, #8]
 7956 0122 1B0C     		lsrs	r3, r3, #16
 7957 0124 03F00F03 		and	r3, r3, #15
 7958 0128 1946     		mov	r1, r3
 7959 012a 40F64400 		movw	r0, #2116
 7960 012e FFF7FEFF 		bl	AD5940_WriteReg
2403:ad5940.c      ****       break;
 7961              		.loc 1 2403 0
 7962 0132 02E0     		b	.L421
 7963              	.L415:
2404:ad5940.c      ****     }
2405:ad5940.c      ****     default:
2406:ad5940.c      ****     return AD5940ERR_PARA;
 7964              		.loc 1 2406 0
 7965 0134 6FF00103 		mvn	r3, #1
 7966 0138 00E0     		b	.L422
 7967              	.L421:
2407:ad5940.c      ****   }
2408:ad5940.c      ****   return AD5940ERR_OK;
 7968              		.loc 1 2408 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 184


 7969 013a 0023     		movs	r3, #0
 7970              	.L422:
2409:ad5940.c      **** }
 7971              		.loc 1 2409 0
 7972 013c 1846     		mov	r0, r3
 7973 013e 1037     		adds	r7, r7, #16
 7974              		.cfi_def_cfa_offset 8
 7975 0140 BD46     		mov	sp, r7
 7976              		.cfi_def_cfa_register 13
 7977              		@ sp needed
 7978 0142 80BD     		pop	{r7, pc}
 7979              		.cfi_endproc
 7980              	.LFE84:
 7981              		.size	AD5940_WUPTTime, .-AD5940_WUPTTime
 7982              		.section	.text.AD5940_CLKCfg,"ax",%progbits
 7983              		.align	2
 7984              		.global	AD5940_CLKCfg
 7985              		.thumb
 7986              		.thumb_func
 7987              		.type	AD5940_CLKCfg, %function
 7988              	AD5940_CLKCfg:
 7989              	.LFB85:
2410:ad5940.c      **** 
2411:ad5940.c      **** /**
2412:ad5940.c      ****  * @} end-of Sequencer_FIFO_Functions
2413:ad5940.c      ****  * @} end-of Sequencer_FIFO
2414:ad5940.c      **** */
2415:ad5940.c      **** 
2416:ad5940.c      **** /**
2417:ad5940.c      ****  * @defgroup MISC_Block
2418:ad5940.c      ****  * @brief Other functions not included in above blocks. Clock, GPIO, INTC etc.
2419:ad5940.c      ****  * @{
2420:ad5940.c      ****  *    @defgroup MISC_Block_Functions
2421:ad5940.c      ****  *    @{
2422:ad5940.c      **** */
2423:ad5940.c      **** 
2424:ad5940.c      **** /**
2425:ad5940.c      ****  * @brief Configure AD5940 clock
2426:ad5940.c      ****  * @param pClkCfg: Pointer to configuration structure.
2427:ad5940.c      ****  * @return return none.
2428:ad5940.c      **** */
2429:ad5940.c      **** void AD5940_CLKCfg(CLKCfg_Type *pClkCfg)
2430:ad5940.c      **** {
 7990              		.loc 1 2430 0
 7991              		.cfi_startproc
 7992              		@ args = 0, pretend = 0, frame = 16
 7993              		@ frame_needed = 1, uses_anonymous_args = 0
 7994 0000 80B5     		push	{r7, lr}
 7995              		.cfi_def_cfa_offset 8
 7996              		.cfi_offset 7, -8
 7997              		.cfi_offset 14, -4
 7998 0002 84B0     		sub	sp, sp, #16
 7999              		.cfi_def_cfa_offset 24
 8000 0004 00AF     		add	r7, sp, #0
 8001              		.cfi_def_cfa_register 7
 8002 0006 7860     		str	r0, [r7, #4]
2431:ad5940.c      ****   uint32_t tempreg, reg_osccon;
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 185


2432:ad5940.c      **** 
2433:ad5940.c      ****   reg_osccon = AD5940_ReadReg(REG_ALLON_OSCCON);
 8003              		.loc 1 2433 0
 8004 0008 4FF42160 		mov	r0, #2576
 8005 000c FFF7FEFF 		bl	AD5940_ReadReg
 8006 0010 F860     		str	r0, [r7, #12]
2434:ad5940.c      ****   /* Enable clocks */
2435:ad5940.c      ****   if(pClkCfg->HFXTALEn == bTRUE)
 8007              		.loc 1 2435 0
 8008 0012 7B68     		ldr	r3, [r7, #4]
 8009 0014 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 8010 0016 012B     		cmp	r3, #1
 8011 0018 18D1     		bne	.L424
2436:ad5940.c      ****   {
2437:ad5940.c      ****     reg_osccon |= BITM_ALLON_OSCCON_HFXTALEN;
 8012              		.loc 1 2437 0
 8013 001a FB68     		ldr	r3, [r7, #12]
 8014 001c 43F00403 		orr	r3, r3, #4
 8015 0020 FB60     		str	r3, [r7, #12]
2438:ad5940.c      ****     AD5940_WriteReg(REG_ALLON_OSCKEY,KEY_OSCCON); /* Write Key */
 8016              		.loc 1 2438 0
 8017 0022 4CF61431 		movw	r1, #51988
 8018 0026 40F60C20 		movw	r0, #2572
 8019 002a FFF7FEFF 		bl	AD5940_WriteReg
2439:ad5940.c      ****     AD5940_WriteReg(REG_ALLON_OSCCON, reg_osccon); /* Enable HFXTAL */
 8020              		.loc 1 2439 0
 8021 002e F968     		ldr	r1, [r7, #12]
 8022 0030 4FF42160 		mov	r0, #2576
 8023 0034 FFF7FEFF 		bl	AD5940_WriteReg
2440:ad5940.c      ****     while((AD5940_ReadReg(REG_ALLON_OSCCON)&BITM_ALLON_OSCCON_HFXTALOK) == 0); /* Wait for clock re
 8024              		.loc 1 2440 0
 8025 0038 00BF     		nop
 8026              	.L425:
 8027              		.loc 1 2440 0 is_stmt 0 discriminator 1
 8028 003a 4FF42160 		mov	r0, #2576
 8029 003e FFF7FEFF 		bl	AD5940_ReadReg
 8030 0042 0346     		mov	r3, r0
 8031 0044 03F48063 		and	r3, r3, #1024
 8032 0048 002B     		cmp	r3, #0
 8033 004a F6D0     		beq	.L425
 8034              	.L424:
2441:ad5940.c      ****   }
2442:ad5940.c      **** 
2443:ad5940.c      ****   if(pClkCfg->HFOSCEn == bTRUE)
 8035              		.loc 1 2443 0 is_stmt 1
 8036 004c 7B68     		ldr	r3, [r7, #4]
 8037 004e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 8038 0050 012B     		cmp	r3, #1
 8039 0052 23D1     		bne	.L426
2444:ad5940.c      ****   {
2445:ad5940.c      ****     reg_osccon |= BITM_ALLON_OSCCON_HFOSCEN;
 8040              		.loc 1 2445 0
 8041 0054 FB68     		ldr	r3, [r7, #12]
 8042 0056 43F00203 		orr	r3, r3, #2
 8043 005a FB60     		str	r3, [r7, #12]
2446:ad5940.c      ****     AD5940_WriteReg(REG_ALLON_OSCKEY,KEY_OSCCON); /* Write Key */
 8044              		.loc 1 2446 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 186


 8045 005c 4CF61431 		movw	r1, #51988
 8046 0060 40F60C20 		movw	r0, #2572
 8047 0064 FFF7FEFF 		bl	AD5940_WriteReg
2447:ad5940.c      ****     AD5940_WriteReg(REG_ALLON_OSCCON, reg_osccon); /* Enable HFOSC */
 8048              		.loc 1 2447 0
 8049 0068 F968     		ldr	r1, [r7, #12]
 8050 006a 4FF42160 		mov	r0, #2576
 8051 006e FFF7FEFF 		bl	AD5940_WriteReg
2448:ad5940.c      ****     while((AD5940_ReadReg(REG_ALLON_OSCCON)&BITM_ALLON_OSCCON_HFOSCOK) == 0); /* Wait for clock rea
 8052              		.loc 1 2448 0
 8053 0072 00BF     		nop
 8054              	.L427:
 8055              		.loc 1 2448 0 is_stmt 0 discriminator 1
 8056 0074 4FF42160 		mov	r0, #2576
 8057 0078 FFF7FEFF 		bl	AD5940_ReadReg
 8058 007c 0346     		mov	r3, r0
 8059 007e 03F40073 		and	r3, r3, #512
 8060 0082 002B     		cmp	r3, #0
 8061 0084 F6D0     		beq	.L427
2449:ad5940.c      ****     /* Configure HFOSC mode if it's enabled. */
2450:ad5940.c      ****     if(pClkCfg->HfOSC32MHzMode  == bTRUE)
 8062              		.loc 1 2450 0 is_stmt 1
 8063 0086 7B68     		ldr	r3, [r7, #4]
 8064 0088 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 8065 008a 012B     		cmp	r3, #1
 8066 008c 03D1     		bne	.L428
2451:ad5940.c      ****       AD5940_HFOSC32MHzCtrl(bTRUE);
 8067              		.loc 1 2451 0
 8068 008e 0120     		movs	r0, #1
 8069 0090 FFF7FEFF 		bl	AD5940_HFOSC32MHzCtrl
 8070 0094 02E0     		b	.L426
 8071              	.L428:
2452:ad5940.c      ****     else
2453:ad5940.c      ****       AD5940_HFOSC32MHzCtrl(bFALSE);
 8072              		.loc 1 2453 0
 8073 0096 0020     		movs	r0, #0
 8074 0098 FFF7FEFF 		bl	AD5940_HFOSC32MHzCtrl
 8075              	.L426:
2454:ad5940.c      ****   }
2455:ad5940.c      **** 
2456:ad5940.c      ****   if(pClkCfg->LFOSCEn == bTRUE)
 8076              		.loc 1 2456 0
 8077 009c 7B68     		ldr	r3, [r7, #4]
 8078 009e 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 8079 00a0 012B     		cmp	r3, #1
 8080 00a2 18D1     		bne	.L429
2457:ad5940.c      ****   {
2458:ad5940.c      ****     reg_osccon |= BITM_ALLON_OSCCON_LFOSCEN;  
 8081              		.loc 1 2458 0
 8082 00a4 FB68     		ldr	r3, [r7, #12]
 8083 00a6 43F00103 		orr	r3, r3, #1
 8084 00aa FB60     		str	r3, [r7, #12]
2459:ad5940.c      ****     AD5940_WriteReg(REG_ALLON_OSCKEY,KEY_OSCCON); /* Write Key */  
 8085              		.loc 1 2459 0
 8086 00ac 4CF61431 		movw	r1, #51988
 8087 00b0 40F60C20 		movw	r0, #2572
 8088 00b4 FFF7FEFF 		bl	AD5940_WriteReg
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 187


2460:ad5940.c      ****     AD5940_WriteReg(REG_ALLON_OSCCON, reg_osccon); /* Enable LFOSC */
 8089              		.loc 1 2460 0
 8090 00b8 F968     		ldr	r1, [r7, #12]
 8091 00ba 4FF42160 		mov	r0, #2576
 8092 00be FFF7FEFF 		bl	AD5940_WriteReg
2461:ad5940.c      ****     while((AD5940_ReadReg(REG_ALLON_OSCCON)&BITM_ALLON_OSCCON_LFOSCOK) == 0); /* Wait for clock rea
 8093              		.loc 1 2461 0
 8094 00c2 00BF     		nop
 8095              	.L430:
 8096              		.loc 1 2461 0 is_stmt 0 discriminator 1
 8097 00c4 4FF42160 		mov	r0, #2576
 8098 00c8 FFF7FEFF 		bl	AD5940_ReadReg
 8099 00cc 0346     		mov	r3, r0
 8100 00ce 03F48073 		and	r3, r3, #256
 8101 00d2 002B     		cmp	r3, #0
 8102 00d4 F6D0     		beq	.L430
 8103              	.L429:
2462:ad5940.c      ****   }
2463:ad5940.c      **** 
2464:ad5940.c      ****   /* Switch clocks */
2465:ad5940.c      ****   /* step1. Set clock divider */
2466:ad5940.c      ****   tempreg = pClkCfg->SysClkDiv&0x3f;
 8104              		.loc 1 2466 0 is_stmt 1
 8105 00d6 7B68     		ldr	r3, [r7, #4]
 8106 00d8 9B68     		ldr	r3, [r3, #8]
 8107 00da 03F03F03 		and	r3, r3, #63
 8108 00de BB60     		str	r3, [r7, #8]
2467:ad5940.c      ****   tempreg |= (pClkCfg->SysClkDiv&0x3f) << BITP_AFECON_CLKCON0_SYSCLKDIV;
 8109              		.loc 1 2467 0
 8110 00e0 7B68     		ldr	r3, [r7, #4]
 8111 00e2 9B68     		ldr	r3, [r3, #8]
 8112 00e4 03F03F03 		and	r3, r3, #63
 8113 00e8 BA68     		ldr	r2, [r7, #8]
 8114 00ea 1343     		orrs	r3, r3, r2
 8115 00ec BB60     		str	r3, [r7, #8]
2468:ad5940.c      ****   tempreg |= (pClkCfg->ADCClkDiv&0xf) << BITP_AFECON_CLKCON0_ADCCLKDIV;
 8116              		.loc 1 2468 0
 8117 00ee 7B68     		ldr	r3, [r7, #4]
 8118 00f0 DB68     		ldr	r3, [r3, #12]
 8119 00f2 9B01     		lsls	r3, r3, #6
 8120 00f4 03F47073 		and	r3, r3, #960
 8121 00f8 BA68     		ldr	r2, [r7, #8]
 8122 00fa 1343     		orrs	r3, r3, r2
 8123 00fc BB60     		str	r3, [r7, #8]
2469:ad5940.c      ****   AD5940_WriteReg(REG_AFECON_CLKCON0, tempreg);
 8124              		.loc 1 2469 0
 8125 00fe B968     		ldr	r1, [r7, #8]
 8126 0100 4FF48160 		mov	r0, #1032
 8127 0104 FFF7FEFF 		bl	AD5940_WriteReg
2470:ad5940.c      ****   AD5940_Delay10us(10);
 8128              		.loc 1 2470 0
 8129 0108 0A20     		movs	r0, #10
 8130 010a FFF7FEFF 		bl	AD5940_Delay10us
2471:ad5940.c      ****   /* Step2. set clock source */
2472:ad5940.c      ****   tempreg = pClkCfg->SysClkSrc;
 8131              		.loc 1 2472 0
 8132 010e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 188


 8133 0110 1B68     		ldr	r3, [r3]
 8134 0112 BB60     		str	r3, [r7, #8]
2473:ad5940.c      ****   tempreg |= pClkCfg->ADCCLkSrc << BITP_AFECON_CLKSEL_ADCCLKSEL;
 8135              		.loc 1 2473 0
 8136 0114 7B68     		ldr	r3, [r7, #4]
 8137 0116 5B68     		ldr	r3, [r3, #4]
 8138 0118 9B00     		lsls	r3, r3, #2
 8139 011a BA68     		ldr	r2, [r7, #8]
 8140 011c 1343     		orrs	r3, r3, r2
 8141 011e BB60     		str	r3, [r7, #8]
2474:ad5940.c      ****   AD5940_WriteReg(REG_AFECON_CLKSEL, tempreg);
 8142              		.loc 1 2474 0
 8143 0120 B968     		ldr	r1, [r7, #8]
 8144 0122 40F21440 		movw	r0, #1044
 8145 0126 FFF7FEFF 		bl	AD5940_WriteReg
2475:ad5940.c      **** 
2476:ad5940.c      ****   /* Disable clocks */
2477:ad5940.c      ****   if(pClkCfg->HFXTALEn == bFALSE)
 8146              		.loc 1 2477 0
 8147 012a 7B68     		ldr	r3, [r7, #4]
 8148 012c DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 8149 012e 002B     		cmp	r3, #0
 8150 0130 03D1     		bne	.L431
2478:ad5940.c      ****     reg_osccon &= ~BITM_ALLON_OSCCON_HFXTALEN;
 8151              		.loc 1 2478 0
 8152 0132 FB68     		ldr	r3, [r7, #12]
 8153 0134 23F00403 		bic	r3, r3, #4
 8154 0138 FB60     		str	r3, [r7, #12]
 8155              	.L431:
2479:ad5940.c      ****   if(pClkCfg->HFOSCEn == bFALSE)
 8156              		.loc 1 2479 0
 8157 013a 7B68     		ldr	r3, [r7, #4]
 8158 013c 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 8159 013e 002B     		cmp	r3, #0
 8160 0140 03D1     		bne	.L432
2480:ad5940.c      ****     reg_osccon &= ~BITM_ALLON_OSCCON_HFOSCEN;
 8161              		.loc 1 2480 0
 8162 0142 FB68     		ldr	r3, [r7, #12]
 8163 0144 23F00203 		bic	r3, r3, #2
 8164 0148 FB60     		str	r3, [r7, #12]
 8165              	.L432:
2481:ad5940.c      ****   if(pClkCfg->LFOSCEn == bFALSE)
 8166              		.loc 1 2481 0
 8167 014a 7B68     		ldr	r3, [r7, #4]
 8168 014c 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 8169 014e 002B     		cmp	r3, #0
 8170 0150 03D1     		bne	.L433
2482:ad5940.c      ****     reg_osccon &= ~BITM_ALLON_OSCCON_LFOSCEN;
 8171              		.loc 1 2482 0
 8172 0152 FB68     		ldr	r3, [r7, #12]
 8173 0154 23F00103 		bic	r3, r3, #1
 8174 0158 FB60     		str	r3, [r7, #12]
 8175              	.L433:
2483:ad5940.c      ****   AD5940_WriteReg(REG_ALLON_OSCKEY, KEY_OSCCON); /* Write Key */
 8176              		.loc 1 2483 0
 8177 015a 4CF61431 		movw	r1, #51988
 8178 015e 40F60C20 		movw	r0, #2572
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 189


 8179 0162 FFF7FEFF 		bl	AD5940_WriteReg
2484:ad5940.c      ****   AD5940_WriteReg(REG_ALLON_OSCCON, reg_osccon);
 8180              		.loc 1 2484 0
 8181 0166 F968     		ldr	r1, [r7, #12]
 8182 0168 4FF42160 		mov	r0, #2576
 8183 016c FFF7FEFF 		bl	AD5940_WriteReg
2485:ad5940.c      **** }
 8184              		.loc 1 2485 0
 8185 0170 00BF     		nop
 8186 0172 1037     		adds	r7, r7, #16
 8187              		.cfi_def_cfa_offset 8
 8188 0174 BD46     		mov	sp, r7
 8189              		.cfi_def_cfa_register 13
 8190              		@ sp needed
 8191 0176 80BD     		pop	{r7, pc}
 8192              		.cfi_endproc
 8193              	.LFE85:
 8194              		.size	AD5940_CLKCfg, .-AD5940_CLKCfg
 8195              		.section	.text.AD5940_HFOSC32MHzCtrl,"ax",%progbits
 8196              		.align	2
 8197              		.global	AD5940_HFOSC32MHzCtrl
 8198              		.thumb
 8199              		.thumb_func
 8200              		.type	AD5940_HFOSC32MHzCtrl, %function
 8201              	AD5940_HFOSC32MHzCtrl:
 8202              	.LFB86:
2486:ad5940.c      **** 
2487:ad5940.c      **** /**
2488:ad5940.c      ****  * @brief Configure Internal HFOSC to output 32MHz or 16MHz.
2489:ad5940.c      ****  * @param Mode32MHz : {bTRUE, bFALSE}
2490:ad5940.c      ****  *        - bTRUE: HFOSC 32MHz mode.
2491:ad5940.c      ****  *        - bFALSE: HFOSC 16MHz mode.
2492:ad5940.c      ****  * @return return none.
2493:ad5940.c      **** */
2494:ad5940.c      **** void AD5940_HFOSC32MHzCtrl(BoolFlag Mode32MHz)
2495:ad5940.c      **** {
 8203              		.loc 1 2495 0
 8204              		.cfi_startproc
 8205              		@ args = 0, pretend = 0, frame = 24
 8206              		@ frame_needed = 1, uses_anonymous_args = 0
 8207 0000 80B5     		push	{r7, lr}
 8208              		.cfi_def_cfa_offset 8
 8209              		.cfi_offset 7, -8
 8210              		.cfi_offset 14, -4
 8211 0002 86B0     		sub	sp, sp, #24
 8212              		.cfi_def_cfa_offset 32
 8213 0004 00AF     		add	r7, sp, #0
 8214              		.cfi_def_cfa_register 7
 8215 0006 0346     		mov	r3, r0
 8216 0008 FB71     		strb	r3, [r7, #7]
2496:ad5940.c      ****   uint32_t RdCLKEN1;
2497:ad5940.c      ****   uint32_t RdHPOSCCON;   
2498:ad5940.c      **** 
2499:ad5940.c      ****   uint32_t bit8,bit9;
2500:ad5940.c      ****     
2501:ad5940.c      ****   RdCLKEN1 = AD5940_ReadReg(REG_AFECON_CLKEN1);
 8217              		.loc 1 2501 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 190


 8218 000a 4FF48260 		mov	r0, #1040
 8219 000e FFF7FEFF 		bl	AD5940_ReadReg
 8220 0012 7861     		str	r0, [r7, #20]
2502:ad5940.c      ****   bit8 = (RdCLKEN1>>9)&0x01;
 8221              		.loc 1 2502 0
 8222 0014 7B69     		ldr	r3, [r7, #20]
 8223 0016 5B0A     		lsrs	r3, r3, #9
 8224 0018 03F00103 		and	r3, r3, #1
 8225 001c 3B61     		str	r3, [r7, #16]
2503:ad5940.c      ****   bit9 = (RdCLKEN1>>8)&0x01;  /* Fix bug in silicon, bit8 and bit9 is swapped when read back. */
 8226              		.loc 1 2503 0
 8227 001e 7B69     		ldr	r3, [r7, #20]
 8228 0020 1B0A     		lsrs	r3, r3, #8
 8229 0022 03F00103 		and	r3, r3, #1
 8230 0026 FB60     		str	r3, [r7, #12]
2504:ad5940.c      ****   RdCLKEN1 = RdCLKEN1&0xff;
 8231              		.loc 1 2504 0
 8232 0028 7B69     		ldr	r3, [r7, #20]
 8233 002a DBB2     		uxtb	r3, r3
 8234 002c 7B61     		str	r3, [r7, #20]
2505:ad5940.c      ****   RdCLKEN1 |= (bit8<<8)|(bit9<<9);
 8235              		.loc 1 2505 0
 8236 002e 3B69     		ldr	r3, [r7, #16]
 8237 0030 1A02     		lsls	r2, r3, #8
 8238 0032 FB68     		ldr	r3, [r7, #12]
 8239 0034 5B02     		lsls	r3, r3, #9
 8240 0036 1343     		orrs	r3, r3, r2
 8241 0038 7A69     		ldr	r2, [r7, #20]
 8242 003a 1343     		orrs	r3, r3, r2
 8243 003c 7B61     		str	r3, [r7, #20]
2506:ad5940.c      ****   AD5940_WriteReg(REG_AFECON_CLKEN1,RdCLKEN1|BITM_AFECON_CLKEN1_ACLKDIS); /* Disable ACLK during cl
 8244              		.loc 1 2506 0
 8245 003e 7B69     		ldr	r3, [r7, #20]
 8246 0040 43F02003 		orr	r3, r3, #32
 8247 0044 1946     		mov	r1, r3
 8248 0046 4FF48260 		mov	r0, #1040
 8249 004a FFF7FEFF 		bl	AD5940_WriteReg
2507:ad5940.c      **** 
2508:ad5940.c      ****   RdHPOSCCON = AD5940_ReadReg(REG_AFE_HPOSCCON); 
 8250              		.loc 1 2508 0
 8251 004e 42F2BC00 		movw	r0, #8380
 8252 0052 FFF7FEFF 		bl	AD5940_ReadReg
 8253 0056 B860     		str	r0, [r7, #8]
2509:ad5940.c      ****   if(Mode32MHz == bTRUE)
 8254              		.loc 1 2509 0
 8255 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8256 005a 012B     		cmp	r3, #1
 8257 005c 12D1     		bne	.L435
2510:ad5940.c      ****   {
2511:ad5940.c      ****     AD5940_WriteReg(REG_AFE_HPOSCCON,RdHPOSCCON&(~BITM_AFE_HPOSCCON_CLK32MHZEN)); /* Enable 32MHz o
 8258              		.loc 1 2511 0
 8259 005e BB68     		ldr	r3, [r7, #8]
 8260 0060 23F00403 		bic	r3, r3, #4
 8261 0064 1946     		mov	r1, r3
 8262 0066 42F2BC00 		movw	r0, #8380
 8263 006a FFF7FEFF 		bl	AD5940_WriteReg
2512:ad5940.c      ****     while((AD5940_ReadReg(REG_ALLON_OSCCON)&BITM_ALLON_OSCCON_HFOSCOK) == 0); /* Wait for clock rea
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 191


 8264              		.loc 1 2512 0
 8265 006e 00BF     		nop
 8266              	.L436:
 8267              		.loc 1 2512 0 is_stmt 0 discriminator 1
 8268 0070 4FF42160 		mov	r0, #2576
 8269 0074 FFF7FEFF 		bl	AD5940_ReadReg
 8270 0078 0346     		mov	r3, r0
 8271 007a 03F40073 		and	r3, r3, #512
 8272 007e 002B     		cmp	r3, #0
 8273 0080 F6D0     		beq	.L436
 8274 0082 11E0     		b	.L437
 8275              	.L435:
2513:ad5940.c      ****   }
2514:ad5940.c      ****   else
2515:ad5940.c      ****   {
2516:ad5940.c      ****     AD5940_WriteReg(REG_AFE_HPOSCCON,RdHPOSCCON|BITM_AFE_HPOSCCON_CLK32MHZEN); /* Enable 16MHz outp
 8276              		.loc 1 2516 0 is_stmt 1
 8277 0084 BB68     		ldr	r3, [r7, #8]
 8278 0086 43F00403 		orr	r3, r3, #4
 8279 008a 1946     		mov	r1, r3
 8280 008c 42F2BC00 		movw	r0, #8380
 8281 0090 FFF7FEFF 		bl	AD5940_WriteReg
2517:ad5940.c      ****     while((AD5940_ReadReg(REG_ALLON_OSCCON)&BITM_ALLON_OSCCON_HFOSCOK) == 0); /* Wait for clock rea
 8282              		.loc 1 2517 0
 8283 0094 00BF     		nop
 8284              	.L438:
 8285              		.loc 1 2517 0 is_stmt 0 discriminator 1
 8286 0096 4FF42160 		mov	r0, #2576
 8287 009a FFF7FEFF 		bl	AD5940_ReadReg
 8288 009e 0346     		mov	r3, r0
 8289 00a0 03F40073 		and	r3, r3, #512
 8290 00a4 002B     		cmp	r3, #0
 8291 00a6 F6D0     		beq	.L438
 8292              	.L437:
2518:ad5940.c      ****   }
2519:ad5940.c      **** 
2520:ad5940.c      ****   AD5940_WriteReg(REG_AFECON_CLKEN1,RdCLKEN1&(~BITM_AFECON_CLKEN1_ACLKDIS)); /* Enable ACLK */
 8293              		.loc 1 2520 0 is_stmt 1
 8294 00a8 7B69     		ldr	r3, [r7, #20]
 8295 00aa 23F02003 		bic	r3, r3, #32
 8296 00ae 1946     		mov	r1, r3
 8297 00b0 4FF48260 		mov	r0, #1040
 8298 00b4 FFF7FEFF 		bl	AD5940_WriteReg
2521:ad5940.c      **** }
 8299              		.loc 1 2521 0
 8300 00b8 00BF     		nop
 8301 00ba 1837     		adds	r7, r7, #24
 8302              		.cfi_def_cfa_offset 8
 8303 00bc BD46     		mov	sp, r7
 8304              		.cfi_def_cfa_register 13
 8305              		@ sp needed
 8306 00be 80BD     		pop	{r7, pc}
 8307              		.cfi_endproc
 8308              	.LFE86:
 8309              		.size	AD5940_HFOSC32MHzCtrl, .-AD5940_HFOSC32MHzCtrl
 8310              		.section	.text.AD5940_INTCCfg,"ax",%progbits
 8311              		.align	2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 192


 8312              		.global	AD5940_INTCCfg
 8313              		.thumb
 8314              		.thumb_func
 8315              		.type	AD5940_INTCCfg, %function
 8316              	AD5940_INTCCfg:
 8317              	.LFB87:
2522:ad5940.c      **** 
2523:ad5940.c      **** 
2524:ad5940.c      **** /**
2525:ad5940.c      ****  * @defgroup Interrupt_Controller_Functions
2526:ad5940.c      ****  * @{
2527:ad5940.c      **** */
2528:ad5940.c      **** /* AFE Interrupt Controller */
2529:ad5940.c      **** /**
2530:ad5940.c      ****  * @brief Enable or Disable selected interrupt source(s)
2531:ad5940.c      ****  * @param AfeIntcSel : {AFEINTC_0, AFEINTC_1}
2532:ad5940.c      ****  *        - AFEINTC_0: Configure Interrupt Controller 0
2533:ad5940.c      ****  *        - AFEINTC_1: Configure Interrupt Controller 1
2534:ad5940.c      ****  * @param AFEIntSrc: select from @ref AFEINTC_SRC_Const
2535:ad5940.c      ****  *       - AFEINTSRC_ADCRDY        : Bit0 ADC Result Ready Status
2536:ad5940.c      ****  *       - AFEINTSRC_DFTRDY        : Bit1 DFT Result Ready Status
2537:ad5940.c      ****  *       - AFEINTSRC_SUPPLYFILTRDY : Bit2 Low Pass Filter Result Status
2538:ad5940.c      ****  *       - AFEINTSRC_TEMPRDY       : Bit3, Temp Sensor Result Ready
2539:ad5940.c      ****  *       - AFEINTSRC_ADCMINERR     : Bit4, ADC Minimum Value
2540:ad5940.c      ****  *       - AFEINTSRC_ADCMAXERR     : Bit5, ADC Maximum Value
2541:ad5940.c      ****  *       - AFEINTSRC_ADCDIFFERR    : Bit6, ADC Delta Ready
2542:ad5940.c      ****  *       - AFEINTSRC_MEANRDY       : Bit7, Mean Result Ready
2543:ad5940.c      ****  *       - AFEINTSRC_VARRDY       : Bit8, Variance Result Ready 
2544:ad5940.c      ****  *       - AFEINTSRC_DLYCMDDONE   : Bit9, User controlled interrupt by writing AFEGENINTSTA. Provid
2545:ad5940.c      ****  *       - AFEINTSRC_HWSETUPDONE  : Bit10, User controlled interrupt by writing AFEGENINTSTA. Indic
2546:ad5940.c      ****  *       - AFEINTSRC_BRKSEQ       : Bit11, User controlled interrupt by writing AFEGENINTSTA.
2547:ad5940.c      ****  *       - AFEINTSRC_CUSTOMINS    : Bit12, User controlled interrupt by writing AFEGENINTSTA. Gener
2548:ad5940.c      ****  *       - AFEINTSRC_BOOTLDDONE   : Bit13, OTP Boot Loading Done 
2549:ad5940.c      ****  *       - AFEINTSRC_WAKEUP       : Bit14, AFE Woken up
2550:ad5940.c      ****  *       - AFEINTSRC_ENDSEQ       : Bit15, End of Sequence Interrupt. 
2551:ad5940.c      ****  *       - AFEINTSRC_SEQTIMEOUT   : Bit16, Sequencer Timeout Command Finished. 
2552:ad5940.c      ****  *       - AFEINTSRC_SEQTIMEOUTERR : Bit17, Sequencer Timeout Command Error. 
2553:ad5940.c      ****  *       - AFEINTSRC_CMDFIFOFULL  : Bit18, Command FIFO Full Interrupt. 
2554:ad5940.c      ****  *       - AFEINTSRC_CMDFIFOEMPTY : Bit19, Command FIFO Empty 
2555:ad5940.c      ****  *       - AFEINTSRC_CMDFIFOTHRESH: Bit20, Command FIFO Threshold Interrupt. 
2556:ad5940.c      ****  *       - AFEINTSRC_CMDFIFOOF    : Bit21, Command FIFO Overflow Interrupt. 
2557:ad5940.c      ****  *       - AFEINTSRC_CMDFIFOUF    : Bit22, Command FIFO Underflow Interrupt. 
2558:ad5940.c      ****  *       - AFEINTSRC_DATAFIFOFULL : Bit23, Data FIFO Full Interrupt. 
2559:ad5940.c      ****  *       - AFEINTSRC_DATAFIFOEMPTY: Bit24, Data FIFO Empty 
2560:ad5940.c      ****  *       - AFEINTSRC_DATAFIFOTHRESH: Bit25, Data FIFO Threshold Interrupt. 
2561:ad5940.c      ****  *       - AFEINTSRC_DATAFIFOOF   : Bit26, Data FIFO Overflow Interrupt. 
2562:ad5940.c      ****  *       - AFEINTSRC_DATAFIFOUF   : Bit27, Data FIFO Underflow Interrupt. 
2563:ad5940.c      ****  *       - AFEINTSRC_WDTIRQ       : Bit28, WDT Timeout Interrupt. 
2564:ad5940.c      ****  *       - AFEINTSRC_CRC_OUTLIER  : Bit29, CRC interrupt for M355, Outliers Int for AD5940  
2565:ad5940.c      ****  *       - AFEINTSRC_GPT0INT_SLPWUT: Bit30, General Purpose Timer0 IRQ for M355. Sleep or Wakeup Ti
2566:ad5940.c      ****  *       - AFEINTSRC_GPT1INT_TRYBRK: Bit31, General Purpose Timer1 IRQ for M355. Tried to Break IRQ
2567:ad5940.c      ****  *       - AFE_INTC_ALLINT        : All interrupts
2568:ad5940.c      ****  * @param State : {bTRUE, bFALSE}
2569:ad5940.c      ****  *      - bTRUE: Enable these interrupt source(s)
2570:ad5940.c      ****  *      - bFALSE: Disable interrupt source(s)
2571:ad5940.c      ****  * @return return none.
2572:ad5940.c      **** */
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 193


2573:ad5940.c      **** void AD5940_INTCCfg(uint32_t AfeIntcSel, uint32_t AFEIntSrc, BoolFlag State)
2574:ad5940.c      **** {
 8318              		.loc 1 2574 0
 8319              		.cfi_startproc
 8320              		@ args = 0, pretend = 0, frame = 24
 8321              		@ frame_needed = 1, uses_anonymous_args = 0
 8322 0000 80B5     		push	{r7, lr}
 8323              		.cfi_def_cfa_offset 8
 8324              		.cfi_offset 7, -8
 8325              		.cfi_offset 14, -4
 8326 0002 86B0     		sub	sp, sp, #24
 8327              		.cfi_def_cfa_offset 32
 8328 0004 00AF     		add	r7, sp, #0
 8329              		.cfi_def_cfa_register 7
 8330 0006 F860     		str	r0, [r7, #12]
 8331 0008 B960     		str	r1, [r7, #8]
 8332 000a 1346     		mov	r3, r2
 8333 000c FB71     		strb	r3, [r7, #7]
2575:ad5940.c      ****   uint32_t tempreg;
2576:ad5940.c      ****   uint32_t regaddr = REG_INTC_INTCSEL0;
 8334              		.loc 1 2576 0
 8335 000e 43F20803 		movw	r3, #12296
 8336 0012 3B61     		str	r3, [r7, #16]
2577:ad5940.c      ****   
2578:ad5940.c      ****   if(AfeIntcSel == AFEINTC_1)
 8337              		.loc 1 2578 0
 8338 0014 FB68     		ldr	r3, [r7, #12]
 8339 0016 012B     		cmp	r3, #1
 8340 0018 02D1     		bne	.L440
2579:ad5940.c      ****     regaddr = REG_INTC_INTCSEL1;
 8341              		.loc 1 2579 0
 8342 001a 43F20C03 		movw	r3, #12300
 8343 001e 3B61     		str	r3, [r7, #16]
 8344              	.L440:
2580:ad5940.c      ****   
2581:ad5940.c      ****   tempreg = AD5940_ReadReg(regaddr);
 8345              		.loc 1 2581 0
 8346 0020 3B69     		ldr	r3, [r7, #16]
 8347 0022 9BB2     		uxth	r3, r3
 8348 0024 1846     		mov	r0, r3
 8349 0026 FFF7FEFF 		bl	AD5940_ReadReg
 8350 002a 7861     		str	r0, [r7, #20]
2582:ad5940.c      ****   if(State == bTRUE)
 8351              		.loc 1 2582 0
 8352 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8353 002e 012B     		cmp	r3, #1
 8354 0030 04D1     		bne	.L441
2583:ad5940.c      ****     tempreg |= AFEIntSrc;    /* Enable this interrupt */
 8355              		.loc 1 2583 0
 8356 0032 7A69     		ldr	r2, [r7, #20]
 8357 0034 BB68     		ldr	r3, [r7, #8]
 8358 0036 1343     		orrs	r3, r3, r2
 8359 0038 7B61     		str	r3, [r7, #20]
 8360 003a 04E0     		b	.L442
 8361              	.L441:
2584:ad5940.c      ****   else
2585:ad5940.c      ****     tempreg &= ~(AFEIntSrc); /* Disable this interrupt  */
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 194


 8362              		.loc 1 2585 0
 8363 003c BB68     		ldr	r3, [r7, #8]
 8364 003e DB43     		mvns	r3, r3
 8365 0040 7A69     		ldr	r2, [r7, #20]
 8366 0042 1340     		ands	r3, r3, r2
 8367 0044 7B61     		str	r3, [r7, #20]
 8368              	.L442:
2586:ad5940.c      ****   AD5940_WriteReg(regaddr,tempreg);
 8369              		.loc 1 2586 0
 8370 0046 3B69     		ldr	r3, [r7, #16]
 8371 0048 9BB2     		uxth	r3, r3
 8372 004a 7969     		ldr	r1, [r7, #20]
 8373 004c 1846     		mov	r0, r3
 8374 004e FFF7FEFF 		bl	AD5940_WriteReg
2587:ad5940.c      **** }
 8375              		.loc 1 2587 0
 8376 0052 00BF     		nop
 8377 0054 1837     		adds	r7, r7, #24
 8378              		.cfi_def_cfa_offset 8
 8379 0056 BD46     		mov	sp, r7
 8380              		.cfi_def_cfa_register 13
 8381              		@ sp needed
 8382 0058 80BD     		pop	{r7, pc}
 8383              		.cfi_endproc
 8384              	.LFE87:
 8385              		.size	AD5940_INTCCfg, .-AD5940_INTCCfg
 8386 005a 00BF     		.section	.text.AD5940_INTCGetCfg,"ax",%progbits
 8387              		.align	2
 8388              		.global	AD5940_INTCGetCfg
 8389              		.thumb
 8390              		.thumb_func
 8391              		.type	AD5940_INTCGetCfg, %function
 8392              	AD5940_INTCGetCfg:
 8393              	.LFB88:
2588:ad5940.c      **** 
2589:ad5940.c      **** /**
2590:ad5940.c      ****  * @brief Check if current interrupt configuration.
2591:ad5940.c      ****  * @param AfeIntcSel : {AFEINTC_0, AFEINTC_1}
2592:ad5940.c      ****  *        - AFEINTC_0: Configure Interrupt Controller 0
2593:ad5940.c      ****  *        - AFEINTC_1: Configure Interrupt Controller 1
2594:ad5940.c      **** */
2595:ad5940.c      **** uint32_t AD5940_INTCGetCfg(uint32_t AfeIntcSel)
2596:ad5940.c      **** {
 8394              		.loc 1 2596 0
 8395              		.cfi_startproc
 8396              		@ args = 0, pretend = 0, frame = 16
 8397              		@ frame_needed = 1, uses_anonymous_args = 0
 8398 0000 80B5     		push	{r7, lr}
 8399              		.cfi_def_cfa_offset 8
 8400              		.cfi_offset 7, -8
 8401              		.cfi_offset 14, -4
 8402 0002 84B0     		sub	sp, sp, #16
 8403              		.cfi_def_cfa_offset 24
 8404 0004 00AF     		add	r7, sp, #0
 8405              		.cfi_def_cfa_register 7
 8406 0006 7860     		str	r0, [r7, #4]
2597:ad5940.c      ****   uint32_t tempreg;
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 195


2598:ad5940.c      ****   if(AfeIntcSel == AFEINTC_0)
 8407              		.loc 1 2598 0
 8408 0008 7B68     		ldr	r3, [r7, #4]
 8409 000a 002B     		cmp	r3, #0
 8410 000c 05D1     		bne	.L444
2599:ad5940.c      ****     tempreg = AD5940_ReadReg(REG_INTC_INTCSEL0);
 8411              		.loc 1 2599 0
 8412 000e 43F20800 		movw	r0, #12296
 8413 0012 FFF7FEFF 		bl	AD5940_ReadReg
 8414 0016 F860     		str	r0, [r7, #12]
 8415 0018 04E0     		b	.L445
 8416              	.L444:
2600:ad5940.c      ****   else
2601:ad5940.c      ****     tempreg = AD5940_ReadReg(REG_INTC_INTCSEL1);
 8417              		.loc 1 2601 0
 8418 001a 43F20C00 		movw	r0, #12300
 8419 001e FFF7FEFF 		bl	AD5940_ReadReg
 8420 0022 F860     		str	r0, [r7, #12]
 8421              	.L445:
2602:ad5940.c      ****   return tempreg;
 8422              		.loc 1 2602 0
 8423 0024 FB68     		ldr	r3, [r7, #12]
2603:ad5940.c      **** }
 8424              		.loc 1 2603 0
 8425 0026 1846     		mov	r0, r3
 8426 0028 1037     		adds	r7, r7, #16
 8427              		.cfi_def_cfa_offset 8
 8428 002a BD46     		mov	sp, r7
 8429              		.cfi_def_cfa_register 13
 8430              		@ sp needed
 8431 002c 80BD     		pop	{r7, pc}
 8432              		.cfi_endproc
 8433              	.LFE88:
 8434              		.size	AD5940_INTCGetCfg, .-AD5940_INTCGetCfg
 8435 002e 00BF     		.section	.text.AD5940_INTCClrFlag,"ax",%progbits
 8436              		.align	2
 8437              		.global	AD5940_INTCClrFlag
 8438              		.thumb
 8439              		.thumb_func
 8440              		.type	AD5940_INTCClrFlag, %function
 8441              	AD5940_INTCClrFlag:
 8442              	.LFB89:
2604:ad5940.c      **** 
2605:ad5940.c      **** /**
2606:ad5940.c      ****  * @brief Clear selected interrupt(s) flag(INTC0Flag and INTC1Flag are both cleared).
2607:ad5940.c      ****  * @param AfeIntSrcSel: Select from @ref AFEINTC_SRC_Const
2608:ad5940.c      ****  * @return return none.
2609:ad5940.c      **** **/
2610:ad5940.c      **** void AD5940_INTCClrFlag(uint32_t AfeIntSrcSel)
2611:ad5940.c      **** {
 8443              		.loc 1 2611 0
 8444              		.cfi_startproc
 8445              		@ args = 0, pretend = 0, frame = 8
 8446              		@ frame_needed = 1, uses_anonymous_args = 0
 8447 0000 80B5     		push	{r7, lr}
 8448              		.cfi_def_cfa_offset 8
 8449              		.cfi_offset 7, -8
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 196


 8450              		.cfi_offset 14, -4
 8451 0002 82B0     		sub	sp, sp, #8
 8452              		.cfi_def_cfa_offset 16
 8453 0004 00AF     		add	r7, sp, #0
 8454              		.cfi_def_cfa_register 7
 8455 0006 7860     		str	r0, [r7, #4]
2612:ad5940.c      ****   AD5940_WriteReg(REG_INTC_INTCCLR,AfeIntSrcSel);
 8456              		.loc 1 2612 0
 8457 0008 7968     		ldr	r1, [r7, #4]
 8458 000a 43F20400 		movw	r0, #12292
 8459 000e FFF7FEFF 		bl	AD5940_WriteReg
2613:ad5940.c      **** }
 8460              		.loc 1 2613 0
 8461 0012 00BF     		nop
 8462 0014 0837     		adds	r7, r7, #8
 8463              		.cfi_def_cfa_offset 8
 8464 0016 BD46     		mov	sp, r7
 8465              		.cfi_def_cfa_register 13
 8466              		@ sp needed
 8467 0018 80BD     		pop	{r7, pc}
 8468              		.cfi_endproc
 8469              	.LFE89:
 8470              		.size	AD5940_INTCClrFlag, .-AD5940_INTCClrFlag
 8471 001a 00BF     		.section	.text.AD5940_INTCTestFlag,"ax",%progbits
 8472              		.align	2
 8473              		.global	AD5940_INTCTestFlag
 8474              		.thumb
 8475              		.thumb_func
 8476              		.type	AD5940_INTCTestFlag, %function
 8477              	AD5940_INTCTestFlag:
 8478              	.LFB90:
2614:ad5940.c      **** 
2615:ad5940.c      **** /**
2616:ad5940.c      ****  * @brief Test if selected interrupt source(s) is(are) bTRUE.
2617:ad5940.c      ****  * @param AfeIntcSel : {AFEINTC_0, AFEINTC_1}
2618:ad5940.c      ****  *        - AFEINTC_0: Read Interrupt Controller 0 flag
2619:ad5940.c      ****  *        - AFEINTC_1: Read Interrupt Controller 1 flag
2620:ad5940.c      ****  * @param AfeIntSrcSel: Select from @ref AFEINTC_SRC_Const
2621:ad5940.c      ****  * @return If selected interrupt source(s) are all cleared, return bFALSE. Otherwise return bTRUE.
2622:ad5940.c      **** **/
2623:ad5940.c      **** BoolFlag AD5940_INTCTestFlag(uint32_t AfeIntcSel, uint32_t AfeIntSrcSel)
2624:ad5940.c      **** {
 8479              		.loc 1 2624 0
 8480              		.cfi_startproc
 8481              		@ args = 0, pretend = 0, frame = 16
 8482              		@ frame_needed = 1, uses_anonymous_args = 0
 8483 0000 80B5     		push	{r7, lr}
 8484              		.cfi_def_cfa_offset 8
 8485              		.cfi_offset 7, -8
 8486              		.cfi_offset 14, -4
 8487 0002 84B0     		sub	sp, sp, #16
 8488              		.cfi_def_cfa_offset 24
 8489 0004 00AF     		add	r7, sp, #0
 8490              		.cfi_def_cfa_register 7
 8491 0006 7860     		str	r0, [r7, #4]
 8492 0008 3960     		str	r1, [r7]
2625:ad5940.c      ****   uint32_t tempreg;
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 197


2626:ad5940.c      ****   uint32_t regaddr = (AfeIntcSel == AFEINTC_0)? REG_INTC_INTCFLAG0: REG_INTC_INTCFLAG1;
 8493              		.loc 1 2626 0
 8494 000a 7B68     		ldr	r3, [r7, #4]
 8495 000c 002B     		cmp	r3, #0
 8496 000e 02D1     		bne	.L449
 8497              		.loc 1 2626 0 is_stmt 0 discriminator 1
 8498 0010 43F21003 		movw	r3, #12304
 8499 0014 01E0     		b	.L450
 8500              	.L449:
 8501              		.loc 1 2626 0 discriminator 2
 8502 0016 43F21403 		movw	r3, #12308
 8503              	.L450:
 8504              		.loc 1 2626 0 discriminator 4
 8505 001a FB60     		str	r3, [r7, #12]
2627:ad5940.c      ****   
2628:ad5940.c      ****   tempreg = AD5940_ReadReg(regaddr);
 8506              		.loc 1 2628 0 is_stmt 1 discriminator 4
 8507 001c FB68     		ldr	r3, [r7, #12]
 8508 001e 9BB2     		uxth	r3, r3
 8509 0020 1846     		mov	r0, r3
 8510 0022 FFF7FEFF 		bl	AD5940_ReadReg
 8511 0026 B860     		str	r0, [r7, #8]
2629:ad5940.c      ****   if(tempreg & AfeIntSrcSel)
 8512              		.loc 1 2629 0 discriminator 4
 8513 0028 BA68     		ldr	r2, [r7, #8]
 8514 002a 3B68     		ldr	r3, [r7]
 8515 002c 1340     		ands	r3, r3, r2
 8516 002e 002B     		cmp	r3, #0
 8517 0030 01D0     		beq	.L451
2630:ad5940.c      ****     return bTRUE;
 8518              		.loc 1 2630 0
 8519 0032 0123     		movs	r3, #1
 8520 0034 00E0     		b	.L452
 8521              	.L451:
2631:ad5940.c      ****   else
2632:ad5940.c      ****     return bFALSE;
 8522              		.loc 1 2632 0
 8523 0036 0023     		movs	r3, #0
 8524              	.L452:
2633:ad5940.c      **** }
 8525              		.loc 1 2633 0
 8526 0038 1846     		mov	r0, r3
 8527 003a 1037     		adds	r7, r7, #16
 8528              		.cfi_def_cfa_offset 8
 8529 003c BD46     		mov	sp, r7
 8530              		.cfi_def_cfa_register 13
 8531              		@ sp needed
 8532 003e 80BD     		pop	{r7, pc}
 8533              		.cfi_endproc
 8534              	.LFE90:
 8535              		.size	AD5940_INTCTestFlag, .-AD5940_INTCTestFlag
 8536              		.section	.text.AD5940_INTCGetFlag,"ax",%progbits
 8537              		.align	2
 8538              		.global	AD5940_INTCGetFlag
 8539              		.thumb
 8540              		.thumb_func
 8541              		.type	AD5940_INTCGetFlag, %function
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 198


 8542              	AD5940_INTCGetFlag:
 8543              	.LFB91:
2634:ad5940.c      **** 
2635:ad5940.c      **** /**
2636:ad5940.c      ****  * @brief return register value of REG_INTC_INTCFLAGx
2637:ad5940.c      ****  * @param AfeIntcSel : {AFEINTC_0, AFEINTC_1}
2638:ad5940.c      ****  *        - AFEINTC_0: Read Interrupt Controller 0 flag
2639:ad5940.c      ****  *        - AFEINTC_1: Read Interrupt Controller 1 flag     
2640:ad5940.c      ****  * @return register value of REG_INTC_INTCFLAGx.
2641:ad5940.c      **** **/
2642:ad5940.c      **** uint32_t AD5940_INTCGetFlag(uint32_t AfeIntcSel)
2643:ad5940.c      **** {
 8544              		.loc 1 2643 0
 8545              		.cfi_startproc
 8546              		@ args = 0, pretend = 0, frame = 16
 8547              		@ frame_needed = 1, uses_anonymous_args = 0
 8548 0000 80B5     		push	{r7, lr}
 8549              		.cfi_def_cfa_offset 8
 8550              		.cfi_offset 7, -8
 8551              		.cfi_offset 14, -4
 8552 0002 84B0     		sub	sp, sp, #16
 8553              		.cfi_def_cfa_offset 24
 8554 0004 00AF     		add	r7, sp, #0
 8555              		.cfi_def_cfa_register 7
 8556 0006 7860     		str	r0, [r7, #4]
2644:ad5940.c      ****   uint32_t tempreg;
2645:ad5940.c      ****   uint32_t regaddr = (AfeIntcSel == AFEINTC_0)? REG_INTC_INTCFLAG0: REG_INTC_INTCFLAG1;
 8557              		.loc 1 2645 0
 8558 0008 7B68     		ldr	r3, [r7, #4]
 8559 000a 002B     		cmp	r3, #0
 8560 000c 02D1     		bne	.L454
 8561              		.loc 1 2645 0 is_stmt 0 discriminator 1
 8562 000e 43F21003 		movw	r3, #12304
 8563 0012 01E0     		b	.L455
 8564              	.L454:
 8565              		.loc 1 2645 0 discriminator 2
 8566 0014 43F21403 		movw	r3, #12308
 8567              	.L455:
 8568              		.loc 1 2645 0 discriminator 4
 8569 0018 FB60     		str	r3, [r7, #12]
2646:ad5940.c      ****   
2647:ad5940.c      ****   tempreg = AD5940_ReadReg(regaddr);
 8570              		.loc 1 2647 0 is_stmt 1 discriminator 4
 8571 001a FB68     		ldr	r3, [r7, #12]
 8572 001c 9BB2     		uxth	r3, r3
 8573 001e 1846     		mov	r0, r3
 8574 0020 FFF7FEFF 		bl	AD5940_ReadReg
 8575 0024 B860     		str	r0, [r7, #8]
2648:ad5940.c      ****   return tempreg;
 8576              		.loc 1 2648 0 discriminator 4
 8577 0026 BB68     		ldr	r3, [r7, #8]
2649:ad5940.c      **** }
 8578              		.loc 1 2649 0 discriminator 4
 8579 0028 1846     		mov	r0, r3
 8580 002a 1037     		adds	r7, r7, #16
 8581              		.cfi_def_cfa_offset 8
 8582 002c BD46     		mov	sp, r7
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 199


 8583              		.cfi_def_cfa_register 13
 8584              		@ sp needed
 8585 002e 80BD     		pop	{r7, pc}
 8586              		.cfi_endproc
 8587              	.LFE91:
 8588              		.size	AD5940_INTCGetFlag, .-AD5940_INTCGetFlag
 8589              		.section	.text.AD5940_AGPIOCfg,"ax",%progbits
 8590              		.align	2
 8591              		.global	AD5940_AGPIOCfg
 8592              		.thumb
 8593              		.thumb_func
 8594              		.type	AD5940_AGPIOCfg, %function
 8595              	AD5940_AGPIOCfg:
 8596              	.LFB92:
2650:ad5940.c      **** 
2651:ad5940.c      **** /**
2652:ad5940.c      ****  * @} Interrupt_Controller_Functions
2653:ad5940.c      **** */
2654:ad5940.c      **** 
2655:ad5940.c      **** /**
2656:ad5940.c      ****  * @defgroup GPIO_Block_Functions
2657:ad5940.c      ****  * @{
2658:ad5940.c      **** */
2659:ad5940.c      **** 
2660:ad5940.c      **** /**
2661:ad5940.c      ****  * @brief Initialize AFE GPIO
2662:ad5940.c      ****  * @param pAgpioCfg: Pointer to configuration structure
2663:ad5940.c      ****  * @return return none.
2664:ad5940.c      **** */
2665:ad5940.c      **** void AD5940_AGPIOCfg(AGPIOCfg_Type *pAgpioCfg)
2666:ad5940.c      **** {
 8597              		.loc 1 2666 0
 8598              		.cfi_startproc
 8599              		@ args = 0, pretend = 0, frame = 8
 8600              		@ frame_needed = 1, uses_anonymous_args = 0
 8601 0000 80B5     		push	{r7, lr}
 8602              		.cfi_def_cfa_offset 8
 8603              		.cfi_offset 7, -8
 8604              		.cfi_offset 14, -4
 8605 0002 82B0     		sub	sp, sp, #8
 8606              		.cfi_def_cfa_offset 16
 8607 0004 00AF     		add	r7, sp, #0
 8608              		.cfi_def_cfa_register 7
 8609 0006 7860     		str	r0, [r7, #4]
2667:ad5940.c      ****   AD5940_AGPIOFuncCfg(pAgpioCfg->FuncSet);
 8610              		.loc 1 2667 0
 8611 0008 7B68     		ldr	r3, [r7, #4]
 8612 000a 1B68     		ldr	r3, [r3]
 8613 000c 1846     		mov	r0, r3
 8614 000e FFF7FEFF 		bl	AD5940_AGPIOFuncCfg
2668:ad5940.c      ****   AD5940_AGPIOOen(pAgpioCfg->OutputEnSet);
 8615              		.loc 1 2668 0
 8616 0012 7B68     		ldr	r3, [r7, #4]
 8617 0014 5B68     		ldr	r3, [r3, #4]
 8618 0016 1846     		mov	r0, r3
 8619 0018 FFF7FEFF 		bl	AD5940_AGPIOOen
2669:ad5940.c      ****   AD5940_AGPIOIen(pAgpioCfg->InputEnSet);
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 200


 8620              		.loc 1 2669 0
 8621 001c 7B68     		ldr	r3, [r7, #4]
 8622 001e 9B68     		ldr	r3, [r3, #8]
 8623 0020 1846     		mov	r0, r3
 8624 0022 FFF7FEFF 		bl	AD5940_AGPIOIen
2670:ad5940.c      ****   AD5940_AGPIOPen(pAgpioCfg->PullEnSet);
 8625              		.loc 1 2670 0
 8626 0026 7B68     		ldr	r3, [r7, #4]
 8627 0028 DB68     		ldr	r3, [r3, #12]
 8628 002a 1846     		mov	r0, r3
 8629 002c FFF7FEFF 		bl	AD5940_AGPIOPen
2671:ad5940.c      ****   AD5940_WriteReg(REG_AGPIO_GP0OUT, pAgpioCfg->OutVal);
 8630              		.loc 1 2671 0
 8631 0030 7B68     		ldr	r3, [r7, #4]
 8632 0032 1B69     		ldr	r3, [r3, #16]
 8633 0034 1946     		mov	r1, r3
 8634 0036 1420     		movs	r0, #20
 8635 0038 FFF7FEFF 		bl	AD5940_WriteReg
2672:ad5940.c      **** }
 8636              		.loc 1 2672 0
 8637 003c 00BF     		nop
 8638 003e 0837     		adds	r7, r7, #8
 8639              		.cfi_def_cfa_offset 8
 8640 0040 BD46     		mov	sp, r7
 8641              		.cfi_def_cfa_register 13
 8642              		@ sp needed
 8643 0042 80BD     		pop	{r7, pc}
 8644              		.cfi_endproc
 8645              	.LFE92:
 8646              		.size	AD5940_AGPIOCfg, .-AD5940_AGPIOCfg
 8647              		.section	.text.AD5940_AGPIOFuncCfg,"ax",%progbits
 8648              		.align	2
 8649              		.global	AD5940_AGPIOFuncCfg
 8650              		.thumb
 8651              		.thumb_func
 8652              		.type	AD5940_AGPIOFuncCfg, %function
 8653              	AD5940_AGPIOFuncCfg:
 8654              	.LFB93:
2673:ad5940.c      **** 
2674:ad5940.c      **** /**
2675:ad5940.c      ****  * @brief Configure the function of GP0 to GP7.
2676:ad5940.c      ****  * @param uiCfgSet :{GP0_INT,GP0_TRIG,GP0_SYNC,GP0_GPIO|
2677:ad5940.c      ****  *               GP1_GPIO,GP1_TRIG,GP1_SYNC,GP1_SLEEP|
2678:ad5940.c      ****  *                GP2_PORB,GP2_TRIG,GP2_SYNC,GP2_EXTCLK|
2679:ad5940.c      ****  *                GP3_GPIO,GP3_TRIG,GP3_SYNC,GP3_INT0|\
2680:ad5940.c      ****  *                GP4_GPIO,GP4_TRIG,GP4_SYNC,GP4_INT1|
2681:ad5940.c      ****  *                GP5_GPIO,GP5_TRIG,GP5_SYNC,GP5_EXTCLK|
2682:ad5940.c      ****  *                GP6_GPIO,GP6_TRIG,GP6_SYNC,GP6_INT0|
2683:ad5940.c      ****  *                GP7_GPIO,GP7_TRIG,GP7_SYNC,GP7_INT}
2684:ad5940.c      ****  * @return return none.
2685:ad5940.c      **** **/
2686:ad5940.c      **** void AD5940_AGPIOFuncCfg(uint32_t uiCfgSet)
2687:ad5940.c      **** {
 8655              		.loc 1 2687 0
 8656              		.cfi_startproc
 8657              		@ args = 0, pretend = 0, frame = 8
 8658              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 201


 8659 0000 80B5     		push	{r7, lr}
 8660              		.cfi_def_cfa_offset 8
 8661              		.cfi_offset 7, -8
 8662              		.cfi_offset 14, -4
 8663 0002 82B0     		sub	sp, sp, #8
 8664              		.cfi_def_cfa_offset 16
 8665 0004 00AF     		add	r7, sp, #0
 8666              		.cfi_def_cfa_register 7
 8667 0006 7860     		str	r0, [r7, #4]
2688:ad5940.c      ****    AD5940_WriteReg(REG_AGPIO_GP0CON,uiCfgSet);
 8668              		.loc 1 2688 0
 8669 0008 7968     		ldr	r1, [r7, #4]
 8670 000a 0020     		movs	r0, #0
 8671 000c FFF7FEFF 		bl	AD5940_WriteReg
2689:ad5940.c      **** }
 8672              		.loc 1 2689 0
 8673 0010 00BF     		nop
 8674 0012 0837     		adds	r7, r7, #8
 8675              		.cfi_def_cfa_offset 8
 8676 0014 BD46     		mov	sp, r7
 8677              		.cfi_def_cfa_register 13
 8678              		@ sp needed
 8679 0016 80BD     		pop	{r7, pc}
 8680              		.cfi_endproc
 8681              	.LFE93:
 8682              		.size	AD5940_AGPIOFuncCfg, .-AD5940_AGPIOFuncCfg
 8683              		.section	.text.AD5940_AGPIOOen,"ax",%progbits
 8684              		.align	2
 8685              		.global	AD5940_AGPIOOen
 8686              		.thumb
 8687              		.thumb_func
 8688              		.type	AD5940_AGPIOOen, %function
 8689              	AD5940_AGPIOOen:
 8690              	.LFB94:
2690:ad5940.c      **** 
2691:ad5940.c      **** /**
2692:ad5940.c      ****  * @brief Enable GPIO output mode on selected pins. Disable output on non-selected pins.
2693:ad5940.c      ****  * @param uiPinSet :Select from {AGPIO_Pin0|AGPIO_Pin1|AGPIO_Pin2|AGPIO_Pin3|AGPIO_Pin4|AGPIO_Pin5|
2694:ad5940.c      ****  * @return return none
2695:ad5940.c      **** **/
2696:ad5940.c      **** void AD5940_AGPIOOen(uint32_t uiPinSet)
2697:ad5940.c      **** {
 8691              		.loc 1 2697 0
 8692              		.cfi_startproc
 8693              		@ args = 0, pretend = 0, frame = 8
 8694              		@ frame_needed = 1, uses_anonymous_args = 0
 8695 0000 80B5     		push	{r7, lr}
 8696              		.cfi_def_cfa_offset 8
 8697              		.cfi_offset 7, -8
 8698              		.cfi_offset 14, -4
 8699 0002 82B0     		sub	sp, sp, #8
 8700              		.cfi_def_cfa_offset 16
 8701 0004 00AF     		add	r7, sp, #0
 8702              		.cfi_def_cfa_register 7
 8703 0006 7860     		str	r0, [r7, #4]
2698:ad5940.c      ****    AD5940_WriteReg(REG_AGPIO_GP0OEN,uiPinSet);
 8704              		.loc 1 2698 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 202


 8705 0008 7968     		ldr	r1, [r7, #4]
 8706 000a 0420     		movs	r0, #4
 8707 000c FFF7FEFF 		bl	AD5940_WriteReg
2699:ad5940.c      **** }
 8708              		.loc 1 2699 0
 8709 0010 00BF     		nop
 8710 0012 0837     		adds	r7, r7, #8
 8711              		.cfi_def_cfa_offset 8
 8712 0014 BD46     		mov	sp, r7
 8713              		.cfi_def_cfa_register 13
 8714              		@ sp needed
 8715 0016 80BD     		pop	{r7, pc}
 8716              		.cfi_endproc
 8717              	.LFE94:
 8718              		.size	AD5940_AGPIOOen, .-AD5940_AGPIOOen
 8719              		.section	.text.AD5940_AGPIOIen,"ax",%progbits
 8720              		.align	2
 8721              		.global	AD5940_AGPIOIen
 8722              		.thumb
 8723              		.thumb_func
 8724              		.type	AD5940_AGPIOIen, %function
 8725              	AD5940_AGPIOIen:
 8726              	.LFB95:
2700:ad5940.c      **** 
2701:ad5940.c      **** /**
2702:ad5940.c      ****  * @brief Enable input on selected pins while disable others.
2703:ad5940.c      ****  * @param uiPinSet: Select from {AGPIO_Pin0|AGPIO_Pin1|AGPIO_Pin2|AGPIO_Pin3|AGPIO_Pin4|AGPIO_Pin5|
2704:ad5940.c      ****  * @return return none
2705:ad5940.c      **** **/
2706:ad5940.c      **** void AD5940_AGPIOIen(uint32_t uiPinSet)
2707:ad5940.c      **** {
 8727              		.loc 1 2707 0
 8728              		.cfi_startproc
 8729              		@ args = 0, pretend = 0, frame = 8
 8730              		@ frame_needed = 1, uses_anonymous_args = 0
 8731 0000 80B5     		push	{r7, lr}
 8732              		.cfi_def_cfa_offset 8
 8733              		.cfi_offset 7, -8
 8734              		.cfi_offset 14, -4
 8735 0002 82B0     		sub	sp, sp, #8
 8736              		.cfi_def_cfa_offset 16
 8737 0004 00AF     		add	r7, sp, #0
 8738              		.cfi_def_cfa_register 7
 8739 0006 7860     		str	r0, [r7, #4]
2708:ad5940.c      ****    AD5940_WriteReg(REG_AGPIO_GP0IEN,uiPinSet);
 8740              		.loc 1 2708 0
 8741 0008 7968     		ldr	r1, [r7, #4]
 8742 000a 0C20     		movs	r0, #12
 8743 000c FFF7FEFF 		bl	AD5940_WriteReg
2709:ad5940.c      **** }
 8744              		.loc 1 2709 0
 8745 0010 00BF     		nop
 8746 0012 0837     		adds	r7, r7, #8
 8747              		.cfi_def_cfa_offset 8
 8748 0014 BD46     		mov	sp, r7
 8749              		.cfi_def_cfa_register 13
 8750              		@ sp needed
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 203


 8751 0016 80BD     		pop	{r7, pc}
 8752              		.cfi_endproc
 8753              	.LFE95:
 8754              		.size	AD5940_AGPIOIen, .-AD5940_AGPIOIen
 8755              		.section	.text.AD5940_AGPIOIn,"ax",%progbits
 8756              		.align	2
 8757              		.global	AD5940_AGPIOIn
 8758              		.thumb
 8759              		.thumb_func
 8760              		.type	AD5940_AGPIOIn, %function
 8761              	AD5940_AGPIOIn:
 8762              	.LFB96:
2710:ad5940.c      **** 
2711:ad5940.c      **** /**
2712:ad5940.c      ****  * @brief Read the GPIO status.
2713:ad5940.c      ****  * @return return GP0IN register which is the GPIO status.
2714:ad5940.c      **** **/
2715:ad5940.c      **** uint32_t AD5940_AGPIOIn(void)
2716:ad5940.c      **** {
 8763              		.loc 1 2716 0
 8764              		.cfi_startproc
 8765              		@ args = 0, pretend = 0, frame = 0
 8766              		@ frame_needed = 1, uses_anonymous_args = 0
 8767 0000 80B5     		push	{r7, lr}
 8768              		.cfi_def_cfa_offset 8
 8769              		.cfi_offset 7, -8
 8770              		.cfi_offset 14, -4
 8771 0002 00AF     		add	r7, sp, #0
 8772              		.cfi_def_cfa_register 7
2717:ad5940.c      ****   return AD5940_ReadReg(REG_AGPIO_GP0IN);
 8773              		.loc 1 2717 0
 8774 0004 1020     		movs	r0, #16
 8775 0006 FFF7FEFF 		bl	AD5940_ReadReg
 8776 000a 0346     		mov	r3, r0
2718:ad5940.c      **** }
 8777              		.loc 1 2718 0
 8778 000c 1846     		mov	r0, r3
 8779 000e 80BD     		pop	{r7, pc}
 8780              		.cfi_endproc
 8781              	.LFE96:
 8782              		.size	AD5940_AGPIOIn, .-AD5940_AGPIOIn
 8783              		.section	.text.AD5940_AGPIOPen,"ax",%progbits
 8784              		.align	2
 8785              		.global	AD5940_AGPIOPen
 8786              		.thumb
 8787              		.thumb_func
 8788              		.type	AD5940_AGPIOPen, %function
 8789              	AD5940_AGPIOPen:
 8790              	.LFB97:
2719:ad5940.c      **** 
2720:ad5940.c      **** /**
2721:ad5940.c      ****  * @brief Enable pull-up or down on selected pins while disable other pins.
2722:ad5940.c      ****  * @param uiPinSet: Select from: {AGPIO_Pin0|AGPIO_Pin1|AGPIO_Pin2|AGPIO_Pin3|AGPIO_Pin4|AGPIO_Pin5
2723:ad5940.c      ****  * @return return none
2724:ad5940.c      **** **/
2725:ad5940.c      **** void AD5940_AGPIOPen(uint32_t uiPinSet)
2726:ad5940.c      **** {
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 204


 8791              		.loc 1 2726 0
 8792              		.cfi_startproc
 8793              		@ args = 0, pretend = 0, frame = 8
 8794              		@ frame_needed = 1, uses_anonymous_args = 0
 8795 0000 80B5     		push	{r7, lr}
 8796              		.cfi_def_cfa_offset 8
 8797              		.cfi_offset 7, -8
 8798              		.cfi_offset 14, -4
 8799 0002 82B0     		sub	sp, sp, #8
 8800              		.cfi_def_cfa_offset 16
 8801 0004 00AF     		add	r7, sp, #0
 8802              		.cfi_def_cfa_register 7
 8803 0006 7860     		str	r0, [r7, #4]
2727:ad5940.c      ****    AD5940_WriteReg(REG_AGPIO_GP0PE,uiPinSet);
 8804              		.loc 1 2727 0
 8805 0008 7968     		ldr	r1, [r7, #4]
 8806 000a 0820     		movs	r0, #8
 8807 000c FFF7FEFF 		bl	AD5940_WriteReg
2728:ad5940.c      **** }
 8808              		.loc 1 2728 0
 8809 0010 00BF     		nop
 8810 0012 0837     		adds	r7, r7, #8
 8811              		.cfi_def_cfa_offset 8
 8812 0014 BD46     		mov	sp, r7
 8813              		.cfi_def_cfa_register 13
 8814              		@ sp needed
 8815 0016 80BD     		pop	{r7, pc}
 8816              		.cfi_endproc
 8817              	.LFE97:
 8818              		.size	AD5940_AGPIOPen, .-AD5940_AGPIOPen
 8819              		.section	.text.AD5940_AGPIOSet,"ax",%progbits
 8820              		.align	2
 8821              		.global	AD5940_AGPIOSet
 8822              		.thumb
 8823              		.thumb_func
 8824              		.type	AD5940_AGPIOSet, %function
 8825              	AD5940_AGPIOSet:
 8826              	.LFB98:
2729:ad5940.c      **** 
2730:ad5940.c      **** /**
2731:ad5940.c      ****  * @brief Put selected GPIOs to high level.
2732:ad5940.c      ****  * @param uiPinSet: Select from: {AGPIO_Pin0|AGPIO_Pin1|AGPIO_Pin2|AGPIO_Pin3|AGPIO_Pin4|AGPIO_Pin5
2733:ad5940.c      ****  * @return return none
2734:ad5940.c      **** **/
2735:ad5940.c      **** void AD5940_AGPIOSet(uint32_t uiPinSet)
2736:ad5940.c      **** {
 8827              		.loc 1 2736 0
 8828              		.cfi_startproc
 8829              		@ args = 0, pretend = 0, frame = 8
 8830              		@ frame_needed = 1, uses_anonymous_args = 0
 8831 0000 80B5     		push	{r7, lr}
 8832              		.cfi_def_cfa_offset 8
 8833              		.cfi_offset 7, -8
 8834              		.cfi_offset 14, -4
 8835 0002 82B0     		sub	sp, sp, #8
 8836              		.cfi_def_cfa_offset 16
 8837 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 205


 8838              		.cfi_def_cfa_register 7
 8839 0006 7860     		str	r0, [r7, #4]
2737:ad5940.c      ****    AD5940_WriteReg(REG_AGPIO_GP0SET,uiPinSet);
 8840              		.loc 1 2737 0
 8841 0008 7968     		ldr	r1, [r7, #4]
 8842 000a 1820     		movs	r0, #24
 8843 000c FFF7FEFF 		bl	AD5940_WriteReg
2738:ad5940.c      **** }
 8844              		.loc 1 2738 0
 8845 0010 00BF     		nop
 8846 0012 0837     		adds	r7, r7, #8
 8847              		.cfi_def_cfa_offset 8
 8848 0014 BD46     		mov	sp, r7
 8849              		.cfi_def_cfa_register 13
 8850              		@ sp needed
 8851 0016 80BD     		pop	{r7, pc}
 8852              		.cfi_endproc
 8853              	.LFE98:
 8854              		.size	AD5940_AGPIOSet, .-AD5940_AGPIOSet
 8855              		.section	.text.AD5940_AGPIOClr,"ax",%progbits
 8856              		.align	2
 8857              		.global	AD5940_AGPIOClr
 8858              		.thumb
 8859              		.thumb_func
 8860              		.type	AD5940_AGPIOClr, %function
 8861              	AD5940_AGPIOClr:
 8862              	.LFB99:
2739:ad5940.c      **** 
2740:ad5940.c      **** /**
2741:ad5940.c      ****  * @brief Put selected GPIOs to low level.
2742:ad5940.c      ****  * @param uiPinSet: Select from: {AGPIO_Pin0|AGPIO_Pin1|AGPIO_Pin2|AGPIO_Pin3|AGPIO_Pin4|AGPIO_Pin5
2743:ad5940.c      ****  * @return return none
2744:ad5940.c      **** **/
2745:ad5940.c      **** void AD5940_AGPIOClr(uint32_t uiPinSet)
2746:ad5940.c      **** {
 8863              		.loc 1 2746 0
 8864              		.cfi_startproc
 8865              		@ args = 0, pretend = 0, frame = 8
 8866              		@ frame_needed = 1, uses_anonymous_args = 0
 8867 0000 80B5     		push	{r7, lr}
 8868              		.cfi_def_cfa_offset 8
 8869              		.cfi_offset 7, -8
 8870              		.cfi_offset 14, -4
 8871 0002 82B0     		sub	sp, sp, #8
 8872              		.cfi_def_cfa_offset 16
 8873 0004 00AF     		add	r7, sp, #0
 8874              		.cfi_def_cfa_register 7
 8875 0006 7860     		str	r0, [r7, #4]
2747:ad5940.c      ****    AD5940_WriteReg(REG_AGPIO_GP0CLR,uiPinSet);
 8876              		.loc 1 2747 0
 8877 0008 7968     		ldr	r1, [r7, #4]
 8878 000a 1C20     		movs	r0, #28
 8879 000c FFF7FEFF 		bl	AD5940_WriteReg
2748:ad5940.c      **** }
 8880              		.loc 1 2748 0
 8881 0010 00BF     		nop
 8882 0012 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 206


 8883              		.cfi_def_cfa_offset 8
 8884 0014 BD46     		mov	sp, r7
 8885              		.cfi_def_cfa_register 13
 8886              		@ sp needed
 8887 0016 80BD     		pop	{r7, pc}
 8888              		.cfi_endproc
 8889              	.LFE99:
 8890              		.size	AD5940_AGPIOClr, .-AD5940_AGPIOClr
 8891              		.section	.text.AD5940_AGPIOToggle,"ax",%progbits
 8892              		.align	2
 8893              		.global	AD5940_AGPIOToggle
 8894              		.thumb
 8895              		.thumb_func
 8896              		.type	AD5940_AGPIOToggle, %function
 8897              	AD5940_AGPIOToggle:
 8898              	.LFB100:
2749:ad5940.c      **** 
2750:ad5940.c      **** /**
2751:ad5940.c      ****  * @brief Toggle selected GPIOs.
2752:ad5940.c      ****  * @param uiPinSet: Select from: {AGPIO_Pin0|AGPIO_Pin1|AGPIO_Pin2|AGPIO_Pin3|AGPIO_Pin4|AGPIO_Pin5
2753:ad5940.c      ****  * @return return none
2754:ad5940.c      **** **/
2755:ad5940.c      **** void AD5940_AGPIOToggle(uint32_t uiPinSet)
2756:ad5940.c      **** {
 8899              		.loc 1 2756 0
 8900              		.cfi_startproc
 8901              		@ args = 0, pretend = 0, frame = 8
 8902              		@ frame_needed = 1, uses_anonymous_args = 0
 8903 0000 80B5     		push	{r7, lr}
 8904              		.cfi_def_cfa_offset 8
 8905              		.cfi_offset 7, -8
 8906              		.cfi_offset 14, -4
 8907 0002 82B0     		sub	sp, sp, #8
 8908              		.cfi_def_cfa_offset 16
 8909 0004 00AF     		add	r7, sp, #0
 8910              		.cfi_def_cfa_register 7
 8911 0006 7860     		str	r0, [r7, #4]
2757:ad5940.c      ****    AD5940_WriteReg(REG_AGPIO_GP0TGL,uiPinSet);
 8912              		.loc 1 2757 0
 8913 0008 7968     		ldr	r1, [r7, #4]
 8914 000a 2020     		movs	r0, #32
 8915 000c FFF7FEFF 		bl	AD5940_WriteReg
2758:ad5940.c      **** }
 8916              		.loc 1 2758 0
 8917 0010 00BF     		nop
 8918 0012 0837     		adds	r7, r7, #8
 8919              		.cfi_def_cfa_offset 8
 8920 0014 BD46     		mov	sp, r7
 8921              		.cfi_def_cfa_register 13
 8922              		@ sp needed
 8923 0016 80BD     		pop	{r7, pc}
 8924              		.cfi_endproc
 8925              	.LFE100:
 8926              		.size	AD5940_AGPIOToggle, .-AD5940_AGPIOToggle
 8927              		.section	.text.AD5940_LPModeEnS,"ax",%progbits
 8928              		.align	2
 8929              		.global	AD5940_LPModeEnS
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 207


 8930              		.thumb
 8931              		.thumb_func
 8932              		.type	AD5940_LPModeEnS, %function
 8933              	AD5940_LPModeEnS:
 8934              	.LFB101:
2759:ad5940.c      **** 
2760:ad5940.c      **** /**
2761:ad5940.c      ****  * @} GPIO_Block_Functions
2762:ad5940.c      **** */
2763:ad5940.c      **** 
2764:ad5940.c      **** /**
2765:ad5940.c      ****  * @defgroup LPMode_Block_Functions
2766:ad5940.c      ****  * @{
2767:ad5940.c      **** */
2768:ad5940.c      **** /**
2769:ad5940.c      ****  * @brief Enter or leave LPMODE. 
2770:ad5940.c      ****  * @details Once enter this mode, some registers are collected together to a new register so we can
2771:ad5940.c      ****  *          Control most blocks with in one register. The so called LPMODE has nothing to do with A
2772:ad5940.c      ****  * @return return AD5940ERR_OK
2773:ad5940.c      **** **/
2774:ad5940.c      **** AD5940Err AD5940_LPModeEnS(BoolFlag LPModeEn)
2775:ad5940.c      **** {
 8935              		.loc 1 2775 0
 8936              		.cfi_startproc
 8937              		@ args = 0, pretend = 0, frame = 8
 8938              		@ frame_needed = 1, uses_anonymous_args = 0
 8939 0000 80B5     		push	{r7, lr}
 8940              		.cfi_def_cfa_offset 8
 8941              		.cfi_offset 7, -8
 8942              		.cfi_offset 14, -4
 8943 0002 82B0     		sub	sp, sp, #8
 8944              		.cfi_def_cfa_offset 16
 8945 0004 00AF     		add	r7, sp, #0
 8946              		.cfi_def_cfa_register 7
 8947 0006 0346     		mov	r3, r0
 8948 0008 FB71     		strb	r3, [r7, #7]
2776:ad5940.c      ****   if(LPModeEn == bTRUE)
 8949              		.loc 1 2776 0
 8950 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8951 000c 012B     		cmp	r3, #1
 8952 000e 05D1     		bne	.L468
2777:ad5940.c      ****     AD5940_WriteReg(REG_AFE_LPMODEKEY, KEY_LPMODEKEY);  /* Enter LP mode by right key. */
 8953              		.loc 1 2777 0
 8954 0010 0749     		ldr	r1, .L471
 8955 0012 42F20C10 		movw	r0, #8460
 8956 0016 FFF7FEFF 		bl	AD5940_WriteReg
 8957 001a 04E0     		b	.L469
 8958              	.L468:
2778:ad5940.c      ****   else
2779:ad5940.c      ****     AD5940_WriteReg(REG_AFE_LPMODEKEY, 0); /* Write wrong key to exit LP mode */
 8959              		.loc 1 2779 0
 8960 001c 0021     		movs	r1, #0
 8961 001e 42F20C10 		movw	r0, #8460
 8962 0022 FFF7FEFF 		bl	AD5940_WriteReg
 8963              	.L469:
2780:ad5940.c      ****   return AD5940ERR_OK;
 8964              		.loc 1 2780 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 208


 8965 0026 0023     		movs	r3, #0
2781:ad5940.c      **** }
 8966              		.loc 1 2781 0
 8967 0028 1846     		mov	r0, r3
 8968 002a 0837     		adds	r7, r7, #8
 8969              		.cfi_def_cfa_offset 8
 8970 002c BD46     		mov	sp, r7
 8971              		.cfi_def_cfa_register 13
 8972              		@ sp needed
 8973 002e 80BD     		pop	{r7, pc}
 8974              	.L472:
 8975              		.align	2
 8976              	.L471:
 8977 0030 D6590C00 		.word	809430
 8978              		.cfi_endproc
 8979              	.LFE101:
 8980              		.size	AD5940_LPModeEnS, .-AD5940_LPModeEnS
 8981              		.section	.text.AD5940_LPModeClkS,"ax",%progbits
 8982              		.align	2
 8983              		.global	AD5940_LPModeClkS
 8984              		.thumb
 8985              		.thumb_func
 8986              		.type	AD5940_LPModeClkS, %function
 8987              	AD5940_LPModeClkS:
 8988              	.LFB102:
2782:ad5940.c      **** 
2783:ad5940.c      **** /**
2784:ad5940.c      ****  * @brief Select system clock source for LPMODE. 
2785:ad5940.c      ****  * @note Only in LP Mode, this operation takes effect. Enter LPMODE by function @ref AD5940_LPModeE
2786:ad5940.c      ****  * @param LPModeClk: Select from @ref LPMODECLK_Const
2787:ad5940.c      ****  *       - LPMODECLK_LFOSC: Select LFOSC 32kHz for system clock
2788:ad5940.c      ****  *       - LPMODECLK_HFOSC: Select HFOSC 16MHz/32MHz for system clock
2789:ad5940.c      ****  * @return none.
2790:ad5940.c      **** */
2791:ad5940.c      **** void AD5940_LPModeClkS(uint32_t LPModeClk)
2792:ad5940.c      **** {
 8989              		.loc 1 2792 0
 8990              		.cfi_startproc
 8991              		@ args = 0, pretend = 0, frame = 8
 8992              		@ frame_needed = 1, uses_anonymous_args = 0
 8993 0000 80B5     		push	{r7, lr}
 8994              		.cfi_def_cfa_offset 8
 8995              		.cfi_offset 7, -8
 8996              		.cfi_offset 14, -4
 8997 0002 82B0     		sub	sp, sp, #8
 8998              		.cfi_def_cfa_offset 16
 8999 0004 00AF     		add	r7, sp, #0
 9000              		.cfi_def_cfa_register 7
 9001 0006 7860     		str	r0, [r7, #4]
2793:ad5940.c      ****   AD5940_WriteReg(REG_AFE_LPMODECLKSEL, LPModeClk);
 9002              		.loc 1 2793 0
 9003 0008 7968     		ldr	r1, [r7, #4]
 9004 000a 42F21010 		movw	r0, #8464
 9005 000e FFF7FEFF 		bl	AD5940_WriteReg
2794:ad5940.c      **** }
 9006              		.loc 1 2794 0
 9007 0012 00BF     		nop
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 209


 9008 0014 0837     		adds	r7, r7, #8
 9009              		.cfi_def_cfa_offset 8
 9010 0016 BD46     		mov	sp, r7
 9011              		.cfi_def_cfa_register 13
 9012              		@ sp needed
 9013 0018 80BD     		pop	{r7, pc}
 9014              		.cfi_endproc
 9015              	.LFE102:
 9016              		.size	AD5940_LPModeClkS, .-AD5940_LPModeClkS
 9017 001a 00BF     		.section	.text.AD5940_SleepKeyCtrlS,"ax",%progbits
 9018              		.align	2
 9019              		.global	AD5940_SleepKeyCtrlS
 9020              		.thumb
 9021              		.thumb_func
 9022              		.type	AD5940_SleepKeyCtrlS, %function
 9023              	AD5940_SleepKeyCtrlS:
 9024              	.LFB103:
2795:ad5940.c      **** 
2796:ad5940.c      **** /**
2797:ad5940.c      ****  * @} LPMode_Block_Functions
2798:ad5940.c      **** */
2799:ad5940.c      **** 
2800:ad5940.c      **** /**
2801:ad5940.c      ****  * @brief Enter sleep mode key to unlock it or enter incorrect key to lock it. \
2802:ad5940.c      ****  *        Once key is unlocked, it will always be effect until manually lock it
2803:ad5940.c      ****  * @param SlpKey : {SLPKEY_UNLOCK, SLPKEY_LOCK}
2804:ad5940.c      ****           - SLPKEY_UNLOCK Unlock Key so we can enter sleep(or called hibernate) mode.
2805:ad5940.c      ****           - SLPKEY_LOCK Lock key so AD5940 is prohibited to enter sleep mode.
2806:ad5940.c      ****    @return return none.
2807:ad5940.c      **** */
2808:ad5940.c      **** void AD5940_SleepKeyCtrlS(uint32_t SlpKey)
2809:ad5940.c      **** {
 9025              		.loc 1 2809 0
 9026              		.cfi_startproc
 9027              		@ args = 0, pretend = 0, frame = 8
 9028              		@ frame_needed = 1, uses_anonymous_args = 0
 9029 0000 80B5     		push	{r7, lr}
 9030              		.cfi_def_cfa_offset 8
 9031              		.cfi_offset 7, -8
 9032              		.cfi_offset 14, -4
 9033 0002 82B0     		sub	sp, sp, #8
 9034              		.cfi_def_cfa_offset 16
 9035 0004 00AF     		add	r7, sp, #0
 9036              		.cfi_def_cfa_register 7
 9037 0006 7860     		str	r0, [r7, #4]
2810:ad5940.c      ****   AD5940_WriteReg(REG_AFE_SEQSLPLOCK, SlpKey);
 9038              		.loc 1 2810 0
 9039 0008 7968     		ldr	r1, [r7, #4]
 9040 000a 42F21810 		movw	r0, #8472
 9041 000e FFF7FEFF 		bl	AD5940_WriteReg
2811:ad5940.c      **** }
 9042              		.loc 1 2811 0
 9043 0012 00BF     		nop
 9044 0014 0837     		adds	r7, r7, #8
 9045              		.cfi_def_cfa_offset 8
 9046 0016 BD46     		mov	sp, r7
 9047              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 210


 9048              		@ sp needed
 9049 0018 80BD     		pop	{r7, pc}
 9050              		.cfi_endproc
 9051              	.LFE103:
 9052              		.size	AD5940_SleepKeyCtrlS, .-AD5940_SleepKeyCtrlS
 9053 001a 00BF     		.section	.text.AD5940_EnterSleepS,"ax",%progbits
 9054              		.align	2
 9055              		.global	AD5940_EnterSleepS
 9056              		.thumb
 9057              		.thumb_func
 9058              		.type	AD5940_EnterSleepS, %function
 9059              	AD5940_EnterSleepS:
 9060              	.LFB104:
2812:ad5940.c      **** 
2813:ad5940.c      **** /**
2814:ad5940.c      ****  * @brief Put AFE to hibernate. 
2815:ad5940.c      ****  * @details This will only take effect when SLP_KEY has been unlocked. Use function @ref AD5940_Sle
2816:ad5940.c      ****  * @return return none.
2817:ad5940.c      **** */
2818:ad5940.c      **** void AD5940_EnterSleepS(void)
2819:ad5940.c      **** {
 9061              		.loc 1 2819 0
 9062              		.cfi_startproc
 9063              		@ args = 0, pretend = 0, frame = 0
 9064              		@ frame_needed = 1, uses_anonymous_args = 0
 9065 0000 80B5     		push	{r7, lr}
 9066              		.cfi_def_cfa_offset 8
 9067              		.cfi_offset 7, -8
 9068              		.cfi_offset 14, -4
 9069 0002 00AF     		add	r7, sp, #0
 9070              		.cfi_def_cfa_register 7
2820:ad5940.c      ****   AD5940_WriteReg(REG_AFE_SEQTRGSLP, 0);
 9071              		.loc 1 2820 0
 9072 0004 0021     		movs	r1, #0
 9073 0006 42F21C10 		movw	r0, #8476
 9074 000a FFF7FEFF 		bl	AD5940_WriteReg
2821:ad5940.c      ****   AD5940_WriteReg(REG_AFE_SEQTRGSLP, 1);
 9075              		.loc 1 2821 0
 9076 000e 0121     		movs	r1, #1
 9077 0010 42F21C10 		movw	r0, #8476
 9078 0014 FFF7FEFF 		bl	AD5940_WriteReg
2822:ad5940.c      **** }
 9079              		.loc 1 2822 0
 9080 0018 00BF     		nop
 9081 001a 80BD     		pop	{r7, pc}
 9082              		.cfi_endproc
 9083              	.LFE104:
 9084              		.size	AD5940_EnterSleepS, .-AD5940_EnterSleepS
 9085              		.section	.text.AD5940_ShutDownS,"ax",%progbits
 9086              		.align	2
 9087              		.global	AD5940_ShutDownS
 9088              		.thumb
 9089              		.thumb_func
 9090              		.type	AD5940_ShutDownS, %function
 9091              	AD5940_ShutDownS:
 9092              	.LFB105:
2823:ad5940.c      **** 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 211


2824:ad5940.c      **** /**
2825:ad5940.c      ****  * @brief Turn off LP-Loop and put AFE to hibernate mode;
2826:ad5940.c      ****  * @details By function @ref AD5940_EnterSleepS, we can put most blocks to hibernate mode except LP
2827:ad5940.c      ****  *          This function will shut down LP block and then enter sleep mode.
2828:ad5940.c      ****  * @return return none.
2829:ad5940.c      **** */
2830:ad5940.c      **** void AD5940_ShutDownS(void)
2831:ad5940.c      **** {
 9093              		.loc 1 2831 0
 9094              		.cfi_startproc
 9095              		@ args = 0, pretend = 0, frame = 80
 9096              		@ frame_needed = 1, uses_anonymous_args = 0
 9097 0000 80B5     		push	{r7, lr}
 9098              		.cfi_def_cfa_offset 8
 9099              		.cfi_offset 7, -8
 9100              		.cfi_offset 14, -4
 9101 0002 94B0     		sub	sp, sp, #80
 9102              		.cfi_def_cfa_offset 88
 9103 0004 00AF     		add	r7, sp, #0
 9104              		.cfi_def_cfa_register 7
2832:ad5940.c      ****   /* Turn off LPloop related blocks which are not controlled automatically by hibernate operation *
2833:ad5940.c      ****   AFERefCfg_Type aferef_cfg;
2834:ad5940.c      ****   LPLoopCfg_Type lp_loop;
2835:ad5940.c      ****   /* Turn off LP-loop manually because it's not affected by sleep/hibernate mode */
2836:ad5940.c      ****   AD5940_StructInit(&aferef_cfg, sizeof(aferef_cfg));
 9105              		.loc 1 2836 0
 9106 0006 07F14003 		add	r3, r7, #64
 9107 000a 0D21     		movs	r1, #13
 9108 000c 1846     		mov	r0, r3
 9109 000e FFF7FEFF 		bl	AD5940_StructInit
2837:ad5940.c      ****   AD5940_StructInit(&lp_loop, sizeof(lp_loop));
 9110              		.loc 1 2837 0
 9111 0012 3B1D     		adds	r3, r7, #4
 9112 0014 3C21     		movs	r1, #60
 9113 0016 1846     		mov	r0, r3
 9114 0018 FFF7FEFF 		bl	AD5940_StructInit
2838:ad5940.c      ****   AD5940_REFCfgS(&aferef_cfg);
 9115              		.loc 1 2838 0
 9116 001c 07F14003 		add	r3, r7, #64
 9117 0020 1846     		mov	r0, r3
 9118 0022 FFF7FEFF 		bl	AD5940_REFCfgS
2839:ad5940.c      ****   AD5940_LPLoopCfgS(&lp_loop);
 9119              		.loc 1 2839 0
 9120 0026 3B1D     		adds	r3, r7, #4
 9121 0028 1846     		mov	r0, r3
 9122 002a FFF7FEFF 		bl	AD5940_LPLoopCfgS
2840:ad5940.c      ****   AD5940_SleepKeyCtrlS(SLPKEY_UNLOCK);  /* Unlock the key */
 9123              		.loc 1 2840 0
 9124 002e 0448     		ldr	r0, .L477
 9125 0030 FFF7FEFF 		bl	AD5940_SleepKeyCtrlS
2841:ad5940.c      ****   AD5940_EnterSleepS();  /* Enter Hibernate */
 9126              		.loc 1 2841 0
 9127 0034 FFF7FEFF 		bl	AD5940_EnterSleepS
2842:ad5940.c      **** }
 9128              		.loc 1 2842 0
 9129 0038 00BF     		nop
 9130 003a 5037     		adds	r7, r7, #80
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 212


 9131              		.cfi_def_cfa_offset 8
 9132 003c BD46     		mov	sp, r7
 9133              		.cfi_def_cfa_register 13
 9134              		@ sp needed
 9135 003e 80BD     		pop	{r7, pc}
 9136              	.L478:
 9137              		.align	2
 9138              	.L477:
 9139 0040 E5470A00 		.word	673765
 9140              		.cfi_endproc
 9141              	.LFE105:
 9142              		.size	AD5940_ShutDownS, .-AD5940_ShutDownS
 9143              		.section	.text.AD5940_WakeUp,"ax",%progbits
 9144              		.align	2
 9145              		.global	AD5940_WakeUp
 9146              		.thumb
 9147              		.thumb_func
 9148              		.type	AD5940_WakeUp, %function
 9149              	AD5940_WakeUp:
 9150              	.LFB106:
2843:ad5940.c      **** 
2844:ad5940.c      **** /**
2845:ad5940.c      ****  * @brief Try to wakeup AD5940 by read register.
2846:ad5940.c      ****  * @details Any SPI operation can wakeup AD5940. AD5940_Initialize must be called to enable this fu
2847:ad5940.c      ****  * @param TryCount Specify how many times we will read register. Zero or negative number means alwa
2848:ad5940.c      ****  * @return How many times register is read. If returned value is bigger than TryCount, it means wak
2849:ad5940.c      **** */
2850:ad5940.c      **** uint32_t  AD5940_WakeUp(int32_t TryCount)
2851:ad5940.c      **** {
 9151              		.loc 1 2851 0
 9152              		.cfi_startproc
 9153              		@ args = 0, pretend = 0, frame = 16
 9154              		@ frame_needed = 1, uses_anonymous_args = 0
 9155 0000 80B5     		push	{r7, lr}
 9156              		.cfi_def_cfa_offset 8
 9157              		.cfi_offset 7, -8
 9158              		.cfi_offset 14, -4
 9159 0002 84B0     		sub	sp, sp, #16
 9160              		.cfi_def_cfa_offset 24
 9161 0004 00AF     		add	r7, sp, #0
 9162              		.cfi_def_cfa_register 7
 9163 0006 7860     		str	r0, [r7, #4]
2852:ad5940.c      ****   uint32_t count = 0;
 9164              		.loc 1 2852 0
 9165 0008 0023     		movs	r3, #0
 9166 000a FB60     		str	r3, [r7, #12]
 9167              	.L484:
2853:ad5940.c      ****   while(1)
2854:ad5940.c      ****   {
2855:ad5940.c      ****     count++;
 9168              		.loc 1 2855 0
 9169 000c FB68     		ldr	r3, [r7, #12]
 9170 000e 0133     		adds	r3, r3, #1
 9171 0010 FB60     		str	r3, [r7, #12]
2856:ad5940.c      ****     if(AD5940_ReadReg(REG_AFECON_ADIID) == AD5940_ADIID)
 9172              		.loc 1 2856 0
 9173 0012 4FF48060 		mov	r0, #1024
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 213


 9174 0016 FFF7FEFF 		bl	AD5940_ReadReg
 9175 001a 0246     		mov	r2, r0
 9176 001c 44F24413 		movw	r3, #16708
 9177 0020 9A42     		cmp	r2, r3
 9178 0022 09D0     		beq	.L486
2857:ad5940.c      ****       break;    /* Succeed */
2858:ad5940.c      ****     if(TryCount<=0) 
 9179              		.loc 1 2858 0
 9180 0024 7B68     		ldr	r3, [r7, #4]
 9181 0026 002B     		cmp	r3, #0
 9182 0028 04DD     		ble	.L487
2859:ad5940.c      ****       continue; /* Always try to wakeup AFE */
2860:ad5940.c      **** 
2861:ad5940.c      ****     if(count > TryCount)
 9183              		.loc 1 2861 0
 9184 002a 7B68     		ldr	r3, [r7, #4]
 9185 002c FA68     		ldr	r2, [r7, #12]
 9186 002e 9A42     		cmp	r2, r3
 9187 0030 04D8     		bhi	.L488
 9188 0032 EBE7     		b	.L484
 9189              	.L487:
2859:ad5940.c      ****       continue; /* Always try to wakeup AFE */
 9190              		.loc 1 2859 0
 9191 0034 00BF     		nop
2862:ad5940.c      ****       break;    /* Failed */
2863:ad5940.c      ****   }
 9192              		.loc 1 2863 0
 9193 0036 E9E7     		b	.L484
 9194              	.L486:
2857:ad5940.c      ****     if(TryCount<=0) 
 9195              		.loc 1 2857 0
 9196 0038 00BF     		nop
 9197 003a 00E0     		b	.L481
 9198              	.L488:
2862:ad5940.c      ****       break;    /* Failed */
 9199              		.loc 1 2862 0
 9200 003c 00BF     		nop
 9201              	.L481:
2864:ad5940.c      ****   return count;
 9202              		.loc 1 2864 0
 9203 003e FB68     		ldr	r3, [r7, #12]
2865:ad5940.c      **** }
 9204              		.loc 1 2865 0
 9205 0040 1846     		mov	r0, r3
 9206 0042 1037     		adds	r7, r7, #16
 9207              		.cfi_def_cfa_offset 8
 9208 0044 BD46     		mov	sp, r7
 9209              		.cfi_def_cfa_register 13
 9210              		@ sp needed
 9211 0046 80BD     		pop	{r7, pc}
 9212              		.cfi_endproc
 9213              	.LFE106:
 9214              		.size	AD5940_WakeUp, .-AD5940_WakeUp
 9215              		.section	.text.AD5940_GetADIID,"ax",%progbits
 9216              		.align	2
 9217              		.global	AD5940_GetADIID
 9218              		.thumb
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 214


 9219              		.thumb_func
 9220              		.type	AD5940_GetADIID, %function
 9221              	AD5940_GetADIID:
 9222              	.LFB107:
2866:ad5940.c      **** 
2867:ad5940.c      **** /**
2868:ad5940.c      ****  * @brief Read ADIID register, the value for current version is @ref AD5940_ADIID
2869:ad5940.c      ****  * @return return none.
2870:ad5940.c      **** */
2871:ad5940.c      **** uint32_t AD5940_GetADIID(void)
2872:ad5940.c      **** {
 9223              		.loc 1 2872 0
 9224              		.cfi_startproc
 9225              		@ args = 0, pretend = 0, frame = 0
 9226              		@ frame_needed = 1, uses_anonymous_args = 0
 9227 0000 80B5     		push	{r7, lr}
 9228              		.cfi_def_cfa_offset 8
 9229              		.cfi_offset 7, -8
 9230              		.cfi_offset 14, -4
 9231 0002 00AF     		add	r7, sp, #0
 9232              		.cfi_def_cfa_register 7
2873:ad5940.c      ****   return AD5940_ReadReg(REG_AFECON_ADIID);
 9233              		.loc 1 2873 0
 9234 0004 4FF48060 		mov	r0, #1024
 9235 0008 FFF7FEFF 		bl	AD5940_ReadReg
 9236 000c 0346     		mov	r3, r0
2874:ad5940.c      **** }
 9237              		.loc 1 2874 0
 9238 000e 1846     		mov	r0, r3
 9239 0010 80BD     		pop	{r7, pc}
 9240              		.cfi_endproc
 9241              	.LFE107:
 9242              		.size	AD5940_GetADIID, .-AD5940_GetADIID
 9243 0012 00BF     		.section	.text.AD5940_GetChipID,"ax",%progbits
 9244              		.align	2
 9245              		.global	AD5940_GetChipID
 9246              		.thumb
 9247              		.thumb_func
 9248              		.type	AD5940_GetChipID, %function
 9249              	AD5940_GetChipID:
 9250              	.LFB108:
2875:ad5940.c      **** 
2876:ad5940.c      **** /**
2877:ad5940.c      ****  * @brief Read CHIPID register, the value for current version is 0x5501.
2878:ad5940.c      ****  * @return return none.
2879:ad5940.c      **** */
2880:ad5940.c      **** uint32_t AD5940_GetChipID(void)
2881:ad5940.c      **** {
 9251              		.loc 1 2881 0
 9252              		.cfi_startproc
 9253              		@ args = 0, pretend = 0, frame = 0
 9254              		@ frame_needed = 1, uses_anonymous_args = 0
 9255 0000 80B5     		push	{r7, lr}
 9256              		.cfi_def_cfa_offset 8
 9257              		.cfi_offset 7, -8
 9258              		.cfi_offset 14, -4
 9259 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 215


 9260              		.cfi_def_cfa_register 7
2882:ad5940.c      ****   return AD5940_ReadReg(REG_AFECON_CHIPID);
 9261              		.loc 1 2882 0
 9262 0004 40F20440 		movw	r0, #1028
 9263 0008 FFF7FEFF 		bl	AD5940_ReadReg
 9264 000c 0346     		mov	r3, r0
2883:ad5940.c      **** }
 9265              		.loc 1 2883 0
 9266 000e 1846     		mov	r0, r3
 9267 0010 80BD     		pop	{r7, pc}
 9268              		.cfi_endproc
 9269              	.LFE108:
 9270              		.size	AD5940_GetChipID, .-AD5940_GetChipID
 9271 0012 00BF     		.section	.text.AD5940_SoftRst,"ax",%progbits
 9272              		.align	2
 9273              		.global	AD5940_SoftRst
 9274              		.thumb
 9275              		.thumb_func
 9276              		.type	AD5940_SoftRst, %function
 9277              	AD5940_SoftRst:
 9278              	.LFB109:
2884:ad5940.c      **** /**
2885:ad5940.c      ****  * @brief Reset AD5940 by register.
2886:ad5940.c      ****  * @note AD5940 must be in active state so we can access registers.
2887:ad5940.c      ****  *       If AD5940 system clock is too low, we consider to use hardware reset, or 
2888:ad5940.c      ****  *       we need to make sure register write is successfully.
2889:ad5940.c      ****  * @return return none.
2890:ad5940.c      **** */
2891:ad5940.c      **** AD5940Err  AD5940_SoftRst(void)
2892:ad5940.c      **** {
 9279              		.loc 1 2892 0
 9280              		.cfi_startproc
 9281              		@ args = 0, pretend = 0, frame = 0
 9282              		@ frame_needed = 1, uses_anonymous_args = 0
 9283 0000 80B5     		push	{r7, lr}
 9284              		.cfi_def_cfa_offset 8
 9285              		.cfi_offset 7, -8
 9286              		.cfi_offset 14, -4
 9287 0002 00AF     		add	r7, sp, #0
 9288              		.cfi_def_cfa_register 7
2893:ad5940.c      ****   AD5940_WriteReg(REG_AFECON_SWRSTCON, AD5940_SWRST);
 9289              		.loc 1 2893 0
 9290 0004 4AF25811 		movw	r1, #41304
 9291 0008 40F22440 		movw	r0, #1060
 9292 000c FFF7FEFF 		bl	AD5940_WriteReg
2894:ad5940.c      ****   AD5940_Delay10us(20); /* AD5940 need some time to exit reset status. 200us looks good. */
 9293              		.loc 1 2894 0
 9294 0010 1420     		movs	r0, #20
 9295 0012 FFF7FEFF 		bl	AD5940_Delay10us
2895:ad5940.c      ****   /* We can check RSTSTA register to make sure software reset happened. */
2896:ad5940.c      ****   return AD5940ERR_OK;
 9296              		.loc 1 2896 0
 9297 0016 0023     		movs	r3, #0
2897:ad5940.c      **** }
 9298              		.loc 1 2897 0
 9299 0018 1846     		mov	r0, r3
 9300 001a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 216


 9301              		.cfi_endproc
 9302              	.LFE109:
 9303              		.size	AD5940_SoftRst, .-AD5940_SoftRst
 9304              		.section	.text.AD5940_HWReset,"ax",%progbits
 9305              		.align	2
 9306              		.global	AD5940_HWReset
 9307              		.thumb
 9308              		.thumb_func
 9309              		.type	AD5940_HWReset, %function
 9310              	AD5940_HWReset:
 9311              	.LFB110:
2898:ad5940.c      **** 
2899:ad5940.c      **** /**
2900:ad5940.c      ****  * @brief Reset AD5940 with RESET pin.
2901:ad5940.c      ****  * @note This will call function AD5940_RstClr which locates in file XXXPort.C
2902:ad5940.c      ****  * @return return none.
2903:ad5940.c      **** */
2904:ad5940.c      **** void AD5940_HWReset(void)
2905:ad5940.c      **** {
 9312              		.loc 1 2905 0
 9313              		.cfi_startproc
 9314              		@ args = 0, pretend = 0, frame = 0
 9315              		@ frame_needed = 1, uses_anonymous_args = 0
 9316 0000 80B5     		push	{r7, lr}
 9317              		.cfi_def_cfa_offset 8
 9318              		.cfi_offset 7, -8
 9319              		.cfi_offset 14, -4
 9320 0002 00AF     		add	r7, sp, #0
 9321              		.cfi_def_cfa_register 7
2906:ad5940.c      **** #ifndef CHIPSEL_M355
2907:ad5940.c      ****   AD5940_RstClr();
 9322              		.loc 1 2907 0
 9323 0004 FFF7FEFF 		bl	AD5940_RstClr
2908:ad5940.c      ****   AD5940_Delay10us(200); /* Delay some time */
 9324              		.loc 1 2908 0
 9325 0008 C820     		movs	r0, #200
 9326 000a FFF7FEFF 		bl	AD5940_Delay10us
2909:ad5940.c      ****   AD5940_RstSet();
 9327              		.loc 1 2909 0
 9328 000e FFF7FEFF 		bl	AD5940_RstSet
2910:ad5940.c      ****   AD5940_Delay10us(500); /* AD5940 need some time to exit reset status. 200us looks good. */
 9329              		.loc 1 2910 0
 9330 0012 4FF4FA70 		mov	r0, #500
 9331 0016 FFF7FEFF 		bl	AD5940_Delay10us
2911:ad5940.c      **** #else
2912:ad5940.c      ****   //There is no method to reset AFE only for M355.
2913:ad5940.c      **** #endif
2914:ad5940.c      **** }
 9332              		.loc 1 2914 0
 9333 001a 00BF     		nop
 9334 001c 80BD     		pop	{r7, pc}
 9335              		.cfi_endproc
 9336              	.LFE110:
 9337              		.size	AD5940_HWReset, .-AD5940_HWReset
 9338 001e 00BF     		.section	.text.__AD5940_ReferenceON,"ax",%progbits
 9339              		.align	2
 9340              		.thumb
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 217


 9341              		.thumb_func
 9342              		.type	__AD5940_ReferenceON, %function
 9343              	__AD5940_ReferenceON:
 9344              	.LFB111:
2915:ad5940.c      **** 
2916:ad5940.c      **** /**
2917:ad5940.c      ****  * @} MISC_Block_Functions
2918:ad5940.c      ****  * @} MISC_Block
2919:ad5940.c      **** */
2920:ad5940.c      **** 
2921:ad5940.c      **** /**
2922:ad5940.c      ****  * @defgroup Calibration_Block
2923:ad5940.c      ****  * @brief The non-factory calibration routines.
2924:ad5940.c      ****  * @{
2925:ad5940.c      ****  *    @defgroup Calibration_Functions
2926:ad5940.c      ****  *    @{
2927:ad5940.c      ****  *  
2928:ad5940.c      ****  * 
2929:ad5940.c      ****  */
2930:ad5940.c      **** /**
2931:ad5940.c      ****  * @brief Turn on High power 1.8V/1.1V reference and 2.5V LP reference.
2932:ad5940.c      ****  * @return return none.
2933:ad5940.c      **** */
2934:ad5940.c      **** static void __AD5940_ReferenceON(void)
2935:ad5940.c      **** {
 9345              		.loc 1 2935 0
 9346              		.cfi_startproc
 9347              		@ args = 0, pretend = 0, frame = 16
 9348              		@ frame_needed = 1, uses_anonymous_args = 0
 9349 0000 80B5     		push	{r7, lr}
 9350              		.cfi_def_cfa_offset 8
 9351              		.cfi_offset 7, -8
 9352              		.cfi_offset 14, -4
 9353 0002 84B0     		sub	sp, sp, #16
 9354              		.cfi_def_cfa_offset 24
 9355 0004 00AF     		add	r7, sp, #0
 9356              		.cfi_def_cfa_register 7
2936:ad5940.c      ****   AFERefCfg_Type ref_cfg;
2937:ad5940.c      ****   /* Turn ON ADC/DAC and LPDAC reference */
2938:ad5940.c      ****   ref_cfg.Hp1V1BuffEn = bTRUE;
 9357              		.loc 1 2938 0
 9358 0006 0123     		movs	r3, #1
 9359 0008 BB70     		strb	r3, [r7, #2]
2939:ad5940.c      ****   ref_cfg.Hp1V8BuffEn = bTRUE;
 9360              		.loc 1 2939 0
 9361 000a 0123     		movs	r3, #1
 9362 000c 7B70     		strb	r3, [r7, #1]
2940:ad5940.c      ****   ref_cfg.HpBandgapEn = bTRUE;
 9363              		.loc 1 2940 0
 9364 000e 0123     		movs	r3, #1
 9365 0010 3B70     		strb	r3, [r7]
2941:ad5940.c      ****   ref_cfg.HSDACRefEn = bTRUE;
 9366              		.loc 1 2941 0
 9367 0012 0123     		movs	r3, #1
 9368 0014 3B72     		strb	r3, [r7, #8]
2942:ad5940.c      ****   ref_cfg.LpBandgapEn = bTRUE;
 9369              		.loc 1 2942 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 218


 9370 0016 0123     		movs	r3, #1
 9371 0018 7B71     		strb	r3, [r7, #5]
2943:ad5940.c      ****   ref_cfg.LpRefBufEn = bTRUE;
 9372              		.loc 1 2943 0
 9373 001a 0123     		movs	r3, #1
 9374 001c BB71     		strb	r3, [r7, #6]
2944:ad5940.c      **** 
2945:ad5940.c      ****   ref_cfg.Disc1V1Cap = bFALSE;
 9375              		.loc 1 2945 0
 9376 001e 0023     		movs	r3, #0
 9377 0020 3B73     		strb	r3, [r7, #12]
2946:ad5940.c      ****   ref_cfg.Disc1V8Cap = bFALSE;
 9378              		.loc 1 2946 0
 9379 0022 0023     		movs	r3, #0
 9380 0024 FB72     		strb	r3, [r7, #11]
2947:ad5940.c      ****   ref_cfg.Hp1V8Ilimit = bFALSE;
 9381              		.loc 1 2947 0
 9382 0026 0023     		movs	r3, #0
 9383 0028 BB72     		strb	r3, [r7, #10]
2948:ad5940.c      ****   ref_cfg.Hp1V8ThemBuff = bFALSE;
 9384              		.loc 1 2948 0
 9385 002a 0023     		movs	r3, #0
 9386 002c 7B72     		strb	r3, [r7, #9]
2949:ad5940.c      ****   ref_cfg.Lp1V1BuffEn = bFALSE;
 9387              		.loc 1 2949 0
 9388 002e 0023     		movs	r3, #0
 9389 0030 3B71     		strb	r3, [r7, #4]
2950:ad5940.c      ****   ref_cfg.Lp1V8BuffEn = bFALSE;
 9390              		.loc 1 2950 0
 9391 0032 0023     		movs	r3, #0
 9392 0034 FB70     		strb	r3, [r7, #3]
2951:ad5940.c      ****   ref_cfg.LpRefBoostEn = bFALSE;
 9393              		.loc 1 2951 0
 9394 0036 0023     		movs	r3, #0
 9395 0038 FB71     		strb	r3, [r7, #7]
2952:ad5940.c      ****   AD5940_REFCfgS(&ref_cfg);
 9396              		.loc 1 2952 0
 9397 003a 3B46     		mov	r3, r7
 9398 003c 1846     		mov	r0, r3
 9399 003e FFF7FEFF 		bl	AD5940_REFCfgS
2953:ad5940.c      **** }
 9400              		.loc 1 2953 0
 9401 0042 00BF     		nop
 9402 0044 1037     		adds	r7, r7, #16
 9403              		.cfi_def_cfa_offset 8
 9404 0046 BD46     		mov	sp, r7
 9405              		.cfi_def_cfa_register 13
 9406              		@ sp needed
 9407 0048 80BD     		pop	{r7, pc}
 9408              		.cfi_endproc
 9409              	.LFE111:
 9410              		.size	__AD5940_ReferenceON, .-__AD5940_ReferenceON
 9411 004a 00BF     		.section	.text.__AD5940_TakeMeasurement,"ax",%progbits
 9412              		.align	2
 9413              		.thumb
 9414              		.thumb_func
 9415              		.type	__AD5940_TakeMeasurement, %function
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 219


 9416              	__AD5940_TakeMeasurement:
 9417              	.LFB112:
2954:ad5940.c      **** 
2955:ad5940.c      **** /**
2956:ad5940.c      ****  * @brief Turn on ADC to sample one SINC2 data.
2957:ad5940.c      ****  * @return return ADCCode.
2958:ad5940.c      **** */
2959:ad5940.c      **** static uint32_t __AD5940_TakeMeasurement(int32_t *time_out)
2960:ad5940.c      **** {
 9418              		.loc 1 2960 0
 9419              		.cfi_startproc
 9420              		@ args = 0, pretend = 0, frame = 16
 9421              		@ frame_needed = 1, uses_anonymous_args = 0
 9422 0000 80B5     		push	{r7, lr}
 9423              		.cfi_def_cfa_offset 8
 9424              		.cfi_offset 7, -8
 9425              		.cfi_offset 14, -4
 9426 0002 84B0     		sub	sp, sp, #16
 9427              		.cfi_def_cfa_offset 24
 9428 0004 00AF     		add	r7, sp, #0
 9429              		.cfi_def_cfa_register 7
 9430 0006 7860     		str	r0, [r7, #4]
2961:ad5940.c      ****   uint32_t ADCCode = 0;
 9431              		.loc 1 2961 0
 9432 0008 0023     		movs	r3, #0
 9433 000a FB60     		str	r3, [r7, #12]
2962:ad5940.c      ****   AD5940_INTCClrFlag(AFEINTSRC_SINC2RDY);
 9434              		.loc 1 2962 0
 9435 000c 0420     		movs	r0, #4
 9436 000e FFF7FEFF 		bl	AD5940_INTCClrFlag
2963:ad5940.c      ****   AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_SINC2NOTCH, bTRUE);/* Start conversion */
 9437              		.loc 1 2963 0
 9438 0012 0121     		movs	r1, #1
 9439 0014 1448     		ldr	r0, .L503
 9440 0016 FFF7FEFF 		bl	AD5940_AFECtrlS
 9441              	.L501:
2964:ad5940.c      ****   do
2965:ad5940.c      ****   {
2966:ad5940.c      ****     AD5940_Delay10us(1);  /* Delay 10us */
 9442              		.loc 1 2966 0
 9443 001a 0120     		movs	r0, #1
 9444 001c FFF7FEFF 		bl	AD5940_Delay10us
2967:ad5940.c      ****     if(AD5940_INTCTestFlag(AFEINTC_1,AFEINTSRC_SINC2RDY))
 9445              		.loc 1 2967 0
 9446 0020 0421     		movs	r1, #4
 9447 0022 0120     		movs	r0, #1
 9448 0024 FFF7FEFF 		bl	AD5940_INTCTestFlag
 9449 0028 0346     		mov	r3, r0
 9450 002a 002B     		cmp	r3, #0
 9451 002c 04D0     		beq	.L498
2968:ad5940.c      ****     {
2969:ad5940.c      ****         ADCCode = AD5940_ReadAfeResult(AFERESULT_SINC2);
 9452              		.loc 1 2969 0
 9453 002e 0120     		movs	r0, #1
 9454 0030 FFF7FEFF 		bl	AD5940_ReadAfeResult
 9455 0034 F860     		str	r0, [r7, #12]
2970:ad5940.c      ****         break;
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 220


 9456              		.loc 1 2970 0
 9457 0036 0DE0     		b	.L499
 9458              	.L498:
2971:ad5940.c      ****     }
2972:ad5940.c      ****     if(*time_out != -1)
 9459              		.loc 1 2972 0
 9460 0038 7B68     		ldr	r3, [r7, #4]
 9461 003a 1B68     		ldr	r3, [r3]
 9462 003c B3F1FF3F 		cmp	r3, #-1
 9463 0040 04D0     		beq	.L500
2973:ad5940.c      ****       (*time_out)--;	
 9464              		.loc 1 2973 0
 9465 0042 7B68     		ldr	r3, [r7, #4]
 9466 0044 1B68     		ldr	r3, [r3]
 9467 0046 5A1E     		subs	r2, r3, #1
 9468 0048 7B68     		ldr	r3, [r7, #4]
 9469 004a 1A60     		str	r2, [r3]
 9470              	.L500:
2974:ad5940.c      ****   }while(*time_out != 0);
 9471              		.loc 1 2974 0
 9472 004c 7B68     		ldr	r3, [r7, #4]
 9473 004e 1B68     		ldr	r3, [r3]
 9474 0050 002B     		cmp	r3, #0
 9475 0052 E2D1     		bne	.L501
 9476              	.L499:
2975:ad5940.c      ****   AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_SINC2NOTCH, bFALSE);/* Stop conversion */
 9477              		.loc 1 2975 0
 9478 0054 0021     		movs	r1, #0
 9479 0056 0448     		ldr	r0, .L503
 9480 0058 FFF7FEFF 		bl	AD5940_AFECtrlS
2976:ad5940.c      ****   return ADCCode;
 9481              		.loc 1 2976 0
 9482 005c FB68     		ldr	r3, [r7, #12]
2977:ad5940.c      **** }
 9483              		.loc 1 2977 0
 9484 005e 1846     		mov	r0, r3
 9485 0060 1037     		adds	r7, r7, #16
 9486              		.cfi_def_cfa_offset 8
 9487 0062 BD46     		mov	sp, r7
 9488              		.cfi_def_cfa_register 13
 9489              		@ sp needed
 9490 0064 80BD     		pop	{r7, pc}
 9491              	.L504:
 9492 0066 00BF     		.align	2
 9493              	.L503:
 9494 0068 00010100 		.word	65792
 9495              		.cfi_endproc
 9496              	.LFE112:
 9497              		.size	__AD5940_TakeMeasurement, .-__AD5940_TakeMeasurement
 9498              		.global	__aeabi_fcmpgt
 9499              		.global	__aeabi_f2iz
 9500              		.section	.text.AD5940_ADCPGACal,"ax",%progbits
 9501              		.align	2
 9502              		.global	AD5940_ADCPGACal
 9503              		.thumb
 9504              		.thumb_func
 9505              		.type	AD5940_ADCPGACal, %function
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 221


 9506              	AD5940_ADCPGACal:
 9507              	.LFB113:
2978:ad5940.c      **** 
2979:ad5940.c      **** /**
2980:ad5940.c      ****   @brief Calibrate ADC PGA
2981:ad5940.c      ****   @param pADCPGACal: PGA calibration parameters include filter setup and PGA gain.
2982:ad5940.c      ****   @return AD5940ERR_OK.
2983:ad5940.c      **** **/
2984:ad5940.c      **** AD5940Err AD5940_ADCPGACal(ADCPGACal_Type *pADCPGACal)
2985:ad5940.c      **** {
 9508              		.loc 1 2985 0
 9509              		.cfi_startproc
 9510              		@ args = 0, pretend = 0, frame = 200
 9511              		@ frame_needed = 1, uses_anonymous_args = 0
 9512 0000 80B5     		push	{r7, lr}
 9513              		.cfi_def_cfa_offset 8
 9514              		.cfi_offset 7, -8
 9515              		.cfi_offset 14, -4
 9516 0002 B2B0     		sub	sp, sp, #200
 9517              		.cfi_def_cfa_offset 208
 9518 0004 00AF     		add	r7, sp, #0
 9519              		.cfi_def_cfa_register 7
 9520 0006 7860     		str	r0, [r7, #4]
2986:ad5940.c      ****   const float kFactor = 1.835f/1.82f;
 9521              		.loc 1 2986 0
 9522 0008 AD4B     		ldr	r3, .L529
 9523 000a C7F8B030 		str	r3, [r7, #176]	@ float
2987:ad5940.c      ****   ADCBaseCfg_Type adc_base;
2988:ad5940.c      **** 
2989:ad5940.c      ****   int32_t time_out;
2990:ad5940.c      ****   uint32_t INTCCfg;
2991:ad5940.c      ****   int32_t ADCCode;
2992:ad5940.c      ****   BoolFlag bADCClk32MHzMode;
2993:ad5940.c      **** 
2994:ad5940.c      ****   uint32_t regaddr_gain, regaddr_offset;
2995:ad5940.c      ****   
2996:ad5940.c      ****   if(pADCPGACal == NULL) return AD5940ERR_NULLP;
 9524              		.loc 1 2996 0
 9525 000e 7B68     		ldr	r3, [r7, #4]
 9526 0010 002B     		cmp	r3, #0
 9527 0012 02D1     		bne	.L506
 9528              		.loc 1 2996 0 is_stmt 0 discriminator 1
 9529 0014 6FF00203 		mvn	r3, #2
 9530 0018 00E2     		b	.L524
 9531              	.L506:
2997:ad5940.c      ****   if(pADCPGACal->ADCPga > ADCPGA_9) return AD5940ERR_PARA;  /* Parameter Error */
 9532              		.loc 1 2997 0 is_stmt 1
 9533 001a 7B68     		ldr	r3, [r7, #4]
 9534 001c 9B69     		ldr	r3, [r3, #24]
 9535 001e 042B     		cmp	r3, #4
 9536 0020 02D9     		bls	.L508
 9537              		.loc 1 2997 0 is_stmt 0 discriminator 1
 9538 0022 6FF00103 		mvn	r3, #1
 9539 0026 F9E1     		b	.L524
 9540              	.L508:
2998:ad5940.c      ****   
2999:ad5940.c      ****   if(pADCPGACal->AdcClkFreq > (32000000*0.8))
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 222


 9541              		.loc 1 2999 0 is_stmt 1
 9542 0028 7B68     		ldr	r3, [r7, #4]
 9543 002a 5B68     		ldr	r3, [r3, #4]	@ float
 9544 002c A549     		ldr	r1, .L529+4
 9545 002e 1846     		mov	r0, r3
 9546 0030 FFF7FEFF 		bl	__aeabi_fcmpgt
 9547 0034 0346     		mov	r3, r0
 9548 0036 002B     		cmp	r3, #0
 9549 0038 02D0     		beq	.L509
3000:ad5940.c      ****     bADCClk32MHzMode = bTRUE; 
 9550              		.loc 1 3000 0
 9551 003a 0123     		movs	r3, #1
 9552 003c 87F8C330 		strb	r3, [r7, #195]
 9553              	.L509:
3001:ad5940.c      **** 
3002:ad5940.c      ****   /**
3003:ad5940.c      ****    *  Determine Gain calibration method according to different gain value...
3004:ad5940.c      ****    *  and calibration register 
3005:ad5940.c      ****    * */
3006:ad5940.c      ****   static const struct _cal_registers
3007:ad5940.c      ****   {
3008:ad5940.c      ****     uint16_t gain_reg;
3009:ad5940.c      ****     uint16_t offset_reg;
3010:ad5940.c      ****   }cal_registers[] = {
3011:ad5940.c      ****     {REG_AFE_ADCGAINGN1,REG_AFE_ADCOFFSETGN1},
3012:ad5940.c      ****     {REG_AFE_ADCGAINGN1P5,REG_AFE_ADCOFFSETGN1P5},
3013:ad5940.c      ****     {REG_AFE_ADCGAINGN2,REG_AFE_ADCOFFSETGN2},
3014:ad5940.c      ****     {REG_AFE_ADCGAINGN4,REG_AFE_ADCOFFSETGN4},
3015:ad5940.c      ****     {REG_AFE_ADCGAINGN9,REG_AFE_ADCOFFSETGN9},
3016:ad5940.c      ****   };
3017:ad5940.c      ****   regaddr_gain = cal_registers[pADCPGACal->ADCPga].gain_reg;
 9554              		.loc 1 3017 0
 9555 0040 7B68     		ldr	r3, [r7, #4]
 9556 0042 9B69     		ldr	r3, [r3, #24]
 9557 0044 A04A     		ldr	r2, .L529+8
 9558 0046 32F82330 		ldrh	r3, [r2, r3, lsl #2]
 9559 004a C7F8AC30 		str	r3, [r7, #172]
3018:ad5940.c      ****   regaddr_offset = cal_registers[pADCPGACal->ADCPga].offset_reg;
 9560              		.loc 1 3018 0
 9561 004e 7B68     		ldr	r3, [r7, #4]
 9562 0050 9B69     		ldr	r3, [r3, #24]
 9563 0052 9D4A     		ldr	r2, .L529+8
 9564 0054 9B00     		lsls	r3, r3, #2
 9565 0056 1344     		add	r3, r3, r2
 9566 0058 5B88     		ldrh	r3, [r3, #2]
 9567 005a C7F8A830 		str	r3, [r7, #168]
3019:ad5940.c      **** 
3020:ad5940.c      ****   /* Do initialization */
3021:ad5940.c      ****   __AD5940_ReferenceON();
 9568              		.loc 1 3021 0
 9569 005e FFF7FEFF 		bl	__AD5940_ReferenceON
3022:ad5940.c      ****   ADCFilterCfg_Type adc_filter;
3023:ad5940.c      ****   /* Initialize ADC filters ADCRawData-->SINC3-->SINC2+NOTCH. Use SIN2 data for calibration-->Lower
3024:ad5940.c      ****   adc_filter.ADCSinc3Osr = pADCPGACal->ADCSinc3Osr;
 9570              		.loc 1 3024 0
 9571 0062 7B68     		ldr	r3, [r7, #4]
 9572 0064 1B69     		ldr	r3, [r3, #16]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 223


 9573 0066 BB67     		str	r3, [r7, #120]
3025:ad5940.c      ****   adc_filter.ADCSinc2Osr = pADCPGACal->ADCSinc2Osr;  /* 800KSPS/4/1333 = 150SPS */
 9574              		.loc 1 3025 0
 9575 0068 7B68     		ldr	r3, [r7, #4]
 9576 006a 5B69     		ldr	r3, [r3, #20]
 9577 006c FB67     		str	r3, [r7, #124]
3026:ad5940.c      ****   adc_filter.ADCAvgNum = ADCAVGNUM_2;         /* Don't care about it. Average function is only used
 9578              		.loc 1 3026 0
 9579 006e 0023     		movs	r3, #0
 9580 0070 C7F88030 		str	r3, [r7, #128]
3027:ad5940.c      ****   adc_filter.ADCRate = bADCClk32MHzMode?ADCRATE_1P6MHZ:ADCRATE_800KHZ;        /* If ADC clock is 32
 9581              		.loc 1 3027 0
 9582 0074 97F8C330 		ldrb	r3, [r7, #195]	@ zero_extendqisi2
 9583 0078 002B     		cmp	r3, #0
 9584 007a 0CBF     		ite	eq
 9585 007c 0123     		moveq	r3, #1
 9586 007e 0023     		movne	r3, #0
 9587 0080 DBB2     		uxtb	r3, r3
 9588 0082 C7F88430 		str	r3, [r7, #132]
3028:ad5940.c      ****   adc_filter.BpNotch = bTRUE;                 /* SINC2+Notch is one block, when bypass notch filter
 9589              		.loc 1 3028 0
 9590 0086 0123     		movs	r3, #1
 9591 0088 87F88830 		strb	r3, [r7, #136]
3029:ad5940.c      ****   adc_filter.BpSinc3 = bFALSE;                /* We use SINC3 filter. */
 9592              		.loc 1 3029 0
 9593 008c 0023     		movs	r3, #0
 9594 008e 87F88930 		strb	r3, [r7, #137]
3030:ad5940.c      ****   adc_filter.Sinc2NotchEnable = bTRUE;        /* Enable the SINC2+Notch block. You can also use fun
 9595              		.loc 1 3030 0
 9596 0092 0123     		movs	r3, #1
 9597 0094 87F88A30 		strb	r3, [r7, #138]
3031:ad5940.c      ****   AD5940_ADCFilterCfgS(&adc_filter);
 9598              		.loc 1 3031 0
 9599 0098 07F17803 		add	r3, r7, #120
 9600 009c 1846     		mov	r0, r3
 9601 009e FFF7FEFF 		bl	AD5940_ADCFilterCfgS
3032:ad5940.c      ****   /* Turn ON reference and ADC power, and DAC reference. We use DAC 1.8V reference to calibrate ADC
3033:ad5940.c      ****   AD5940_AFECtrlS(AFECTRL_ALL, bFALSE); /* Disable all */
 9602              		.loc 1 3033 0
 9603 00a2 0021     		movs	r1, #0
 9604 00a4 8948     		ldr	r0, .L529+12
 9605 00a6 FFF7FEFF 		bl	AD5940_AFECtrlS
3034:ad5940.c      ****   AD5940_AFECtrlS(AFECTRL_ADCPWR|AFECTRL_HPREFPWR|AFECTRL_DACREFPWR|AFECTRL_HSDACPWR|AFECTRL_SINC2N
 9606              		.loc 1 3034 0
 9607 00aa 0121     		movs	r1, #1
 9608 00ac 8848     		ldr	r0, .L529+16
 9609 00ae FFF7FEFF 		bl	AD5940_AFECtrlS
3035:ad5940.c      ****   AD5940_Delay10us(25);   /* Wait 250us for reference power up */
 9610              		.loc 1 3035 0
 9611 00b2 1920     		movs	r0, #25
 9612 00b4 FFF7FEFF 		bl	AD5940_Delay10us
3036:ad5940.c      ****   /* INTC configure and open calibration lock */
3037:ad5940.c      ****   INTCCfg = AD5940_INTCGetCfg(AFEINTC_1);
 9613              		.loc 1 3037 0
 9614 00b8 0120     		movs	r0, #1
 9615 00ba FFF7FEFF 		bl	AD5940_INTCGetCfg
 9616 00be C7F8A400 		str	r0, [r7, #164]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 224


3038:ad5940.c      ****   AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_SINC2RDY, bTRUE); /* Enable SINC2 Interrupt in INTC1 */
 9617              		.loc 1 3038 0
 9618 00c2 0122     		movs	r2, #1
 9619 00c4 0421     		movs	r1, #4
 9620 00c6 0120     		movs	r0, #1
 9621 00c8 FFF7FEFF 		bl	AD5940_INTCCfg
3039:ad5940.c      ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, KEY_CALDATLOCK);  /* Unlock KEY */
 9622              		.loc 1 3039 0
 9623 00cc 8149     		ldr	r1, .L529+20
 9624 00ce 42F23020 		movw	r0, #8752
 9625 00d2 FFF7FEFF 		bl	AD5940_WriteReg
3040:ad5940.c      **** 
3041:ad5940.c      ****   /* Do offset calibration. */
3042:ad5940.c      ****   if(pADCPGACal->PGACalType != PGACALTYPE_GAIN){  /* Need offset calibration */
 9626              		.loc 1 3042 0
 9627 00d6 7B68     		ldr	r3, [r7, #4]
 9628 00d8 DB69     		ldr	r3, [r3, #28]
 9629 00da 012B     		cmp	r3, #1
 9630 00dc 6BD0     		beq	.L511
 9631              	.LBB14:
3043:ad5940.c      ****     int32_t ExpectedCode = 0x8000;        /* Ideal ADC output */
 9632              		.loc 1 3043 0
 9633 00de 4FF40043 		mov	r3, #32768
 9634 00e2 C7F8A030 		str	r3, [r7, #160]
3044:ad5940.c      ****     AD5940_WriteReg(regaddr_offset, 0);   /* Reset offset register */
 9635              		.loc 1 3044 0
 9636 00e6 D7F8A830 		ldr	r3, [r7, #168]
 9637 00ea 9BB2     		uxth	r3, r3
 9638 00ec 0021     		movs	r1, #0
 9639 00ee 1846     		mov	r0, r3
 9640 00f0 FFF7FEFF 		bl	AD5940_WriteReg
3045:ad5940.c      **** 
3046:ad5940.c      ****     adc_base.ADCMuxP = ADCMUXP_VSET1P1;
 9641              		.loc 1 3046 0
 9642 00f4 0C23     		movs	r3, #12
 9643 00f6 C7F89030 		str	r3, [r7, #144]
3047:ad5940.c      ****     adc_base.ADCMuxN = ADCMUXN_VSET1P1;   /* Short input with common voltage set to 1.11v */
 9644              		.loc 1 3047 0
 9645 00fa 0823     		movs	r3, #8
 9646 00fc C7F89430 		str	r3, [r7, #148]
3048:ad5940.c      ****     adc_base.ADCPga = pADCPGACal->ADCPga; /* Set correct Gain value. */
 9647              		.loc 1 3048 0
 9648 0100 7B68     		ldr	r3, [r7, #4]
 9649 0102 9B69     		ldr	r3, [r3, #24]
 9650 0104 C7F89830 		str	r3, [r7, #152]
3049:ad5940.c      ****     AD5940_ADCBaseCfgS(&adc_base);
 9651              		.loc 1 3049 0
 9652 0108 07F19003 		add	r3, r7, #144
 9653 010c 1846     		mov	r0, r3
 9654 010e FFF7FEFF 		bl	AD5940_ADCBaseCfgS
3050:ad5940.c      ****     AD5940_Delay10us(5);                  /* Wait for sometime */
 9655              		.loc 1 3050 0
 9656 0112 0520     		movs	r0, #5
 9657 0114 FFF7FEFF 		bl	AD5940_Delay10us
3051:ad5940.c      ****     ADCCode = 0;
 9658              		.loc 1 3051 0
 9659 0118 0023     		movs	r3, #0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 225


 9660 011a C7F8C430 		str	r3, [r7, #196]
 9661              	.LBB15:
3052:ad5940.c      ****     for(int i=0; i<8; i++)
 9662              		.loc 1 3052 0
 9663 011e 0023     		movs	r3, #0
 9664 0120 C7F8BC30 		str	r3, [r7, #188]
 9665 0124 18E0     		b	.L512
 9666              	.L515:
3053:ad5940.c      ****     { /* ADC offset calibration register has resolution of 0.25LSB. take full use of it. */
3054:ad5940.c      ****       time_out = pADCPGACal->TimeOut10us;   /* Reset time out counter */
 9667              		.loc 1 3054 0
 9668 0126 7B68     		ldr	r3, [r7, #4]
 9669 0128 1B6A     		ldr	r3, [r3, #32]
 9670 012a C7F88C30 		str	r3, [r7, #140]
3055:ad5940.c      ****       ADCCode += __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and the
 9671              		.loc 1 3055 0
 9672 012e 07F18C03 		add	r3, r7, #140
 9673 0132 1846     		mov	r0, r3
 9674 0134 FFF7FEFF 		bl	__AD5940_TakeMeasurement
 9675 0138 0246     		mov	r2, r0
 9676 013a D7F8C430 		ldr	r3, [r7, #196]
 9677 013e 1344     		add	r3, r3, r2
 9678 0140 C7F8C430 		str	r3, [r7, #196]
3056:ad5940.c      ****       if(time_out == 0) goto ADCPGACALERROR_TIMEOUT;  /* Time out error. */
 9679              		.loc 1 3056 0
 9680 0144 D7F88C30 		ldr	r3, [r7, #140]
 9681 0148 002B     		cmp	r3, #0
 9682 014a 00F05881 		beq	.L526
3052:ad5940.c      ****     { /* ADC offset calibration register has resolution of 0.25LSB. take full use of it. */
 9683              		.loc 1 3052 0 discriminator 2
 9684 014e D7F8BC30 		ldr	r3, [r7, #188]
 9685 0152 0133     		adds	r3, r3, #1
 9686 0154 C7F8BC30 		str	r3, [r7, #188]
 9687              	.L512:
3052:ad5940.c      ****     { /* ADC offset calibration register has resolution of 0.25LSB. take full use of it. */
 9688              		.loc 1 3052 0 is_stmt 0 discriminator 1
 9689 0158 D7F8BC30 		ldr	r3, [r7, #188]
 9690 015c 072B     		cmp	r3, #7
 9691 015e E2DD     		ble	.L515
 9692              	.LBE15:
3057:ad5940.c      ****     }
3058:ad5940.c      ****     /* Calculate and write the result to registers before gain calibration */
3059:ad5940.c      ****     ADCCode = (ExpectedCode<<3) - ADCCode;  /* We will shift back 1bit below */
 9693              		.loc 1 3059 0 is_stmt 1
 9694 0160 D7F8A030 		ldr	r3, [r7, #160]
 9695 0164 DA00     		lsls	r2, r3, #3
 9696 0166 D7F8C430 		ldr	r3, [r7, #196]
 9697 016a D31A     		subs	r3, r2, r3
 9698 016c C7F8C430 		str	r3, [r7, #196]
3060:ad5940.c      ****     /**
3061:ad5940.c      ****      * AD5940 use formular Output = gain*(input + offset) for calibration.
3062:ad5940.c      ****      * So, the measured results should be divided by gain to get value for offset register.
3063:ad5940.c      ****     */
3064:ad5940.c      ****     uint32_t gain = AD5940_ReadReg(regaddr_gain);
 9699              		.loc 1 3064 0
 9700 0170 D7F8AC30 		ldr	r3, [r7, #172]
 9701 0174 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 226


 9702 0176 1846     		mov	r0, r3
 9703 0178 FFF7FEFF 		bl	AD5940_ReadReg
 9704 017c C7F89C00 		str	r0, [r7, #156]
3065:ad5940.c      ****     ADCCode = (ADCCode*0x4000)/gain;
 9705              		.loc 1 3065 0
 9706 0180 D7F8C430 		ldr	r3, [r7, #196]
 9707 0184 9B03     		lsls	r3, r3, #14
 9708 0186 1A46     		mov	r2, r3
 9709 0188 D7F89C30 		ldr	r3, [r7, #156]
 9710 018c B2FBF3F3 		udiv	r3, r2, r3
 9711 0190 C7F8C430 		str	r3, [r7, #196]
3066:ad5940.c      ****     ADCCode = ((ADCCode+1)>>1)&0x7fff;      /* Round 0.5 */
 9712              		.loc 1 3066 0
 9713 0194 D7F8C430 		ldr	r3, [r7, #196]
 9714 0198 0133     		adds	r3, r3, #1
 9715 019a 5B10     		asrs	r3, r3, #1
 9716 019c C3F30E03 		ubfx	r3, r3, #0, #15
 9717 01a0 C7F8C430 		str	r3, [r7, #196]
3067:ad5940.c      ****     AD5940_WriteReg(regaddr_offset, ADCCode);
 9718              		.loc 1 3067 0
 9719 01a4 D7F8A830 		ldr	r3, [r7, #168]
 9720 01a8 9BB2     		uxth	r3, r3
 9721 01aa D7F8C420 		ldr	r2, [r7, #196]
 9722 01ae 1146     		mov	r1, r2
 9723 01b0 1846     		mov	r0, r3
 9724 01b2 FFF7FEFF 		bl	AD5940_WriteReg
 9725              	.L511:
 9726              	.LBE14:
3068:ad5940.c      ****   }
3069:ad5940.c      ****   
3070:ad5940.c      ****   /* Do gain calibration */
3071:ad5940.c      ****   if(pADCPGACal->PGACalType != PGACALTYPE_OFFSET)  /* Need gain calibration */
 9727              		.loc 1 3071 0
 9728 01b6 7B68     		ldr	r3, [r7, #4]
 9729 01b8 DB69     		ldr	r3, [r3, #28]
 9730 01ba 002B     		cmp	r3, #0
 9731 01bc 00F00D81 		beq	.L516
 9732              	.LBB17:
3072:ad5940.c      ****   {
3073:ad5940.c      ****     int32_t ExpectedGainCode;
3074:ad5940.c      ****     static const float ideal_pga_gain[]={1,1.5,2,4,9};
3075:ad5940.c      ****     AD5940_WriteReg(regaddr_gain, 0x4000);  /* Reset gain register */
 9733              		.loc 1 3075 0
 9734 01c0 D7F8AC30 		ldr	r3, [r7, #172]
 9735 01c4 9BB2     		uxth	r3, r3
 9736 01c6 4FF48041 		mov	r1, #16384
 9737 01ca 1846     		mov	r0, r3
 9738 01cc FFF7FEFF 		bl	AD5940_WriteReg
3076:ad5940.c      ****     if(pADCPGACal->ADCPga <= ADCPGA_2)
 9739              		.loc 1 3076 0
 9740 01d0 7B68     		ldr	r3, [r7, #4]
 9741 01d2 9B69     		ldr	r3, [r3, #24]
 9742 01d4 022B     		cmp	r3, #2
 9743 01d6 35D8     		bhi	.L517
3077:ad5940.c      ****     {
3078:ad5940.c      ****       //gain1,1.5,2 could use reference directly
3079:ad5940.c      ****       adc_base.ADCMuxP = ADCMUXP_VREF1P8DAC;
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 227


 9744              		.loc 1 3079 0
 9745 01d8 1223     		movs	r3, #18
 9746 01da C7F89030 		str	r3, [r7, #144]
3080:ad5940.c      ****       adc_base.ADCMuxN = ADCMUXN_VSET1P1;
 9747              		.loc 1 3080 0
 9748 01de 0823     		movs	r3, #8
 9749 01e0 C7F89430 		str	r3, [r7, #148]
3081:ad5940.c      ****       ExpectedGainCode = (int32_t)((pADCPGACal->VRef1p82 - pADCPGACal->VRef1p11)*ideal_pga_gain[pAD
 9750              		.loc 1 3081 0
 9751 01e4 7B68     		ldr	r3, [r7, #4]
 9752 01e6 9A68     		ldr	r2, [r3, #8]	@ float
 9753 01e8 7B68     		ldr	r3, [r7, #4]
 9754 01ea DB68     		ldr	r3, [r3, #12]	@ float
 9755 01ec 1946     		mov	r1, r3
 9756 01ee 1046     		mov	r0, r2
 9757 01f0 FFF7FEFF 		bl	__aeabi_fsub
 9758 01f4 0346     		mov	r3, r0
 9759 01f6 1846     		mov	r0, r3
 9760 01f8 7B68     		ldr	r3, [r7, #4]
 9761 01fa 9B69     		ldr	r3, [r3, #24]
 9762 01fc 364A     		ldr	r2, .L529+24
 9763 01fe 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 9764 0202 1946     		mov	r1, r3
 9765 0204 FFF7FEFF 		bl	__aeabi_fmul
 9766 0208 0346     		mov	r3, r0
 9767 020a 1A46     		mov	r2, r3
3082:ad5940.c      ****                                     pADCPGACal->VRef1p82*32768/kFactor)\
 9768              		.loc 1 3082 0
 9769 020c 7B68     		ldr	r3, [r7, #4]
 9770 020e 9B68     		ldr	r3, [r3, #8]	@ float
3081:ad5940.c      ****       ExpectedGainCode = (int32_t)((pADCPGACal->VRef1p82 - pADCPGACal->VRef1p11)*ideal_pga_gain[pAD
 9771              		.loc 1 3081 0
 9772 0210 1946     		mov	r1, r3
 9773 0212 1046     		mov	r0, r2
 9774 0214 FFF7FEFF 		bl	__aeabi_fdiv
 9775 0218 0346     		mov	r3, r0
 9776              		.loc 1 3082 0
 9777 021a 4FF08E41 		mov	r1, #1191182336
 9778 021e 1846     		mov	r0, r3
 9779 0220 FFF7FEFF 		bl	__aeabi_fmul
 9780 0224 0346     		mov	r3, r0
 9781 0226 D7F8B010 		ldr	r1, [r7, #176]	@ float
 9782 022a 1846     		mov	r0, r3
 9783 022c FFF7FEFF 		bl	__aeabi_fdiv
 9784 0230 0346     		mov	r3, r0
3081:ad5940.c      ****       ExpectedGainCode = (int32_t)((pADCPGACal->VRef1p82 - pADCPGACal->VRef1p11)*ideal_pga_gain[pAD
 9785              		.loc 1 3081 0
 9786 0232 1846     		mov	r0, r3
 9787 0234 FFF7FEFF 		bl	__aeabi_f2iz
 9788 0238 0346     		mov	r3, r0
 9789 023a 03F50043 		add	r3, r3, #32768
 9790 023e C7F8B830 		str	r3, [r7, #184]
 9791 0242 92E0     		b	.L518
 9792              	.L517:
 9793              	.LBB18:
3083:ad5940.c      ****                                     + 0x8000;
3084:ad5940.c      ****     }
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 228


3085:ad5940.c      ****     else
3086:ad5940.c      ****     {
3087:ad5940.c      ****       //gain4,9 use DAC generated voltage
3088:ad5940.c      ****       adc_base.ADCMuxP = ADCMUXP_P_NODE;
 9794              		.loc 1 3088 0
 9795 0244 2423     		movs	r3, #36
 9796 0246 C7F89030 		str	r3, [r7, #144]
3089:ad5940.c      ****       adc_base.ADCMuxN = ADCMUXN_N_NODE;
 9797              		.loc 1 3089 0
 9798 024a 1423     		movs	r3, #20
 9799 024c C7F89430 		str	r3, [r7, #148]
3090:ad5940.c      ****       /* Setup HSLOOP to generate voltage for GAIN4/9 calibration. */
3091:ad5940.c      ****       AD5940_AFECtrlS(AFECTRL_EXTBUFPWR|AFECTRL_INAMPPWR|AFECTRL_HSTIAPWR|AFECTRL_WG, bTRUE);
 9800              		.loc 1 3091 0
 9801 0250 0121     		movs	r1, #1
 9802 0252 4FF49C40 		mov	r0, #19968
 9803 0256 FFF7FEFF 		bl	AD5940_AFECtrlS
3092:ad5940.c      ****       HSLoopCfg_Type hsloop_cfg;
3093:ad5940.c      ****       hsloop_cfg.HsDacCfg.ExcitBufGain = EXCITBUFGAIN_2;
 9804              		.loc 1 3093 0
 9805 025a 0023     		movs	r3, #0
 9806 025c BB61     		str	r3, [r7, #24]
3094:ad5940.c      ****       hsloop_cfg.HsDacCfg.HsDacGain = HSDACGAIN_1;
 9807              		.loc 1 3094 0
 9808 025e 0023     		movs	r3, #0
 9809 0260 FB61     		str	r3, [r7, #28]
3095:ad5940.c      ****       hsloop_cfg.HsDacCfg.HsDacUpdateRate = 7;
 9810              		.loc 1 3095 0
 9811 0262 0723     		movs	r3, #7
 9812 0264 3B62     		str	r3, [r7, #32]
3096:ad5940.c      ****       hsloop_cfg.HsTiaCfg.DiodeClose = bFALSE;
 9813              		.loc 1 3096 0
 9814 0266 0023     		movs	r3, #0
 9815 0268 87F86430 		strb	r3, [r7, #100]
3097:ad5940.c      ****       hsloop_cfg.HsTiaCfg.HstiaBias = HSTIABIAS_1P1;
 9816              		.loc 1 3097 0
 9817 026c 0023     		movs	r3, #0
 9818 026e BB65     		str	r3, [r7, #88]
3098:ad5940.c      ****       hsloop_cfg.HsTiaCfg.HstiaCtia = 31;
 9819              		.loc 1 3098 0
 9820 0270 1F23     		movs	r3, #31
 9821 0272 3B66     		str	r3, [r7, #96]
3099:ad5940.c      ****       hsloop_cfg.HsTiaCfg.HstiaDeRload = HSTIADERLOAD_OPEN;
 9822              		.loc 1 3099 0
 9823 0274 0523     		movs	r3, #5
 9824 0276 FB66     		str	r3, [r7, #108]
3100:ad5940.c      ****       hsloop_cfg.HsTiaCfg.HstiaDeRtia = HSTIADERTIA_OPEN;
 9825              		.loc 1 3100 0
 9826 0278 0B23     		movs	r3, #11
 9827 027a BB66     		str	r3, [r7, #104]
3101:ad5940.c      ****       hsloop_cfg.HsTiaCfg.HstiaDe1Rload = HSTIADERLOAD_OPEN;
 9828              		.loc 1 3101 0
 9829 027c 0523     		movs	r3, #5
 9830 027e 7B67     		str	r3, [r7, #116]
3102:ad5940.c      ****       hsloop_cfg.HsTiaCfg.HstiaDe1Rtia = HSTIADERTIA_OPEN;
 9831              		.loc 1 3102 0
 9832 0280 0B23     		movs	r3, #11
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 229


 9833 0282 3B67     		str	r3, [r7, #112]
3103:ad5940.c      ****       hsloop_cfg.HsTiaCfg.HstiaRtiaSel = HSTIARTIA_200;
 9834              		.loc 1 3103 0
 9835 0284 0023     		movs	r3, #0
 9836 0286 FB65     		str	r3, [r7, #92]
3104:ad5940.c      ****       hsloop_cfg.SWMatCfg.Dswitch = SWD_OPEN;
 9837              		.loc 1 3104 0
 9838 0288 0023     		movs	r3, #0
 9839 028a BB60     		str	r3, [r7, #8]
3105:ad5940.c      ****       hsloop_cfg.SWMatCfg.Pswitch = SWP_PL;
 9840              		.loc 1 3105 0
 9841 028c 4FF40053 		mov	r3, #8192
 9842 0290 FB60     		str	r3, [r7, #12]
3106:ad5940.c      ****       hsloop_cfg.SWMatCfg.Nswitch = SWN_NL;
 9843              		.loc 1 3106 0
 9844 0292 4FF48063 		mov	r3, #1024
 9845 0296 3B61     		str	r3, [r7, #16]
3107:ad5940.c      ****       hsloop_cfg.SWMatCfg.Tswitch = SWT_TRTIA;
 9846              		.loc 1 3107 0
 9847 0298 4FF48073 		mov	r3, #256
 9848 029c 7B61     		str	r3, [r7, #20]
3108:ad5940.c      ****       hsloop_cfg.WgCfg.GainCalEn = bTRUE;
 9849              		.loc 1 3108 0
 9850 029e 0123     		movs	r3, #1
 9851 02a0 87F82830 		strb	r3, [r7, #40]
3109:ad5940.c      ****       hsloop_cfg.WgCfg.OffsetCalEn = bTRUE;
 9852              		.loc 1 3109 0
 9853 02a4 0123     		movs	r3, #1
 9854 02a6 87F82930 		strb	r3, [r7, #41]
3110:ad5940.c      ****       hsloop_cfg.WgCfg.WgType = WGTYPE_MMR;
 9855              		.loc 1 3110 0
 9856 02aa 0023     		movs	r3, #0
 9857 02ac 7B62     		str	r3, [r7, #36]
3111:ad5940.c      ****       uint32_t HSDACCode;
3112:ad5940.c      ****       if(pADCPGACal->ADCPga == ADCPGA_4)
 9858              		.loc 1 3112 0
 9859 02ae 7B68     		ldr	r3, [r7, #4]
 9860 02b0 9B69     		ldr	r3, [r3, #24]
 9861 02b2 032B     		cmp	r3, #3
 9862 02b4 12D1     		bne	.L519
3113:ad5940.c      ****         HSDACCode = 0x800 + 0x300;  /* 0x300--> 0x300/0x1000*0.8*BUFFERGAIN2 = 0.3V. */
 9863              		.loc 1 3113 0
 9864 02b6 4FF43063 		mov	r3, #2816
 9865 02ba C7F8B430 		str	r3, [r7, #180]
 9866 02be 15E0     		b	.L520
 9867              	.L530:
 9868              		.align	2
 9869              	.L529:
 9870 02c0 110E813F 		.word	1065422353
 9871 02c4 0050C34B 		.word	1271091200
 9872 02c8 B0010000 		.word	cal_registers.7056
 9873 02cc E0FF3900 		.word	3801056
 9874 02d0 E0001100 		.word	1114336
 9875 02d4 AFA587DE 		.word	-561535569
 9876 02d8 C4010000 		.word	ideal_pga_gain.7066
 9877              	.L519:
3114:ad5940.c      ****       else if(pADCPGACal->ADCPga == ADCPGA_9)
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 230


 9878              		.loc 1 3114 0
 9879 02dc 7B68     		ldr	r3, [r7, #4]
 9880 02de 9B69     		ldr	r3, [r3, #24]
 9881 02e0 042B     		cmp	r3, #4
 9882 02e2 03D1     		bne	.L520
3115:ad5940.c      ****         HSDACCode = 0x800 + 0x155;  /* 0x155--> 0x155/0x1000*0.8*BUFFERGAIN2 = 0.133V. */
 9883              		.loc 1 3115 0
 9884 02e4 40F65513 		movw	r3, #2389
 9885 02e8 C7F8B430 		str	r3, [r7, #180]
 9886              	.L520:
3116:ad5940.c      ****       hsloop_cfg.WgCfg.WgCode = HSDACCode;
 9887              		.loc 1 3116 0
 9888 02ec D7F8B430 		ldr	r3, [r7, #180]
 9889 02f0 7B65     		str	r3, [r7, #84]
3117:ad5940.c      ****       AD5940_HSLoopCfgS(&hsloop_cfg);
 9890              		.loc 1 3117 0
 9891 02f2 07F10803 		add	r3, r7, #8
 9892 02f6 1846     		mov	r0, r3
 9893 02f8 FFF7FEFF 		bl	AD5940_HSLoopCfgS
3118:ad5940.c      **** 
3119:ad5940.c      ****       //measure expected code
3120:ad5940.c      ****       adc_base.ADCPga = ADCPGA_1P5;
 9894              		.loc 1 3120 0
 9895 02fc 0123     		movs	r3, #1
 9896 02fe C7F89830 		str	r3, [r7, #152]
3121:ad5940.c      ****       AD5940_ADCBaseCfgS(&adc_base);  
 9897              		.loc 1 3121 0
 9898 0302 07F19003 		add	r3, r7, #144
 9899 0306 1846     		mov	r0, r3
 9900 0308 FFF7FEFF 		bl	AD5940_ADCBaseCfgS
3122:ad5940.c      ****       AD5940_Delay10us(5);
 9901              		.loc 1 3122 0
 9902 030c 0520     		movs	r0, #5
 9903 030e FFF7FEFF 		bl	AD5940_Delay10us
3123:ad5940.c      ****       time_out = pADCPGACal->TimeOut10us;   /* Reset time out counter */
 9904              		.loc 1 3123 0
 9905 0312 7B68     		ldr	r3, [r7, #4]
 9906 0314 1B6A     		ldr	r3, [r3, #32]
 9907 0316 C7F88C30 		str	r3, [r7, #140]
3124:ad5940.c      ****       ExpectedGainCode = 0x8000 + (int32_t)((__AD5940_TakeMeasurement(&time_out) - 0x8000)/1.5f\
 9908              		.loc 1 3124 0
 9909 031a 07F18C03 		add	r3, r7, #140
 9910 031e 1846     		mov	r0, r3
 9911 0320 FFF7FEFF 		bl	__AD5940_TakeMeasurement
 9912 0324 0346     		mov	r3, r0
 9913 0326 A3F50043 		sub	r3, r3, #32768
 9914 032a 1846     		mov	r0, r3
 9915 032c FFF7FEFF 		bl	__aeabi_ui2f
 9916 0330 0346     		mov	r3, r0
 9917 0332 4FF07F51 		mov	r1, #1069547520
 9918 0336 1846     		mov	r0, r3
 9919 0338 FFF7FEFF 		bl	__aeabi_fdiv
 9920 033c 0346     		mov	r3, r0
 9921 033e 1846     		mov	r0, r3
3125:ad5940.c      ****                                             *ideal_pga_gain[pADCPGACal->ADCPga]);
 9922              		.loc 1 3125 0
 9923 0340 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 231


 9924 0342 9B69     		ldr	r3, [r3, #24]
 9925 0344 374A     		ldr	r2, .L531
 9926 0346 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 9927 034a 1946     		mov	r1, r3
 9928 034c FFF7FEFF 		bl	__aeabi_fmul
 9929 0350 0346     		mov	r3, r0
3124:ad5940.c      ****       ExpectedGainCode = 0x8000 + (int32_t)((__AD5940_TakeMeasurement(&time_out) - 0x8000)/1.5f\
 9930              		.loc 1 3124 0
 9931 0352 1846     		mov	r0, r3
 9932 0354 FFF7FEFF 		bl	__aeabi_f2iz
 9933 0358 0346     		mov	r3, r0
 9934 035a 03F50043 		add	r3, r3, #32768
 9935 035e C7F8B830 		str	r3, [r7, #184]
3126:ad5940.c      ****       if(time_out == 0) goto ADCPGACALERROR_TIMEOUT;
 9936              		.loc 1 3126 0
 9937 0362 D7F88C30 		ldr	r3, [r7, #140]
 9938 0366 002B     		cmp	r3, #0
 9939 0368 4BD0     		beq	.L527
 9940              	.L518:
 9941              	.LBE18:
3127:ad5940.c      ****     }
3128:ad5940.c      ****     adc_base.ADCPga = pADCPGACal->ADCPga;    /* Set to gain under calibration */
 9942              		.loc 1 3128 0
 9943 036a 7B68     		ldr	r3, [r7, #4]
 9944 036c 9B69     		ldr	r3, [r3, #24]
 9945 036e C7F89830 		str	r3, [r7, #152]
3129:ad5940.c      ****     AD5940_ADCBaseCfgS(&adc_base);
 9946              		.loc 1 3129 0
 9947 0372 07F19003 		add	r3, r7, #144
 9948 0376 1846     		mov	r0, r3
 9949 0378 FFF7FEFF 		bl	AD5940_ADCBaseCfgS
3130:ad5940.c      ****     AD5940_Delay10us(5);
 9950              		.loc 1 3130 0
 9951 037c 0520     		movs	r0, #5
 9952 037e FFF7FEFF 		bl	AD5940_Delay10us
3131:ad5940.c      ****     time_out = pADCPGACal->TimeOut10us;      /* Reset time out counter */
 9953              		.loc 1 3131 0
 9954 0382 7B68     		ldr	r3, [r7, #4]
 9955 0384 1B6A     		ldr	r3, [r3, #32]
 9956 0386 C7F88C30 		str	r3, [r7, #140]
3132:ad5940.c      ****     ADCCode = __AD5940_TakeMeasurement(&time_out);
 9957              		.loc 1 3132 0
 9958 038a 07F18C03 		add	r3, r7, #140
 9959 038e 1846     		mov	r0, r3
 9960 0390 FFF7FEFF 		bl	__AD5940_TakeMeasurement
 9961 0394 0346     		mov	r3, r0
 9962 0396 C7F8C430 		str	r3, [r7, #196]
3133:ad5940.c      ****     if(time_out == 0) goto ADCPGACALERROR_TIMEOUT;
 9963              		.loc 1 3133 0
 9964 039a D7F88C30 		ldr	r3, [r7, #140]
 9965 039e 002B     		cmp	r3, #0
 9966 03a0 31D0     		beq	.L528
3134:ad5940.c      ****     /* Calculate and write the result to registers */
3135:ad5940.c      ****     ADCCode = (ExpectedGainCode - 0x8000)*0x4000/(ADCCode-0x8000);
 9967              		.loc 1 3135 0
 9968 03a2 D7F8B830 		ldr	r3, [r7, #184]
 9969 03a6 A3F50043 		sub	r3, r3, #32768
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 232


 9970 03aa 9A03     		lsls	r2, r3, #14
 9971 03ac D7F8C430 		ldr	r3, [r7, #196]
 9972 03b0 A3F50043 		sub	r3, r3, #32768
 9973 03b4 92FBF3F3 		sdiv	r3, r2, r3
 9974 03b8 C7F8C430 		str	r3, [r7, #196]
3136:ad5940.c      ****     ADCCode &= 0x7fff;
 9975              		.loc 1 3136 0
 9976 03bc D7F8C430 		ldr	r3, [r7, #196]
 9977 03c0 C3F30E03 		ubfx	r3, r3, #0, #15
 9978 03c4 C7F8C430 		str	r3, [r7, #196]
3137:ad5940.c      ****     AD5940_WriteReg(regaddr_gain, ADCCode);
 9979              		.loc 1 3137 0
 9980 03c8 D7F8AC30 		ldr	r3, [r7, #172]
 9981 03cc 9BB2     		uxth	r3, r3
 9982 03ce D7F8C420 		ldr	r2, [r7, #196]
 9983 03d2 1146     		mov	r1, r2
 9984 03d4 1846     		mov	r0, r3
 9985 03d6 FFF7FEFF 		bl	AD5940_WriteReg
 9986              	.L516:
 9987              	.LBE17:
3138:ad5940.c      ****   }
3139:ad5940.c      **** 
3140:ad5940.c      ****   /* Restore INTC1 SINC2 configure */
3141:ad5940.c      ****   if(INTCCfg&AFEINTSRC_SINC2RDY);
 9988              		.loc 1 3141 0
 9989 03da D7F8A430 		ldr	r3, [r7, #164]
 9990 03de 03F00403 		and	r3, r3, #4
 9991 03e2 002B     		cmp	r3, #0
 9992 03e4 04D1     		bne	.L523
3142:ad5940.c      ****   else
3143:ad5940.c      ****     AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_SINC2RDY, bFALSE); /* Disable SINC2 Interrupt */
 9993              		.loc 1 3143 0
 9994 03e6 0022     		movs	r2, #0
 9995 03e8 0421     		movs	r1, #4
 9996 03ea 0120     		movs	r0, #1
 9997 03ec FFF7FEFF 		bl	AD5940_INTCCfg
 9998              	.L523:
3144:ad5940.c      **** 
3145:ad5940.c      ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, 0);  /* Lock KEY */
 9999              		.loc 1 3145 0
 10000 03f0 0021     		movs	r1, #0
 10001 03f2 42F23020 		movw	r0, #8752
 10002 03f6 FFF7FEFF 		bl	AD5940_WriteReg
3146:ad5940.c      ****   /* Done */
3147:ad5940.c      ****   return AD5940ERR_OK;
 10003              		.loc 1 3147 0
 10004 03fa 0023     		movs	r3, #0
 10005 03fc 0EE0     		b	.L524
 10006              	.L526:
 10007              	.LBB20:
 10008              	.LBB16:
3056:ad5940.c      ****     }
 10009              		.loc 1 3056 0
 10010 03fe 00BF     		nop
 10011 0400 02E0     		b	.L514
 10012              	.L527:
 10013              	.LBE16:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 233


 10014              	.LBE20:
 10015              	.LBB21:
 10016              	.LBB19:
3126:ad5940.c      ****     }
 10017              		.loc 1 3126 0
 10018 0402 00BF     		nop
 10019 0404 00E0     		b	.L514
 10020              	.L528:
 10021              	.LBE19:
3133:ad5940.c      ****     /* Calculate and write the result to registers */
 10022              		.loc 1 3133 0
 10023 0406 00BF     		nop
 10024              	.L514:
 10025              	.LBE21:
3148:ad5940.c      **** 
3149:ad5940.c      **** ADCPGACALERROR_TIMEOUT:
3150:ad5940.c      ****   AD5940_ADCConvtCtrlS(bFALSE);  /* Stop conversion */
 10026              		.loc 1 3150 0
 10027 0408 0020     		movs	r0, #0
 10028 040a FFF7FEFF 		bl	AD5940_ADCConvtCtrlS
3151:ad5940.c      ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, 0);  /* Lock KEY */
 10029              		.loc 1 3151 0
 10030 040e 0021     		movs	r1, #0
 10031 0410 42F23020 		movw	r0, #8752
 10032 0414 FFF7FEFF 		bl	AD5940_WriteReg
3152:ad5940.c      ****   return AD5940ERR_TIMEOUT;
 10033              		.loc 1 3152 0
 10034 0418 6FF00903 		mvn	r3, #9
 10035              	.L524:
3153:ad5940.c      **** }
 10036              		.loc 1 3153 0 discriminator 1
 10037 041c 1846     		mov	r0, r3
 10038 041e C837     		adds	r7, r7, #200
 10039              		.cfi_def_cfa_offset 8
 10040 0420 BD46     		mov	sp, r7
 10041              		.cfi_def_cfa_register 13
 10042              		@ sp needed
 10043 0422 80BD     		pop	{r7, pc}
 10044              	.L532:
 10045              		.align	2
 10046              	.L531:
 10047 0424 C4010000 		.word	ideal_pga_gain.7066
 10048              		.cfi_endproc
 10049              	.LFE113:
 10050              		.size	AD5940_ADCPGACal, .-AD5940_ADCPGACal
 10051              		.section	.text.AD5940_LPTIAOffsetCal,"ax",%progbits
 10052              		.align	2
 10053              		.global	AD5940_LPTIAOffsetCal
 10054              		.thumb
 10055              		.thumb_func
 10056              		.type	AD5940_LPTIAOffsetCal, %function
 10057              	AD5940_LPTIAOffsetCal:
 10058              	.LFB114:
3154:ad5940.c      **** 
3155:ad5940.c      **** /**
3156:ad5940.c      ****  * @brief Calibrate LPTIA offset
3157:ad5940.c      ****  * @param pLPTIAOffsetCal Pointer to LPTIA offset calibration settings.
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 234


3158:ad5940.c      ****  * @return AD5940ERR_OK.
3159:ad5940.c      **** **/
3160:ad5940.c      **** AD5940Err AD5940_LPTIAOffsetCal(LPTIAOffsetCal_Type *pLPTIAOffsetCal)
3161:ad5940.c      **** {
 10059              		.loc 1 3161 0
 10060              		.cfi_startproc
 10061              		@ args = 0, pretend = 0, frame = 128
 10062              		@ frame_needed = 1, uses_anonymous_args = 0
 10063 0000 80B5     		push	{r7, lr}
 10064              		.cfi_def_cfa_offset 8
 10065              		.cfi_offset 7, -8
 10066              		.cfi_offset 14, -4
 10067 0002 A0B0     		sub	sp, sp, #128
 10068              		.cfi_def_cfa_offset 136
 10069 0004 00AF     		add	r7, sp, #0
 10070              		.cfi_def_cfa_register 7
 10071 0006 7860     		str	r0, [r7, #4]
3162:ad5940.c      ****   AD5940Err error = AD5940ERR_OK;
 10072              		.loc 1 3162 0
 10073 0008 0023     		movs	r3, #0
 10074 000a FB67     		str	r3, [r7, #124]
3163:ad5940.c      ****   LPLoopCfg_Type lploop_cfg;
3164:ad5940.c      ****   ADCBaseCfg_Type adc_base;
3165:ad5940.c      ****   ADCFilterCfg_Type adc_filter;
3166:ad5940.c      **** 
3167:ad5940.c      ****   int32_t time_out;
3168:ad5940.c      ****   uint32_t INTCCfg;
3169:ad5940.c      ****   int32_t ADCCode;
3170:ad5940.c      ****   BoolFlag bADCClk32MHzMode;
3171:ad5940.c      ****   
3172:ad5940.c      ****   if(pLPTIAOffsetCal == NULL) return AD5940ERR_NULLP;  
 10075              		.loc 1 3172 0
 10076 000c 7B68     		ldr	r3, [r7, #4]
 10077 000e 002B     		cmp	r3, #0
 10078 0010 02D1     		bne	.L534
 10079              		.loc 1 3172 0 is_stmt 0 discriminator 1
 10080 0012 6FF00203 		mvn	r3, #2
 10081 0016 FDE0     		b	.L548
 10082              	.L534:
3173:ad5940.c      ****   if(pLPTIAOffsetCal->AdcClkFreq > (32000000*0.8))
 10083              		.loc 1 3173 0 is_stmt 1
 10084 0018 7B68     		ldr	r3, [r7, #4]
 10085 001a 9B68     		ldr	r3, [r3, #8]	@ float
 10086 001c 7F49     		ldr	r1, .L550
 10087 001e 1846     		mov	r0, r3
 10088 0020 FFF7FEFF 		bl	__aeabi_fcmpgt
 10089 0024 0346     		mov	r3, r0
 10090 0026 002B     		cmp	r3, #0
 10091 0028 02D0     		beq	.L536
3174:ad5940.c      ****     bADCClk32MHzMode = bTRUE;
 10092              		.loc 1 3174 0
 10093 002a 0123     		movs	r3, #1
 10094 002c 87F87B30 		strb	r3, [r7, #123]
 10095              	.L536:
3175:ad5940.c      **** 
3176:ad5940.c      ****   /* Step0: Do initialization */
3177:ad5940.c      ****   /* Turn on AD5940 references in case it's disabled. */
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 235


3178:ad5940.c      ****   __AD5940_ReferenceON();
 10096              		.loc 1 3178 0
 10097 0030 FFF7FEFF 		bl	__AD5940_ReferenceON
3179:ad5940.c      ****   lploop_cfg.LpAmpCfg.LpAmpSel = pLPTIAOffsetCal->LpAmpSel;
 10098              		.loc 1 3179 0
 10099 0034 7B68     		ldr	r3, [r7, #4]
 10100 0036 1B68     		ldr	r3, [r3]
 10101 0038 3B65     		str	r3, [r7, #80]
3180:ad5940.c      ****   lploop_cfg.LpAmpCfg.LpAmpPwrMod = pLPTIAOffsetCal->LpAmpPwrMod;  /* Power mode will affect amp of
 10102              		.loc 1 3180 0
 10103 003a 7B68     		ldr	r3, [r7, #4]
 10104 003c 5B6A     		ldr	r3, [r3, #36]
 10105 003e 3B66     		str	r3, [r7, #96]
3181:ad5940.c      ****   lploop_cfg.LpAmpCfg.LpPaPwrEn = bTRUE;
 10106              		.loc 1 3181 0
 10107 0040 0123     		movs	r3, #1
 10108 0042 87F86830 		strb	r3, [r7, #104]
3182:ad5940.c      ****   lploop_cfg.LpAmpCfg.LpTiaPwrEn = bTRUE;
 10109              		.loc 1 3182 0
 10110 0046 0123     		movs	r3, #1
 10111 0048 87F86930 		strb	r3, [r7, #105]
3183:ad5940.c      ****   lploop_cfg.LpAmpCfg.LpTiaRf = LPTIARF_OPEN;
 10112              		.loc 1 3183 0
 10113 004c 0023     		movs	r3, #0
 10114 004e 7B65     		str	r3, [r7, #84]
3184:ad5940.c      ****   lploop_cfg.LpAmpCfg.LpTiaRload = LPTIARLOAD_100R;
 10115              		.loc 1 3184 0
 10116 0050 0423     		movs	r3, #4
 10117 0052 BB65     		str	r3, [r7, #88]
3185:ad5940.c      ****   lploop_cfg.LpAmpCfg.LpTiaRtia = pLPTIAOffsetCal->LpTiaRtia;
 10118              		.loc 1 3185 0
 10119 0054 7B68     		ldr	r3, [r7, #4]
 10120 0056 DB6A     		ldr	r3, [r3, #44]
 10121 0058 FB65     		str	r3, [r7, #92]
3186:ad5940.c      ****   lploop_cfg.LpAmpCfg.LpTiaSW = pLPTIAOffsetCal->LpTiaSW;  /* Disconnect capacitors so it settles q
 10122              		.loc 1 3186 0
 10123 005a 7B68     		ldr	r3, [r7, #4]
 10124 005c 9B6A     		ldr	r3, [r3, #40]
 10125 005e 7B66     		str	r3, [r7, #100]
3187:ad5940.c      ****   lploop_cfg.LpDacCfg.LpdacSel = (pLPTIAOffsetCal->LpAmpSel == LPAMP0)?LPDAC0:LPDAC1;
 10126              		.loc 1 3187 0
 10127 0060 7B68     		ldr	r3, [r7, #4]
 10128 0062 1B68     		ldr	r3, [r3]
 10129 0064 002B     		cmp	r3, #0
 10130 0066 14BF     		ite	ne
 10131 0068 0123     		movne	r3, #1
 10132 006a 0023     		moveq	r3, #0
 10133 006c DBB2     		uxtb	r3, r3
 10134 006e 3B63     		str	r3, [r7, #48]
3188:ad5940.c      ****   lploop_cfg.LpDacCfg.DacData12Bit = pLPTIAOffsetCal->DacData12Bit;
 10135              		.loc 1 3188 0
 10136 0070 7B68     		ldr	r3, [r7, #4]
 10137 0072 9B69     		ldr	r3, [r3, #24]
 10138 0074 9BB2     		uxth	r3, r3
 10139 0076 A7F84A30 		strh	r3, [r7, #74]	@ movhi
3189:ad5940.c      ****   lploop_cfg.LpDacCfg.DacData6Bit = pLPTIAOffsetCal->DacData6Bit;  
 10140              		.loc 1 3189 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 236


 10141 007a 7B68     		ldr	r3, [r7, #4]
 10142 007c DB69     		ldr	r3, [r3, #28]
 10143 007e 9BB2     		uxth	r3, r3
 10144 0080 A7F84C30 		strh	r3, [r7, #76]	@ movhi
3190:ad5940.c      ****   lploop_cfg.LpDacCfg.DataRst = bFALSE;
 10145              		.loc 1 3190 0
 10146 0084 0023     		movs	r3, #0
 10147 0086 87F84830 		strb	r3, [r7, #72]
3191:ad5940.c      ****   lploop_cfg.LpDacCfg.LpDacRef = LPDACREF_2P5;
 10148              		.loc 1 3191 0
 10149 008a 0023     		movs	r3, #0
 10150 008c 7B64     		str	r3, [r7, #68]
3192:ad5940.c      ****   lploop_cfg.LpDacCfg.LpDacSrc = LPDACSRC_MMR;
 10151              		.loc 1 3192 0
 10152 008e 0023     		movs	r3, #0
 10153 0090 7B63     		str	r3, [r7, #52]
3193:ad5940.c      ****   lploop_cfg.LpDacCfg.LpDacVzeroMux = pLPTIAOffsetCal->LpDacVzeroMux;
 10154              		.loc 1 3193 0
 10155 0092 7B68     		ldr	r3, [r7, #4]
 10156 0094 1B6A     		ldr	r3, [r3, #32]
 10157 0096 BB63     		str	r3, [r7, #56]
3194:ad5940.c      ****   lploop_cfg.LpDacCfg.LpDacSW = LPDACSW_VZERO2LPTIA;
 10158              		.loc 1 3194 0
 10159 0098 0423     		movs	r3, #4
 10160 009a 3B64     		str	r3, [r7, #64]
3195:ad5940.c      ****   lploop_cfg.LpDacCfg.LpDacVbiasMux = LPDACVBIAS_12BIT;
 10161              		.loc 1 3195 0
 10162 009c 0023     		movs	r3, #0
 10163 009e FB63     		str	r3, [r7, #60]
3196:ad5940.c      ****   lploop_cfg.LpDacCfg.PowerEn = bTRUE;
 10164              		.loc 1 3196 0
 10165 00a0 0123     		movs	r3, #1
 10166 00a2 87F84930 		strb	r3, [r7, #73]
3197:ad5940.c      ****   AD5940_LPLoopCfgS(&lploop_cfg);
 10167              		.loc 1 3197 0
 10168 00a6 07F13003 		add	r3, r7, #48
 10169 00aa 1846     		mov	r0, r3
 10170 00ac FFF7FEFF 		bl	AD5940_LPLoopCfgS
3198:ad5940.c      **** 
3199:ad5940.c      ****   /* Initialize ADC filters ADCRawData-->SINC3-->SINC2+NOTCH. Use SIN2 data for calibration-->Lower
3200:ad5940.c      ****   adc_filter.ADCSinc3Osr = pLPTIAOffsetCal->ADCSinc3Osr;
 10171              		.loc 1 3200 0
 10172 00b0 7B68     		ldr	r3, [r7, #4]
 10173 00b2 DB68     		ldr	r3, [r3, #12]
 10174 00b4 3B61     		str	r3, [r7, #16]
3201:ad5940.c      ****   adc_filter.ADCSinc2Osr = pLPTIAOffsetCal->ADCSinc2Osr;  /* 800KSPS/4/1333 = 150SPS */
 10175              		.loc 1 3201 0
 10176 00b6 7B68     		ldr	r3, [r7, #4]
 10177 00b8 1B69     		ldr	r3, [r3, #16]
 10178 00ba 7B61     		str	r3, [r7, #20]
3202:ad5940.c      ****   adc_filter.ADCAvgNum = ADCAVGNUM_2;               /* Don't care about it. Average function is onl
 10179              		.loc 1 3202 0
 10180 00bc 0023     		movs	r3, #0
 10181 00be BB61     		str	r3, [r7, #24]
3203:ad5940.c      ****   adc_filter.ADCRate = bADCClk32MHzMode?ADCRATE_1P6MHZ:ADCRATE_800KHZ;        /* If ADC clock is 32
 10182              		.loc 1 3203 0
 10183 00c0 97F87B30 		ldrb	r3, [r7, #123]	@ zero_extendqisi2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 237


 10184 00c4 002B     		cmp	r3, #0
 10185 00c6 0CBF     		ite	eq
 10186 00c8 0123     		moveq	r3, #1
 10187 00ca 0023     		movne	r3, #0
 10188 00cc DBB2     		uxtb	r3, r3
 10189 00ce FB61     		str	r3, [r7, #28]
3204:ad5940.c      ****   adc_filter.BpNotch = bTRUE;                       /* SINC2+Notch is one block, when bypass notch 
 10190              		.loc 1 3204 0
 10191 00d0 0123     		movs	r3, #1
 10192 00d2 87F82030 		strb	r3, [r7, #32]
3205:ad5940.c      ****   adc_filter.BpSinc3 = bFALSE;                      /* We use SINC3 filter. */
 10193              		.loc 1 3205 0
 10194 00d6 0023     		movs	r3, #0
 10195 00d8 87F82130 		strb	r3, [r7, #33]
3206:ad5940.c      ****   adc_filter.Sinc2NotchEnable = bTRUE;              /* Enable the SINC2+Notch block. You can also u
 10196              		.loc 1 3206 0
 10197 00dc 0123     		movs	r3, #1
 10198 00de 87F82230 		strb	r3, [r7, #34]
3207:ad5940.c      ****   AD5940_ADCFilterCfgS(&adc_filter);
 10199              		.loc 1 3207 0
 10200 00e2 07F11003 		add	r3, r7, #16
 10201 00e6 1846     		mov	r0, r3
 10202 00e8 FFF7FEFF 		bl	AD5940_ADCFilterCfgS
3208:ad5940.c      ****   /* Initialize ADC MUx and PGA */
3209:ad5940.c      ****   if(pLPTIAOffsetCal->LpAmpSel == LPAMP0)
 10203              		.loc 1 3209 0
 10204 00ec 7B68     		ldr	r3, [r7, #4]
 10205 00ee 1B68     		ldr	r3, [r3]
 10206 00f0 002B     		cmp	r3, #0
 10207 00f2 04D1     		bne	.L538
3210:ad5940.c      ****   {
3211:ad5940.c      ****     adc_base.ADCMuxP = ADCMUXP_LPTIA0_P;      
 10208              		.loc 1 3211 0
 10209 00f4 2123     		movs	r3, #33
 10210 00f6 7B62     		str	r3, [r7, #36]
3212:ad5940.c      ****     adc_base.ADCMuxN = ADCMUXN_LPTIA0_N;
 10211              		.loc 1 3212 0
 10212 00f8 0223     		movs	r3, #2
 10213 00fa BB62     		str	r3, [r7, #40]
 10214 00fc 03E0     		b	.L539
 10215              	.L538:
3213:ad5940.c      ****   }
3214:ad5940.c      ****   else
3215:ad5940.c      ****   {
3216:ad5940.c      ****     adc_base.ADCMuxP = ADCMUXP_LPTIA1_P;      
 10216              		.loc 1 3216 0
 10217 00fe 2223     		movs	r3, #34
 10218 0100 7B62     		str	r3, [r7, #36]
3217:ad5940.c      ****     adc_base.ADCMuxN = ADCMUXN_LPTIA1_N;
 10219              		.loc 1 3217 0
 10220 0102 0323     		movs	r3, #3
 10221 0104 BB62     		str	r3, [r7, #40]
 10222              	.L539:
3218:ad5940.c      ****   }
3219:ad5940.c      ****   adc_base.ADCPga = pLPTIAOffsetCal->ADCPga;                 /* Set correct Gain value. */
 10223              		.loc 1 3219 0
 10224 0106 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 238


 10225 0108 5B69     		ldr	r3, [r3, #20]
 10226 010a FB62     		str	r3, [r7, #44]
3220:ad5940.c      ****   AD5940_ADCBaseCfgS(&adc_base);
 10227              		.loc 1 3220 0
 10228 010c 07F12403 		add	r3, r7, #36
 10229 0110 1846     		mov	r0, r3
 10230 0112 FFF7FEFF 		bl	AD5940_ADCBaseCfgS
3221:ad5940.c      ****   /* Turn ON ADC and its reference. And SINC2. */
3222:ad5940.c      ****   AD5940_AFECtrlS(AFECTRL_ALL, bFALSE); /* Disable all firstly, we only enable things we use */
 10231              		.loc 1 3222 0
 10232 0116 0021     		movs	r1, #0
 10233 0118 4148     		ldr	r0, .L550+4
 10234 011a FFF7FEFF 		bl	AD5940_AFECtrlS
3223:ad5940.c      ****   AD5940_AFECtrlS(AFECTRL_ADCPWR|AFECTRL_HPREFPWR|AFECTRL_SINC2NOTCH, bTRUE);
 10235              		.loc 1 3223 0
 10236 011e 0121     		movs	r1, #1
 10237 0120 4048     		ldr	r0, .L550+8
 10238 0122 FFF7FEFF 		bl	AD5940_AFECtrlS
3224:ad5940.c      ****   AD5940_Delay10us(25);                     /* Wait 250us for reference power up */
 10239              		.loc 1 3224 0
 10240 0126 1920     		movs	r0, #25
 10241 0128 FFF7FEFF 		bl	AD5940_Delay10us
3225:ad5940.c      ****   /* INTC configure and open calibration lock */
3226:ad5940.c      ****   INTCCfg = AD5940_INTCGetCfg(AFEINTC_1);
 10242              		.loc 1 3226 0
 10243 012c 0120     		movs	r0, #1
 10244 012e FFF7FEFF 		bl	AD5940_INTCGetCfg
 10245 0132 7867     		str	r0, [r7, #116]
3227:ad5940.c      ****   AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_SINC2RDY, bTRUE); /* Enable SINC2 Interrupt in INTC1 */
 10246              		.loc 1 3227 0
 10247 0134 0122     		movs	r2, #1
 10248 0136 0421     		movs	r1, #4
 10249 0138 0120     		movs	r0, #1
 10250 013a FFF7FEFF 		bl	AD5940_INTCCfg
3228:ad5940.c      ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, KEY_CALDATLOCK);  /* Unlock KEY */
 10251              		.loc 1 3228 0
 10252 013e 3A49     		ldr	r1, .L550+12
 10253 0140 42F23020 		movw	r0, #8752
 10254 0144 FFF7FEFF 		bl	AD5940_WriteReg
 10255              	.LBB22:
3229:ad5940.c      **** 
3230:ad5940.c      ****   /* Do offset calibration. */
3231:ad5940.c      ****   {
3232:ad5940.c      ****     int32_t ExpectedCode = 0x8000;        /* Ideal ADC output */
 10256              		.loc 1 3232 0
 10257 0148 4FF40043 		mov	r3, #32768
 10258 014c 3B67     		str	r3, [r7, #112]
3233:ad5940.c      ****     AD5940_WriteReg(REG_AFE_ADCOFFSETLPTIA0, 0);   /* Reset offset register */
 10259              		.loc 1 3233 0
 10260 014e 0021     		movs	r1, #0
 10261 0150 42F28820 		movw	r0, #8840
 10262 0154 FFF7FEFF 		bl	AD5940_WriteReg
3234:ad5940.c      **** 
3235:ad5940.c      ****     if(pLPTIAOffsetCal->SettleTime10us > 0)
 10263              		.loc 1 3235 0
 10264 0158 7B68     		ldr	r3, [r7, #4]
 10265 015a 1B6B     		ldr	r3, [r3, #48]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 239


 10266 015c 002B     		cmp	r3, #0
 10267 015e 04DD     		ble	.L540
3236:ad5940.c      ****       AD5940_Delay10us(pLPTIAOffsetCal->SettleTime10us);  /* Delay 10us */
 10268              		.loc 1 3236 0
 10269 0160 7B68     		ldr	r3, [r7, #4]
 10270 0162 1B6B     		ldr	r3, [r3, #48]
 10271 0164 1846     		mov	r0, r3
 10272 0166 FFF7FEFF 		bl	AD5940_Delay10us
 10273              	.L540:
3237:ad5940.c      ****     time_out = pLPTIAOffsetCal->TimeOut10us;   /* Reset time out counter */
 10274              		.loc 1 3237 0
 10275 016a 7B68     		ldr	r3, [r7, #4]
 10276 016c 5B6B     		ldr	r3, [r3, #52]
 10277 016e FB60     		str	r3, [r7, #12]
3238:ad5940.c      ****     ADCCode = __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and then t
 10278              		.loc 1 3238 0
 10279 0170 07F10C03 		add	r3, r7, #12
 10280 0174 1846     		mov	r0, r3
 10281 0176 FFF7FEFF 		bl	__AD5940_TakeMeasurement
 10282 017a 0346     		mov	r3, r0
 10283 017c FB66     		str	r3, [r7, #108]
3239:ad5940.c      ****     if(time_out == 0)
 10284              		.loc 1 3239 0
 10285 017e FB68     		ldr	r3, [r7, #12]
 10286 0180 002B     		cmp	r3, #0
 10287 0182 03D1     		bne	.L541
3240:ad5940.c      ****     {
3241:ad5940.c      ****       error = AD5940ERR_TIMEOUT;
 10288              		.loc 1 3241 0
 10289 0184 6FF00903 		mvn	r3, #9
 10290 0188 FB67     		str	r3, [r7, #124]
3242:ad5940.c      ****       goto LPTIAOFFSETCALERROR;
 10291              		.loc 1 3242 0
 10292 018a 3AE0     		b	.L542
 10293              	.L541:
3243:ad5940.c      ****     }  /* Time out error. */
3244:ad5940.c      ****     /* Calculate and write the result to registers before gain calibration */
3245:ad5940.c      ****     ADCCode = ((ExpectedCode - ADCCode)<<3);  /* We will shift back 1bit below */
 10294              		.loc 1 3245 0
 10295 018c 3A6F     		ldr	r2, [r7, #112]
 10296 018e FB6E     		ldr	r3, [r7, #108]
 10297 0190 D31A     		subs	r3, r2, r3
 10298 0192 DB00     		lsls	r3, r3, #3
 10299 0194 FB66     		str	r3, [r7, #108]
3246:ad5940.c      ****     ADCCode = ((ADCCode+1)>>1); /* Round 0.5 */
 10300              		.loc 1 3246 0
 10301 0196 FB6E     		ldr	r3, [r7, #108]
 10302 0198 0133     		adds	r3, r3, #1
 10303 019a 5B10     		asrs	r3, r3, #1
 10304 019c FB66     		str	r3, [r7, #108]
3247:ad5940.c      ****     if((ADCCode > 0x3fff) ||
 10305              		.loc 1 3247 0
 10306 019e FB6E     		ldr	r3, [r7, #108]
 10307 01a0 B3F5804F 		cmp	r3, #16384
 10308 01a4 03DA     		bge	.L543
 10309              		.loc 1 3247 0 is_stmt 0 discriminator 1
 10310 01a6 FB6E     		ldr	r3, [r7, #108]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 240


 10311 01a8 13F5804F 		cmn	r3, #16384
 10312 01ac 03DA     		bge	.L544
 10313              	.L543:
3248:ad5940.c      ****         (ADCCode < -0x4000))    /* The register used for offset calibration is limited to -0x4000 t
3249:ad5940.c      ****     {
3250:ad5940.c      ****       error = AD5940ERR_CALOR;
 10314              		.loc 1 3250 0 is_stmt 1
 10315 01ae 6FF00A03 		mvn	r3, #10
 10316 01b2 FB67     		str	r3, [r7, #124]
3251:ad5940.c      ****       goto LPTIAOFFSETCALERROR;
 10317              		.loc 1 3251 0
 10318 01b4 25E0     		b	.L542
 10319              	.L544:
3252:ad5940.c      ****     }
3253:ad5940.c      ****     ADCCode &= 0x7fff;
 10320              		.loc 1 3253 0
 10321 01b6 FB6E     		ldr	r3, [r7, #108]
 10322 01b8 C3F30E03 		ubfx	r3, r3, #0, #15
 10323 01bc FB66     		str	r3, [r7, #108]
3254:ad5940.c      ****     if(pLPTIAOffsetCal->LpAmpSel == LPAMP0)
 10324              		.loc 1 3254 0
 10325 01be 7B68     		ldr	r3, [r7, #4]
 10326 01c0 1B68     		ldr	r3, [r3]
 10327 01c2 002B     		cmp	r3, #0
 10328 01c4 06D1     		bne	.L545
3255:ad5940.c      ****       AD5940_WriteReg(REG_AFE_ADCOFFSETLPTIA0, ADCCode);
 10329              		.loc 1 3255 0
 10330 01c6 FB6E     		ldr	r3, [r7, #108]
 10331 01c8 1946     		mov	r1, r3
 10332 01ca 42F28820 		movw	r0, #8840
 10333 01ce FFF7FEFF 		bl	AD5940_WriteReg
 10334 01d2 05E0     		b	.L546
 10335              	.L545:
3256:ad5940.c      ****     else
3257:ad5940.c      ****       AD5940_WriteReg(REG_AFE_ADCOFFSETLPTIA1, ADCCode);
 10336              		.loc 1 3257 0
 10337 01d4 FB6E     		ldr	r3, [r7, #108]
 10338 01d6 1946     		mov	r1, r3
 10339 01d8 4FF40B50 		mov	r0, #8896
 10340 01dc FFF7FEFF 		bl	AD5940_WriteReg
 10341              	.L546:
 10342              	.LBE22:
3258:ad5940.c      ****   }
3259:ad5940.c      ****   /* Restore INTC1 SINC2 configure */
3260:ad5940.c      ****   if(INTCCfg&AFEINTSRC_SINC2RDY);
 10343              		.loc 1 3260 0
 10344 01e0 7B6F     		ldr	r3, [r7, #116]
 10345 01e2 03F00403 		and	r3, r3, #4
 10346 01e6 002B     		cmp	r3, #0
 10347 01e8 04D1     		bne	.L547
3261:ad5940.c      ****   else
3262:ad5940.c      ****     AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_SINC2RDY, bFALSE); /* Disable SINC2 Interrupt */
 10348              		.loc 1 3262 0
 10349 01ea 0022     		movs	r2, #0
 10350 01ec 0421     		movs	r1, #4
 10351 01ee 0120     		movs	r0, #1
 10352 01f0 FFF7FEFF 		bl	AD5940_INTCCfg
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 241


 10353              	.L547:
3263:ad5940.c      ****   
3264:ad5940.c      ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, 0);  /* Lock KEY */
 10354              		.loc 1 3264 0
 10355 01f4 0021     		movs	r1, #0
 10356 01f6 42F23020 		movw	r0, #8752
 10357 01fa FFF7FEFF 		bl	AD5940_WriteReg
3265:ad5940.c      ****   /* Done */
3266:ad5940.c      ****   return AD5940ERR_OK;
 10358              		.loc 1 3266 0
 10359 01fe 0023     		movs	r3, #0
 10360 0200 08E0     		b	.L548
 10361              	.L542:
3267:ad5940.c      **** 
3268:ad5940.c      **** LPTIAOFFSETCALERROR:
3269:ad5940.c      ****   AD5940_ADCConvtCtrlS(bFALSE);  /* Stop conversion */
 10362              		.loc 1 3269 0
 10363 0202 0020     		movs	r0, #0
 10364 0204 FFF7FEFF 		bl	AD5940_ADCConvtCtrlS
3270:ad5940.c      ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, 0);  /* Lock KEY */
 10365              		.loc 1 3270 0
 10366 0208 0021     		movs	r1, #0
 10367 020a 42F23020 		movw	r0, #8752
 10368 020e FFF7FEFF 		bl	AD5940_WriteReg
3271:ad5940.c      ****   return error;
 10369              		.loc 1 3271 0
 10370 0212 FB6F     		ldr	r3, [r7, #124]
 10371              	.L548:
3272:ad5940.c      **** }
 10372              		.loc 1 3272 0 discriminator 1
 10373 0214 1846     		mov	r0, r3
 10374 0216 8037     		adds	r7, r7, #128
 10375              		.cfi_def_cfa_offset 8
 10376 0218 BD46     		mov	sp, r7
 10377              		.cfi_def_cfa_register 13
 10378              		@ sp needed
 10379 021a 80BD     		pop	{r7, pc}
 10380              	.L551:
 10381              		.align	2
 10382              	.L550:
 10383 021c 0050C34B 		.word	1271091200
 10384 0220 E0FF3900 		.word	3801056
 10385 0224 A0000100 		.word	65696
 10386 0228 AFA587DE 		.word	-561535569
 10387              		.cfi_endproc
 10388              	.LFE114:
 10389              		.size	AD5940_LPTIAOffsetCal, .-AD5940_LPTIAOffsetCal
 10390              		.section	.text.AD5940_HSTIAOffsetCal,"ax",%progbits
 10391              		.align	2
 10392              		.global	AD5940_HSTIAOffsetCal
 10393              		.thumb
 10394              		.thumb_func
 10395              		.type	AD5940_HSTIAOffsetCal, %function
 10396              	AD5940_HSTIAOffsetCal:
 10397              	.LFB115:
3273:ad5940.c      **** 
3274:ad5940.c      **** /**
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 242


3275:ad5940.c      ****  * @brief Calibrate HSTIA offset-ongoing.
3276:ad5940.c      ****  * @param pHSTIAOffsetCal: pointer to configuration.
3277:ad5940.c      ****  * @return AD5940ERR_OK.
3278:ad5940.c      **** **/
3279:ad5940.c      **** AD5940Err AD5940_HSTIAOffsetCal(LPTIAOffsetCal_Type *pHSTIAOffsetCal)
3280:ad5940.c      **** {
 10398              		.loc 1 3280 0
 10399              		.cfi_startproc
 10400              		@ args = 0, pretend = 0, frame = 8
 10401              		@ frame_needed = 1, uses_anonymous_args = 0
 10402              		@ link register save eliminated.
 10403 0000 80B4     		push	{r7}
 10404              		.cfi_def_cfa_offset 4
 10405              		.cfi_offset 7, -4
 10406 0002 83B0     		sub	sp, sp, #12
 10407              		.cfi_def_cfa_offset 16
 10408 0004 00AF     		add	r7, sp, #0
 10409              		.cfi_def_cfa_register 7
 10410 0006 7860     		str	r0, [r7, #4]
3281:ad5940.c      ****   return AD5940ERR_OK;
 10411              		.loc 1 3281 0
 10412 0008 0023     		movs	r3, #0
3282:ad5940.c      **** }
 10413              		.loc 1 3282 0
 10414 000a 1846     		mov	r0, r3
 10415 000c 0C37     		adds	r7, r7, #12
 10416              		.cfi_def_cfa_offset 4
 10417 000e BD46     		mov	sp, r7
 10418              		.cfi_def_cfa_register 13
 10419              		@ sp needed
 10420 0010 80BC     		pop	{r7}
 10421              		.cfi_restore 7
 10422              		.cfi_def_cfa_offset 0
 10423 0012 7047     		bx	lr
 10424              		.cfi_endproc
 10425              	.LFE115:
 10426              		.size	AD5940_HSTIAOffsetCal, .-AD5940_HSTIAOffsetCal
 10427              		.global	__aeabi_fcmple
 10428              		.section	.rodata
 10429 010b 00       		.align	2
 10430              	.LC16:
 10431 010c C8000000 		.word	200
 10432 0110 E8030000 		.word	1000
 10433 0114 88130000 		.word	5000
 10434 0118 10270000 		.word	10000
 10435 011c 204E0000 		.word	20000
 10436 0120 409C0000 		.word	40000
 10437 0124 80380100 		.word	80000
 10438 0128 00710200 		.word	160000
 10439 012c 00000000 		.word	0
 10440              		.section	.text.AD5940_HSRtiaCal,"ax",%progbits
 10441              		.align	2
 10442              		.global	AD5940_HSRtiaCal
 10443              		.thumb
 10444              		.thumb_func
 10445              		.type	AD5940_HSRtiaCal, %function
 10446              	AD5940_HSRtiaCal:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 243


 10447              	.LFB116:
3283:ad5940.c      **** 
3284:ad5940.c      **** /**
3285:ad5940.c      ****  * @brief Measure HSTIA internal RTIA impedance.
3286:ad5940.c      ****  * @param pCalCfg: pointer to calibration structure.
3287:ad5940.c      ****  * @param pResult:  Pointer to a variable that used to store result. 
3288:ad5940.c      ****  *                  If bPolarResult in structure is set, then use type fImpPol_Type otherwise use f
3289:ad5940.c      ****  * @return AD5940ERR_OK if succeed.
3290:ad5940.c      **** **/
3291:ad5940.c      **** AD5940Err AD5940_HSRtiaCal(HSRTIACal_Type *pCalCfg, void *pResult)
3292:ad5940.c      **** {
 10448              		.loc 1 3292 0
 10449              		.cfi_startproc
 10450              		@ args = 0, pretend = 0, frame = 296
 10451              		@ frame_needed = 1, uses_anonymous_args = 0
 10452 0000 B0B5     		push	{r4, r5, r7, lr}
 10453              		.cfi_def_cfa_offset 16
 10454              		.cfi_offset 4, -16
 10455              		.cfi_offset 5, -12
 10456              		.cfi_offset 7, -8
 10457              		.cfi_offset 14, -4
 10458 0002 CAB0     		sub	sp, sp, #296
 10459              		.cfi_def_cfa_offset 312
 10460 0004 00AF     		add	r7, sp, #0
 10461              		.cfi_def_cfa_register 7
 10462 0006 07F10C03 		add	r3, r7, #12
 10463 000a 1860     		str	r0, [r3]
 10464 000c 07F10803 		add	r3, r7, #8
 10465 0010 1960     		str	r1, [r3]
3293:ad5940.c      ****   AFERefCfg_Type aferef_cfg;
3294:ad5940.c      ****   HSLoopCfg_Type hs_loop;
3295:ad5940.c      ****   DSPCfg_Type dsp_cfg;
3296:ad5940.c      ****   uint32_t INTCCfg;
3297:ad5940.c      ****   
3298:ad5940.c      ****   BoolFlag bADCClk32MHzMode = bFALSE;
 10466              		.loc 1 3298 0
 10467 0012 0023     		movs	r3, #0
 10468 0014 87F82731 		strb	r3, [r7, #295]
3299:ad5940.c      ****   uint32_t ExcitBuffGain = EXCITBUFGAIN_2;
 10469              		.loc 1 3299 0
 10470 0018 0023     		movs	r3, #0
 10471 001a C7F82031 		str	r3, [r7, #288]
3300:ad5940.c      ****   uint32_t HsDacGain = HSDACGAIN_1;
 10472              		.loc 1 3300 0
 10473 001e 0023     		movs	r3, #0
 10474 0020 C7F81C31 		str	r3, [r7, #284]
3301:ad5940.c      **** 
3302:ad5940.c      ****   float ExcitVolt; /* Excitation voltage, unit is mV */
3303:ad5940.c      ****   uint32_t RtiaVal;
3304:ad5940.c      ****   uint32_t const HpRtiaTable[]={200,1000,5000,10000,20000,40000,80000,160000,0};
 10475              		.loc 1 3304 0
 10476 0024 07F12803 		add	r3, r7, #40
 10477 0028 744A     		ldr	r2, .L591
 10478 002a 1C46     		mov	r4, r3
 10479 002c 1546     		mov	r5, r2
 10480 002e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 10481 0030 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 244


 10482 0032 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 10483 0034 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 10484 0036 2B68     		ldr	r3, [r5]
 10485 0038 2360     		str	r3, [r4]
3305:ad5940.c      ****   uint32_t WgAmpWord;
3306:ad5940.c      **** 
3307:ad5940.c      ****   iImpCar_Type DftRcal, DftRtia;
3308:ad5940.c      **** 
3309:ad5940.c      ****   if(pCalCfg == NULL) return AD5940ERR_NULLP;
 10486              		.loc 1 3309 0
 10487 003a 07F10C03 		add	r3, r7, #12
 10488 003e 1B68     		ldr	r3, [r3]
 10489 0040 002B     		cmp	r3, #0
 10490 0042 02D1     		bne	.L555
 10491              		.loc 1 3309 0 is_stmt 0 discriminator 1
 10492 0044 6FF00203 		mvn	r3, #2
 10493 0048 02E3     		b	.L581
 10494              	.L555:
3310:ad5940.c      ****   if(pCalCfg->fRcal == 0)
 10495              		.loc 1 3310 0 is_stmt 1
 10496 004a 07F10C03 		add	r3, r7, #12
 10497 004e 1B68     		ldr	r3, [r3]
 10498 0050 5B68     		ldr	r3, [r3, #4]	@ float
 10499 0052 4FF00001 		mov	r1, #0
 10500 0056 1846     		mov	r0, r3
 10501 0058 FFF7FEFF 		bl	__aeabi_fcmpeq
 10502 005c 0346     		mov	r3, r0
 10503 005e 002B     		cmp	r3, #0
 10504 0060 02D0     		beq	.L587
3311:ad5940.c      ****     return AD5940ERR_PARA;
 10505              		.loc 1 3311 0
 10506 0062 6FF00103 		mvn	r3, #1
 10507 0066 F3E2     		b	.L581
 10508              	.L587:
3312:ad5940.c      ****   if(pCalCfg->HsTiaCfg.HstiaRtiaSel > HSTIARTIA_160K)
 10509              		.loc 1 3312 0
 10510 0068 07F10C03 		add	r3, r7, #12
 10511 006c 1B68     		ldr	r3, [r3]
 10512 006e 5B69     		ldr	r3, [r3, #20]
 10513 0070 072B     		cmp	r3, #7
 10514 0072 02D9     		bls	.L559
3313:ad5940.c      ****     return AD5940ERR_PARA;
 10515              		.loc 1 3313 0
 10516 0074 6FF00103 		mvn	r3, #1
 10517 0078 EAE2     		b	.L581
 10518              	.L559:
3314:ad5940.c      ****   if(pCalCfg->HsTiaCfg.HstiaRtiaSel == HSTIARTIA_OPEN)
 10519              		.loc 1 3314 0
 10520 007a 07F10C03 		add	r3, r7, #12
 10521 007e 1B68     		ldr	r3, [r3]
 10522 0080 5B69     		ldr	r3, [r3, #20]
 10523 0082 082B     		cmp	r3, #8
 10524 0084 02D1     		bne	.L560
3315:ad5940.c      ****     return AD5940ERR_PARA; /* Do not support calibrating DE0-RTIA */
 10525              		.loc 1 3315 0
 10526 0086 6FF00103 		mvn	r3, #1
 10527 008a E1E2     		b	.L581
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 245


 10528              	.L560:
3316:ad5940.c      ****   if(pResult == NULL)
 10529              		.loc 1 3316 0
 10530 008c 07F10803 		add	r3, r7, #8
 10531 0090 1B68     		ldr	r3, [r3]
 10532 0092 002B     		cmp	r3, #0
 10533 0094 02D1     		bne	.L561
3317:ad5940.c      ****       return AD5940ERR_NULLP;
 10534              		.loc 1 3317 0
 10535 0096 6FF00203 		mvn	r3, #2
 10536 009a D9E2     		b	.L581
 10537              	.L561:
3318:ad5940.c      **** 
3319:ad5940.c      ****   if(pCalCfg->AdcClkFreq > (32000000*0.8))
 10538              		.loc 1 3319 0
 10539 009c 07F10C03 		add	r3, r7, #12
 10540 00a0 1B68     		ldr	r3, [r3]
 10541 00a2 DB68     		ldr	r3, [r3, #12]	@ float
 10542 00a4 5649     		ldr	r1, .L591+4
 10543 00a6 1846     		mov	r0, r3
 10544 00a8 FFF7FEFF 		bl	__aeabi_fcmpgt
 10545 00ac 0346     		mov	r3, r0
 10546 00ae 002B     		cmp	r3, #0
 10547 00b0 02D0     		beq	.L562
3320:ad5940.c      ****     bADCClk32MHzMode = bTRUE; 
 10548              		.loc 1 3320 0
 10549 00b2 0123     		movs	r3, #1
 10550 00b4 87F82731 		strb	r3, [r7, #295]
 10551              	.L562:
3321:ad5940.c      **** 
3322:ad5940.c      ****   /* Calculate the excitation voltage we should use based on RCAL/Rtia */
3323:ad5940.c      ****   RtiaVal = HpRtiaTable[pCalCfg->HsTiaCfg.HstiaRtiaSel];
 10552              		.loc 1 3323 0
 10553 00b8 07F10C03 		add	r3, r7, #12
 10554 00bc 1B68     		ldr	r3, [r3]
 10555 00be 5A69     		ldr	r2, [r3, #20]
 10556 00c0 07F12803 		add	r3, r7, #40
 10557 00c4 53F82230 		ldr	r3, [r3, r2, lsl #2]
 10558 00c8 C7F81431 		str	r3, [r7, #276]
3324:ad5940.c      ****   /*
3325:ad5940.c      ****     DAC output voltage calculation
3326:ad5940.c      ****     Note: RCAL value should be similar to RTIA so the accuracy is best.
3327:ad5940.c      ****     HSTIA output voltage should be limited to 0.2V to AVDD-0.2V, with 1.1V bias. We use 80% of this
3328:ad5940.c      ****     Because the bias voltage is fixed to 1.1V, so for AC signal maximum amplitude is 1.1V-0.2V = 0.
3329:ad5940.c      ****     Formula is:    ExcitVolt(in mVpp) = (1800mVpp*80% / RTIA) * RCAL
3330:ad5940.c      ****     ADC input range is +-1.5V which is enough for calibration.
3331:ad5940.c      ****     
3332:ad5940.c      ****   */
3333:ad5940.c      ****   ExcitVolt = 1800*0.8*pCalCfg->fRcal/RtiaVal;
 10559              		.loc 1 3333 0
 10560 00cc 07F10C03 		add	r3, r7, #12
 10561 00d0 1B68     		ldr	r3, [r3]
 10562 00d2 5B68     		ldr	r3, [r3, #4]	@ float
 10563 00d4 1846     		mov	r0, r3
 10564 00d6 FFF7FEFF 		bl	__aeabi_f2d
 10565 00da 4FF00002 		mov	r2, #0
 10566 00de 494B     		ldr	r3, .L591+8
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 246


 10567 00e0 FFF7FEFF 		bl	__aeabi_dmul
 10568 00e4 0346     		mov	r3, r0
 10569 00e6 0C46     		mov	r4, r1
 10570 00e8 2546     		mov	r5, r4
 10571 00ea 1C46     		mov	r4, r3
 10572 00ec D7F81401 		ldr	r0, [r7, #276]
 10573 00f0 FFF7FEFF 		bl	__aeabi_ui2d
 10574 00f4 0246     		mov	r2, r0
 10575 00f6 0B46     		mov	r3, r1
 10576 00f8 2046     		mov	r0, r4
 10577 00fa 2946     		mov	r1, r5
 10578 00fc FFF7FEFF 		bl	__aeabi_ddiv
 10579 0100 0346     		mov	r3, r0
 10580 0102 0C46     		mov	r4, r1
 10581 0104 1846     		mov	r0, r3
 10582 0106 2146     		mov	r1, r4
 10583 0108 FFF7FEFF 		bl	__aeabi_d2f
 10584 010c 0346     		mov	r3, r0
 10585 010e C7F81031 		str	r3, [r7, #272]	@ float
3334:ad5940.c      **** 
3335:ad5940.c      ****   if(ExcitVolt <= 800*0.05) /* Voltage is so small that we can enable the attenuator of DAC(1/5) an
 10586              		.loc 1 3335 0
 10587 0112 3D49     		ldr	r1, .L591+12
 10588 0114 D7F81001 		ldr	r0, [r7, #272]	@ float
 10589 0118 FFF7FEFF 		bl	__aeabi_fcmple
 10590 011c 0346     		mov	r3, r0
 10591 011e 002B     		cmp	r3, #0
 10592 0120 1ED0     		beq	.L588
3336:ad5940.c      ****   {
3337:ad5940.c      ****     ExcitBuffGain = EXCITBUFGAIN_0P25;
 10593              		.loc 1 3337 0
 10594 0122 0123     		movs	r3, #1
 10595 0124 C7F82031 		str	r3, [r7, #288]
3338:ad5940.c      ****     HsDacGain = HSDACGAIN_0P2;
 10596              		.loc 1 3338 0
 10597 0128 0123     		movs	r3, #1
 10598 012a C7F81C31 		str	r3, [r7, #284]
3339:ad5940.c      ****     /* Excitation buffer voltage full range is 800mVpp*0.05 = 40mVpp */
3340:ad5940.c      ****     WgAmpWord = ((uint32_t)(ExcitVolt/40*2047*2)+1)>>1; /* Assign value with rounding (0.5 LSB erro
 10599              		.loc 1 3340 0
 10600 012e 3649     		ldr	r1, .L591+12
 10601 0130 D7F81001 		ldr	r0, [r7, #272]	@ float
 10602 0134 FFF7FEFF 		bl	__aeabi_fdiv
 10603 0138 0346     		mov	r3, r0
 10604 013a 3449     		ldr	r1, .L591+16
 10605 013c 1846     		mov	r0, r3
 10606 013e FFF7FEFF 		bl	__aeabi_fmul
 10607 0142 0346     		mov	r3, r0
 10608 0144 1946     		mov	r1, r3
 10609 0146 1846     		mov	r0, r3
 10610 0148 FFF7FEFF 		bl	__aeabi_fadd
 10611 014c 0346     		mov	r3, r0
 10612 014e 1846     		mov	r0, r3
 10613 0150 FFF7FEFF 		bl	__aeabi_f2uiz
 10614 0154 0346     		mov	r3, r0
 10615 0156 0133     		adds	r3, r3, #1
 10616 0158 5B08     		lsrs	r3, r3, #1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 247


 10617 015a C7F81831 		str	r3, [r7, #280]
 10618 015e 79E0     		b	.L566
 10619              	.L588:
3341:ad5940.c      ****   }
3342:ad5940.c      ****   else if(ExcitVolt <= 800*0.25) /* Enable Excitation buffer attenuator */
 10620              		.loc 1 3342 0
 10621 0160 2B49     		ldr	r1, .L591+20
 10622 0162 D7F81001 		ldr	r0, [r7, #272]	@ float
 10623 0166 FFF7FEFF 		bl	__aeabi_fcmple
 10624 016a 0346     		mov	r3, r0
 10625 016c 002B     		cmp	r3, #0
 10626 016e 1ED0     		beq	.L589
3343:ad5940.c      ****   {
3344:ad5940.c      ****     ExcitBuffGain = EXCITBUFGAIN_0P25;
 10627              		.loc 1 3344 0
 10628 0170 0123     		movs	r3, #1
 10629 0172 C7F82031 		str	r3, [r7, #288]
3345:ad5940.c      ****     HsDacGain = HSDACGAIN_1;
 10630              		.loc 1 3345 0
 10631 0176 0023     		movs	r3, #0
 10632 0178 C7F81C31 		str	r3, [r7, #284]
3346:ad5940.c      ****     /* Excitation buffer voltage full range is 800mVpp*0.25 = 200mVpp */
3347:ad5940.c      ****     WgAmpWord = ((uint32_t)(ExcitVolt/200*2047*2)+1)>>1; /* Assign value with rounding (0.5 LSB err
 10633              		.loc 1 3347 0
 10634 017c 2449     		ldr	r1, .L591+20
 10635 017e D7F81001 		ldr	r0, [r7, #272]	@ float
 10636 0182 FFF7FEFF 		bl	__aeabi_fdiv
 10637 0186 0346     		mov	r3, r0
 10638 0188 2049     		ldr	r1, .L591+16
 10639 018a 1846     		mov	r0, r3
 10640 018c FFF7FEFF 		bl	__aeabi_fmul
 10641 0190 0346     		mov	r3, r0
 10642 0192 1946     		mov	r1, r3
 10643 0194 1846     		mov	r0, r3
 10644 0196 FFF7FEFF 		bl	__aeabi_fadd
 10645 019a 0346     		mov	r3, r0
 10646 019c 1846     		mov	r0, r3
 10647 019e FFF7FEFF 		bl	__aeabi_f2uiz
 10648 01a2 0346     		mov	r3, r0
 10649 01a4 0133     		adds	r3, r3, #1
 10650 01a6 5B08     		lsrs	r3, r3, #1
 10651 01a8 C7F81831 		str	r3, [r7, #280]
 10652 01ac 52E0     		b	.L566
 10653              	.L589:
3348:ad5940.c      ****   }
3349:ad5940.c      ****   else if(ExcitVolt <= 800*0.4) /* Enable DAC attenuator */
 10654              		.loc 1 3349 0
 10655 01ae 1949     		ldr	r1, .L591+24
 10656 01b0 D7F81001 		ldr	r0, [r7, #272]	@ float
 10657 01b4 FFF7FEFF 		bl	__aeabi_fcmple
 10658 01b8 0346     		mov	r3, r0
 10659 01ba 002B     		cmp	r3, #0
 10660 01bc 2CD0     		beq	.L590
3350:ad5940.c      ****   {
3351:ad5940.c      ****     ExcitBuffGain = EXCITBUFGAIN_2;
 10661              		.loc 1 3351 0
 10662 01be 0023     		movs	r3, #0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 248


 10663 01c0 C7F82031 		str	r3, [r7, #288]
3352:ad5940.c      ****     HsDacGain = HSDACGAIN_0P2;
 10664              		.loc 1 3352 0
 10665 01c4 0123     		movs	r3, #1
 10666 01c6 C7F81C31 		str	r3, [r7, #284]
3353:ad5940.c      ****     /* Excitation buffer voltage full range is 800mVpp*0.4 = 320mV */
3354:ad5940.c      ****     WgAmpWord = ((uint32_t)(ExcitVolt/320*2047*2)+1)>>1; /* Assign value with rounding (0.5 LSB err
 10667              		.loc 1 3354 0
 10668 01ca 1249     		ldr	r1, .L591+24
 10669 01cc D7F81001 		ldr	r0, [r7, #272]	@ float
 10670 01d0 FFF7FEFF 		bl	__aeabi_fdiv
 10671 01d4 0346     		mov	r3, r0
 10672 01d6 0D49     		ldr	r1, .L591+16
 10673 01d8 1846     		mov	r0, r3
 10674 01da FFF7FEFF 		bl	__aeabi_fmul
 10675 01de 0346     		mov	r3, r0
 10676 01e0 1946     		mov	r1, r3
 10677 01e2 1846     		mov	r0, r3
 10678 01e4 FFF7FEFF 		bl	__aeabi_fadd
 10679 01e8 0346     		mov	r3, r0
 10680 01ea 1846     		mov	r0, r3
 10681 01ec FFF7FEFF 		bl	__aeabi_f2uiz
 10682 01f0 0346     		mov	r3, r0
 10683 01f2 0133     		adds	r3, r3, #1
 10684 01f4 5B08     		lsrs	r3, r3, #1
 10685 01f6 C7F81831 		str	r3, [r7, #280]
 10686 01fa 2BE0     		b	.L566
 10687              	.L592:
 10688              		.align	2
 10689              	.L591:
 10690 01fc 0C010000 		.word	.LC16
 10691 0200 0050C34B 		.word	1271091200
 10692 0204 00809640 		.word	1083604992
 10693 0208 00002042 		.word	1109393408
 10694 020c 00E0FF44 		.word	1157619712
 10695 0210 00004843 		.word	1128792064
 10696 0214 0000A043 		.word	1134559232
 10697              	.L590:
3355:ad5940.c      ****   }
3356:ad5940.c      ****   else /* No attenuator is needed. This is the best condition which means RTIA is close to RCAL */
3357:ad5940.c      ****   {
3358:ad5940.c      ****     ExcitBuffGain = EXCITBUFGAIN_2;
 10698              		.loc 1 3358 0
 10699 0218 0023     		movs	r3, #0
 10700 021a C7F82031 		str	r3, [r7, #288]
3359:ad5940.c      ****     HsDacGain = HSDACGAIN_1;
 10701              		.loc 1 3359 0
 10702 021e 0023     		movs	r3, #0
 10703 0220 C7F81C31 		str	r3, [r7, #284]
3360:ad5940.c      ****     /* Excitation buffer voltage full range is 800mVpp*2=1600mVpp */
3361:ad5940.c      ****     WgAmpWord = ((uint32_t)(ExcitVolt/1600*2047*2)+1)>>1; /* Assign value with rounding (0.5 LSB er
 10704              		.loc 1 3361 0
 10705 0224 C849     		ldr	r1, .L593
 10706 0226 D7F81001 		ldr	r0, [r7, #272]	@ float
 10707 022a FFF7FEFF 		bl	__aeabi_fdiv
 10708 022e 0346     		mov	r3, r0
 10709 0230 C649     		ldr	r1, .L593+4
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 249


 10710 0232 1846     		mov	r0, r3
 10711 0234 FFF7FEFF 		bl	__aeabi_fmul
 10712 0238 0346     		mov	r3, r0
 10713 023a 1946     		mov	r1, r3
 10714 023c 1846     		mov	r0, r3
 10715 023e FFF7FEFF 		bl	__aeabi_fadd
 10716 0242 0346     		mov	r3, r0
 10717 0244 1846     		mov	r0, r3
 10718 0246 FFF7FEFF 		bl	__aeabi_f2uiz
 10719 024a 0346     		mov	r3, r0
 10720 024c 0133     		adds	r3, r3, #1
 10721 024e 5B08     		lsrs	r3, r3, #1
 10722 0250 C7F81831 		str	r3, [r7, #280]
 10723              	.L566:
3362:ad5940.c      ****   }
3363:ad5940.c      **** 
3364:ad5940.c      ****   if(WgAmpWord > 0x7ff)
 10724              		.loc 1 3364 0
 10725 0254 D7F81831 		ldr	r3, [r7, #280]
 10726 0258 B3F5006F 		cmp	r3, #2048
 10727 025c 03D3     		bcc	.L571
3365:ad5940.c      ****   WgAmpWord = 0x7ff;
 10728              		.loc 1 3365 0
 10729 025e 40F2FF73 		movw	r3, #2047
 10730 0262 C7F81831 		str	r3, [r7, #280]
 10731              	.L571:
3366:ad5940.c      ****   
3367:ad5940.c      ****   /*INTC configuration */
3368:ad5940.c      ****   INTCCfg = AD5940_INTCGetCfg(AFEINTC_1);
 10732              		.loc 1 3368 0
 10733 0266 0120     		movs	r0, #1
 10734 0268 FFF7FEFF 		bl	AD5940_INTCGetCfg
 10735 026c C7F80C01 		str	r0, [r7, #268]
3369:ad5940.c      ****   AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_DFTRDY, bTRUE); /* Enable SINC2 Interrupt in INTC1 */
 10736              		.loc 1 3369 0
 10737 0270 0122     		movs	r2, #1
 10738 0272 0221     		movs	r1, #2
 10739 0274 0120     		movs	r0, #1
 10740 0276 FFF7FEFF 		bl	AD5940_INTCCfg
3370:ad5940.c      ****   
3371:ad5940.c      ****   AD5940_AFECtrlS(AFECTRL_ALL, bFALSE);  /* Init all to disable state */
 10741              		.loc 1 3371 0
 10742 027a 0021     		movs	r1, #0
 10743 027c B448     		ldr	r0, .L593+8
 10744 027e FFF7FEFF 		bl	AD5940_AFECtrlS
3372:ad5940.c      ****   /* Configure reference system */
3373:ad5940.c      ****   aferef_cfg.HpBandgapEn = bTRUE;
 10745              		.loc 1 3373 0
 10746 0282 0123     		movs	r3, #1
 10747 0284 87F8FC30 		strb	r3, [r7, #252]
3374:ad5940.c      ****   aferef_cfg.Hp1V1BuffEn = bTRUE;
 10748              		.loc 1 3374 0
 10749 0288 0123     		movs	r3, #1
 10750 028a 87F8FE30 		strb	r3, [r7, #254]
3375:ad5940.c      ****   aferef_cfg.Hp1V8BuffEn = bTRUE;
 10751              		.loc 1 3375 0
 10752 028e 0123     		movs	r3, #1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 250


 10753 0290 87F8FD30 		strb	r3, [r7, #253]
3376:ad5940.c      ****   aferef_cfg.Disc1V1Cap = bFALSE;
 10754              		.loc 1 3376 0
 10755 0294 0023     		movs	r3, #0
 10756 0296 87F80831 		strb	r3, [r7, #264]
3377:ad5940.c      ****   aferef_cfg.Disc1V8Cap = bFALSE;
 10757              		.loc 1 3377 0
 10758 029a 0023     		movs	r3, #0
 10759 029c 87F80731 		strb	r3, [r7, #263]
3378:ad5940.c      ****   aferef_cfg.Hp1V8ThemBuff = bFALSE;
 10760              		.loc 1 3378 0
 10761 02a0 0023     		movs	r3, #0
 10762 02a2 87F80531 		strb	r3, [r7, #261]
3379:ad5940.c      ****   aferef_cfg.Hp1V8Ilimit = bFALSE;
 10763              		.loc 1 3379 0
 10764 02a6 0023     		movs	r3, #0
 10765 02a8 87F80631 		strb	r3, [r7, #262]
3380:ad5940.c      ****   aferef_cfg.Lp1V1BuffEn = bFALSE;
 10766              		.loc 1 3380 0
 10767 02ac 0023     		movs	r3, #0
 10768 02ae 87F80031 		strb	r3, [r7, #256]
3381:ad5940.c      ****   aferef_cfg.Lp1V8BuffEn = bFALSE;
 10769              		.loc 1 3381 0
 10770 02b2 0023     		movs	r3, #0
 10771 02b4 87F8FF30 		strb	r3, [r7, #255]
3382:ad5940.c      ****   aferef_cfg.LpBandgapEn = bFALSE;
 10772              		.loc 1 3382 0
 10773 02b8 0023     		movs	r3, #0
 10774 02ba 87F80131 		strb	r3, [r7, #257]
3383:ad5940.c      ****   aferef_cfg.LpRefBufEn = bFALSE;
 10775              		.loc 1 3383 0
 10776 02be 0023     		movs	r3, #0
 10777 02c0 87F80231 		strb	r3, [r7, #258]
3384:ad5940.c      ****   aferef_cfg.LpRefBoostEn = bFALSE;
 10778              		.loc 1 3384 0
 10779 02c4 0023     		movs	r3, #0
 10780 02c6 87F80331 		strb	r3, [r7, #259]
3385:ad5940.c      ****   AD5940_REFCfgS(&aferef_cfg);	
 10781              		.loc 1 3385 0
 10782 02ca 07F1FC03 		add	r3, r7, #252
 10783 02ce 1846     		mov	r0, r3
 10784 02d0 FFF7FEFF 		bl	AD5940_REFCfgS
3386:ad5940.c      ****   /* Configure HP Loop */
3387:ad5940.c      ****   hs_loop.HsDacCfg.ExcitBufGain = ExcitBuffGain;
 10785              		.loc 1 3387 0
 10786 02d4 D7F82031 		ldr	r3, [r7, #288]
 10787 02d8 C7F89C30 		str	r3, [r7, #156]
3388:ad5940.c      ****   hs_loop.HsDacCfg.HsDacGain = HsDacGain;
 10788              		.loc 1 3388 0
 10789 02dc D7F81C31 		ldr	r3, [r7, #284]
 10790 02e0 C7F8A030 		str	r3, [r7, #160]
3389:ad5940.c      ****   hs_loop.HsDacCfg.HsDacUpdateRate = 7; /* Set it to highest update rate */
 10791              		.loc 1 3389 0
 10792 02e4 0723     		movs	r3, #7
 10793 02e6 C7F8A430 		str	r3, [r7, #164]
3390:ad5940.c      ****   memcpy(&hs_loop.HsTiaCfg, &pCalCfg->HsTiaCfg, sizeof(pCalCfg->HsTiaCfg));
 10794              		.loc 1 3390 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 251


 10795 02ea 07F10C03 		add	r3, r7, #12
 10796 02ee 1B68     		ldr	r3, [r3]
 10797 02f0 03F11001 		add	r1, r3, #16
 10798 02f4 07F18C03 		add	r3, r7, #140
 10799 02f8 5033     		adds	r3, r3, #80
 10800 02fa 2022     		movs	r2, #32
 10801 02fc 1846     		mov	r0, r3
 10802 02fe FFF7FEFF 		bl	memcpy
3391:ad5940.c      ****   hs_loop.SWMatCfg.Dswitch = SWD_RCAL0;
 10803              		.loc 1 3391 0
 10804 0302 0123     		movs	r3, #1
 10805 0304 C7F88C30 		str	r3, [r7, #140]
3392:ad5940.c      ****   hs_loop.SWMatCfg.Pswitch = SWP_RCAL0;
 10806              		.loc 1 3392 0
 10807 0308 0123     		movs	r3, #1
 10808 030a C7F89030 		str	r3, [r7, #144]
3393:ad5940.c      ****   hs_loop.SWMatCfg.Nswitch = SWN_RCAL1;
 10809              		.loc 1 3393 0
 10810 030e 4FF40073 		mov	r3, #512
 10811 0312 C7F89430 		str	r3, [r7, #148]
3394:ad5940.c      ****   hs_loop.SWMatCfg.Tswitch = SWT_RCAL1|SWT_TRTIA;
 10812              		.loc 1 3394 0
 10813 0316 4FF41063 		mov	r3, #2304
 10814 031a C7F89830 		str	r3, [r7, #152]
3395:ad5940.c      ****   hs_loop.WgCfg.WgType = WGTYPE_SIN;
 10815              		.loc 1 3395 0
 10816 031e 0223     		movs	r3, #2
 10817 0320 C7F8A830 		str	r3, [r7, #168]
3396:ad5940.c      ****   hs_loop.WgCfg.GainCalEn = bTRUE;
 10818              		.loc 1 3396 0
 10819 0324 0123     		movs	r3, #1
 10820 0326 87F8AC30 		strb	r3, [r7, #172]
3397:ad5940.c      ****   hs_loop.WgCfg.OffsetCalEn = bTRUE;
 10821              		.loc 1 3397 0
 10822 032a 0123     		movs	r3, #1
 10823 032c 87F8AD30 		strb	r3, [r7, #173]
3398:ad5940.c      ****   hs_loop.WgCfg.SinCfg.SinFreqWord = AD5940_WGFreqWordCal(pCalCfg->fFreq, pCalCfg->SysClkFreq);
 10824              		.loc 1 3398 0
 10825 0330 07F10C03 		add	r3, r7, #12
 10826 0334 1B68     		ldr	r3, [r3]
 10827 0336 1A68     		ldr	r2, [r3]	@ float
 10828 0338 07F10C03 		add	r3, r7, #12
 10829 033c 1B68     		ldr	r3, [r3]
 10830 033e 9B68     		ldr	r3, [r3, #8]	@ float
 10831 0340 1946     		mov	r1, r3
 10832 0342 1046     		mov	r0, r2
 10833 0344 FFF7FEFF 		bl	AD5940_WGFreqWordCal
 10834 0348 0346     		mov	r3, r0
 10835 034a C7F8C830 		str	r3, [r7, #200]
3399:ad5940.c      ****   hs_loop.WgCfg.SinCfg.SinAmplitudeWord = WgAmpWord;
 10836              		.loc 1 3399 0
 10837 034e D7F81831 		ldr	r3, [r7, #280]
 10838 0352 C7F8CC30 		str	r3, [r7, #204]
3400:ad5940.c      ****   hs_loop.WgCfg.SinCfg.SinOffsetWord = 0;
 10839              		.loc 1 3400 0
 10840 0356 0023     		movs	r3, #0
 10841 0358 C7F8D030 		str	r3, [r7, #208]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 252


3401:ad5940.c      ****   hs_loop.WgCfg.SinCfg.SinPhaseWord = 0;
 10842              		.loc 1 3401 0
 10843 035c 0023     		movs	r3, #0
 10844 035e C7F8D430 		str	r3, [r7, #212]
3402:ad5940.c      ****   AD5940_HSLoopCfgS(&hs_loop);
 10845              		.loc 1 3402 0
 10846 0362 07F18C03 		add	r3, r7, #140
 10847 0366 1846     		mov	r0, r3
 10848 0368 FFF7FEFF 		bl	AD5940_HSLoopCfgS
3403:ad5940.c      ****   /* Configure DSP */
3404:ad5940.c      ****   dsp_cfg.ADCBaseCfg.ADCMuxN = ADCMUXN_N_NODE;
 10849              		.loc 1 3404 0
 10850 036c 1423     		movs	r3, #20
 10851 036e 3B65     		str	r3, [r7, #80]
3405:ad5940.c      ****   dsp_cfg.ADCBaseCfg.ADCMuxP = ADCMUXP_P_NODE;
 10852              		.loc 1 3405 0
 10853 0370 2423     		movs	r3, #36
 10854 0372 FB64     		str	r3, [r7, #76]
3406:ad5940.c      ****   dsp_cfg.ADCBaseCfg.ADCPga = ADCPGA_1P5;
 10855              		.loc 1 3406 0
 10856 0374 0123     		movs	r3, #1
 10857 0376 7B65     		str	r3, [r7, #84]
3407:ad5940.c      ****   AD5940_StructInit(&dsp_cfg.ADCDigCompCfg, sizeof(dsp_cfg.ADCDigCompCfg));
 10858              		.loc 1 3407 0
 10859 0378 07F14C03 		add	r3, r7, #76
 10860 037c 2033     		adds	r3, r3, #32
 10861 037e 0821     		movs	r1, #8
 10862 0380 1846     		mov	r0, r3
 10863 0382 FFF7FEFF 		bl	AD5940_StructInit
3408:ad5940.c      ****   dsp_cfg.ADCFilterCfg.ADCAvgNum = ADCAVGNUM_16;  /* Don't care because it's disabled */
 10864              		.loc 1 3408 0
 10865 0386 0323     		movs	r3, #3
 10866 0388 3B66     		str	r3, [r7, #96]
3409:ad5940.c      ****   dsp_cfg.ADCFilterCfg.ADCRate = bADCClk32MHzMode?ADCRATE_1P6MHZ:ADCRATE_800KHZ;
 10867              		.loc 1 3409 0
 10868 038a 97F82731 		ldrb	r3, [r7, #295]	@ zero_extendqisi2
 10869 038e 002B     		cmp	r3, #0
 10870 0390 0CBF     		ite	eq
 10871 0392 0123     		moveq	r3, #1
 10872 0394 0023     		movne	r3, #0
 10873 0396 DBB2     		uxtb	r3, r3
 10874 0398 7B66     		str	r3, [r7, #100]
3410:ad5940.c      ****   dsp_cfg.ADCFilterCfg.ADCSinc2Osr = pCalCfg->ADCSinc2Osr;
 10875              		.loc 1 3410 0
 10876 039a 07F10C03 		add	r3, r7, #12
 10877 039e 1B68     		ldr	r3, [r3]
 10878 03a0 5B6B     		ldr	r3, [r3, #52]
 10879 03a2 FB65     		str	r3, [r7, #92]
3411:ad5940.c      ****   dsp_cfg.ADCFilterCfg.ADCSinc3Osr = pCalCfg->ADCSinc3Osr;
 10880              		.loc 1 3411 0
 10881 03a4 07F10C03 		add	r3, r7, #12
 10882 03a8 1B68     		ldr	r3, [r3]
 10883 03aa 1B6B     		ldr	r3, [r3, #48]
 10884 03ac BB65     		str	r3, [r7, #88]
3412:ad5940.c      ****   dsp_cfg.ADCFilterCfg.BpNotch = bTRUE;
 10885              		.loc 1 3412 0
 10886 03ae 0123     		movs	r3, #1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 253


 10887 03b0 87F86830 		strb	r3, [r7, #104]
3413:ad5940.c      ****   dsp_cfg.ADCFilterCfg.BpSinc3 = bFALSE;
 10888              		.loc 1 3413 0
 10889 03b4 0023     		movs	r3, #0
 10890 03b6 87F86930 		strb	r3, [r7, #105]
3414:ad5940.c      ****   dsp_cfg.ADCFilterCfg.Sinc2NotchEnable = bTRUE;
 10891              		.loc 1 3414 0
 10892 03ba 0123     		movs	r3, #1
 10893 03bc 87F86A30 		strb	r3, [r7, #106]
3415:ad5940.c      ****   
3416:ad5940.c      ****   memcpy(&dsp_cfg.DftCfg, &pCalCfg->DftCfg, sizeof(pCalCfg->DftCfg));
 10894              		.loc 1 3416 0
 10895 03c0 07F10C03 		add	r3, r7, #12
 10896 03c4 1B68     		ldr	r3, [r3]
 10897 03c6 03F13801 		add	r1, r3, #56
 10898 03ca 07F14C03 		add	r3, r7, #76
 10899 03ce 2833     		adds	r3, r3, #40
 10900 03d0 0C22     		movs	r2, #12
 10901 03d2 1846     		mov	r0, r3
 10902 03d4 FFF7FEFF 		bl	memcpy
3417:ad5940.c      ****   memset(&dsp_cfg.StatCfg, 0, sizeof(dsp_cfg.StatCfg));
 10903              		.loc 1 3417 0
 10904 03d8 07F14C03 		add	r3, r7, #76
 10905 03dc 3433     		adds	r3, r3, #52
 10906 03de 0C22     		movs	r2, #12
 10907 03e0 0021     		movs	r1, #0
 10908 03e2 1846     		mov	r0, r3
 10909 03e4 FFF7FEFF 		bl	memset
3418:ad5940.c      ****   AD5940_DSPCfgS(&dsp_cfg);
 10910              		.loc 1 3418 0
 10911 03e8 07F14C03 		add	r3, r7, #76
 10912 03ec 1846     		mov	r0, r3
 10913 03ee FFF7FEFF 		bl	AD5940_DSPCfgS
3419:ad5940.c      **** 
3420:ad5940.c      ****   /* Enable all of them. They are automatically turned off during hibernate mode to save power */
3421:ad5940.c      ****   AD5940_AFECtrlS(AFECTRL_HSTIAPWR|AFECTRL_INAMPPWR|AFECTRL_EXTBUFPWR|\
 10914              		.loc 1 3421 0
 10915 03f2 0121     		movs	r1, #1
 10916 03f4 5748     		ldr	r0, .L593+12
 10917 03f6 FFF7FEFF 		bl	AD5940_AFECtrlS
3422:ad5940.c      ****                 /*AFECTRL_WG|*/AFECTRL_DACREFPWR|AFECTRL_HSDACPWR|\
3423:ad5940.c      ****                 AFECTRL_SINC2NOTCH, bTRUE);
3424:ad5940.c      ****   
3425:ad5940.c      ****   AD5940_AFECtrlS(AFECTRL_WG|AFECTRL_ADCPWR, bTRUE);  /* Enable Waveform generator, ADC power */
 10918              		.loc 1 3425 0
 10919 03fa 0121     		movs	r1, #1
 10920 03fc 4FF48140 		mov	r0, #16512
 10921 0400 FFF7FEFF 		bl	AD5940_AFECtrlS
3426:ad5940.c      ****   //wait for sometime.
3427:ad5940.c      ****   AD5940_Delay10us(25);
 10922              		.loc 1 3427 0
 10923 0404 1920     		movs	r0, #25
 10924 0406 FFF7FEFF 		bl	AD5940_Delay10us
3428:ad5940.c      ****   AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT, bTRUE);  /* Start ADC convert and DFT */
 10925              		.loc 1 3428 0
 10926 040a 0121     		movs	r1, #1
 10927 040c 4FF40140 		mov	r0, #33024
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 254


 10928 0410 FFF7FEFF 		bl	AD5940_AFECtrlS
3429:ad5940.c      ****   /* Wait until DFT ready */
3430:ad5940.c      ****   while(AD5940_INTCTestFlag(AFEINTC_1, AFEINTSRC_DFTRDY) == bFALSE);  
 10929              		.loc 1 3430 0
 10930 0414 00BF     		nop
 10931              	.L572:
 10932              		.loc 1 3430 0 is_stmt 0 discriminator 1
 10933 0416 0221     		movs	r1, #2
 10934 0418 0120     		movs	r0, #1
 10935 041a FFF7FEFF 		bl	AD5940_INTCTestFlag
 10936 041e 0346     		mov	r3, r0
 10937 0420 002B     		cmp	r3, #0
 10938 0422 F8D0     		beq	.L572
3431:ad5940.c      ****   AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG|AFECTRL_ADCPWR, bFALSE);  /* Stop ADC conve
 10939              		.loc 1 3431 0 is_stmt 1
 10940 0424 0021     		movs	r1, #0
 10941 0426 4CF28010 		movw	r0, #49536
 10942 042a FFF7FEFF 		bl	AD5940_AFECtrlS
3432:ad5940.c      ****   AD5940_INTCClrFlag(AFEINTSRC_DFTRDY);
 10943              		.loc 1 3432 0
 10944 042e 0220     		movs	r0, #2
 10945 0430 FFF7FEFF 		bl	AD5940_INTCClrFlag
3433:ad5940.c      ****   
3434:ad5940.c      ****   DftRcal.Real = AD5940_ReadAfeResult(AFERESULT_DFTREAL);
 10946              		.loc 1 3434 0
 10947 0434 0320     		movs	r0, #3
 10948 0436 FFF7FEFF 		bl	AD5940_ReadAfeResult
 10949 043a 0346     		mov	r3, r0
 10950 043c 1A46     		mov	r2, r3
 10951 043e 07F12003 		add	r3, r7, #32
 10952 0442 1A60     		str	r2, [r3]
3435:ad5940.c      ****   DftRcal.Image = AD5940_ReadAfeResult(AFERESULT_DFTIMAGE);
 10953              		.loc 1 3435 0
 10954 0444 0420     		movs	r0, #4
 10955 0446 FFF7FEFF 		bl	AD5940_ReadAfeResult
 10956 044a 0346     		mov	r3, r0
 10957 044c 1A46     		mov	r2, r3
 10958 044e 07F12003 		add	r3, r7, #32
 10959 0452 5A60     		str	r2, [r3, #4]
3436:ad5940.c      **** 
3437:ad5940.c      ****   AD5940_ADCMuxCfgS(ADCMUXP_HSTIA_P, ADCMUXN_HSTIA_N);
 10960              		.loc 1 3437 0
 10961 0454 0121     		movs	r1, #1
 10962 0456 0120     		movs	r0, #1
 10963 0458 FFF7FEFF 		bl	AD5940_ADCMuxCfgS
3438:ad5940.c      ****   AD5940_AFECtrlS(AFECTRL_WG|AFECTRL_ADCPWR, bTRUE);  /* Enable Waveform generator, ADC power */
 10964              		.loc 1 3438 0
 10965 045c 0121     		movs	r1, #1
 10966 045e 4FF48140 		mov	r0, #16512
 10967 0462 FFF7FEFF 		bl	AD5940_AFECtrlS
3439:ad5940.c      ****   //wait for sometime.
3440:ad5940.c      ****   AD5940_Delay10us(25);
 10968              		.loc 1 3440 0
 10969 0466 1920     		movs	r0, #25
 10970 0468 FFF7FEFF 		bl	AD5940_Delay10us
3441:ad5940.c      ****   AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT, bTRUE);  /* Start ADC convert and DFT */
 10971              		.loc 1 3441 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 255


 10972 046c 0121     		movs	r1, #1
 10973 046e 4FF40140 		mov	r0, #33024
 10974 0472 FFF7FEFF 		bl	AD5940_AFECtrlS
3442:ad5940.c      ****   /* Wait until DFT ready */
3443:ad5940.c      ****   while(AD5940_INTCTestFlag(AFEINTC_1, AFEINTSRC_DFTRDY) == bFALSE);  
 10975              		.loc 1 3443 0
 10976 0476 00BF     		nop
 10977              	.L573:
 10978              		.loc 1 3443 0 is_stmt 0 discriminator 1
 10979 0478 0221     		movs	r1, #2
 10980 047a 0120     		movs	r0, #1
 10981 047c FFF7FEFF 		bl	AD5940_INTCTestFlag
 10982 0480 0346     		mov	r3, r0
 10983 0482 002B     		cmp	r3, #0
 10984 0484 F8D0     		beq	.L573
3444:ad5940.c      ****   AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG|AFECTRL_ADCPWR, bFALSE);  /* Stop ADC conve
 10985              		.loc 1 3444 0 is_stmt 1
 10986 0486 0021     		movs	r1, #0
 10987 0488 4CF28010 		movw	r0, #49536
 10988 048c FFF7FEFF 		bl	AD5940_AFECtrlS
3445:ad5940.c      ****   AD5940_INTCClrFlag(AFEINTSRC_DFTRDY);
 10989              		.loc 1 3445 0
 10990 0490 0220     		movs	r0, #2
 10991 0492 FFF7FEFF 		bl	AD5940_INTCClrFlag
3446:ad5940.c      **** 
3447:ad5940.c      ****   DftRtia.Real = AD5940_ReadAfeResult(AFERESULT_DFTREAL);
 10992              		.loc 1 3447 0
 10993 0496 0320     		movs	r0, #3
 10994 0498 FFF7FEFF 		bl	AD5940_ReadAfeResult
 10995 049c 0346     		mov	r3, r0
 10996 049e 1A46     		mov	r2, r3
 10997 04a0 07F11803 		add	r3, r7, #24
 10998 04a4 1A60     		str	r2, [r3]
3448:ad5940.c      ****   DftRtia.Image = AD5940_ReadAfeResult(AFERESULT_DFTIMAGE);
 10999              		.loc 1 3448 0
 11000 04a6 0420     		movs	r0, #4
 11001 04a8 FFF7FEFF 		bl	AD5940_ReadAfeResult
 11002 04ac 0346     		mov	r3, r0
 11003 04ae 1A46     		mov	r2, r3
 11004 04b0 07F11803 		add	r3, r7, #24
 11005 04b4 5A60     		str	r2, [r3, #4]
3449:ad5940.c      ****   
3450:ad5940.c      ****   if(DftRcal.Real&(1L<<17))
 11006              		.loc 1 3450 0
 11007 04b6 07F12003 		add	r3, r7, #32
 11008 04ba 1B68     		ldr	r3, [r3]
 11009 04bc 03F40033 		and	r3, r3, #131072
 11010 04c0 002B     		cmp	r3, #0
 11011 04c2 0AD0     		beq	.L574
3451:ad5940.c      ****     DftRcal.Real |= 0xfffc0000;
 11012              		.loc 1 3451 0
 11013 04c4 07F12003 		add	r3, r7, #32
 11014 04c8 1B68     		ldr	r3, [r3]
 11015 04ca 6FEA8333 		mvn	r3, r3, lsl #14
 11016 04ce 6FEA9333 		mvn	r3, r3, lsr #14
 11017 04d2 1A46     		mov	r2, r3
 11018 04d4 07F12003 		add	r3, r7, #32
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 256


 11019 04d8 1A60     		str	r2, [r3]
 11020              	.L574:
3452:ad5940.c      ****   if(DftRcal.Image&(1L<<17))
 11021              		.loc 1 3452 0
 11022 04da 07F12003 		add	r3, r7, #32
 11023 04de 5B68     		ldr	r3, [r3, #4]
 11024 04e0 03F40033 		and	r3, r3, #131072
 11025 04e4 002B     		cmp	r3, #0
 11026 04e6 0AD0     		beq	.L575
3453:ad5940.c      ****     DftRcal.Image |= 0xfffc0000;
 11027              		.loc 1 3453 0
 11028 04e8 07F12003 		add	r3, r7, #32
 11029 04ec 5B68     		ldr	r3, [r3, #4]
 11030 04ee 6FEA8333 		mvn	r3, r3, lsl #14
 11031 04f2 6FEA9333 		mvn	r3, r3, lsr #14
 11032 04f6 1A46     		mov	r2, r3
 11033 04f8 07F12003 		add	r3, r7, #32
 11034 04fc 5A60     		str	r2, [r3, #4]
 11035              	.L575:
3454:ad5940.c      ****   if(DftRtia.Real&(1L<<17))
 11036              		.loc 1 3454 0
 11037 04fe 07F11803 		add	r3, r7, #24
 11038 0502 1B68     		ldr	r3, [r3]
 11039 0504 03F40033 		and	r3, r3, #131072
 11040 0508 002B     		cmp	r3, #0
 11041 050a 0AD0     		beq	.L576
3455:ad5940.c      ****     DftRtia.Real |= 0xfffc0000;
 11042              		.loc 1 3455 0
 11043 050c 07F11803 		add	r3, r7, #24
 11044 0510 1B68     		ldr	r3, [r3]
 11045 0512 6FEA8333 		mvn	r3, r3, lsl #14
 11046 0516 6FEA9333 		mvn	r3, r3, lsr #14
 11047 051a 1A46     		mov	r2, r3
 11048 051c 07F11803 		add	r3, r7, #24
 11049 0520 1A60     		str	r2, [r3]
 11050              	.L576:
3456:ad5940.c      ****   if(DftRtia.Image&(1L<<17))
 11051              		.loc 1 3456 0
 11052 0522 07F11803 		add	r3, r7, #24
 11053 0526 5B68     		ldr	r3, [r3, #4]
 11054 0528 03F40033 		and	r3, r3, #131072
 11055 052c 002B     		cmp	r3, #0
 11056 052e 13D0     		beq	.L577
3457:ad5940.c      ****     DftRtia.Image |= 0xfffc0000;
 11057              		.loc 1 3457 0
 11058 0530 07F11803 		add	r3, r7, #24
 11059 0534 5B68     		ldr	r3, [r3, #4]
 11060 0536 6FEA8333 		mvn	r3, r3, lsl #14
 11061 053a 6FEA9333 		mvn	r3, r3, lsr #14
 11062 053e 1A46     		mov	r2, r3
 11063 0540 07F11803 		add	r3, r7, #24
 11064 0544 5A60     		str	r2, [r3, #4]
 11065 0546 07E0     		b	.L594
 11066              	.L595:
 11067              		.align	2
 11068              	.L593:
 11069 0548 0000C844 		.word	1153957888
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 257


 11070 054c 00E0FF44 		.word	1157619712
 11071 0550 E0FF3900 		.word	3801056
 11072 0554 400E1100 		.word	1117760
 11073              	.L594:
 11074              	.L577:
3458:ad5940.c      ****   /* 
3459:ad5940.c      ****     ADC MUX is set to HSTIA_P and HSTIA_N.
3460:ad5940.c      ****     While the current flow through RCAL and then into RTIA, the current direction should be from HS
3461:ad5940.c      ****     measure the voltage across RCAL by MUXSELP_P_NODE and MUXSELN_N_NODE.
3462:ad5940.c      ****     So here, we add a negative sign to results
3463:ad5940.c      ****   */
3464:ad5940.c      ****   DftRtia.Image = -DftRtia.Image;
 11075              		.loc 1 3464 0
 11076 0558 07F11803 		add	r3, r7, #24
 11077 055c 5B68     		ldr	r3, [r3, #4]
 11078 055e 5A42     		negs	r2, r3
 11079 0560 07F11803 		add	r3, r7, #24
 11080 0564 5A60     		str	r2, [r3, #4]
3465:ad5940.c      ****   DftRtia.Real = -DftRtia.Real; /* Current is measured by MUX HSTIA_P-HSTIA_N. It should be  */
 11081              		.loc 1 3465 0
 11082 0566 07F11803 		add	r3, r7, #24
 11083 056a 1B68     		ldr	r3, [r3]
 11084 056c 5A42     		negs	r2, r3
 11085 056e 07F11803 		add	r3, r7, #24
 11086 0572 1A60     		str	r2, [r3]
3466:ad5940.c      ****    /*
3467:ad5940.c      ****       The impedance engine inside of AD594x give us Real part and Imaginary part of DFT. Due to tec
3468:ad5940.c      ****       part in register is the opposite number. So we add a negative sign on the Imaginary part of r
3469:ad5940.c      ****    */
3470:ad5940.c      ****   DftRtia.Image = -DftRtia.Image;
 11087              		.loc 1 3470 0
 11088 0574 07F11803 		add	r3, r7, #24
 11089 0578 5B68     		ldr	r3, [r3, #4]
 11090 057a 5A42     		negs	r2, r3
 11091 057c 07F11803 		add	r3, r7, #24
 11092 0580 5A60     		str	r2, [r3, #4]
3471:ad5940.c      ****   DftRcal.Image = -DftRcal.Image;
 11093              		.loc 1 3471 0
 11094 0582 07F12003 		add	r3, r7, #32
 11095 0586 5B68     		ldr	r3, [r3, #4]
 11096 0588 5A42     		negs	r2, r3
 11097 058a 07F12003 		add	r3, r7, #32
 11098 058e 5A60     		str	r2, [r3, #4]
3472:ad5940.c      **** 
3473:ad5940.c      ****   fImpCar_Type temp;
3474:ad5940.c      ****   temp = AD5940_ComplexDivInt(&DftRtia, &DftRcal);
 11099              		.loc 1 3474 0
 11100 0590 07F11004 		add	r4, r7, #16
 11101 0594 3B46     		mov	r3, r7
 11102 0596 07F12002 		add	r2, r7, #32
 11103 059a 07F11801 		add	r1, r7, #24
 11104 059e 1846     		mov	r0, r3
 11105 05a0 FFF7FEFF 		bl	AD5940_ComplexDivInt
 11106 05a4 3A46     		mov	r2, r7
 11107 05a6 2346     		mov	r3, r4
 11108 05a8 92E80300 		ldmia	r2, {r0, r1}
 11109 05ac 83E80300 		stmia	r3, {r0, r1}
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 258


3475:ad5940.c      ****   temp.Real *= pCalCfg->fRcal;
 11110              		.loc 1 3475 0
 11111 05b0 07F11003 		add	r3, r7, #16
 11112 05b4 1A68     		ldr	r2, [r3]	@ float
 11113 05b6 07F10C03 		add	r3, r7, #12
 11114 05ba 1B68     		ldr	r3, [r3]
 11115 05bc 5B68     		ldr	r3, [r3, #4]	@ float
 11116 05be 1946     		mov	r1, r3
 11117 05c0 1046     		mov	r0, r2
 11118 05c2 FFF7FEFF 		bl	__aeabi_fmul
 11119 05c6 0346     		mov	r3, r0
 11120 05c8 1A46     		mov	r2, r3
 11121 05ca 07F11003 		add	r3, r7, #16
 11122 05ce 1A60     		str	r2, [r3]	@ float
3476:ad5940.c      ****   temp.Image *= pCalCfg->fRcal;
 11123              		.loc 1 3476 0
 11124 05d0 07F11003 		add	r3, r7, #16
 11125 05d4 5A68     		ldr	r2, [r3, #4]	@ float
 11126 05d6 07F10C03 		add	r3, r7, #12
 11127 05da 1B68     		ldr	r3, [r3]
 11128 05dc 5B68     		ldr	r3, [r3, #4]	@ float
 11129 05de 1946     		mov	r1, r3
 11130 05e0 1046     		mov	r0, r2
 11131 05e2 FFF7FEFF 		bl	__aeabi_fmul
 11132 05e6 0346     		mov	r3, r0
 11133 05e8 1A46     		mov	r2, r3
 11134 05ea 07F11003 		add	r3, r7, #16
 11135 05ee 5A60     		str	r2, [r3, #4]	@ float
3477:ad5940.c      ****   if(pCalCfg->bPolarResult == bFALSE)
 11136              		.loc 1 3477 0
 11137 05f0 07F10C03 		add	r3, r7, #12
 11138 05f4 1B68     		ldr	r3, [r3]
 11139 05f6 5B6C     		ldr	r3, [r3, #68]
 11140 05f8 002B     		cmp	r3, #0
 11141 05fa 09D1     		bne	.L578
3478:ad5940.c      ****   {
3479:ad5940.c      ****     *(fImpCar_Type*)pResult = temp;
 11142              		.loc 1 3479 0
 11143 05fc 07F10803 		add	r3, r7, #8
 11144 0600 1B68     		ldr	r3, [r3]
 11145 0602 07F11002 		add	r2, r7, #16
 11146 0606 92E80300 		ldmia	r2, {r0, r1}
 11147 060a 83E80300 		stmia	r3, {r0, r1}
 11148 060e 13E0     		b	.L579
 11149              	.L578:
3480:ad5940.c      ****   }
3481:ad5940.c      ****   else
3482:ad5940.c      ****   {
3483:ad5940.c      ****     ((fImpPol_Type*)pResult)->Magnitude = AD5940_ComplexMag(&temp);
 11150              		.loc 1 3483 0
 11151 0610 07F11003 		add	r3, r7, #16
 11152 0614 1846     		mov	r0, r3
 11153 0616 FFF7FEFF 		bl	AD5940_ComplexMag
 11154 061a 0246     		mov	r2, r0
 11155 061c 07F10803 		add	r3, r7, #8
 11156 0620 1B68     		ldr	r3, [r3]
 11157 0622 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 259


3484:ad5940.c      ****     ((fImpPol_Type*)pResult)->Phase = AD5940_ComplexPhase(&temp);
 11158              		.loc 1 3484 0
 11159 0624 07F11003 		add	r3, r7, #16
 11160 0628 1846     		mov	r0, r3
 11161 062a FFF7FEFF 		bl	AD5940_ComplexPhase
 11162 062e 0246     		mov	r2, r0
 11163 0630 07F10803 		add	r3, r7, #8
 11164 0634 1B68     		ldr	r3, [r3]
 11165 0636 5A60     		str	r2, [r3, #4]	@ float
 11166              	.L579:
3485:ad5940.c      ****   }
3486:ad5940.c      ****   
3487:ad5940.c      ****   /* Restore INTC1 DFT configure */
3488:ad5940.c      ****   if(INTCCfg&AFEINTSRC_DFTRDY);
 11167              		.loc 1 3488 0
 11168 0638 D7F80C31 		ldr	r3, [r7, #268]
 11169 063c 03F00203 		and	r3, r3, #2
 11170 0640 002B     		cmp	r3, #0
 11171 0642 04D1     		bne	.L580
3489:ad5940.c      ****   else
3490:ad5940.c      ****     AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_DFTRDY, bFALSE); /* Disable DFT Interrupt */
 11172              		.loc 1 3490 0
 11173 0644 0022     		movs	r2, #0
 11174 0646 0221     		movs	r1, #2
 11175 0648 0120     		movs	r0, #1
 11176 064a FFF7FEFF 		bl	AD5940_INTCCfg
 11177              	.L580:
3491:ad5940.c      **** 
3492:ad5940.c      ****   return AD5940ERR_OK;
 11178              		.loc 1 3492 0
 11179 064e 0023     		movs	r3, #0
 11180              	.L581:
3493:ad5940.c      **** }
 11181              		.loc 1 3493 0 discriminator 1
 11182 0650 1846     		mov	r0, r3
 11183 0652 07F59477 		add	r7, r7, #296
 11184              		.cfi_def_cfa_offset 16
 11185 0656 BD46     		mov	sp, r7
 11186              		.cfi_def_cfa_register 13
 11187              		@ sp needed
 11188 0658 B0BD     		pop	{r4, r5, r7, pc}
 11189              		.cfi_endproc
 11190              	.LFE116:
 11191              		.size	AD5940_HSRtiaCal, .-AD5940_HSRtiaCal
 11192              		.global	__aeabi_fcmpge
 11193 065a 00BF     		.section	.rodata
 11194              		.align	2
 11195              	.LC17:
 11196 0130 00000000 		.word	0
 11197 0134 6E000000 		.word	110
 11198 0138 E8030000 		.word	1000
 11199 013c D0070000 		.word	2000
 11200 0140 B80B0000 		.word	3000
 11201 0144 A00F0000 		.word	4000
 11202 0148 70170000 		.word	6000
 11203 014c 401F0000 		.word	8000
 11204 0150 10270000 		.word	10000
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 260


 11205 0154 E02E0000 		.word	12000
 11206 0158 803E0000 		.word	16000
 11207 015c 204E0000 		.word	20000
 11208 0160 C05D0000 		.word	24000
 11209 0164 30750000 		.word	30000
 11210 0168 007D0000 		.word	32000
 11211 016c 409C0000 		.word	40000
 11212 0170 80BB0000 		.word	48000
 11213 0174 00FA0000 		.word	64000
 11214 0178 084C0100 		.word	85000
 11215 017c 00770100 		.word	96000
 11216 0180 A0860100 		.word	100000
 11217 0184 C0D40100 		.word	120000
 11218 0188 00F40100 		.word	128000
 11219 018c 00710200 		.word	160000
 11220 0190 A0FD0200 		.word	196000
 11221 0194 00E80300 		.word	256000
 11222 0198 00D00700 		.word	512000
 11223              		.align	2
 11224              	.LC18:
 11225 019c 0000803F 		.word	1065353216
 11226 01a0 0000C03F 		.word	1069547520
 11227 01a4 00000040 		.word	1073741824
 11228 01a8 00008040 		.word	1082130432
 11229 01ac 00001041 		.word	1091567616
 11230              		.section	.text.AD5940_LPRtiaCal,"ax",%progbits
 11231              		.align	2
 11232              		.global	AD5940_LPRtiaCal
 11233              		.thumb
 11234              		.thumb_func
 11235              		.type	AD5940_LPRtiaCal, %function
 11236              	AD5940_LPRtiaCal:
 11237              	.LFB117:
3494:ad5940.c      **** 
3495:ad5940.c      **** /**
3496:ad5940.c      ****  * @brief Measure LPTIA internal RTIA impedance with HSTIA. This is the recommended method for LPTI
3497:ad5940.c      ****  * @param pCalCfg: pointer to calibration structure.
3498:ad5940.c      ****  * @param pResult:  Pointer to a variable that used to store result. 
3499:ad5940.c      ****  *                  If bPolarResult in structure is set, then use type fImpPol_Type otherwise use f
3500:ad5940.c      ****  * @return AD5940ERR_OK if succeed.
3501:ad5940.c      **** **/
3502:ad5940.c      **** AD5940Err AD5940_LPRtiaCal(LPRTIACal_Type *pCalCfg, void *pResult)
3503:ad5940.c      **** {
 11238              		.loc 1 3503 0
 11239              		.cfi_startproc
 11240              		@ args = 0, pretend = 0, frame = 472
 11241              		@ frame_needed = 1, uses_anonymous_args = 0
 11242 0000 B0B5     		push	{r4, r5, r7, lr}
 11243              		.cfi_def_cfa_offset 16
 11244              		.cfi_offset 4, -16
 11245              		.cfi_offset 5, -12
 11246              		.cfi_offset 7, -8
 11247              		.cfi_offset 14, -4
 11248 0002 F6B0     		sub	sp, sp, #472
 11249              		.cfi_def_cfa_offset 488
 11250 0004 00AF     		add	r7, sp, #0
 11251              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 261


 11252 0006 07F10C03 		add	r3, r7, #12
 11253 000a 1860     		str	r0, [r3]
 11254 000c 07F10803 		add	r3, r7, #8
 11255 0010 1960     		str	r1, [r3]
3504:ad5940.c      ****   HSLoopCfg_Type hs_loop;
3505:ad5940.c      ****   LPLoopCfg_Type lp_loop;
3506:ad5940.c      ****   DSPCfg_Type dsp_cfg;
3507:ad5940.c      ****   ADCBaseCfg_Type *pADCBaseCfg; 
3508:ad5940.c      ****   SWMatrixCfg_Type *pSWCfg;  
3509:ad5940.c      ****   uint32_t INTCCfg, reg_afecon;
3510:ad5940.c      ****   BoolFlag bADCClk32MHzMode = bFALSE;
 11256              		.loc 1 3510 0
 11257 0012 0023     		movs	r3, #0
 11258 0014 87F8D731 		strb	r3, [r7, #471]
3511:ad5940.c      ****   BoolFlag bDCMode = bFALSE;                /* Indicate if frequency is 0, which means we calibrate
 11259              		.loc 1 3511 0
 11260 0018 0023     		movs	r3, #0
 11261 001a 87F8D631 		strb	r3, [r7, #470]
3512:ad5940.c      **** 
3513:ad5940.c      ****   float ExcitVolt; /* Excitation voltage, unit is mV */
3514:ad5940.c      ****   uint32_t RtiaVal;
3515:ad5940.c      ****   /* RTIA value table when RLOAD set to 100Ohm */
3516:ad5940.c      ****   uint32_t const LpRtiaTable[]={0,110,1000,2000,3000,4000,6000,8000,10000,12000,16000,20000,24000,3
 11262              		.loc 1 3516 0
 11263 001e 07F14003 		add	r3, r7, #64
 11264 0022 BB4A     		ldr	r2, .L673
 11265 0024 1846     		mov	r0, r3
 11266 0026 1146     		mov	r1, r2
 11267 0028 6C23     		movs	r3, #108
 11268 002a 1A46     		mov	r2, r3
 11269 002c FFF7FEFF 		bl	memcpy
3517:ad5940.c      ****   float const ADCPGAGainTable[] = {1, 1.5, 2, 4, 9};
 11270              		.loc 1 3517 0
 11271 0030 07F12C03 		add	r3, r7, #44
 11272 0034 B74A     		ldr	r2, .L673+4
 11273 0036 1C46     		mov	r4, r3
 11274 0038 1546     		mov	r5, r2
 11275 003a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11276 003c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 11277 003e 2B68     		ldr	r3, [r5]
 11278 0040 2360     		str	r3, [r4]
3518:ad5940.c      ****   uint32_t WgAmpWord;
3519:ad5940.c      **** 
3520:ad5940.c      ****   uint32_t ADCPgaGainRtia, ADCPgaGainRcal;
3521:ad5940.c      ****   float GainRatio;
3522:ad5940.c      **** 
3523:ad5940.c      ****   iImpCar_Type DftRcal, DftRtia;
3524:ad5940.c      **** 
3525:ad5940.c      ****   if(pCalCfg == NULL)  return AD5940ERR_NULLP;  /* Parameters illegal */
 11279              		.loc 1 3525 0
 11280 0042 07F10C03 		add	r3, r7, #12
 11281 0046 1B68     		ldr	r3, [r3]
 11282 0048 002B     		cmp	r3, #0
 11283 004a 03D1     		bne	.L597
 11284              		.loc 1 3525 0 is_stmt 0 discriminator 1
 11285 004c 6FF00203 		mvn	r3, #2
 11286 0050 00F03BBD 		b	.L652
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 262


 11287              	.L597:
3526:ad5940.c      ****   
3527:ad5940.c      ****   if(pCalCfg->fRcal == 0)
 11288              		.loc 1 3527 0 is_stmt 1
 11289 0054 07F10C03 		add	r3, r7, #12
 11290 0058 1B68     		ldr	r3, [r3]
 11291 005a 5B68     		ldr	r3, [r3, #4]	@ float
 11292 005c 4FF00001 		mov	r1, #0
 11293 0060 1846     		mov	r0, r3
 11294 0062 FFF7FEFF 		bl	__aeabi_fcmpeq
 11295 0066 0346     		mov	r3, r0
 11296 0068 002B     		cmp	r3, #0
 11297 006a 03D0     		beq	.L664
3528:ad5940.c      ****     return AD5940ERR_PARA;
 11298              		.loc 1 3528 0
 11299 006c 6FF00103 		mvn	r3, #1
 11300 0070 00F02BBD 		b	.L652
 11301              	.L664:
3529:ad5940.c      ****   if(pCalCfg->LpTiaRtia > LPTIARTIA_512K)
 11302              		.loc 1 3529 0
 11303 0074 07F10C03 		add	r3, r7, #12
 11304 0078 1B68     		ldr	r3, [r3]
 11305 007a 9B69     		ldr	r3, [r3, #24]
 11306 007c 1A2B     		cmp	r3, #26
 11307 007e 03D9     		bls	.L601
3530:ad5940.c      ****     return AD5940ERR_PARA;
 11308              		.loc 1 3530 0
 11309 0080 6FF00103 		mvn	r3, #1
 11310 0084 00F021BD 		b	.L652
 11311              	.L601:
3531:ad5940.c      ****   if(pCalCfg->LpTiaRtia == LPTIARTIA_OPEN)
 11312              		.loc 1 3531 0
 11313 0088 07F10C03 		add	r3, r7, #12
 11314 008c 1B68     		ldr	r3, [r3]
 11315 008e 9B69     		ldr	r3, [r3, #24]
 11316 0090 002B     		cmp	r3, #0
 11317 0092 03D1     		bne	.L602
3532:ad5940.c      ****     return AD5940ERR_PARA; /* Not supported now. By setting RTIA to open and set corresponding swit
 11318              		.loc 1 3532 0
 11319 0094 6FF00103 		mvn	r3, #1
 11320 0098 00F017BD 		b	.L652
 11321              	.L602:
3533:ad5940.c      ****   if(pResult == NULL)
 11322              		.loc 1 3533 0
 11323 009c 07F10803 		add	r3, r7, #8
 11324 00a0 1B68     		ldr	r3, [r3]
 11325 00a2 002B     		cmp	r3, #0
 11326 00a4 03D1     		bne	.L603
3534:ad5940.c      ****       return AD5940ERR_NULLP;
 11327              		.loc 1 3534 0
 11328 00a6 6FF00203 		mvn	r3, #2
 11329 00aa 00F00EBD 		b	.L652
 11330              	.L603:
3535:ad5940.c      **** 
3536:ad5940.c      ****   if(pCalCfg->AdcClkFreq > (32000000*0.8))
 11331              		.loc 1 3536 0
 11332 00ae 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 263


 11333 00b2 1B68     		ldr	r3, [r3]
 11334 00b4 DB68     		ldr	r3, [r3, #12]	@ float
 11335 00b6 9849     		ldr	r1, .L673+8
 11336 00b8 1846     		mov	r0, r3
 11337 00ba FFF7FEFF 		bl	__aeabi_fcmpgt
 11338 00be 0346     		mov	r3, r0
 11339 00c0 002B     		cmp	r3, #0
 11340 00c2 02D0     		beq	.L604
3537:ad5940.c      ****     bADCClk32MHzMode = bTRUE;   /* Clock frequency is high. */
 11341              		.loc 1 3537 0
 11342 00c4 0123     		movs	r3, #1
 11343 00c6 87F8D731 		strb	r3, [r7, #471]
 11344              	.L604:
3538:ad5940.c      ****   if(pCalCfg->fFreq == 0.0f)    /* Frequency is zero means we calibrate RTIA at DC. */
 11345              		.loc 1 3538 0
 11346 00ca 07F10C03 		add	r3, r7, #12
 11347 00ce 1B68     		ldr	r3, [r3]
 11348 00d0 1B68     		ldr	r3, [r3]	@ float
 11349 00d2 4FF00001 		mov	r1, #0
 11350 00d6 1846     		mov	r0, r3
 11351 00d8 FFF7FEFF 		bl	__aeabi_fcmpeq
 11352 00dc 0346     		mov	r3, r0
 11353 00de 002B     		cmp	r3, #0
 11354 00e0 02D0     		beq	.L606
3539:ad5940.c      ****     bDCMode = bTRUE;
 11355              		.loc 1 3539 0
 11356 00e2 0123     		movs	r3, #1
 11357 00e4 87F8D631 		strb	r3, [r7, #470]
 11358              	.L606:
3540:ad5940.c      ****   /* Init two pointers */
3541:ad5940.c      ****   pSWCfg = &hs_loop.SWMatCfg;
 11359              		.loc 1 3541 0
 11360 00e8 07F59473 		add	r3, r7, #296
 11361 00ec C7F8C431 		str	r3, [r7, #452]
3542:ad5940.c      ****   pADCBaseCfg = &dsp_cfg.ADCBaseCfg;
 11362              		.loc 1 3542 0
 11363 00f0 07F1AC03 		add	r3, r7, #172
 11364 00f4 C7F8C031 		str	r3, [r7, #448]
3543:ad5940.c      ****   /* Calculate the excitation voltage we should use based on RCAL/Rtia */
3544:ad5940.c      ****   RtiaVal = LpRtiaTable[pCalCfg->LpTiaRtia];
 11365              		.loc 1 3544 0
 11366 00f8 07F10C03 		add	r3, r7, #12
 11367 00fc 1B68     		ldr	r3, [r3]
 11368 00fe 9A69     		ldr	r2, [r3, #24]
 11369 0100 07F14003 		add	r3, r7, #64
 11370 0104 53F82230 		ldr	r3, [r3, r2, lsl #2]
 11371 0108 C7F8BC31 		str	r3, [r7, #444]
3545:ad5940.c      ****   /*
3546:ad5940.c      ****    * DAC output voltage calculation
3547:ad5940.c      ****    * Note: RCAL value should be similar to RTIA so the accuracy is best.
3548:ad5940.c      ****    * LPTIA output voltage should be limited to 0.3V to AVDD-0.4V, with 1.3V bias. We use 80% of thi
3549:ad5940.c      ****    * That's 2.0Vpp*80%@2.7V AVDD
3550:ad5940.c      ****    * Formula is:    ExcitVolt(in mVpp) = (2000mVpp*80% / RTIA) * RCAL
3551:ad5940.c      ****    * ADC input range is +-1.5V which is enough for calibration.
3552:ad5940.c      ****    * Limitations:
3553:ad5940.c      ****    * Note: HSTIA output range is AVDD-0.4V to AGND+0.2V
3554:ad5940.c      ****    * HSTIA input common voltage range is 0.3V to AVDD-0.7V;
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 264


3555:ad5940.c      ****    * When AVDD is 2.7V, the input range is 0.3V to 2.0V; 
3556:ad5940.c      ****    * If we set Vbias to 1.3V, then maximum AC signal is 0.7Vp*2 = 1.4Vpp.
3557:ad5940.c      ****    * Maximum AC signal is further limited by HSTIA RTIA=200Ohm, when RCAL is 200Ohm(for ADuCM355). 
3558:ad5940.c      ****    * Maximum Vzero voltage is 1.9V when Rcal is 200Ohm and Switch On resistance is 50Ohm*2. Vzero_m
3559:ad5940.c      ****    * Maximum AC signal is (1.9-1.3)*2 = 1.2Vpp(for ADuCM355, RCAl=200Ohm).
3560:ad5940.c      ****   */
3561:ad5940.c      ****  /** @cond */
3562:ad5940.c      ****   #define MAXVOLT_P2P 1400  /* Maximum peak to peak voltage 1200mV for ADuCM355. */  
3563:ad5940.c      ****                             /* Maximum peak2peak voltage for AD5940 10kOhm RCAL is 1400mV */
3564:ad5940.c      ****   #define __MAXVOLT_AMP_CODE  (MAXVOLT_P2P*2047L/2200)
3565:ad5940.c      ****  /** @endcond */
3566:ad5940.c      ****   ExcitVolt = 2000*0.8*pCalCfg->fRcal/RtiaVal;
 11372              		.loc 1 3566 0
 11373 010c 07F10C03 		add	r3, r7, #12
 11374 0110 1B68     		ldr	r3, [r3]
 11375 0112 5B68     		ldr	r3, [r3, #4]	@ float
 11376 0114 1846     		mov	r0, r3
 11377 0116 FFF7FEFF 		bl	__aeabi_f2d
 11378 011a 4FF00002 		mov	r2, #0
 11379 011e 7F4B     		ldr	r3, .L673+12
 11380 0120 FFF7FEFF 		bl	__aeabi_dmul
 11381 0124 0346     		mov	r3, r0
 11382 0126 0C46     		mov	r4, r1
 11383 0128 2546     		mov	r5, r4
 11384 012a 1C46     		mov	r4, r3
 11385 012c D7F8BC01 		ldr	r0, [r7, #444]
 11386 0130 FFF7FEFF 		bl	__aeabi_ui2d
 11387 0134 0246     		mov	r2, r0
 11388 0136 0B46     		mov	r3, r1
 11389 0138 2046     		mov	r0, r4
 11390 013a 2946     		mov	r1, r5
 11391 013c FFF7FEFF 		bl	__aeabi_ddiv
 11392 0140 0346     		mov	r3, r0
 11393 0142 0C46     		mov	r4, r1
 11394 0144 1846     		mov	r0, r3
 11395 0146 2146     		mov	r1, r4
 11396 0148 FFF7FEFF 		bl	__aeabi_d2f
 11397 014c 0346     		mov	r3, r0
 11398 014e C7F8B831 		str	r3, [r7, #440]	@ float
3567:ad5940.c      ****   WgAmpWord = ((uint32_t)(ExcitVolt/2200*2047*2)+1)>>1; /* Assign value with rounding (0.5 LSB erro
 11399              		.loc 1 3567 0
 11400 0152 7349     		ldr	r1, .L673+16
 11401 0154 D7F8B801 		ldr	r0, [r7, #440]	@ float
 11402 0158 FFF7FEFF 		bl	__aeabi_fdiv
 11403 015c 0346     		mov	r3, r0
 11404 015e 7149     		ldr	r1, .L673+20
 11405 0160 1846     		mov	r0, r3
 11406 0162 FFF7FEFF 		bl	__aeabi_fmul
 11407 0166 0346     		mov	r3, r0
 11408 0168 1946     		mov	r1, r3
 11409 016a 1846     		mov	r0, r3
 11410 016c FFF7FEFF 		bl	__aeabi_fadd
 11411 0170 0346     		mov	r3, r0
 11412 0172 1846     		mov	r0, r3
 11413 0174 FFF7FEFF 		bl	__aeabi_f2uiz
 11414 0178 0346     		mov	r3, r0
 11415 017a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 265


 11416 017c 5B08     		lsrs	r3, r3, #1
 11417 017e C7F8D031 		str	r3, [r7, #464]
3568:ad5940.c      ****   if(WgAmpWord > __MAXVOLT_AMP_CODE)
 11418              		.loc 1 3568 0
 11419 0182 D7F8D031 		ldr	r3, [r7, #464]
 11420 0186 40F21652 		movw	r2, #1302
 11421 018a 9342     		cmp	r3, r2
 11422 018c 03D9     		bls	.L608
3569:ad5940.c      ****     WgAmpWord = __MAXVOLT_AMP_CODE;
 11423              		.loc 1 3569 0
 11424 018e 40F21653 		movw	r3, #1302
 11425 0192 C7F8D031 		str	r3, [r7, #464]
 11426              	.L608:
 11427              	.LBB23:
3570:ad5940.c      ****   /**
3571:ad5940.c      ****    * Determine the best ADC PGA gain for both RCAL and RTIA voltage measurement.
3572:ad5940.c      ****   */
3573:ad5940.c      ****   {
3574:ad5940.c      ****     float RtiaVolt, RcalVolt, temp;
3575:ad5940.c      ****     ExcitVolt = WgAmpWord*2000.0f/2047; /* 2000mVpp -->ExcitVolt in Peak to Peak unit */
 11428              		.loc 1 3575 0
 11429 0196 D7F8D001 		ldr	r0, [r7, #464]
 11430 019a FFF7FEFF 		bl	__aeabi_ui2f
 11431 019e 0346     		mov	r3, r0
 11432 01a0 6149     		ldr	r1, .L673+24
 11433 01a2 1846     		mov	r0, r3
 11434 01a4 FFF7FEFF 		bl	__aeabi_fmul
 11435 01a8 0346     		mov	r3, r0
 11436 01aa 5E49     		ldr	r1, .L673+20
 11437 01ac 1846     		mov	r0, r3
 11438 01ae FFF7FEFF 		bl	__aeabi_fdiv
 11439 01b2 0346     		mov	r3, r0
 11440 01b4 C7F8B831 		str	r3, [r7, #440]	@ float
3576:ad5940.c      ****     RtiaVolt = ExcitVolt/(pCalCfg->fRcal + 100)*RtiaVal;
 11441              		.loc 1 3576 0
 11442 01b8 07F10C03 		add	r3, r7, #12
 11443 01bc 1B68     		ldr	r3, [r3]
 11444 01be 5B68     		ldr	r3, [r3, #4]	@ float
 11445 01c0 5A49     		ldr	r1, .L673+28
 11446 01c2 1846     		mov	r0, r3
 11447 01c4 FFF7FEFF 		bl	__aeabi_fadd
 11448 01c8 0346     		mov	r3, r0
 11449 01ca 1946     		mov	r1, r3
 11450 01cc D7F8B801 		ldr	r0, [r7, #440]	@ float
 11451 01d0 FFF7FEFF 		bl	__aeabi_fdiv
 11452 01d4 0346     		mov	r3, r0
 11453 01d6 1C46     		mov	r4, r3
 11454 01d8 D7F8BC01 		ldr	r0, [r7, #444]
 11455 01dc FFF7FEFF 		bl	__aeabi_ui2f
 11456 01e0 0346     		mov	r3, r0
 11457 01e2 1946     		mov	r1, r3
 11458 01e4 2046     		mov	r0, r4
 11459 01e6 FFF7FEFF 		bl	__aeabi_fmul
 11460 01ea 0346     		mov	r3, r0
 11461 01ec C7F8B431 		str	r3, [r7, #436]	@ float
3577:ad5940.c      ****     RcalVolt = RtiaVolt/RtiaVal*pCalCfg->fRcal;
 11462              		.loc 1 3577 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 266


 11463 01f0 D7F8BC01 		ldr	r0, [r7, #444]
 11464 01f4 FFF7FEFF 		bl	__aeabi_ui2f
 11465 01f8 0346     		mov	r3, r0
 11466 01fa 1946     		mov	r1, r3
 11467 01fc D7F8B401 		ldr	r0, [r7, #436]	@ float
 11468 0200 FFF7FEFF 		bl	__aeabi_fdiv
 11469 0204 0346     		mov	r3, r0
 11470 0206 1A46     		mov	r2, r3
 11471 0208 07F10C03 		add	r3, r7, #12
 11472 020c 1B68     		ldr	r3, [r3]
 11473 020e 5B68     		ldr	r3, [r3, #4]	@ float
 11474 0210 1946     		mov	r1, r3
 11475 0212 1046     		mov	r0, r2
 11476 0214 FFF7FEFF 		bl	__aeabi_fmul
 11477 0218 0346     		mov	r3, r0
 11478 021a C7F8B031 		str	r3, [r7, #432]	@ float
3578:ad5940.c      ****     /* The input range of ADC is 1.5Vp, we calculate how much gain we need */
3579:ad5940.c      ****     temp = 3000.0f/RcalVolt;
 11479              		.loc 1 3579 0
 11480 021e D7F8B011 		ldr	r1, [r7, #432]	@ float
 11481 0222 4348     		ldr	r0, .L673+32
 11482 0224 FFF7FEFF 		bl	__aeabi_fdiv
 11483 0228 0346     		mov	r3, r0
 11484 022a C7F8AC31 		str	r3, [r7, #428]	@ float
3580:ad5940.c      ****     if(temp >= 9.0f)  ADCPgaGainRcal = ADCPGA_9;
 11485              		.loc 1 3580 0
 11486 022e 4149     		ldr	r1, .L673+36
 11487 0230 D7F8AC01 		ldr	r0, [r7, #428]	@ float
 11488 0234 FFF7FEFF 		bl	__aeabi_fcmpge
 11489 0238 0346     		mov	r3, r0
 11490 023a 002B     		cmp	r3, #0
 11491 023c 03D0     		beq	.L665
 11492              		.loc 1 3580 0 is_stmt 0 discriminator 1
 11493 023e 0423     		movs	r3, #4
 11494 0240 C7F8C831 		str	r3, [r7, #456]
 11495 0244 29E0     		b	.L611
 11496              	.L665:
3581:ad5940.c      ****     else if(temp >= 4.0f) ADCPgaGainRcal = ADCPGA_4;
 11497              		.loc 1 3581 0 is_stmt 1
 11498 0246 4FF08141 		mov	r1, #1082130432
 11499 024a D7F8AC01 		ldr	r0, [r7, #428]	@ float
 11500 024e FFF7FEFF 		bl	__aeabi_fcmpge
 11501 0252 0346     		mov	r3, r0
 11502 0254 002B     		cmp	r3, #0
 11503 0256 03D0     		beq	.L666
 11504              		.loc 1 3581 0 is_stmt 0 discriminator 1
 11505 0258 0323     		movs	r3, #3
 11506 025a C7F8C831 		str	r3, [r7, #456]
 11507 025e 1CE0     		b	.L611
 11508              	.L666:
3582:ad5940.c      ****     else if(temp >= 2.0f) ADCPgaGainRcal = ADCPGA_2;
 11509              		.loc 1 3582 0 is_stmt 1
 11510 0260 4FF08041 		mov	r1, #1073741824
 11511 0264 D7F8AC01 		ldr	r0, [r7, #428]	@ float
 11512 0268 FFF7FEFF 		bl	__aeabi_fcmpge
 11513 026c 0346     		mov	r3, r0
 11514 026e 002B     		cmp	r3, #0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 267


 11515 0270 03D0     		beq	.L667
 11516              		.loc 1 3582 0 is_stmt 0 discriminator 1
 11517 0272 0223     		movs	r3, #2
 11518 0274 C7F8C831 		str	r3, [r7, #456]
 11519 0278 0FE0     		b	.L611
 11520              	.L667:
3583:ad5940.c      ****     else if(temp >= 1.5f) ADCPgaGainRcal = ADCPGA_1P5;
 11521              		.loc 1 3583 0 is_stmt 1
 11522 027a 4FF07F51 		mov	r1, #1069547520
 11523 027e D7F8AC01 		ldr	r0, [r7, #428]	@ float
 11524 0282 FFF7FEFF 		bl	__aeabi_fcmpge
 11525 0286 0346     		mov	r3, r0
 11526 0288 002B     		cmp	r3, #0
 11527 028a 03D0     		beq	.L668
 11528              		.loc 1 3583 0 is_stmt 0 discriminator 1
 11529 028c 0123     		movs	r3, #1
 11530 028e C7F8C831 		str	r3, [r7, #456]
 11531 0292 02E0     		b	.L611
 11532              	.L668:
3584:ad5940.c      ****     else ADCPgaGainRcal = ADCPGA_1;
 11533              		.loc 1 3584 0 is_stmt 1
 11534 0294 0023     		movs	r3, #0
 11535 0296 C7F8C831 		str	r3, [r7, #456]
 11536              	.L611:
3585:ad5940.c      ****     temp = 3000.0f/RtiaVolt;
 11537              		.loc 1 3585 0
 11538 029a D7F8B411 		ldr	r1, [r7, #436]	@ float
 11539 029e 2448     		ldr	r0, .L673+32
 11540 02a0 FFF7FEFF 		bl	__aeabi_fdiv
 11541 02a4 0346     		mov	r3, r0
 11542 02a6 C7F8AC31 		str	r3, [r7, #428]	@ float
3586:ad5940.c      ****     if(temp >= 9.0f)  ADCPgaGainRtia = ADCPGA_9;
 11543              		.loc 1 3586 0
 11544 02aa 2249     		ldr	r1, .L673+36
 11545 02ac D7F8AC01 		ldr	r0, [r7, #428]	@ float
 11546 02b0 FFF7FEFF 		bl	__aeabi_fcmpge
 11547 02b4 0346     		mov	r3, r0
 11548 02b6 002B     		cmp	r3, #0
 11549 02b8 03D0     		beq	.L669
 11550              		.loc 1 3586 0 is_stmt 0 discriminator 1
 11551 02ba 0423     		movs	r3, #4
 11552 02bc C7F8CC31 		str	r3, [r7, #460]
 11553 02c0 3DE0     		b	.L620
 11554              	.L669:
3587:ad5940.c      ****     else if(temp >= 4.0f) ADCPgaGainRtia = ADCPGA_4;
 11555              		.loc 1 3587 0 is_stmt 1
 11556 02c2 4FF08141 		mov	r1, #1082130432
 11557 02c6 D7F8AC01 		ldr	r0, [r7, #428]	@ float
 11558 02ca FFF7FEFF 		bl	__aeabi_fcmpge
 11559 02ce 0346     		mov	r3, r0
 11560 02d0 002B     		cmp	r3, #0
 11561 02d2 03D0     		beq	.L670
 11562              		.loc 1 3587 0 is_stmt 0 discriminator 1
 11563 02d4 0323     		movs	r3, #3
 11564 02d6 C7F8CC31 		str	r3, [r7, #460]
 11565 02da 30E0     		b	.L620
 11566              	.L670:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 268


3588:ad5940.c      ****     else if(temp >= 2.0f) ADCPgaGainRtia = ADCPGA_2;
 11567              		.loc 1 3588 0 is_stmt 1
 11568 02dc 4FF08041 		mov	r1, #1073741824
 11569 02e0 D7F8AC01 		ldr	r0, [r7, #428]	@ float
 11570 02e4 FFF7FEFF 		bl	__aeabi_fcmpge
 11571 02e8 0346     		mov	r3, r0
 11572 02ea 002B     		cmp	r3, #0
 11573 02ec 03D0     		beq	.L671
 11574              		.loc 1 3588 0 is_stmt 0 discriminator 1
 11575 02ee 0223     		movs	r3, #2
 11576 02f0 C7F8CC31 		str	r3, [r7, #460]
 11577 02f4 23E0     		b	.L620
 11578              	.L671:
3589:ad5940.c      ****     else if(temp >= 1.5f) ADCPgaGainRtia = ADCPGA_1P5;
 11579              		.loc 1 3589 0 is_stmt 1
 11580 02f6 4FF07F51 		mov	r1, #1069547520
 11581 02fa D7F8AC01 		ldr	r0, [r7, #428]	@ float
 11582 02fe FFF7FEFF 		bl	__aeabi_fcmpge
 11583 0302 0346     		mov	r3, r0
 11584 0304 002B     		cmp	r3, #0
 11585 0306 17D0     		beq	.L672
 11586              		.loc 1 3589 0 is_stmt 0 discriminator 1
 11587 0308 0123     		movs	r3, #1
 11588 030a C7F8CC31 		str	r3, [r7, #460]
 11589 030e 16E0     		b	.L620
 11590              	.L674:
 11591              		.align	2
 11592              	.L673:
 11593 0310 30010000 		.word	.LC17
 11594 0314 9C010000 		.word	.LC18
 11595 0318 0050C34B 		.word	1271091200
 11596 031c 00009940 		.word	1083768832
 11597 0320 00800945 		.word	1158250496
 11598 0324 00E0FF44 		.word	1157619712
 11599 0328 0000FA44 		.word	1157234688
 11600 032c 0000C842 		.word	1120403456
 11601 0330 00803B45 		.word	1161527296
 11602 0334 00001041 		.word	1091567616
 11603              	.L672:
3590:ad5940.c      ****     else ADCPgaGainRtia = ADCPGA_1;
 11604              		.loc 1 3590 0 is_stmt 1
 11605 0338 0023     		movs	r3, #0
 11606 033a C7F8CC31 		str	r3, [r7, #460]
 11607              	.L620:
3591:ad5940.c      ****     GainRatio = ADCPGAGainTable[ADCPgaGainRtia]/ADCPGAGainTable[ADCPgaGainRcal];
 11608              		.loc 1 3591 0
 11609 033e 07F12C03 		add	r3, r7, #44
 11610 0342 D7F8CC21 		ldr	r2, [r7, #460]
 11611 0346 53F82200 		ldr	r0, [r3, r2, lsl #2]	@ float
 11612 034a 07F12C03 		add	r3, r7, #44
 11613 034e D7F8C821 		ldr	r2, [r7, #456]
 11614 0352 53F82230 		ldr	r3, [r3, r2, lsl #2]	@ float
 11615 0356 1946     		mov	r1, r3
 11616 0358 FFF7FEFF 		bl	__aeabi_fdiv
 11617 035c 0346     		mov	r3, r0
 11618 035e C7F8A831 		str	r3, [r7, #424]	@ float
 11619              	.LBE23:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 269


3592:ad5940.c      ****   }
3593:ad5940.c      ****   reg_afecon = AD5940_ReadReg(REG_AFE_AFECON);
 11620              		.loc 1 3593 0
 11621 0362 4FF40050 		mov	r0, #8192
 11622 0366 FFF7FEFF 		bl	AD5940_ReadReg
 11623 036a C7F8A401 		str	r0, [r7, #420]
3594:ad5940.c      ****   /* INTC configuration */
3595:ad5940.c      ****   INTCCfg = AD5940_INTCGetCfg(AFEINTC_1);
 11624              		.loc 1 3595 0
 11625 036e 0120     		movs	r0, #1
 11626 0370 FFF7FEFF 		bl	AD5940_INTCGetCfg
 11627 0374 C7F8A001 		str	r0, [r7, #416]
3596:ad5940.c      ****   AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_DFTRDY|AFEINTSRC_SINC2RDY, bTRUE); /* Enable SINC2 Interrupt 
 11628              		.loc 1 3596 0
 11629 0378 0122     		movs	r2, #1
 11630 037a 0621     		movs	r1, #6
 11631 037c 0120     		movs	r0, #1
 11632 037e FFF7FEFF 		bl	AD5940_INTCCfg
3597:ad5940.c      ****   AD5940_INTCClrFlag(AFEINTSRC_ALLINT);
 11633              		.loc 1 3597 0
 11634 0382 4FF0FF30 		mov	r0, #-1
 11635 0386 FFF7FEFF 		bl	AD5940_INTCClrFlag
3598:ad5940.c      **** 
3599:ad5940.c      ****   AD5940_AFECtrlS(AFECTRL_ALL, bFALSE);  /* Init all to disable state */
 11636              		.loc 1 3599 0
 11637 038a 0021     		movs	r1, #0
 11638 038c BB48     		ldr	r0, .L675
 11639 038e FFF7FEFF 		bl	AD5940_AFECtrlS
3600:ad5940.c      ****   /* Configure reference system */
3601:ad5940.c      **** 	__AD5940_ReferenceON();
 11640              		.loc 1 3601 0
 11641 0392 FFF7FEFF 		bl	__AD5940_ReferenceON
3602:ad5940.c      **** 	/* Configure DSP */
3603:ad5940.c      **** 	AD5940_StructInit(&dsp_cfg, sizeof(dsp_cfg));
 11642              		.loc 1 3603 0
 11643 0396 07F1AC03 		add	r3, r7, #172
 11644 039a 4021     		movs	r1, #64
 11645 039c 1846     		mov	r0, r3
 11646 039e FFF7FEFF 		bl	AD5940_StructInit
3604:ad5940.c      **** 	dsp_cfg.ADCFilterCfg.ADCAvgNum = ADCAVGNUM_16;  /* Don't care because it's disabled */
 11647              		.loc 1 3604 0
 11648 03a2 07F1AC03 		add	r3, r7, #172
 11649 03a6 0322     		movs	r2, #3
 11650 03a8 5A61     		str	r2, [r3, #20]
3605:ad5940.c      **** 	dsp_cfg.ADCFilterCfg.ADCRate = bADCClk32MHzMode?ADCRATE_1P6MHZ:ADCRATE_800KHZ;
 11651              		.loc 1 3605 0
 11652 03aa 97F8D731 		ldrb	r3, [r7, #471]	@ zero_extendqisi2
 11653 03ae 002B     		cmp	r3, #0
 11654 03b0 0CBF     		ite	eq
 11655 03b2 0123     		moveq	r3, #1
 11656 03b4 0023     		movne	r3, #0
 11657 03b6 DBB2     		uxtb	r3, r3
 11658 03b8 1A46     		mov	r2, r3
 11659 03ba 07F1AC03 		add	r3, r7, #172
 11660 03be 9A61     		str	r2, [r3, #24]
3606:ad5940.c      **** 	dsp_cfg.ADCFilterCfg.ADCSinc2Osr = pCalCfg->ADCSinc2Osr;
 11661              		.loc 1 3606 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 270


 11662 03c0 07F10C03 		add	r3, r7, #12
 11663 03c4 1B68     		ldr	r3, [r3]
 11664 03c6 5A6A     		ldr	r2, [r3, #36]
 11665 03c8 07F1AC03 		add	r3, r7, #172
 11666 03cc 1A61     		str	r2, [r3, #16]
3607:ad5940.c      **** 	dsp_cfg.ADCFilterCfg.ADCSinc3Osr = pCalCfg->ADCSinc3Osr;
 11667              		.loc 1 3607 0
 11668 03ce 07F10C03 		add	r3, r7, #12
 11669 03d2 1B68     		ldr	r3, [r3]
 11670 03d4 1A6A     		ldr	r2, [r3, #32]
 11671 03d6 07F1AC03 		add	r3, r7, #172
 11672 03da DA60     		str	r2, [r3, #12]
3608:ad5940.c      **** 	dsp_cfg.ADCFilterCfg.BpNotch = bTRUE;
 11673              		.loc 1 3608 0
 11674 03dc 07F1AC03 		add	r3, r7, #172
 11675 03e0 0122     		movs	r2, #1
 11676 03e2 1A77     		strb	r2, [r3, #28]
3609:ad5940.c      **** 	dsp_cfg.ADCFilterCfg.BpSinc3 = bFALSE;
 11677              		.loc 1 3609 0
 11678 03e4 07F1AC03 		add	r3, r7, #172
 11679 03e8 0022     		movs	r2, #0
 11680 03ea 5A77     		strb	r2, [r3, #29]
3610:ad5940.c      **** 	dsp_cfg.ADCFilterCfg.Sinc2NotchEnable = bTRUE;
 11681              		.loc 1 3610 0
 11682 03ec 07F1AC03 		add	r3, r7, #172
 11683 03f0 0122     		movs	r2, #1
 11684 03f2 9A77     		strb	r2, [r3, #30]
3611:ad5940.c      **** 	memcpy(&dsp_cfg.DftCfg, &pCalCfg->DftCfg, sizeof(pCalCfg->DftCfg));
 11685              		.loc 1 3611 0
 11686 03f4 07F10C03 		add	r3, r7, #12
 11687 03f8 1B68     		ldr	r3, [r3]
 11688 03fa 03F12801 		add	r1, r3, #40
 11689 03fe 07F1AC03 		add	r3, r7, #172
 11690 0402 2833     		adds	r3, r3, #40
 11691 0404 0C22     		movs	r2, #12
 11692 0406 1846     		mov	r0, r3
 11693 0408 FFF7FEFF 		bl	memcpy
3612:ad5940.c      **** 	AD5940_DSPCfgS(&dsp_cfg);
 11694              		.loc 1 3612 0
 11695 040c 07F1AC03 		add	r3, r7, #172
 11696 0410 1846     		mov	r0, r3
 11697 0412 FFF7FEFF 		bl	AD5940_DSPCfgS
3613:ad5940.c      ****   /* Configure LP Loop */
3614:ad5940.c      ****   AD5940_StructInit(&lp_loop, sizeof(lp_loop));
 11698              		.loc 1 3614 0
 11699 0416 07F1EC03 		add	r3, r7, #236
 11700 041a 3C21     		movs	r1, #60
 11701 041c 1846     		mov	r0, r3
 11702 041e FFF7FEFF 		bl	AD5940_StructInit
3615:ad5940.c      ****   /* Configure LP Amplifies(LPPA and LPTIA). We won't use LP-PA */
3616:ad5940.c      ****   lp_loop.LpDacCfg.LpdacSel = (pCalCfg->LpAmpSel  == LPAMP0)?LPDAC0:LPDAC1;
 11703              		.loc 1 3616 0
 11704 0422 07F10C03 		add	r3, r7, #12
 11705 0426 1B68     		ldr	r3, [r3]
 11706 0428 1B69     		ldr	r3, [r3, #16]
 11707 042a 002B     		cmp	r3, #0
 11708 042c 14BF     		ite	ne
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 271


 11709 042e 0123     		movne	r3, #1
 11710 0430 0023     		moveq	r3, #0
 11711 0432 DBB2     		uxtb	r3, r3
 11712 0434 C7F8EC30 		str	r3, [r7, #236]
3617:ad5940.c      **** 	lp_loop.LpDacCfg.DacData12Bit = 0x800;                 		/* Controlled by WG */
 11713              		.loc 1 3617 0
 11714 0438 4FF40063 		mov	r3, #2048
 11715 043c A7F80631 		strh	r3, [r7, #262]	@ movhi
3618:ad5940.c      ****   lp_loop.LpDacCfg.DacData6Bit = 32;                    /* middle scale value */
 11716              		.loc 1 3618 0
 11717 0440 2023     		movs	r3, #32
 11718 0442 A7F80831 		strh	r3, [r7, #264]	@ movhi
3619:ad5940.c      ****   lp_loop.LpDacCfg.DataRst =bFALSE;                    	/* Do not keep DATA registers at reset stat
 11719              		.loc 1 3619 0
 11720 0446 0023     		movs	r3, #0
 11721 0448 87F80431 		strb	r3, [r7, #260]
3620:ad5940.c      ****   lp_loop.LpDacCfg.LpDacSW = LPDACSW_VBIAS2LPPA|LPDACSW_VZERO2HSTIA;
 11722              		.loc 1 3620 0
 11723 044c 1123     		movs	r3, #17
 11724 044e C7F8FC30 		str	r3, [r7, #252]
3621:ad5940.c      ****   lp_loop.LpDacCfg.LpDacRef = LPDACREF_2P5;            	/* Select internal 2.5V reference */
 11725              		.loc 1 3621 0
 11726 0452 0023     		movs	r3, #0
 11727 0454 C7F80031 		str	r3, [r7, #256]
3622:ad5940.c      ****   lp_loop.LpDacCfg.LpDacSrc = LPDACSRC_WG;             	/* The LPDAC data comes from WG not MMR in 
 11728              		.loc 1 3622 0
 11729 0458 0123     		movs	r3, #1
 11730 045a C7F8F030 		str	r3, [r7, #240]
3623:ad5940.c      ****   lp_loop.LpDacCfg.LpDacVbiasMux = LPDACVBIAS_6BIT;    	/* Connect Vbias signal to 6Bit LPDAC outpu
 11731              		.loc 1 3623 0
 11732 045e 0123     		movs	r3, #1
 11733 0460 C7F8F830 		str	r3, [r7, #248]
3624:ad5940.c      ****   lp_loop.LpDacCfg.LpDacVzeroMux = LPDACVZERO_12BIT;   	/* Connect Vzero signal to 12bit LPDAC outp
 11734              		.loc 1 3624 0
 11735 0464 0123     		movs	r3, #1
 11736 0466 C7F8F430 		str	r3, [r7, #244]
3625:ad5940.c      ****   lp_loop.LpDacCfg.PowerEn = bTRUE;                    	/* Power up LPDAC */
 11737              		.loc 1 3625 0
 11738 046a 0123     		movs	r3, #1
 11739 046c 87F80531 		strb	r3, [r7, #261]
3626:ad5940.c      **** 
3627:ad5940.c      ****   lp_loop.LpAmpCfg.LpAmpSel = pCalCfg->LpAmpSel;
 11740              		.loc 1 3627 0
 11741 0470 07F10C03 		add	r3, r7, #12
 11742 0474 1B68     		ldr	r3, [r3]
 11743 0476 1B69     		ldr	r3, [r3, #16]
 11744 0478 C7F80C31 		str	r3, [r7, #268]
3628:ad5940.c      ****   lp_loop.LpAmpCfg.LpAmpPwrMod = pCalCfg->LpAmpPwrMod;  /* Set low power amplifiers to normal power
 11745              		.loc 1 3628 0
 11746 047c 07F10C03 		add	r3, r7, #12
 11747 0480 1B68     		ldr	r3, [r3]
 11748 0482 DB69     		ldr	r3, [r3, #28]
 11749 0484 C7F81C31 		str	r3, [r7, #284]
3629:ad5940.c      ****   lp_loop.LpAmpCfg.LpPaPwrEn = bTRUE;                  	/* Enable LP PA(potential-stat amplifier) p
 11750              		.loc 1 3629 0
 11751 0488 0123     		movs	r3, #1
 11752 048a 87F82431 		strb	r3, [r7, #292]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 272


3630:ad5940.c      ****   lp_loop.LpAmpCfg.LpTiaPwrEn = bTRUE;                	/* Enable LPTIA*/
 11753              		.loc 1 3630 0
 11754 048e 0123     		movs	r3, #1
 11755 0490 87F82531 		strb	r3, [r7, #293]
3631:ad5940.c      ****   lp_loop.LpAmpCfg.LpTiaRload = LPTIARLOAD_100R;
 11756              		.loc 1 3631 0
 11757 0494 0423     		movs	r3, #4
 11758 0496 C7F81431 		str	r3, [r7, #276]
3632:ad5940.c      ****   lp_loop.LpAmpCfg.LpTiaRtia = pCalCfg->LpTiaRtia;
 11759              		.loc 1 3632 0
 11760 049a 07F10C03 		add	r3, r7, #12
 11761 049e 1B68     		ldr	r3, [r3]
 11762 04a0 9B69     		ldr	r3, [r3, #24]
 11763 04a2 C7F81831 		str	r3, [r7, #280]
3633:ad5940.c      ****   lp_loop.LpAmpCfg.LpTiaRf = LPTIARF_OPEN;
 11764              		.loc 1 3633 0
 11765 04a6 0023     		movs	r3, #0
 11766 04a8 C7F81031 		str	r3, [r7, #272]
3634:ad5940.c      ****   lp_loop.LpAmpCfg.LpTiaSW = LPTIASW(6)|LPTIASW(8)|(pCalCfg->bWithCtia==bTRUE?LPTIASW(5)/*|LPTIASW(
 11767              		.loc 1 3634 0
 11768 04ac 07F10C03 		add	r3, r7, #12
 11769 04b0 1B68     		ldr	r3, [r3]
 11770 04b2 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 11771 04b4 012B     		cmp	r3, #1
 11772 04b6 02D1     		bne	.L627
 11773              		.loc 1 3634 0 is_stmt 0 discriminator 1
 11774 04b8 4FF4B073 		mov	r3, #352
 11775 04bc 01E0     		b	.L628
 11776              	.L627:
 11777              		.loc 1 3634 0 discriminator 2
 11778 04be 4FF4A073 		mov	r3, #320
 11779              	.L628:
 11780              		.loc 1 3634 0 discriminator 4
 11781 04c2 C7F82031 		str	r3, [r7, #288]
3635:ad5940.c      ****   AD5940_LPLoopCfgS(&lp_loop);
 11782              		.loc 1 3635 0 is_stmt 1 discriminator 4
 11783 04c6 07F1EC03 		add	r3, r7, #236
 11784 04ca 1846     		mov	r0, r3
 11785 04cc FFF7FEFF 		bl	AD5940_LPLoopCfgS
3636:ad5940.c      ****   /* Configure HS Loop */
3637:ad5940.c      ****   AD5940_StructInit(&hs_loop, sizeof(hs_loop));
 11786              		.loc 1 3637 0 discriminator 4
 11787 04d0 07F59473 		add	r3, r7, #296
 11788 04d4 7021     		movs	r1, #112
 11789 04d6 1846     		mov	r0, r3
 11790 04d8 FFF7FEFF 		bl	AD5940_StructInit
3638:ad5940.c      ****   /* Take care of HSTIA, we need to disconnect internal RTIA because it connects to Tswitch directl
3639:ad5940.c      **** 	hs_loop.HsTiaCfg.DiodeClose = bFALSE;
 11791              		.loc 1 3639 0 discriminator 4
 11792 04dc 0023     		movs	r3, #0
 11793 04de 87F88431 		strb	r3, [r7, #388]
3640:ad5940.c      ****   hs_loop.HsTiaCfg.HstiaBias = (pCalCfg->LpAmpSel  == LPAMP0)?HSTIABIAS_VZERO0:HSTIABIAS_VZERO1;
 11794              		.loc 1 3640 0 discriminator 4
 11795 04e2 07F10C03 		add	r3, r7, #12
 11796 04e6 1B68     		ldr	r3, [r3]
 11797 04e8 1B69     		ldr	r3, [r3, #16]
 11798 04ea 002B     		cmp	r3, #0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 273


 11799 04ec 01D1     		bne	.L629
 11800              		.loc 1 3640 0 is_stmt 0 discriminator 1
 11801 04ee 0123     		movs	r3, #1
 11802 04f0 00E0     		b	.L630
 11803              	.L629:
 11804              		.loc 1 3640 0 discriminator 2
 11805 04f2 0223     		movs	r3, #2
 11806              	.L630:
 11807              		.loc 1 3640 0 discriminator 4
 11808 04f4 C7F87831 		str	r3, [r7, #376]
3641:ad5940.c      ****   hs_loop.HsTiaCfg.HstiaCtia = 31;
 11809              		.loc 1 3641 0 is_stmt 1 discriminator 4
 11810 04f8 1F23     		movs	r3, #31
 11811 04fa C7F88031 		str	r3, [r7, #384]
3642:ad5940.c      ****   hs_loop.HsTiaCfg.HstiaDeRload = HSTIADERLOAD_OPEN;
 11812              		.loc 1 3642 0 discriminator 4
 11813 04fe 0523     		movs	r3, #5
 11814 0500 C7F88C31 		str	r3, [r7, #396]
3643:ad5940.c      ****   hs_loop.HsTiaCfg.HstiaDeRtia = HSTIADERTIA_OPEN;
 11815              		.loc 1 3643 0 discriminator 4
 11816 0504 0B23     		movs	r3, #11
 11817 0506 C7F88831 		str	r3, [r7, #392]
3644:ad5940.c      ****   hs_loop.HsTiaCfg.HstiaDe1Rload = HSTIADERLOAD_OPEN;
 11818              		.loc 1 3644 0 discriminator 4
 11819 050a 0523     		movs	r3, #5
 11820 050c C7F89431 		str	r3, [r7, #404]
3645:ad5940.c      ****   hs_loop.HsTiaCfg.HstiaDe1Rtia = HSTIADERTIA_OPEN;
 11821              		.loc 1 3645 0 discriminator 4
 11822 0510 0B23     		movs	r3, #11
 11823 0512 C7F89031 		str	r3, [r7, #400]
3646:ad5940.c      ****   hs_loop.HsTiaCfg.HstiaRtiaSel = HSTIARTIA_200;
 11824              		.loc 1 3646 0 discriminator 4
 11825 0516 0023     		movs	r3, #0
 11826 0518 C7F87C31 		str	r3, [r7, #380]
3647:ad5940.c      ****   /* Configure HSDAC */
3648:ad5940.c      **** 	hs_loop.HsDacCfg.ExcitBufGain = 0;
 11827              		.loc 1 3648 0 discriminator 4
 11828 051c 0023     		movs	r3, #0
 11829 051e C7F83831 		str	r3, [r7, #312]
3649:ad5940.c      ****   hs_loop.HsDacCfg.HsDacGain = 0;  					/* Don't care */
 11830              		.loc 1 3649 0 discriminator 4
 11831 0522 0023     		movs	r3, #0
 11832 0524 C7F83C31 		str	r3, [r7, #316]
3650:ad5940.c      ****   hs_loop.HsDacCfg.HsDacUpdateRate = 255;  	/* Lowest for LPDAC */
 11833              		.loc 1 3650 0 discriminator 4
 11834 0528 FF23     		movs	r3, #255
 11835 052a C7F84031 		str	r3, [r7, #320]
3651:ad5940.c      **** 
3652:ad5940.c      ****   hs_loop.SWMatCfg.Dswitch = SWD_RCAL0|((pCalCfg->LpAmpSel  == LPAMP0)?SWD_SE0:SWD_SE1);
 11836              		.loc 1 3652 0 discriminator 4
 11837 052e 07F10C03 		add	r3, r7, #12
 11838 0532 1B68     		ldr	r3, [r3]
 11839 0534 1B69     		ldr	r3, [r3, #16]
 11840 0536 002B     		cmp	r3, #0
 11841 0538 01D1     		bne	.L631
 11842              		.loc 1 3652 0 is_stmt 0 discriminator 1
 11843 053a 4123     		movs	r3, #65
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 274


 11844 053c 00E0     		b	.L632
 11845              	.L631:
 11846              		.loc 1 3652 0 discriminator 2
 11847 053e 8123     		movs	r3, #129
 11848              	.L632:
 11849              		.loc 1 3652 0 discriminator 4
 11850 0540 C7F82831 		str	r3, [r7, #296]
3653:ad5940.c      ****   hs_loop.SWMatCfg.Pswitch = SWP_RCAL0;
 11851              		.loc 1 3653 0 is_stmt 1 discriminator 4
 11852 0544 0123     		movs	r3, #1
 11853 0546 C7F82C31 		str	r3, [r7, #300]
3654:ad5940.c      ****   hs_loop.SWMatCfg.Nswitch = SWN_RCAL1;
 11854              		.loc 1 3654 0 discriminator 4
 11855 054a 4FF40073 		mov	r3, #512
 11856 054e C7F83031 		str	r3, [r7, #304]
3655:ad5940.c      ****   hs_loop.SWMatCfg.Tswitch = SWT_TRTIA|SWT_RCAL1;
 11857              		.loc 1 3655 0 discriminator 4
 11858 0552 4FF41063 		mov	r3, #2304
 11859 0556 C7F83431 		str	r3, [r7, #308]
3656:ad5940.c      ****   if(bDCMode)
 11860              		.loc 1 3656 0 discriminator 4
 11861 055a 97F8D631 		ldrb	r3, [r7, #470]	@ zero_extendqisi2
 11862 055e 002B     		cmp	r3, #0
 11863 0560 00F00681 		beq	.L633
 11864              	.LBB24:
3657:ad5940.c      ****   {
3658:ad5940.c      ****     int32_t time_out = -1;    /* Always wait. */
 11865              		.loc 1 3658 0
 11866 0564 07F11003 		add	r3, r7, #16
 11867 0568 4FF0FF32 		mov	r2, #-1
 11868 056c 1A60     		str	r2, [r3]
3659:ad5940.c      ****     int32_t offset_rcal, offset_rtia;  
3660:ad5940.c      ****     /* Configure WG */
3661:ad5940.c      ****     hs_loop.WgCfg.WgType = WGTYPE_MMR;
 11869              		.loc 1 3661 0
 11870 056e 0023     		movs	r3, #0
 11871 0570 C7F84431 		str	r3, [r7, #324]
3662:ad5940.c      ****     hs_loop.WgCfg.WgCode = WgAmpWord;       /* Amplitude word is exactly the maximum DC voltage we 
 11872              		.loc 1 3662 0
 11873 0574 D7F8D031 		ldr	r3, [r7, #464]
 11874 0578 C7F87431 		str	r3, [r7, #372]
3663:ad5940.c      ****     hs_loop.WgCfg.GainCalEn = bFALSE;		    /* We don't have calibration value for LPDAC, so we don'
 11875              		.loc 1 3663 0
 11876 057c 0023     		movs	r3, #0
 11877 057e 87F84831 		strb	r3, [r7, #328]
3664:ad5940.c      ****     hs_loop.WgCfg.OffsetCalEn = bFALSE;
 11878              		.loc 1 3664 0
 11879 0582 0023     		movs	r3, #0
 11880 0584 87F84931 		strb	r3, [r7, #329]
3665:ad5940.c      ****     AD5940_HSLoopCfgS(&hs_loop);
 11881              		.loc 1 3665 0
 11882 0588 07F59473 		add	r3, r7, #296
 11883 058c 1846     		mov	r0, r3
 11884 058e FFF7FEFF 		bl	AD5940_HSLoopCfgS
3666:ad5940.c      ****     AD5940_WGDACCodeS(WgAmpWord + 0x800);
 11885              		.loc 1 3666 0
 11886 0592 D7F8D031 		ldr	r3, [r7, #464]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 275


 11887 0596 03F50063 		add	r3, r3, #2048
 11888 059a 1846     		mov	r0, r3
 11889 059c FFF7FEFF 		bl	AD5940_WGDACCodeS
3667:ad5940.c      **** 		AD5940_AFECtrlS(AFECTRL_HSTIAPWR|AFECTRL_INAMPPWR|AFECTRL_WG|AFECTRL_ADCPWR, bTRUE); /* Apply vol
 11890              		.loc 1 3667 0
 11891 05a0 0121     		movs	r1, #1
 11892 05a2 4FF49940 		mov	r0, #19584
 11893 05a6 FFF7FEFF 		bl	AD5940_AFECtrlS
3668:ad5940.c      ****     /* Do offset measurement */
3669:ad5940.c      ****     pSWCfg->Dswitch = SWD_RCAL0;//|SWD_SE0;   /* Disconnect SE0 for now to measure the offset volta
 11894              		.loc 1 3669 0
 11895 05aa D7F8C431 		ldr	r3, [r7, #452]
 11896 05ae 0122     		movs	r2, #1
 11897 05b0 1A60     		str	r2, [r3]
3670:ad5940.c      ****     pSWCfg->Pswitch = SWP_RCAL0;
 11898              		.loc 1 3670 0
 11899 05b2 D7F8C431 		ldr	r3, [r7, #452]
 11900 05b6 0122     		movs	r2, #1
 11901 05b8 5A60     		str	r2, [r3, #4]
3671:ad5940.c      ****     pSWCfg->Nswitch = SWN_RCAL1;
 11902              		.loc 1 3671 0
 11903 05ba D7F8C431 		ldr	r3, [r7, #452]
 11904 05be 4FF40072 		mov	r2, #512
 11905 05c2 9A60     		str	r2, [r3, #8]
3672:ad5940.c      ****     pSWCfg->Tswitch = SWT_TRTIA|SWT_RCAL1;
 11906              		.loc 1 3672 0
 11907 05c4 D7F8C431 		ldr	r3, [r7, #452]
 11908 05c8 4FF41062 		mov	r2, #2304
 11909 05cc DA60     		str	r2, [r3, #12]
3673:ad5940.c      ****     AD5940_SWMatrixCfgS(pSWCfg);    
 11910              		.loc 1 3673 0
 11911 05ce D7F8C401 		ldr	r0, [r7, #452]
 11912 05d2 FFF7FEFF 		bl	AD5940_SWMatrixCfgS
3674:ad5940.c      ****     AD5940_Delay10us(1000);   /* Wait some time here. */
 11913              		.loc 1 3674 0
 11914 05d6 4FF47A70 		mov	r0, #1000
 11915 05da FFF7FEFF 		bl	AD5940_Delay10us
3675:ad5940.c      ****     /* Measure RCAL channel voltage offset */
3676:ad5940.c      ****     pADCBaseCfg->ADCMuxN = ADCMUXN_N_NODE;
 11916              		.loc 1 3676 0
 11917 05de D7F8C031 		ldr	r3, [r7, #448]
 11918 05e2 1422     		movs	r2, #20
 11919 05e4 5A60     		str	r2, [r3, #4]
3677:ad5940.c      ****     pADCBaseCfg->ADCMuxP = ADCMUXP_P_NODE;
 11920              		.loc 1 3677 0
 11921 05e6 D7F8C031 		ldr	r3, [r7, #448]
 11922 05ea 2422     		movs	r2, #36
 11923 05ec 1A60     		str	r2, [r3]
3678:ad5940.c      ****     pADCBaseCfg->ADCPga = ADCPgaGainRcal;
 11924              		.loc 1 3678 0
 11925 05ee D7F8C031 		ldr	r3, [r7, #448]
 11926 05f2 D7F8C821 		ldr	r2, [r7, #456]
 11927 05f6 9A60     		str	r2, [r3, #8]
3679:ad5940.c      ****     AD5940_ADCBaseCfgS(pADCBaseCfg);
 11928              		.loc 1 3679 0
 11929 05f8 D7F8C001 		ldr	r0, [r7, #448]
 11930 05fc FFF7FEFF 		bl	AD5940_ADCBaseCfgS
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 276


3680:ad5940.c      ****     AD5940_Delay10us(50);   /* Wait some time here. */
 11931              		.loc 1 3680 0
 11932 0600 3220     		movs	r0, #50
 11933 0602 FFF7FEFF 		bl	AD5940_Delay10us
3681:ad5940.c      ****     offset_rcal = __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and th
 11934              		.loc 1 3681 0
 11935 0606 07F11003 		add	r3, r7, #16
 11936 060a 1846     		mov	r0, r3
 11937 060c FFF7FEFF 		bl	__AD5940_TakeMeasurement
 11938 0610 0346     		mov	r3, r0
 11939 0612 C7F89C31 		str	r3, [r7, #412]
3682:ad5940.c      ****     /* Measure RTIA channel voltage offset */
3683:ad5940.c      ****     if(pCalCfg->LpAmpSel == LPAMP0)
 11940              		.loc 1 3683 0
 11941 0616 07F10C03 		add	r3, r7, #12
 11942 061a 1B68     		ldr	r3, [r3]
 11943 061c 1B69     		ldr	r3, [r3, #16]
 11944 061e 002B     		cmp	r3, #0
 11945 0620 08D1     		bne	.L634
3684:ad5940.c      ****     {
3685:ad5940.c      ****       pADCBaseCfg->ADCMuxN = ADCMUXN_LPTIA0_N;
 11946              		.loc 1 3685 0
 11947 0622 D7F8C031 		ldr	r3, [r7, #448]
 11948 0626 0222     		movs	r2, #2
 11949 0628 5A60     		str	r2, [r3, #4]
3686:ad5940.c      ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA0_P;
 11950              		.loc 1 3686 0
 11951 062a D7F8C031 		ldr	r3, [r7, #448]
 11952 062e 2122     		movs	r2, #33
 11953 0630 1A60     		str	r2, [r3]
 11954 0632 07E0     		b	.L635
 11955              	.L634:
3687:ad5940.c      ****     }else
3688:ad5940.c      ****     {
3689:ad5940.c      ****       pADCBaseCfg->ADCMuxN = ADCMUXN_LPTIA1_N;
 11956              		.loc 1 3689 0
 11957 0634 D7F8C031 		ldr	r3, [r7, #448]
 11958 0638 0322     		movs	r2, #3
 11959 063a 5A60     		str	r2, [r3, #4]
3690:ad5940.c      ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA1_P;
 11960              		.loc 1 3690 0
 11961 063c D7F8C031 		ldr	r3, [r7, #448]
 11962 0640 2222     		movs	r2, #34
 11963 0642 1A60     		str	r2, [r3]
 11964              	.L635:
3691:ad5940.c      ****     }
3692:ad5940.c      ****     pADCBaseCfg->ADCPga = ADCPgaGainRtia;    
 11965              		.loc 1 3692 0
 11966 0644 D7F8C031 		ldr	r3, [r7, #448]
 11967 0648 D7F8CC21 		ldr	r2, [r7, #460]
 11968 064c 9A60     		str	r2, [r3, #8]
3693:ad5940.c      ****     AD5940_ADCBaseCfgS(pADCBaseCfg);
 11969              		.loc 1 3693 0
 11970 064e D7F8C001 		ldr	r0, [r7, #448]
 11971 0652 FFF7FEFF 		bl	AD5940_ADCBaseCfgS
3694:ad5940.c      ****     AD5940_Delay10us(50);   /* Wait some time here. */
 11972              		.loc 1 3694 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 277


 11973 0656 3220     		movs	r0, #50
 11974 0658 FFF7FEFF 		bl	AD5940_Delay10us
3695:ad5940.c      ****     offset_rtia = __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and th
 11975              		.loc 1 3695 0
 11976 065c 07F11003 		add	r3, r7, #16
 11977 0660 1846     		mov	r0, r3
 11978 0662 FFF7FEFF 		bl	__AD5940_TakeMeasurement
 11979 0666 0346     		mov	r3, r0
 11980 0668 C7F89831 		str	r3, [r7, #408]
3696:ad5940.c      ****     /* Connect LPTIA loop, let current flow to RTIA. */
3697:ad5940.c      ****     pSWCfg->Dswitch = SWD_RCAL0|((pCalCfg->LpAmpSel == LPAMP0)?SWD_SE0:SWD_SE1);
 11981              		.loc 1 3697 0
 11982 066c 07F10C03 		add	r3, r7, #12
 11983 0670 1B68     		ldr	r3, [r3]
 11984 0672 1B69     		ldr	r3, [r3, #16]
 11985 0674 002B     		cmp	r3, #0
 11986 0676 03D1     		bne	.L636
 11987              		.loc 1 3697 0 is_stmt 0 discriminator 1
 11988 0678 4122     		movs	r2, #65
 11989 067a 02E0     		b	.L637
 11990              	.L676:
 11991              		.align	2
 11992              	.L675:
 11993 067c E0FF3900 		.word	3801056
 11994              	.L636:
 11995              		.loc 1 3697 0 discriminator 2
 11996 0680 8122     		movs	r2, #129
 11997              	.L637:
 11998              		.loc 1 3697 0 discriminator 4
 11999 0682 D7F8C431 		ldr	r3, [r7, #452]
 12000 0686 1A60     		str	r2, [r3]
3698:ad5940.c      ****     pSWCfg->Pswitch = SWP_RCAL0;
 12001              		.loc 1 3698 0 is_stmt 1 discriminator 4
 12002 0688 D7F8C431 		ldr	r3, [r7, #452]
 12003 068c 0122     		movs	r2, #1
 12004 068e 5A60     		str	r2, [r3, #4]
3699:ad5940.c      ****     pSWCfg->Nswitch = SWN_RCAL1;
 12005              		.loc 1 3699 0 discriminator 4
 12006 0690 D7F8C431 		ldr	r3, [r7, #452]
 12007 0694 4FF40072 		mov	r2, #512
 12008 0698 9A60     		str	r2, [r3, #8]
3700:ad5940.c      ****     pSWCfg->Tswitch = SWT_TRTIA|SWT_RCAL1;
 12009              		.loc 1 3700 0 discriminator 4
 12010 069a D7F8C431 		ldr	r3, [r7, #452]
 12011 069e 4FF41062 		mov	r2, #2304
 12012 06a2 DA60     		str	r2, [r3, #12]
3701:ad5940.c      ****     AD5940_SWMatrixCfgS(pSWCfg);
 12013              		.loc 1 3701 0 discriminator 4
 12014 06a4 D7F8C401 		ldr	r0, [r7, #452]
 12015 06a8 FFF7FEFF 		bl	AD5940_SWMatrixCfgS
3702:ad5940.c      ****     AD5940_Delay10us(1000);   /* Wait some time here. */
 12016              		.loc 1 3702 0 discriminator 4
 12017 06ac 4FF47A70 		mov	r0, #1000
 12018 06b0 FFF7FEFF 		bl	AD5940_Delay10us
3703:ad5940.c      **** 		/* Measure RCAL */
3704:ad5940.c      ****     pADCBaseCfg = &dsp_cfg.ADCBaseCfg;
 12019              		.loc 1 3704 0 discriminator 4
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 278


 12020 06b4 07F1AC03 		add	r3, r7, #172
 12021 06b8 C7F8C031 		str	r3, [r7, #448]
3705:ad5940.c      ****     pADCBaseCfg->ADCMuxN = ADCMUXN_N_NODE;
 12022              		.loc 1 3705 0 discriminator 4
 12023 06bc D7F8C031 		ldr	r3, [r7, #448]
 12024 06c0 1422     		movs	r2, #20
 12025 06c2 5A60     		str	r2, [r3, #4]
3706:ad5940.c      ****     pADCBaseCfg->ADCMuxP = ADCMUXP_P_NODE;
 12026              		.loc 1 3706 0 discriminator 4
 12027 06c4 D7F8C031 		ldr	r3, [r7, #448]
 12028 06c8 2422     		movs	r2, #36
 12029 06ca 1A60     		str	r2, [r3]
3707:ad5940.c      ****     pADCBaseCfg->ADCPga = ADCPgaGainRcal;
 12030              		.loc 1 3707 0 discriminator 4
 12031 06cc D7F8C031 		ldr	r3, [r7, #448]
 12032 06d0 D7F8C821 		ldr	r2, [r7, #456]
 12033 06d4 9A60     		str	r2, [r3, #8]
3708:ad5940.c      ****     AD5940_ADCBaseCfgS(pADCBaseCfg);
 12034              		.loc 1 3708 0 discriminator 4
 12035 06d6 D7F8C001 		ldr	r0, [r7, #448]
 12036 06da FFF7FEFF 		bl	AD5940_ADCBaseCfgS
3709:ad5940.c      ****     AD5940_Delay10us(50);   /* Wait some time here. */
 12037              		.loc 1 3709 0 discriminator 4
 12038 06de 3220     		movs	r0, #50
 12039 06e0 FFF7FEFF 		bl	AD5940_Delay10us
3710:ad5940.c      ****     DftRcal.Real = (int32_t)__AD5940_TakeMeasurement(&time_out)- offset_rcal;
 12040              		.loc 1 3710 0 discriminator 4
 12041 06e4 07F11003 		add	r3, r7, #16
 12042 06e8 1846     		mov	r0, r3
 12043 06ea FFF7FEFF 		bl	__AD5940_TakeMeasurement
 12044 06ee 0346     		mov	r3, r0
 12045 06f0 1A46     		mov	r2, r3
 12046 06f2 D7F89C31 		ldr	r3, [r7, #412]
 12047 06f6 D21A     		subs	r2, r2, r3
 12048 06f8 07F12403 		add	r3, r7, #36
 12049 06fc 1A60     		str	r2, [r3]
3711:ad5940.c      ****     DftRcal.Image = 0;
 12050              		.loc 1 3711 0 discriminator 4
 12051 06fe 07F12403 		add	r3, r7, #36
 12052 0702 0022     		movs	r2, #0
 12053 0704 5A60     		str	r2, [r3, #4]
3712:ad5940.c      **** 		/* Measure RTIA */    
3713:ad5940.c      ****     if(pCalCfg->LpAmpSel == LPAMP0)
 12054              		.loc 1 3713 0 discriminator 4
 12055 0706 07F10C03 		add	r3, r7, #12
 12056 070a 1B68     		ldr	r3, [r3]
 12057 070c 1B69     		ldr	r3, [r3, #16]
 12058 070e 002B     		cmp	r3, #0
 12059 0710 08D1     		bne	.L638
3714:ad5940.c      ****     {
3715:ad5940.c      ****       pADCBaseCfg->ADCMuxN = ADCMUXN_LPTIA0_N;
 12060              		.loc 1 3715 0
 12061 0712 D7F8C031 		ldr	r3, [r7, #448]
 12062 0716 0222     		movs	r2, #2
 12063 0718 5A60     		str	r2, [r3, #4]
3716:ad5940.c      ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA0_P;
 12064              		.loc 1 3716 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 279


 12065 071a D7F8C031 		ldr	r3, [r7, #448]
 12066 071e 2122     		movs	r2, #33
 12067 0720 1A60     		str	r2, [r3]
 12068 0722 07E0     		b	.L639
 12069              	.L638:
3717:ad5940.c      ****     }else
3718:ad5940.c      ****     {
3719:ad5940.c      ****       pADCBaseCfg->ADCMuxN = ADCMUXN_LPTIA1_N;
 12070              		.loc 1 3719 0
 12071 0724 D7F8C031 		ldr	r3, [r7, #448]
 12072 0728 0322     		movs	r2, #3
 12073 072a 5A60     		str	r2, [r3, #4]
3720:ad5940.c      ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA1_P;
 12074              		.loc 1 3720 0
 12075 072c D7F8C031 		ldr	r3, [r7, #448]
 12076 0730 2222     		movs	r2, #34
 12077 0732 1A60     		str	r2, [r3]
 12078              	.L639:
3721:ad5940.c      ****     }
3722:ad5940.c      ****     pADCBaseCfg->ADCPga = ADCPgaGainRtia;
 12079              		.loc 1 3722 0
 12080 0734 D7F8C031 		ldr	r3, [r7, #448]
 12081 0738 D7F8CC21 		ldr	r2, [r7, #460]
 12082 073c 9A60     		str	r2, [r3, #8]
3723:ad5940.c      ****     AD5940_ADCBaseCfgS(pADCBaseCfg);
 12083              		.loc 1 3723 0
 12084 073e D7F8C001 		ldr	r0, [r7, #448]
 12085 0742 FFF7FEFF 		bl	AD5940_ADCBaseCfgS
3724:ad5940.c      ****     AD5940_Delay10us(50);   /* Wait some time here. */
 12086              		.loc 1 3724 0
 12087 0746 3220     		movs	r0, #50
 12088 0748 FFF7FEFF 		bl	AD5940_Delay10us
3725:ad5940.c      ****     DftRtia.Real = (int32_t)__AD5940_TakeMeasurement(&time_out)- offset_rtia;
 12089              		.loc 1 3725 0
 12090 074c 07F11003 		add	r3, r7, #16
 12091 0750 1846     		mov	r0, r3
 12092 0752 FFF7FEFF 		bl	__AD5940_TakeMeasurement
 12093 0756 0346     		mov	r3, r0
 12094 0758 1A46     		mov	r2, r3
 12095 075a D7F89831 		ldr	r3, [r7, #408]
 12096 075e D21A     		subs	r2, r2, r3
 12097 0760 07F11C03 		add	r3, r7, #28
 12098 0764 1A60     		str	r2, [r3]
3726:ad5940.c      ****     DftRtia.Image = 0;
 12099              		.loc 1 3726 0
 12100 0766 07F11C03 		add	r3, r7, #28
 12101 076a 0022     		movs	r2, #0
 12102 076c 5A60     		str	r2, [r3, #4]
 12103              	.LBE24:
 12104 076e 0BE1     		b	.L640
 12105              	.L633:
3727:ad5940.c      ****   }
3728:ad5940.c      ****   else
3729:ad5940.c      ****   {
3730:ad5940.c      **** 		hs_loop.WgCfg.SinCfg.SinAmplitudeWord = WgAmpWord;
 12106              		.loc 1 3730 0
 12107 0770 D7F8D031 		ldr	r3, [r7, #464]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 280


 12108 0774 C7F86831 		str	r3, [r7, #360]
3731:ad5940.c      **** 		hs_loop.WgCfg.SinCfg.SinFreqWord = AD5940_WGFreqWordCal(pCalCfg->fFreq, pCalCfg->SysClkFreq);
 12109              		.loc 1 3731 0
 12110 0778 07F10C03 		add	r3, r7, #12
 12111 077c 1B68     		ldr	r3, [r3]
 12112 077e 1A68     		ldr	r2, [r3]	@ float
 12113 0780 07F10C03 		add	r3, r7, #12
 12114 0784 1B68     		ldr	r3, [r3]
 12115 0786 9B68     		ldr	r3, [r3, #8]	@ float
 12116 0788 1946     		mov	r1, r3
 12117 078a 1046     		mov	r0, r2
 12118 078c FFF7FEFF 		bl	AD5940_WGFreqWordCal
 12119 0790 0346     		mov	r3, r0
 12120 0792 C7F86431 		str	r3, [r7, #356]
3732:ad5940.c      **** 		hs_loop.WgCfg.SinCfg.SinOffsetWord = 0;
 12121              		.loc 1 3732 0
 12122 0796 0023     		movs	r3, #0
 12123 0798 C7F86C31 		str	r3, [r7, #364]
3733:ad5940.c      **** 		hs_loop.WgCfg.SinCfg.SinPhaseWord = 0;
 12124              		.loc 1 3733 0
 12125 079c 0023     		movs	r3, #0
 12126 079e C7F87031 		str	r3, [r7, #368]
3734:ad5940.c      **** 		hs_loop.WgCfg.WgCode = 0;
 12127              		.loc 1 3734 0
 12128 07a2 0023     		movs	r3, #0
 12129 07a4 C7F87431 		str	r3, [r7, #372]
3735:ad5940.c      **** 		hs_loop.WgCfg.WgType = WGTYPE_SIN;
 12130              		.loc 1 3735 0
 12131 07a8 0223     		movs	r3, #2
 12132 07aa C7F84431 		str	r3, [r7, #324]
3736:ad5940.c      ****     hs_loop.WgCfg.GainCalEn = bFALSE;      /* disable it */
 12133              		.loc 1 3736 0
 12134 07ae 0023     		movs	r3, #0
 12135 07b0 87F84831 		strb	r3, [r7, #328]
3737:ad5940.c      ****     hs_loop.WgCfg.OffsetCalEn = bFALSE;
 12136              		.loc 1 3737 0
 12137 07b4 0023     		movs	r3, #0
 12138 07b6 87F84931 		strb	r3, [r7, #329]
3738:ad5940.c      ****     AD5940_HSLoopCfgS(&hs_loop);
 12139              		.loc 1 3738 0
 12140 07ba 07F59473 		add	r3, r7, #296
 12141 07be 1846     		mov	r0, r3
 12142 07c0 FFF7FEFF 		bl	AD5940_HSLoopCfgS
3739:ad5940.c      ****     AD5940_INTCClrFlag(AFEINTSRC_DFTRDY);
 12143              		.loc 1 3739 0
 12144 07c4 0220     		movs	r0, #2
 12145 07c6 FFF7FEFF 		bl	AD5940_INTCClrFlag
3740:ad5940.c      **** 
3741:ad5940.c      ****     AD5940_AFECtrlS(AFECTRL_HSTIAPWR|AFECTRL_INAMPPWR, bTRUE);
 12146              		.loc 1 3741 0
 12147 07ca 0121     		movs	r1, #1
 12148 07cc 4FF44060 		mov	r0, #3072
 12149 07d0 FFF7FEFF 		bl	AD5940_AFECtrlS
3742:ad5940.c      ****     AD5940_Delay10us(100);      /* Wait for loop stable. */
 12150              		.loc 1 3742 0
 12151 07d4 6420     		movs	r0, #100
 12152 07d6 FFF7FEFF 		bl	AD5940_Delay10us
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 281


3743:ad5940.c      ****     pADCBaseCfg = &dsp_cfg.ADCBaseCfg;
 12153              		.loc 1 3743 0
 12154 07da 07F1AC03 		add	r3, r7, #172
 12155 07de C7F8C031 		str	r3, [r7, #448]
3744:ad5940.c      **** 		/* DFT on RCAL */
3745:ad5940.c      ****     pADCBaseCfg->ADCMuxN = ADCMUXN_N_NODE;
 12156              		.loc 1 3745 0
 12157 07e2 D7F8C031 		ldr	r3, [r7, #448]
 12158 07e6 1422     		movs	r2, #20
 12159 07e8 5A60     		str	r2, [r3, #4]
3746:ad5940.c      ****     pADCBaseCfg->ADCMuxP = ADCMUXP_P_NODE;
 12160              		.loc 1 3746 0
 12161 07ea D7F8C031 		ldr	r3, [r7, #448]
 12162 07ee 2422     		movs	r2, #36
 12163 07f0 1A60     		str	r2, [r3]
3747:ad5940.c      ****     pADCBaseCfg->ADCPga = ADCPgaGainRcal;
 12164              		.loc 1 3747 0
 12165 07f2 D7F8C031 		ldr	r3, [r7, #448]
 12166 07f6 D7F8C821 		ldr	r2, [r7, #456]
 12167 07fa 9A60     		str	r2, [r3, #8]
3748:ad5940.c      ****     AD5940_ADCBaseCfgS(pADCBaseCfg);
 12168              		.loc 1 3748 0
 12169 07fc D7F8C001 		ldr	r0, [r7, #448]
 12170 0800 FFF7FEFF 		bl	AD5940_ADCBaseCfgS
3749:ad5940.c      ****     AD5940_AFECtrlS(AFECTRL_ADCPWR|AFECTRL_WG, bTRUE);
 12171              		.loc 1 3749 0
 12172 0804 0121     		movs	r1, #1
 12173 0806 4FF48140 		mov	r0, #16512
 12174 080a FFF7FEFF 		bl	AD5940_AFECtrlS
3750:ad5940.c      ****     AD5940_Delay10us(25);
 12175              		.loc 1 3750 0
 12176 080e 1920     		movs	r0, #25
 12177 0810 FFF7FEFF 		bl	AD5940_Delay10us
3751:ad5940.c      ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT, bTRUE);
 12178              		.loc 1 3751 0
 12179 0814 0121     		movs	r1, #1
 12180 0816 4FF40140 		mov	r0, #33024
 12181 081a FFF7FEFF 		bl	AD5940_AFECtrlS
3752:ad5940.c      ****     /* Wait until DFT ready */
3753:ad5940.c      ****     while(AD5940_INTCTestFlag(AFEINTC_1, AFEINTSRC_DFTRDY) == bFALSE);  
 12182              		.loc 1 3753 0
 12183 081e 00BF     		nop
 12184              	.L641:
 12185              		.loc 1 3753 0 is_stmt 0 discriminator 1
 12186 0820 0221     		movs	r1, #2
 12187 0822 0120     		movs	r0, #1
 12188 0824 FFF7FEFF 		bl	AD5940_INTCTestFlag
 12189 0828 0346     		mov	r3, r0
 12190 082a 002B     		cmp	r3, #0
 12191 082c F8D0     		beq	.L641
3754:ad5940.c      ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG|AFECTRL_ADCPWR, bFALSE);  /* Stop ADC con
 12192              		.loc 1 3754 0 is_stmt 1
 12193 082e 0021     		movs	r1, #0
 12194 0830 4CF28010 		movw	r0, #49536
 12195 0834 FFF7FEFF 		bl	AD5940_AFECtrlS
3755:ad5940.c      ****     AD5940_INTCClrFlag(AFEINTSRC_DFTRDY);
 12196              		.loc 1 3755 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 282


 12197 0838 0220     		movs	r0, #2
 12198 083a FFF7FEFF 		bl	AD5940_INTCClrFlag
3756:ad5940.c      ****     DftRcal.Real = AD5940_ReadAfeResult(AFERESULT_DFTREAL);
 12199              		.loc 1 3756 0
 12200 083e 0320     		movs	r0, #3
 12201 0840 FFF7FEFF 		bl	AD5940_ReadAfeResult
 12202 0844 0346     		mov	r3, r0
 12203 0846 1A46     		mov	r2, r3
 12204 0848 07F12403 		add	r3, r7, #36
 12205 084c 1A60     		str	r2, [r3]
3757:ad5940.c      ****     DftRcal.Image = AD5940_ReadAfeResult(AFERESULT_DFTIMAGE);
 12206              		.loc 1 3757 0
 12207 084e 0420     		movs	r0, #4
 12208 0850 FFF7FEFF 		bl	AD5940_ReadAfeResult
 12209 0854 0346     		mov	r3, r0
 12210 0856 1A46     		mov	r2, r3
 12211 0858 07F12403 		add	r3, r7, #36
 12212 085c 5A60     		str	r2, [r3, #4]
3758:ad5940.c      **** 		/* DFT on RTIA */  
3759:ad5940.c      ****     if(pCalCfg->LpAmpSel == LPAMP0)
 12213              		.loc 1 3759 0
 12214 085e 07F10C03 		add	r3, r7, #12
 12215 0862 1B68     		ldr	r3, [r3]
 12216 0864 1B69     		ldr	r3, [r3, #16]
 12217 0866 002B     		cmp	r3, #0
 12218 0868 08D1     		bne	.L642
3760:ad5940.c      ****     {
3761:ad5940.c      ****       pADCBaseCfg->ADCMuxN = ADCMUXN_LPTIA0_N;
 12219              		.loc 1 3761 0
 12220 086a D7F8C031 		ldr	r3, [r7, #448]
 12221 086e 0222     		movs	r2, #2
 12222 0870 5A60     		str	r2, [r3, #4]
3762:ad5940.c      ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA0_P;
 12223              		.loc 1 3762 0
 12224 0872 D7F8C031 		ldr	r3, [r7, #448]
 12225 0876 2122     		movs	r2, #33
 12226 0878 1A60     		str	r2, [r3]
 12227 087a 07E0     		b	.L643
 12228              	.L642:
3763:ad5940.c      ****     }else
3764:ad5940.c      ****     {
3765:ad5940.c      ****       pADCBaseCfg->ADCMuxN = ADCMUXN_LPTIA1_N;
 12229              		.loc 1 3765 0
 12230 087c D7F8C031 		ldr	r3, [r7, #448]
 12231 0880 0322     		movs	r2, #3
 12232 0882 5A60     		str	r2, [r3, #4]
3766:ad5940.c      ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA1_P;
 12233              		.loc 1 3766 0
 12234 0884 D7F8C031 		ldr	r3, [r7, #448]
 12235 0888 2222     		movs	r2, #34
 12236 088a 1A60     		str	r2, [r3]
 12237              	.L643:
3767:ad5940.c      ****     }
3768:ad5940.c      ****     pADCBaseCfg->ADCPga = ADCPgaGainRtia;
 12238              		.loc 1 3768 0
 12239 088c D7F8C031 		ldr	r3, [r7, #448]
 12240 0890 D7F8CC21 		ldr	r2, [r7, #460]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 283


 12241 0894 9A60     		str	r2, [r3, #8]
3769:ad5940.c      ****     AD5940_ADCBaseCfgS(pADCBaseCfg);
 12242              		.loc 1 3769 0
 12243 0896 D7F8C001 		ldr	r0, [r7, #448]
 12244 089a FFF7FEFF 		bl	AD5940_ADCBaseCfgS
3770:ad5940.c      ****     AD5940_AFECtrlS(AFECTRL_ADCPWR|AFECTRL_WG, bTRUE);
 12245              		.loc 1 3770 0
 12246 089e 0121     		movs	r1, #1
 12247 08a0 4FF48140 		mov	r0, #16512
 12248 08a4 FFF7FEFF 		bl	AD5940_AFECtrlS
3771:ad5940.c      ****     AD5940_Delay10us(25);
 12249              		.loc 1 3771 0
 12250 08a8 1920     		movs	r0, #25
 12251 08aa FFF7FEFF 		bl	AD5940_Delay10us
3772:ad5940.c      ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT, bTRUE);
 12252              		.loc 1 3772 0
 12253 08ae 0121     		movs	r1, #1
 12254 08b0 4FF40140 		mov	r0, #33024
 12255 08b4 FFF7FEFF 		bl	AD5940_AFECtrlS
3773:ad5940.c      ****     /* Wait until DFT ready */
3774:ad5940.c      ****     while(AD5940_INTCTestFlag(AFEINTC_1, AFEINTSRC_DFTRDY) == bFALSE);  
 12256              		.loc 1 3774 0
 12257 08b8 00BF     		nop
 12258              	.L644:
 12259              		.loc 1 3774 0 is_stmt 0 discriminator 1
 12260 08ba 0221     		movs	r1, #2
 12261 08bc 0120     		movs	r0, #1
 12262 08be FFF7FEFF 		bl	AD5940_INTCTestFlag
 12263 08c2 0346     		mov	r3, r0
 12264 08c4 002B     		cmp	r3, #0
 12265 08c6 F8D0     		beq	.L644
3775:ad5940.c      ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG|AFECTRL_ADCPWR, bFALSE);  /* Stop ADC con
 12266              		.loc 1 3775 0 is_stmt 1
 12267 08c8 0021     		movs	r1, #0
 12268 08ca 4CF28010 		movw	r0, #49536
 12269 08ce FFF7FEFF 		bl	AD5940_AFECtrlS
3776:ad5940.c      ****     AD5940_INTCClrFlag(AFEINTSRC_DFTRDY);
 12270              		.loc 1 3776 0
 12271 08d2 0220     		movs	r0, #2
 12272 08d4 FFF7FEFF 		bl	AD5940_INTCClrFlag
3777:ad5940.c      ****     DftRtia.Real = AD5940_ReadAfeResult(AFERESULT_DFTREAL);
 12273              		.loc 1 3777 0
 12274 08d8 0320     		movs	r0, #3
 12275 08da FFF7FEFF 		bl	AD5940_ReadAfeResult
 12276 08de 0346     		mov	r3, r0
 12277 08e0 1A46     		mov	r2, r3
 12278 08e2 07F11C03 		add	r3, r7, #28
 12279 08e6 1A60     		str	r2, [r3]
3778:ad5940.c      ****     DftRtia.Image = AD5940_ReadAfeResult(AFERESULT_DFTIMAGE);
 12280              		.loc 1 3778 0
 12281 08e8 0420     		movs	r0, #4
 12282 08ea FFF7FEFF 		bl	AD5940_ReadAfeResult
 12283 08ee 0346     		mov	r3, r0
 12284 08f0 1A46     		mov	r2, r3
 12285 08f2 07F11C03 		add	r3, r7, #28
 12286 08f6 5A60     		str	r2, [r3, #4]
3779:ad5940.c      ****     if(DftRcal.Real&(1L<<17))
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 284


 12287              		.loc 1 3779 0
 12288 08f8 07F12403 		add	r3, r7, #36
 12289 08fc 1B68     		ldr	r3, [r3]
 12290 08fe 03F40033 		and	r3, r3, #131072
 12291 0902 002B     		cmp	r3, #0
 12292 0904 0AD0     		beq	.L645
3780:ad5940.c      ****       DftRcal.Real |= 0xfffc0000;
 12293              		.loc 1 3780 0
 12294 0906 07F12403 		add	r3, r7, #36
 12295 090a 1B68     		ldr	r3, [r3]
 12296 090c 6FEA8333 		mvn	r3, r3, lsl #14
 12297 0910 6FEA9333 		mvn	r3, r3, lsr #14
 12298 0914 1A46     		mov	r2, r3
 12299 0916 07F12403 		add	r3, r7, #36
 12300 091a 1A60     		str	r2, [r3]
 12301              	.L645:
3781:ad5940.c      ****     if(DftRcal.Image&(1L<<17))
 12302              		.loc 1 3781 0
 12303 091c 07F12403 		add	r3, r7, #36
 12304 0920 5B68     		ldr	r3, [r3, #4]
 12305 0922 03F40033 		and	r3, r3, #131072
 12306 0926 002B     		cmp	r3, #0
 12307 0928 0AD0     		beq	.L646
3782:ad5940.c      ****       DftRcal.Image |= 0xfffc0000;
 12308              		.loc 1 3782 0
 12309 092a 07F12403 		add	r3, r7, #36
 12310 092e 5B68     		ldr	r3, [r3, #4]
 12311 0930 6FEA8333 		mvn	r3, r3, lsl #14
 12312 0934 6FEA9333 		mvn	r3, r3, lsr #14
 12313 0938 1A46     		mov	r2, r3
 12314 093a 07F12403 		add	r3, r7, #36
 12315 093e 5A60     		str	r2, [r3, #4]
 12316              	.L646:
3783:ad5940.c      ****     if(DftRtia.Real&(1L<<17))
 12317              		.loc 1 3783 0
 12318 0940 07F11C03 		add	r3, r7, #28
 12319 0944 1B68     		ldr	r3, [r3]
 12320 0946 03F40033 		and	r3, r3, #131072
 12321 094a 002B     		cmp	r3, #0
 12322 094c 0AD0     		beq	.L647
3784:ad5940.c      ****       DftRtia.Real |= 0xfffc0000;
 12323              		.loc 1 3784 0
 12324 094e 07F11C03 		add	r3, r7, #28
 12325 0952 1B68     		ldr	r3, [r3]
 12326 0954 6FEA8333 		mvn	r3, r3, lsl #14
 12327 0958 6FEA9333 		mvn	r3, r3, lsr #14
 12328 095c 1A46     		mov	r2, r3
 12329 095e 07F11C03 		add	r3, r7, #28
 12330 0962 1A60     		str	r2, [r3]
 12331              	.L647:
3785:ad5940.c      ****     if(DftRtia.Image&(1L<<17))
 12332              		.loc 1 3785 0
 12333 0964 07F11C03 		add	r3, r7, #28
 12334 0968 5B68     		ldr	r3, [r3, #4]
 12335 096a 03F40033 		and	r3, r3, #131072
 12336 096e 002B     		cmp	r3, #0
 12337 0970 0AD0     		beq	.L640
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 285


3786:ad5940.c      ****       DftRtia.Image |= 0xfffc0000;
 12338              		.loc 1 3786 0
 12339 0972 07F11C03 		add	r3, r7, #28
 12340 0976 5B68     		ldr	r3, [r3, #4]
 12341 0978 6FEA8333 		mvn	r3, r3, lsl #14
 12342 097c 6FEA9333 		mvn	r3, r3, lsr #14
 12343 0980 1A46     		mov	r2, r3
 12344 0982 07F11C03 		add	r3, r7, #28
 12345 0986 5A60     		str	r2, [r3, #4]
 12346              	.L640:
3787:ad5940.c      ****   }
3788:ad5940.c      ****   /*
3789:ad5940.c      ****       The impedance engine inside of AD594x give us Real part and Imaginary part of DFT. Due to tec
3790:ad5940.c      ****       part in register is the opposite number. So we add a negative sign on the Imaginary part of r
3791:ad5940.c      ****   */
3792:ad5940.c      ****   DftRtia.Image = -DftRtia.Image;
 12347              		.loc 1 3792 0
 12348 0988 07F11C03 		add	r3, r7, #28
 12349 098c 5B68     		ldr	r3, [r3, #4]
 12350 098e 5A42     		negs	r2, r3
 12351 0990 07F11C03 		add	r3, r7, #28
 12352 0994 5A60     		str	r2, [r3, #4]
3793:ad5940.c      ****   DftRcal.Image = -DftRcal.Image;
 12353              		.loc 1 3793 0
 12354 0996 07F12403 		add	r3, r7, #36
 12355 099a 5B68     		ldr	r3, [r3, #4]
 12356 099c 5A42     		negs	r2, r3
 12357 099e 07F12403 		add	r3, r7, #36
 12358 09a2 5A60     		str	r2, [r3, #4]
3794:ad5940.c      **** 
3795:ad5940.c      ****   fImpCar_Type res;
3796:ad5940.c      ****   /* RTIA = (DftRtia.Real, DftRtia.Image)/(DftRcal.Real, DftRcal.Image)*fRcal */
3797:ad5940.c      ****   res = AD5940_ComplexDivInt(&DftRtia, &DftRcal);
 12359              		.loc 1 3797 0
 12360 09a4 07F11404 		add	r4, r7, #20
 12361 09a8 3B46     		mov	r3, r7
 12362 09aa 07F12402 		add	r2, r7, #36
 12363 09ae 07F11C01 		add	r1, r7, #28
 12364 09b2 1846     		mov	r0, r3
 12365 09b4 FFF7FEFF 		bl	AD5940_ComplexDivInt
 12366 09b8 3A46     		mov	r2, r7
 12367 09ba 2346     		mov	r3, r4
 12368 09bc 92E80300 		ldmia	r2, {r0, r1}
 12369 09c0 83E80300 		stmia	r3, {r0, r1}
3798:ad5940.c      ****   res.Real *= pCalCfg->fRcal/GainRatio;
 12370              		.loc 1 3798 0
 12371 09c4 07F11403 		add	r3, r7, #20
 12372 09c8 1C68     		ldr	r4, [r3]	@ float
 12373 09ca 07F10C03 		add	r3, r7, #12
 12374 09ce 1B68     		ldr	r3, [r3]
 12375 09d0 5B68     		ldr	r3, [r3, #4]	@ float
 12376 09d2 D7F8A811 		ldr	r1, [r7, #424]	@ float
 12377 09d6 1846     		mov	r0, r3
 12378 09d8 FFF7FEFF 		bl	__aeabi_fdiv
 12379 09dc 0346     		mov	r3, r0
 12380 09de 1946     		mov	r1, r3
 12381 09e0 2046     		mov	r0, r4
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 286


 12382 09e2 FFF7FEFF 		bl	__aeabi_fmul
 12383 09e6 0346     		mov	r3, r0
 12384 09e8 1A46     		mov	r2, r3
 12385 09ea 07F11403 		add	r3, r7, #20
 12386 09ee 1A60     		str	r2, [r3]	@ float
3799:ad5940.c      ****   res.Image *= pCalCfg->fRcal/GainRatio;
 12387              		.loc 1 3799 0
 12388 09f0 07F11403 		add	r3, r7, #20
 12389 09f4 5C68     		ldr	r4, [r3, #4]	@ float
 12390 09f6 07F10C03 		add	r3, r7, #12
 12391 09fa 1B68     		ldr	r3, [r3]
 12392 09fc 5B68     		ldr	r3, [r3, #4]	@ float
 12393 09fe D7F8A811 		ldr	r1, [r7, #424]	@ float
 12394 0a02 1846     		mov	r0, r3
 12395 0a04 FFF7FEFF 		bl	__aeabi_fdiv
 12396 0a08 0346     		mov	r3, r0
 12397 0a0a 1946     		mov	r1, r3
 12398 0a0c 2046     		mov	r0, r4
 12399 0a0e FFF7FEFF 		bl	__aeabi_fmul
 12400 0a12 0346     		mov	r3, r0
 12401 0a14 1A46     		mov	r2, r3
 12402 0a16 07F11403 		add	r3, r7, #20
 12403 0a1a 5A60     		str	r2, [r3, #4]	@ float
3800:ad5940.c      ****   if(pCalCfg->bPolarResult == bFALSE)
 12404              		.loc 1 3800 0
 12405 0a1c 07F10C03 		add	r3, r7, #12
 12406 0a20 1B68     		ldr	r3, [r3]
 12407 0a22 5B6B     		ldr	r3, [r3, #52]
 12408 0a24 002B     		cmp	r3, #0
 12409 0a26 0ED1     		bne	.L648
3801:ad5940.c      ****   {
3802:ad5940.c      ****     ((fImpCar_Type*)pResult)->Real = res.Real;
 12410              		.loc 1 3802 0
 12411 0a28 07F11403 		add	r3, r7, #20
 12412 0a2c 1A68     		ldr	r2, [r3]	@ float
 12413 0a2e 07F10803 		add	r3, r7, #8
 12414 0a32 1B68     		ldr	r3, [r3]
 12415 0a34 1A60     		str	r2, [r3]	@ float
3803:ad5940.c      ****     ((fImpCar_Type*)pResult)->Image = res.Image;
 12416              		.loc 1 3803 0
 12417 0a36 07F11403 		add	r3, r7, #20
 12418 0a3a 5A68     		ldr	r2, [r3, #4]	@ float
 12419 0a3c 07F10803 		add	r3, r7, #8
 12420 0a40 1B68     		ldr	r3, [r3]
 12421 0a42 5A60     		str	r2, [r3, #4]	@ float
 12422 0a44 13E0     		b	.L649
 12423              	.L648:
3804:ad5940.c      ****   }
3805:ad5940.c      ****   else
3806:ad5940.c      ****   {
3807:ad5940.c      ****     ((fImpPol_Type*)pResult)->Magnitude = AD5940_ComplexMag(&res);
 12424              		.loc 1 3807 0
 12425 0a46 07F11403 		add	r3, r7, #20
 12426 0a4a 1846     		mov	r0, r3
 12427 0a4c FFF7FEFF 		bl	AD5940_ComplexMag
 12428 0a50 0246     		mov	r2, r0
 12429 0a52 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 287


 12430 0a56 1B68     		ldr	r3, [r3]
 12431 0a58 1A60     		str	r2, [r3]	@ float
3808:ad5940.c      ****     ((fImpPol_Type*)pResult)->Phase = AD5940_ComplexPhase(&res);
 12432              		.loc 1 3808 0
 12433 0a5a 07F11403 		add	r3, r7, #20
 12434 0a5e 1846     		mov	r0, r3
 12435 0a60 FFF7FEFF 		bl	AD5940_ComplexPhase
 12436 0a64 0246     		mov	r2, r0
 12437 0a66 07F10803 		add	r3, r7, #8
 12438 0a6a 1B68     		ldr	r3, [r3]
 12439 0a6c 5A60     		str	r2, [r3, #4]	@ float
 12440              	.L649:
3809:ad5940.c      ****   }
3810:ad5940.c      ****     
3811:ad5940.c      ****   /* Restore INTC1 DFT configure */
3812:ad5940.c      ****   if(INTCCfg&AFEINTSRC_DFTRDY);
 12441              		.loc 1 3812 0
 12442 0a6e D7F8A031 		ldr	r3, [r7, #416]
 12443 0a72 03F00203 		and	r3, r3, #2
 12444 0a76 002B     		cmp	r3, #0
 12445 0a78 04D1     		bne	.L650
3813:ad5940.c      ****   else
3814:ad5940.c      ****     AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_DFTRDY, bFALSE);    /* Disable DFT Interrupt */
 12446              		.loc 1 3814 0
 12447 0a7a 0022     		movs	r2, #0
 12448 0a7c 0221     		movs	r1, #2
 12449 0a7e 0120     		movs	r0, #1
 12450 0a80 FFF7FEFF 		bl	AD5940_INTCCfg
 12451              	.L650:
3815:ad5940.c      ****   if(INTCCfg&AFEINTSRC_SINC2RDY);
 12452              		.loc 1 3815 0
 12453 0a84 D7F8A031 		ldr	r3, [r7, #416]
 12454 0a88 03F00403 		and	r3, r3, #4
 12455 0a8c 002B     		cmp	r3, #0
 12456 0a8e 04D1     		bne	.L651
3816:ad5940.c      ****   else
3817:ad5940.c      ****     AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_SINC2RDY, bFALSE);  /* Disable SINC2 Interrupt */
 12457              		.loc 1 3817 0
 12458 0a90 0022     		movs	r2, #0
 12459 0a92 0421     		movs	r1, #4
 12460 0a94 0120     		movs	r0, #1
 12461 0a96 FFF7FEFF 		bl	AD5940_INTCCfg
 12462              	.L651:
3818:ad5940.c      ****   AD5940_WriteReg(REG_AFE_AFECON, reg_afecon);              /* Restore AFECON register */
 12463              		.loc 1 3818 0
 12464 0a9a D7F8A411 		ldr	r1, [r7, #420]
 12465 0a9e 4FF40050 		mov	r0, #8192
 12466 0aa2 FFF7FEFF 		bl	AD5940_WriteReg
3819:ad5940.c      ****   /* Open all switches in switch-matrix */
3820:ad5940.c      ****   hs_loop.SWMatCfg.Dswitch = SWD_OPEN;
 12467              		.loc 1 3820 0
 12468 0aa6 0023     		movs	r3, #0
 12469 0aa8 C7F82831 		str	r3, [r7, #296]
3821:ad5940.c      ****   hs_loop.SWMatCfg.Pswitch = SWP_OPEN;
 12470              		.loc 1 3821 0
 12471 0aac 0023     		movs	r3, #0
 12472 0aae C7F82C31 		str	r3, [r7, #300]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 288


3822:ad5940.c      ****   hs_loop.SWMatCfg.Nswitch = SWN_OPEN;
 12473              		.loc 1 3822 0
 12474 0ab2 0023     		movs	r3, #0
 12475 0ab4 C7F83031 		str	r3, [r7, #304]
3823:ad5940.c      ****   hs_loop.SWMatCfg.Tswitch = SWT_OPEN;
 12476              		.loc 1 3823 0
 12477 0ab8 0023     		movs	r3, #0
 12478 0aba C7F83431 		str	r3, [r7, #308]
3824:ad5940.c      ****   AD5940_SWMatrixCfgS(&hs_loop.SWMatCfg);
 12479              		.loc 1 3824 0
 12480 0abe 07F59473 		add	r3, r7, #296
 12481 0ac2 1846     		mov	r0, r3
 12482 0ac4 FFF7FEFF 		bl	AD5940_SWMatrixCfgS
3825:ad5940.c      ****   
3826:ad5940.c      ****   return AD5940ERR_OK;
 12483              		.loc 1 3826 0
 12484 0ac8 0023     		movs	r3, #0
 12485              	.L652:
3827:ad5940.c      **** }
 12486              		.loc 1 3827 0 discriminator 1
 12487 0aca 1846     		mov	r0, r3
 12488 0acc 07F5EC77 		add	r7, r7, #472
 12489              		.cfi_def_cfa_offset 16
 12490 0ad0 BD46     		mov	sp, r7
 12491              		.cfi_def_cfa_register 13
 12492              		@ sp needed
 12493 0ad2 B0BD     		pop	{r4, r5, r7, pc}
 12494              		.cfi_endproc
 12495              	.LFE117:
 12496              		.size	AD5940_LPRtiaCal, .-AD5940_LPRtiaCal
 12497              		.section	.text.AD5940_HSDACCal,"ax",%progbits
 12498              		.align	2
 12499              		.global	AD5940_HSDACCal
 12500              		.thumb
 12501              		.thumb_func
 12502              		.type	AD5940_HSDACCal, %function
 12503              	AD5940_HSDACCal:
 12504              	.LFB118:
3828:ad5940.c      **** 
3829:ad5940.c      **** /**
3830:ad5940.c      ****  * @brief calibrate HSDAC output voltage using ADC.
3831:ad5940.c      ****  * @note It acutally calibrates voltage output of excitation buffer.
3832:ad5940.c      ****  * @param pCalCfg: pointer to configuration structure
3833:ad5940.c      ****  * @return return AD5940ERR_OK if succeeded.
3834:ad5940.c      **** */
3835:ad5940.c      **** AD5940Err AD5940_HSDACCal(HSDACCal_Type *pCalCfg)
3836:ad5940.c      **** {
 12505              		.loc 1 3836 0
 12506              		.cfi_startproc
 12507              		@ args = 0, pretend = 0, frame = 248
 12508              		@ frame_needed = 1, uses_anonymous_args = 0
 12509 0000 80B5     		push	{r7, lr}
 12510              		.cfi_def_cfa_offset 8
 12511              		.cfi_offset 7, -8
 12512              		.cfi_offset 14, -4
 12513 0002 BEB0     		sub	sp, sp, #248
 12514              		.cfi_def_cfa_offset 256
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 289


 12515 0004 00AF     		add	r7, sp, #0
 12516              		.cfi_def_cfa_register 7
 12517 0006 7860     		str	r0, [r7, #4]
3837:ad5940.c      ****   ADCBaseCfg_Type adc_base;
3838:ad5940.c      ****   ADCFilterCfg_Type adc_filter;
3839:ad5940.c      ****   HSLoopCfg_Type hsloop_cfg;
3840:ad5940.c      ****   LPLoopCfg_Type lploop_cfg;
3841:ad5940.c      ****   
3842:ad5940.c      ****   /* LSB_Numerator and LSB_Denometer are used to calculate 
3843:ad5940.c      ****   the codes to write to calibration registers depending on
3844:ad5940.c      ****   which calibration register is used
3845:ad5940.c      ****   There are LSB_Numerator ADC LSBs in
3846:ad5940.c      ****   LSB_Denominator DAC Calibration LSBs*/
3847:ad5940.c      ****   int32_t LSB_Numerator;
3848:ad5940.c      ****   int32_t LEB_Denominator;
3849:ad5940.c      ****   int32_t time_out;
3850:ad5940.c      ****   int32_t ADCCode;
3851:ad5940.c      ****   uint32_t HSDACCode = 0x800;     /* Mid scale DAC */
 12518              		.loc 1 3851 0
 12519 0008 4FF40063 		mov	r3, #2048
 12520 000c C7F8E030 		str	r3, [r7, #224]
3852:ad5940.c      ****   
3853:ad5940.c      ****   uint32_t regaddr_offset;
3854:ad5940.c      ****   uint32_t ADCPGA_Sel;
3855:ad5940.c      ****   BoolFlag bHPMode;
3856:ad5940.c      **** 
3857:ad5940.c      ****   if(pCalCfg == NULL) return AD5940ERR_NULLP;
 12521              		.loc 1 3857 0
 12522 0010 7B68     		ldr	r3, [r7, #4]
 12523 0012 002B     		cmp	r3, #0
 12524 0014 02D1     		bne	.L678
 12525              		.loc 1 3857 0 is_stmt 0 discriminator 1
 12526 0016 6FF00203 		mvn	r3, #2
 12527 001a 75E1     		b	.L700
 12528              	.L678:
3858:ad5940.c      ****   if(pCalCfg->ExcitBufGain > 1) return AD5940ERR_PARA;
 12529              		.loc 1 3858 0 is_stmt 1
 12530 001c 7B68     		ldr	r3, [r7, #4]
 12531 001e 1B69     		ldr	r3, [r3, #16]
 12532 0020 012B     		cmp	r3, #1
 12533 0022 02D9     		bls	.L680
 12534              		.loc 1 3858 0 is_stmt 0 discriminator 1
 12535 0024 6FF00103 		mvn	r3, #1
 12536 0028 6EE1     		b	.L700
 12537              	.L680:
3859:ad5940.c      ****   if(pCalCfg->HsDacGain > 1) return AD5940ERR_PARA;
 12538              		.loc 1 3859 0 is_stmt 1
 12539 002a 7B68     		ldr	r3, [r7, #4]
 12540 002c 5B69     		ldr	r3, [r3, #20]
 12541 002e 012B     		cmp	r3, #1
 12542 0030 02D9     		bls	.L681
 12543              		.loc 1 3859 0 is_stmt 0 discriminator 1
 12544 0032 6FF00103 		mvn	r3, #1
 12545 0036 67E1     		b	.L700
 12546              	.L681:
3860:ad5940.c      **** 
3861:ad5940.c      ****   bHPMode = pCalCfg->AfePwrMode == AFEPWR_HP?bTRUE:bFALSE;
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 290


 12547              		.loc 1 3861 0 is_stmt 1
 12548 0038 7B68     		ldr	r3, [r7, #4]
 12549 003a DB68     		ldr	r3, [r3, #12]
 12550 003c 012B     		cmp	r3, #1
 12551 003e 0CBF     		ite	eq
 12552 0040 0123     		moveq	r3, #1
 12553 0042 0023     		movne	r3, #0
 12554 0044 DBB2     		uxtb	r3, r3
 12555 0046 87F8DF30 		strb	r3, [r7, #223]
3862:ad5940.c      **** 
3863:ad5940.c      ****   switch(pCalCfg->ExcitBufGain)
 12556              		.loc 1 3863 0
 12557 004a 7B68     		ldr	r3, [r7, #4]
 12558 004c 1B69     		ldr	r3, [r3, #16]
 12559 004e 002B     		cmp	r3, #0
 12560 0050 02D0     		beq	.L683
 12561 0052 012B     		cmp	r3, #1
 12562 0054 23D0     		beq	.L684
 12563 0056 42E0     		b	.L701
 12564              	.L683:
3864:ad5940.c      ****   {
3865:ad5940.c      ****   case EXCITBUFGAIN_2:
3866:ad5940.c      ****     regaddr_offset = bHPMode?REG_AFE_DACOFFSETHP:REG_AFE_DACOFFSET;
 12565              		.loc 1 3866 0
 12566 0058 97F8DF30 		ldrb	r3, [r7, #223]	@ zero_extendqisi2
 12567 005c 002B     		cmp	r3, #0
 12568 005e 02D0     		beq	.L685
 12569              		.loc 1 3866 0 is_stmt 0 discriminator 1
 12570 0060 42F2BC23 		movw	r3, #8892
 12571 0064 01E0     		b	.L686
 12572              	.L685:
 12573              		.loc 1 3866 0 discriminator 2
 12574 0066 42F26823 		movw	r3, #8808
 12575              	.L686:
 12576              		.loc 1 3866 0 discriminator 4
 12577 006a C7F8E830 		str	r3, [r7, #232]
3867:ad5940.c      ****     if(pCalCfg->HsDacGain == HSDACGAIN_0P2)
 12578              		.loc 1 3867 0 is_stmt 1 discriminator 4
 12579 006e 7B68     		ldr	r3, [r7, #4]
 12580 0070 5B69     		ldr	r3, [r3, #20]
 12581 0072 012B     		cmp	r3, #1
 12582 0074 09D1     		bne	.L687
3868:ad5940.c      ****     {
3869:ad5940.c      ****       LSB_Numerator = 40;
 12583              		.loc 1 3869 0
 12584 0076 2823     		movs	r3, #40
 12585 0078 C7F8F430 		str	r3, [r7, #244]
3870:ad5940.c      ****       LEB_Denominator = 14;
 12586              		.loc 1 3870 0
 12587 007c 0E23     		movs	r3, #14
 12588 007e C7F8F030 		str	r3, [r7, #240]
3871:ad5940.c      ****       ADCPGA_Sel = ADCPGA_4;
 12589              		.loc 1 3871 0
 12590 0082 0323     		movs	r3, #3
 12591 0084 C7F8E430 		str	r3, [r7, #228]
3872:ad5940.c      ****     }
3873:ad5940.c      ****     else
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 291


3874:ad5940.c      ****     {
3875:ad5940.c      ****       LSB_Numerator = 7;
3876:ad5940.c      ****       LEB_Denominator = 2;
3877:ad5940.c      ****       ADCPGA_Sel = ADCPGA_1;
3878:ad5940.c      ****     }
3879:ad5940.c      ****     break;
 12592              		.loc 1 3879 0
 12593 0088 2CE0     		b	.L689
 12594              	.L687:
3875:ad5940.c      ****       LEB_Denominator = 2;
 12595              		.loc 1 3875 0
 12596 008a 0723     		movs	r3, #7
 12597 008c C7F8F430 		str	r3, [r7, #244]
3876:ad5940.c      ****       ADCPGA_Sel = ADCPGA_1;
 12598              		.loc 1 3876 0
 12599 0090 0223     		movs	r3, #2
 12600 0092 C7F8F030 		str	r3, [r7, #240]
3877:ad5940.c      ****     }
 12601              		.loc 1 3877 0
 12602 0096 0023     		movs	r3, #0
 12603 0098 C7F8E430 		str	r3, [r7, #228]
 12604              		.loc 1 3879 0
 12605 009c 22E0     		b	.L689
 12606              	.L684:
3880:ad5940.c      ****   case EXCITBUFGAIN_0P25:
3881:ad5940.c      ****     regaddr_offset = bHPMode?REG_AFE_DACOFFSETATTENHP:REG_AFE_DACOFFSETATTEN;
 12607              		.loc 1 3881 0
 12608 009e 97F8DF30 		ldrb	r3, [r7, #223]	@ zero_extendqisi2
 12609 00a2 002B     		cmp	r3, #0
 12610 00a4 02D0     		beq	.L690
 12611              		.loc 1 3881 0 is_stmt 0 discriminator 1
 12612 00a6 42F2B823 		movw	r3, #8888
 12613 00aa 01E0     		b	.L691
 12614              	.L690:
 12615              		.loc 1 3881 0 discriminator 2
 12616 00ac 42F26423 		movw	r3, #8804
 12617              	.L691:
 12618              		.loc 1 3881 0 discriminator 4
 12619 00b0 C7F8E830 		str	r3, [r7, #232]
3882:ad5940.c      ****     if(pCalCfg->HsDacGain == HSDACGAIN_0P2)
 12620              		.loc 1 3882 0 is_stmt 1 discriminator 4
 12621 00b4 7B68     		ldr	r3, [r7, #4]
 12622 00b6 5B69     		ldr	r3, [r3, #20]
 12623 00b8 012B     		cmp	r3, #1
 12624 00ba 06D1     		bne	.L692
3883:ad5940.c      ****     {
3884:ad5940.c      ****       LSB_Numerator = 5;
 12625              		.loc 1 3884 0
 12626 00bc 0523     		movs	r3, #5
 12627 00be C7F8F430 		str	r3, [r7, #244]
3885:ad5940.c      ****       LEB_Denominator = 14;
 12628              		.loc 1 3885 0
 12629 00c2 0E23     		movs	r3, #14
 12630 00c4 C7F8F030 		str	r3, [r7, #240]
 12631 00c8 05E0     		b	.L693
 12632              	.L692:
3886:ad5940.c      ****     }
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 292


3887:ad5940.c      ****     else
3888:ad5940.c      ****     {
3889:ad5940.c      ****       LSB_Numerator = 25;
 12633              		.loc 1 3889 0
 12634 00ca 1923     		movs	r3, #25
 12635 00cc C7F8F430 		str	r3, [r7, #244]
3890:ad5940.c      ****       LEB_Denominator = 14;
 12636              		.loc 1 3890 0
 12637 00d0 0E23     		movs	r3, #14
 12638 00d2 C7F8F030 		str	r3, [r7, #240]
 12639              	.L693:
3891:ad5940.c      ****     }
3892:ad5940.c      ****     ADCPGA_Sel = ADCPGA_4;
 12640              		.loc 1 3892 0
 12641 00d6 0323     		movs	r3, #3
 12642 00d8 C7F8E430 		str	r3, [r7, #228]
3893:ad5940.c      ****     break;
 12643              		.loc 1 3893 0
 12644 00dc 02E0     		b	.L689
 12645              	.L701:
3894:ad5940.c      **** 	default:
3895:ad5940.c      **** 		return AD5940ERR_PARA;
 12646              		.loc 1 3895 0
 12647 00de 6FF00103 		mvn	r3, #1
 12648 00e2 11E1     		b	.L700
 12649              	.L689:
3896:ad5940.c      ****   }
3897:ad5940.c      **** 
3898:ad5940.c      ****   /* Turn On References*/
3899:ad5940.c      ****   __AD5940_ReferenceON();
 12650              		.loc 1 3899 0
 12651 00e4 FFF7FEFF 		bl	__AD5940_ReferenceON
3900:ad5940.c      ****   /* Step0.0 Initialize ADC filters ADCRawData-->SINC3-->SINC2+NOTCH. Use SIN2 data for calibration
3901:ad5940.c      ****   adc_filter.ADCSinc3Osr = pCalCfg->ADCSinc3Osr;
 12652              		.loc 1 3901 0
 12653 00e8 7B68     		ldr	r3, [r7, #4]
 12654 00ea 9B69     		ldr	r3, [r3, #24]
 12655 00ec C7F8B830 		str	r3, [r7, #184]
3902:ad5940.c      ****   adc_filter.ADCSinc2Osr = pCalCfg->ADCSinc2Osr;  /* 800KSPS/4/1333 = 150SPS */
 12656              		.loc 1 3902 0
 12657 00f0 7B68     		ldr	r3, [r7, #4]
 12658 00f2 DB69     		ldr	r3, [r3, #28]
 12659 00f4 C7F8BC30 		str	r3, [r7, #188]
3903:ad5940.c      ****   adc_filter.ADCAvgNum = ADCAVGNUM_2;         /* Don't care about it. Average function is only used
 12660              		.loc 1 3903 0
 12661 00f8 0023     		movs	r3, #0
 12662 00fa C7F8C030 		str	r3, [r7, #192]
3904:ad5940.c      ****   adc_filter.ADCRate = bHPMode?ADCRATE_1P6MHZ:ADCRATE_800KHZ;        /* If ADC clock is 32MHz, then
 12663              		.loc 1 3904 0
 12664 00fe 97F8DF30 		ldrb	r3, [r7, #223]	@ zero_extendqisi2
 12665 0102 002B     		cmp	r3, #0
 12666 0104 0CBF     		ite	eq
 12667 0106 0123     		moveq	r3, #1
 12668 0108 0023     		movne	r3, #0
 12669 010a DBB2     		uxtb	r3, r3
 12670 010c C7F8C430 		str	r3, [r7, #196]
3905:ad5940.c      ****   adc_filter.BpNotch = bTRUE;                 /* SINC2+Notch is one block, when bypass notch filter
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 293


 12671              		.loc 1 3905 0
 12672 0110 0123     		movs	r3, #1
 12673 0112 87F8C830 		strb	r3, [r7, #200]
3906:ad5940.c      ****   adc_filter.BpSinc3 = bFALSE;                /* We use SINC3 filter. */
 12674              		.loc 1 3906 0
 12675 0116 0023     		movs	r3, #0
 12676 0118 87F8C930 		strb	r3, [r7, #201]
3907:ad5940.c      ****   adc_filter.Sinc2NotchEnable = bTRUE;        /* Enable the SINC2+Notch block. You can also use fun
 12677              		.loc 1 3907 0
 12678 011c 0123     		movs	r3, #1
 12679 011e 87F8CA30 		strb	r3, [r7, #202]
3908:ad5940.c      ****   AD5940_ADCFilterCfgS(&adc_filter);
 12680              		.loc 1 3908 0
 12681 0122 07F1B803 		add	r3, r7, #184
 12682 0126 1846     		mov	r0, r3
 12683 0128 FFF7FEFF 		bl	AD5940_ADCFilterCfgS
3909:ad5940.c      ****   /* Step0.1 Initialize ADC basic function */
3910:ad5940.c      ****   adc_base.ADCMuxP = ADCMUXP_P_NODE;
 12684              		.loc 1 3910 0
 12685 012c 2423     		movs	r3, #36
 12686 012e C7F8CC30 		str	r3, [r7, #204]
3911:ad5940.c      ****   adc_base.ADCMuxN = ADCMUXN_N_NODE;
 12687              		.loc 1 3911 0
 12688 0132 1423     		movs	r3, #20
 12689 0134 C7F8D030 		str	r3, [r7, #208]
3912:ad5940.c      ****   adc_base.ADCPga = ADCPGA_Sel;
 12690              		.loc 1 3912 0
 12691 0138 D7F8E430 		ldr	r3, [r7, #228]
 12692 013c C7F8D430 		str	r3, [r7, #212]
3913:ad5940.c      ****   AD5940_ADCBaseCfgS(&adc_base);
 12693              		.loc 1 3913 0
 12694 0140 07F1CC03 		add	r3, r7, #204
 12695 0144 1846     		mov	r0, r3
 12696 0146 FFF7FEFF 		bl	AD5940_ADCBaseCfgS
3914:ad5940.c      ****   
3915:ad5940.c      ****   /* Step0.2 Configure LPDAC to connect VZERO to HSTIA */
3916:ad5940.c      ****   lploop_cfg.LpDacCfg.LpdacSel = LPDAC0;
 12697              		.loc 1 3916 0
 12698 014a 0023     		movs	r3, #0
 12699 014c FB60     		str	r3, [r7, #12]
3917:ad5940.c      ****   lploop_cfg.LpDacCfg.DacData12Bit = 0x7C0;
 12700              		.loc 1 3917 0
 12701 014e 4FF4F863 		mov	r3, #1984
 12702 0152 FB84     		strh	r3, [r7, #38]	@ movhi
3918:ad5940.c      ****   lploop_cfg.LpDacCfg.DacData6Bit = 0x1F;  
 12703              		.loc 1 3918 0
 12704 0154 1F23     		movs	r3, #31
 12705 0156 3B85     		strh	r3, [r7, #40]	@ movhi
3919:ad5940.c      ****   lploop_cfg.LpDacCfg.DataRst = bFALSE;
 12706              		.loc 1 3919 0
 12707 0158 0023     		movs	r3, #0
 12708 015a 87F82430 		strb	r3, [r7, #36]
3920:ad5940.c      ****   lploop_cfg.LpDacCfg.LpDacRef = LPDACREF_2P5;
 12709              		.loc 1 3920 0
 12710 015e 0023     		movs	r3, #0
 12711 0160 3B62     		str	r3, [r7, #32]
3921:ad5940.c      ****   lploop_cfg.LpDacCfg.LpDacSrc = LPDACSRC_MMR;
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 294


 12712              		.loc 1 3921 0
 12713 0162 0023     		movs	r3, #0
 12714 0164 3B61     		str	r3, [r7, #16]
3922:ad5940.c      ****   lploop_cfg.LpDacCfg.LpDacVzeroMux = LPDACVZERO_6BIT;
 12715              		.loc 1 3922 0
 12716 0166 0023     		movs	r3, #0
 12717 0168 7B61     		str	r3, [r7, #20]
3923:ad5940.c      ****   lploop_cfg.LpDacCfg.LpDacVbiasMux = LPDACVBIAS_12BIT;
 12718              		.loc 1 3923 0
 12719 016a 0023     		movs	r3, #0
 12720 016c BB61     		str	r3, [r7, #24]
3924:ad5940.c      ****   lploop_cfg.LpDacCfg.PowerEn = bTRUE;
 12721              		.loc 1 3924 0
 12722 016e 0123     		movs	r3, #1
 12723 0170 87F82530 		strb	r3, [r7, #37]
3925:ad5940.c      ****   lploop_cfg.LpDacCfg.LpDacSW = LPDACSW_VBIAS2LPPA|LPDACSW_VBIAS2PIN|LPDACSW_VZERO2HSTIA;
 12724              		.loc 1 3925 0
 12725 0174 1923     		movs	r3, #25
 12726 0176 FB61     		str	r3, [r7, #28]
3926:ad5940.c      ****   AD5940_LPLoopCfgS(&lploop_cfg);
 12727              		.loc 1 3926 0
 12728 0178 07F10C03 		add	r3, r7, #12
 12729 017c 1846     		mov	r0, r3
 12730 017e FFF7FEFF 		bl	AD5940_LPLoopCfgS
3927:ad5940.c      ****   
3928:ad5940.c      ****   /* Step0.3 Configure HSLOOP */
3929:ad5940.c      ****   hsloop_cfg.HsDacCfg.ExcitBufGain = pCalCfg->ExcitBufGain;
 12731              		.loc 1 3929 0
 12732 0182 7B68     		ldr	r3, [r7, #4]
 12733 0184 1B69     		ldr	r3, [r3, #16]
 12734 0186 BB65     		str	r3, [r7, #88]
3930:ad5940.c      ****   hsloop_cfg.HsDacCfg.HsDacGain = pCalCfg->HsDacGain;
 12735              		.loc 1 3930 0
 12736 0188 7B68     		ldr	r3, [r7, #4]
 12737 018a 5B69     		ldr	r3, [r3, #20]
 12738 018c FB65     		str	r3, [r7, #92]
3931:ad5940.c      ****   hsloop_cfg.HsDacCfg.HsDacUpdateRate = bHPMode?0x7:0x1B;
 12739              		.loc 1 3931 0
 12740 018e 97F8DF30 		ldrb	r3, [r7, #223]	@ zero_extendqisi2
 12741 0192 002B     		cmp	r3, #0
 12742 0194 01D0     		beq	.L694
 12743              		.loc 1 3931 0 is_stmt 0 discriminator 1
 12744 0196 0723     		movs	r3, #7
 12745 0198 00E0     		b	.L695
 12746              	.L694:
 12747              		.loc 1 3931 0 discriminator 2
 12748 019a 1B23     		movs	r3, #27
 12749              	.L695:
 12750              		.loc 1 3931 0 discriminator 4
 12751 019c 3B66     		str	r3, [r7, #96]
3932:ad5940.c      ****   hsloop_cfg.HsTiaCfg.DiodeClose = bFALSE;
 12752              		.loc 1 3932 0 is_stmt 1 discriminator 4
 12753 019e 0023     		movs	r3, #0
 12754 01a0 87F8A430 		strb	r3, [r7, #164]
3933:ad5940.c      ****   hsloop_cfg.HsTiaCfg.HstiaBias = HSTIABIAS_VZERO0;
 12755              		.loc 1 3933 0 discriminator 4
 12756 01a4 0123     		movs	r3, #1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 295


 12757 01a6 C7F89830 		str	r3, [r7, #152]
3934:ad5940.c      ****   hsloop_cfg.HsTiaCfg.HstiaCtia = 8;
 12758              		.loc 1 3934 0 discriminator 4
 12759 01aa 0823     		movs	r3, #8
 12760 01ac C7F8A030 		str	r3, [r7, #160]
3935:ad5940.c      ****   hsloop_cfg.HsTiaCfg.HstiaDeRload = HSTIADERLOAD_OPEN;
 12761              		.loc 1 3935 0 discriminator 4
 12762 01b0 0523     		movs	r3, #5
 12763 01b2 C7F8AC30 		str	r3, [r7, #172]
3936:ad5940.c      ****   hsloop_cfg.HsTiaCfg.HstiaDeRtia = HSTIADERTIA_OPEN;
 12764              		.loc 1 3936 0 discriminator 4
 12765 01b6 0B23     		movs	r3, #11
 12766 01b8 C7F8A830 		str	r3, [r7, #168]
3937:ad5940.c      ****   hsloop_cfg.HsTiaCfg.HstiaDe1Rload = HSTIADERLOAD_OPEN;
 12767              		.loc 1 3937 0 discriminator 4
 12768 01bc 0523     		movs	r3, #5
 12769 01be C7F8B430 		str	r3, [r7, #180]
3938:ad5940.c      ****   hsloop_cfg.HsTiaCfg.HstiaDe1Rtia = HSTIADERTIA_OPEN;
 12770              		.loc 1 3938 0 discriminator 4
 12771 01c2 0B23     		movs	r3, #11
 12772 01c4 C7F8B030 		str	r3, [r7, #176]
3939:ad5940.c      ****   hsloop_cfg.HsTiaCfg.HstiaRtiaSel = HSTIARTIA_200;
 12773              		.loc 1 3939 0 discriminator 4
 12774 01c8 0023     		movs	r3, #0
 12775 01ca C7F89C30 		str	r3, [r7, #156]
3940:ad5940.c      ****   hsloop_cfg.SWMatCfg.Dswitch = SWD_RCAL0;
 12776              		.loc 1 3940 0 discriminator 4
 12777 01ce 0123     		movs	r3, #1
 12778 01d0 BB64     		str	r3, [r7, #72]
3941:ad5940.c      ****   hsloop_cfg.SWMatCfg.Pswitch = SWP_RCAL0;
 12779              		.loc 1 3941 0 discriminator 4
 12780 01d2 0123     		movs	r3, #1
 12781 01d4 FB64     		str	r3, [r7, #76]
3942:ad5940.c      ****   hsloop_cfg.SWMatCfg.Nswitch = SWN_RCAL1;
 12782              		.loc 1 3942 0 discriminator 4
 12783 01d6 4FF40073 		mov	r3, #512
 12784 01da 3B65     		str	r3, [r7, #80]
3943:ad5940.c      ****   hsloop_cfg.SWMatCfg.Tswitch = SWT_TRTIA|SWT_RCAL1;
 12785              		.loc 1 3943 0 discriminator 4
 12786 01dc 4FF41063 		mov	r3, #2304
 12787 01e0 7B65     		str	r3, [r7, #84]
3944:ad5940.c      ****   hsloop_cfg.WgCfg.GainCalEn = bTRUE;
 12788              		.loc 1 3944 0 discriminator 4
 12789 01e2 0123     		movs	r3, #1
 12790 01e4 87F86830 		strb	r3, [r7, #104]
3945:ad5940.c      ****   hsloop_cfg.WgCfg.OffsetCalEn = bTRUE;
 12791              		.loc 1 3945 0 discriminator 4
 12792 01e8 0123     		movs	r3, #1
 12793 01ea 87F86930 		strb	r3, [r7, #105]
3946:ad5940.c      ****   hsloop_cfg.WgCfg.WgType = WGTYPE_MMR;
 12794              		.loc 1 3946 0 discriminator 4
 12795 01ee 0023     		movs	r3, #0
 12796 01f0 7B66     		str	r3, [r7, #100]
3947:ad5940.c      ****   hsloop_cfg.WgCfg.WgCode = HSDACCode;
 12797              		.loc 1 3947 0 discriminator 4
 12798 01f2 D7F8E030 		ldr	r3, [r7, #224]
 12799 01f6 C7F89430 		str	r3, [r7, #148]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 296


3948:ad5940.c      ****   AD5940_HSLoopCfgS(&hsloop_cfg);
 12800              		.loc 1 3948 0 discriminator 4
 12801 01fa 07F14803 		add	r3, r7, #72
 12802 01fe 1846     		mov	r0, r3
 12803 0200 FFF7FEFF 		bl	AD5940_HSLoopCfgS
3949:ad5940.c      ****   /* Step0.4 Turn ON reference and ADC power, and DAC power and DAC reference. We use DAC 1.8V refe
3950:ad5940.c      ****   AD5940_AFECtrlS(AFECTRL_ALL, bFALSE); /* Disable all */
 12804              		.loc 1 3950 0 discriminator 4
 12805 0204 0021     		movs	r1, #0
 12806 0206 4248     		ldr	r0, .L704
 12807 0208 FFF7FEFF 		bl	AD5940_AFECtrlS
3951:ad5940.c      ****   AD5940_AFECtrlS(AFECTRL_ADCPWR|AFECTRL_HPREFPWR|AFECTRL_DACREFPWR|AFECTRL_HSDACPWR|AFECTRL_SINC2N
 12808              		.loc 1 3951 0 discriminator 4
 12809 020c 0121     		movs	r1, #1
 12810 020e 4148     		ldr	r0, .L704+4
 12811 0210 FFF7FEFF 		bl	AD5940_AFECtrlS
3952:ad5940.c      ****     AFECTRL_EXTBUFPWR|AFECTRL_INAMPPWR|AFECTRL_HSTIAPWR|AFECTRL_WG, bTRUE);
3953:ad5940.c      ****   AD5940_Delay10us(25);   /* Wait 250us for reference power up */
 12812              		.loc 1 3953 0 discriminator 4
 12813 0214 1920     		movs	r0, #25
 12814 0216 FFF7FEFF 		bl	AD5940_Delay10us
3954:ad5940.c      ****   /* Step0.5 INTC configure and open calibration lock */
3955:ad5940.c      ****   AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_SINC2RDY, bTRUE); /* Enable SINC2 Interrupt in INTC1 */
 12815              		.loc 1 3955 0 discriminator 4
 12816 021a 0122     		movs	r2, #1
 12817 021c 0421     		movs	r1, #4
 12818 021e 0120     		movs	r0, #1
 12819 0220 FFF7FEFF 		bl	AD5940_INTCCfg
3956:ad5940.c      ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, KEY_CALDATLOCK);  /* Unlock KEY */
 12820              		.loc 1 3956 0 discriminator 4
 12821 0224 3C49     		ldr	r1, .L704+8
 12822 0226 42F23020 		movw	r0, #8752
 12823 022a FFF7FEFF 		bl	AD5940_WriteReg
3957:ad5940.c      **** 	/* Reset Offset register before calibration */
3958:ad5940.c      **** 	AD5940_WriteReg(regaddr_offset, 0);
 12824              		.loc 1 3958 0 discriminator 4
 12825 022e D7F8E830 		ldr	r3, [r7, #232]
 12826 0232 9BB2     		uxth	r3, r3
 12827 0234 0021     		movs	r1, #0
 12828 0236 1846     		mov	r0, r3
 12829 0238 FFF7FEFF 		bl	AD5940_WriteReg
3959:ad5940.c      **** 	/* Update HSDACDAT after resetting calibration register */
3960:ad5940.c      **** 	AD5940_WriteReg(REG_AFE_HSDACDAT, 0x800);
 12830              		.loc 1 3960 0 discriminator 4
 12831 023c 4FF40061 		mov	r1, #2048
 12832 0240 42F24800 		movw	r0, #8264
 12833 0244 FFF7FEFF 		bl	AD5940_WriteReg
 12834              	.LBB25:
3961:ad5940.c      ****   /* Step1: Do offset calibration. */
3962:ad5940.c      ****   {
3963:ad5940.c      ****     int32_t ExpectedCode = 0x8000;        /* Ideal ADC output */
 12835              		.loc 1 3963 0 discriminator 4
 12836 0248 4FF40043 		mov	r3, #32768
 12837 024c C7F8D830 		str	r3, [r7, #216]
3964:ad5940.c      ****     AD5940_Delay10us(10);
 12838              		.loc 1 3964 0 discriminator 4
 12839 0250 0A20     		movs	r0, #10
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 297


 12840 0252 FFF7FEFF 		bl	AD5940_Delay10us
3965:ad5940.c      ****     time_out = 1000;   /* Reset time out counter */
 12841              		.loc 1 3965 0 discriminator 4
 12842 0256 4FF47A73 		mov	r3, #1000
 12843 025a BB60     		str	r3, [r7, #8]
3966:ad5940.c      ****     ADCCode = __AD5940_TakeMeasurement(&time_out);
 12844              		.loc 1 3966 0 discriminator 4
 12845 025c 07F10803 		add	r3, r7, #8
 12846 0260 1846     		mov	r0, r3
 12847 0262 FFF7FEFF 		bl	__AD5940_TakeMeasurement
 12848 0266 0346     		mov	r3, r0
 12849 0268 C7F8EC30 		str	r3, [r7, #236]
3967:ad5940.c      **** #ifdef ADI_DEBUG
3968:ad5940.c      ****     ADI_Print("Voltage before cal: %f \n", AD5940_ADCCode2Volt(ADCCode, ADCPGA_Sel, 1.82));
3969:ad5940.c      **** #endif
3970:ad5940.c      **** 
3971:ad5940.c      ****     if(time_out == 0) goto DACCALERROR_TIMEOUT;  /* Time out error. */
 12850              		.loc 1 3971 0 discriminator 4
 12851 026c BB68     		ldr	r3, [r7, #8]
 12852 026e 002B     		cmp	r3, #0
 12853 0270 3FD0     		beq	.L703
3972:ad5940.c      ****     ADCCode = ADCCode - ExpectedCode;
 12854              		.loc 1 3972 0
 12855 0272 D7F8EC20 		ldr	r2, [r7, #236]
 12856 0276 D7F8D830 		ldr	r3, [r7, #216]
 12857 027a D31A     		subs	r3, r2, r3
 12858 027c C7F8EC30 		str	r3, [r7, #236]
3973:ad5940.c      ****     ADCCode = (((ADCCode)*LEB_Denominator)/LSB_Numerator); 
 12859              		.loc 1 3973 0
 12860 0280 D7F8EC30 		ldr	r3, [r7, #236]
 12861 0284 D7F8F020 		ldr	r2, [r7, #240]
 12862 0288 02FB03F2 		mul	r2, r2, r3
 12863 028c D7F8F430 		ldr	r3, [r7, #244]
 12864 0290 92FBF3F3 		sdiv	r3, r2, r3
 12865 0294 C7F8EC30 		str	r3, [r7, #236]
3974:ad5940.c      ****     if(ADCCode>0)
 12866              		.loc 1 3974 0
 12867 0298 D7F8EC30 		ldr	r3, [r7, #236]
 12868 029c 002B     		cmp	r3, #0
 12869 029e 07DD     		ble	.L698
3975:ad5940.c      ****       ADCCode = 0xFFF - ADCCode;
 12870              		.loc 1 3975 0
 12871 02a0 D7F8EC30 		ldr	r3, [r7, #236]
 12872 02a4 C3F57F63 		rsb	r3, r3, #4080
 12873 02a8 0F33     		adds	r3, r3, #15
 12874 02aa C7F8EC30 		str	r3, [r7, #236]
 12875 02ae 04E0     		b	.L699
 12876              	.L698:
3976:ad5940.c      ****     else
3977:ad5940.c      ****       ADCCode = -ADCCode;
 12877              		.loc 1 3977 0
 12878 02b0 D7F8EC30 		ldr	r3, [r7, #236]
 12879 02b4 5B42     		negs	r3, r3
 12880 02b6 C7F8EC30 		str	r3, [r7, #236]
 12881              	.L699:
3978:ad5940.c      ****     AD5940_WriteReg(regaddr_offset, ADCCode);
 12882              		.loc 1 3978 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 298


 12883 02ba D7F8E830 		ldr	r3, [r7, #232]
 12884 02be 9BB2     		uxth	r3, r3
 12885 02c0 D7F8EC20 		ldr	r2, [r7, #236]
 12886 02c4 1146     		mov	r1, r2
 12887 02c6 1846     		mov	r0, r3
 12888 02c8 FFF7FEFF 		bl	AD5940_WriteReg
3979:ad5940.c      ****     AD5940_Delay10us(10);
 12889              		.loc 1 3979 0
 12890 02cc 0A20     		movs	r0, #10
 12891 02ce FFF7FEFF 		bl	AD5940_Delay10us
3980:ad5940.c      ****     AD5940_WriteReg(REG_AFE_HSDACDAT, 0x800);
 12892              		.loc 1 3980 0
 12893 02d2 4FF40061 		mov	r1, #2048
 12894 02d6 42F24800 		movw	r0, #8264
 12895 02da FFF7FEFF 		bl	AD5940_WriteReg
3981:ad5940.c      ****     AD5940_Delay10us(10);
 12896              		.loc 1 3981 0
 12897 02de 0A20     		movs	r0, #10
 12898 02e0 FFF7FEFF 		bl	AD5940_Delay10us
 12899              	.LBE25:
3982:ad5940.c      **** #ifdef ADI_DEBUG
3983:ad5940.c      **** 		ADCCode = __AD5940_TakeMeasurement(&time_out);
3984:ad5940.c      **** 		ADI_Print("Voltage after cal: %f \n", AD5940_ADCCode2Volt(ADCCode, ADCPGA_Sel, 1.82));
3985:ad5940.c      **** #endif
3986:ad5940.c      ****   }
3987:ad5940.c      ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, 0);  /* Lock KEY */
 12900              		.loc 1 3987 0
 12901 02e4 0021     		movs	r1, #0
 12902 02e6 42F23020 		movw	r0, #8752
 12903 02ea FFF7FEFF 		bl	AD5940_WriteReg
3988:ad5940.c      ****   return AD5940ERR_OK;
 12904              		.loc 1 3988 0
 12905 02ee 0023     		movs	r3, #0
 12906 02f0 0AE0     		b	.L700
 12907              	.L703:
 12908              	.LBB26:
3971:ad5940.c      ****     ADCCode = ADCCode - ExpectedCode;
 12909              		.loc 1 3971 0
 12910 02f2 00BF     		nop
 12911              	.L697:
 12912              	.LBE26:
3989:ad5940.c      **** DACCALERROR_TIMEOUT:
3990:ad5940.c      ****   AD5940_ADCConvtCtrlS(bFALSE);  /* Stop conversion */
 12913              		.loc 1 3990 0
 12914 02f4 0020     		movs	r0, #0
 12915 02f6 FFF7FEFF 		bl	AD5940_ADCConvtCtrlS
3991:ad5940.c      ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, 0);  /* Lock KEY */
 12916              		.loc 1 3991 0
 12917 02fa 0021     		movs	r1, #0
 12918 02fc 42F23020 		movw	r0, #8752
 12919 0300 FFF7FEFF 		bl	AD5940_WriteReg
3992:ad5940.c      ****   return AD5940ERR_TIMEOUT;
 12920              		.loc 1 3992 0
 12921 0304 6FF00903 		mvn	r3, #9
 12922              	.L700:
3993:ad5940.c      **** }
 12923              		.loc 1 3993 0 discriminator 1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 299


 12924 0308 1846     		mov	r0, r3
 12925 030a F837     		adds	r7, r7, #248
 12926              		.cfi_def_cfa_offset 8
 12927 030c BD46     		mov	sp, r7
 12928              		.cfi_def_cfa_register 13
 12929              		@ sp needed
 12930 030e 80BD     		pop	{r7, pc}
 12931              	.L705:
 12932              		.align	2
 12933              	.L704:
 12934 0310 E0FF3900 		.word	3801056
 12935 0314 E04E1100 		.word	1134304
 12936 0318 AFA587DE 		.word	-561535569
 12937              		.cfi_endproc
 12938              	.LFE118:
 12939              		.size	AD5940_HSDACCal, .-AD5940_HSDACCal
 12940              		.section	.text.AD5940_LPDACCal,"ax",%progbits
 12941              		.align	2
 12942              		.global	AD5940_LPDACCal
 12943              		.thumb
 12944              		.thumb_func
 12945              		.type	AD5940_LPDACCal, %function
 12946              	AD5940_LPDACCal:
 12947              	.LFB119:
3994:ad5940.c      **** 
3995:ad5940.c      **** /**
3996:ad5940.c      ****  * @brief Use ADC to measure LPDAC offset and gain factor.
3997:ad5940.c      ****  * @note Assume ADC is accurate enough or accurate than LPDAC at least.
3998:ad5940.c      ****  * @param pCalCfg: pointer to structure.
3999:ad5940.c      ****  * @param pResult: the pointer to save calibration result.
4000:ad5940.c      ****  * @return AD5940ERR_OK if succeed.
4001:ad5940.c      **** **/
4002:ad5940.c      **** AD5940Err AD5940_LPDACCal(LPDACCal_Type *pCalCfg, LPDACPara_Type *pResult)
4003:ad5940.c      **** {
 12948              		.loc 1 4003 0
 12949              		.cfi_startproc
 12950              		@ args = 0, pretend = 0, frame = 96
 12951              		@ frame_needed = 1, uses_anonymous_args = 0
 12952 0000 80B5     		push	{r7, lr}
 12953              		.cfi_def_cfa_offset 8
 12954              		.cfi_offset 7, -8
 12955              		.cfi_offset 14, -4
 12956 0002 98B0     		sub	sp, sp, #96
 12957              		.cfi_def_cfa_offset 104
 12958 0004 00AF     		add	r7, sp, #0
 12959              		.cfi_def_cfa_register 7
 12960 0006 7860     		str	r0, [r7, #4]
 12961 0008 3960     		str	r1, [r7]
4004:ad5940.c      ****   AD5940Err error = AD5940ERR_OK;
 12962              		.loc 1 4004 0
 12963 000a 0023     		movs	r3, #0
 12964 000c FB65     		str	r3, [r7, #92]
4005:ad5940.c      ****   LPDACCfg_Type LpDacCfg;
4006:ad5940.c      ****   ADCBaseCfg_Type adc_base;
4007:ad5940.c      ****   ADCFilterCfg_Type adc_filter;
4008:ad5940.c      **** 
4009:ad5940.c      ****   int32_t time_out;
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 300


4010:ad5940.c      ****   uint32_t INTCCfg;
4011:ad5940.c      ****   int32_t ADCCode, ADCCodeVref1p1;
4012:ad5940.c      ****   BoolFlag bADCClk32MHzMode;
4013:ad5940.c      ****   
4014:ad5940.c      ****   if(pCalCfg == NULL) return AD5940ERR_NULLP; 
 12965              		.loc 1 4014 0
 12966 000e 7B68     		ldr	r3, [r7, #4]
 12967 0010 002B     		cmp	r3, #0
 12968 0012 02D1     		bne	.L707
 12969              		.loc 1 4014 0 is_stmt 0 discriminator 1
 12970 0014 6FF00203 		mvn	r3, #2
 12971 0018 1FE2     		b	.L729
 12972              	.L707:
4015:ad5940.c      ****   if(pResult == NULL) return AD5940ERR_NULLP;  
 12973              		.loc 1 4015 0 is_stmt 1
 12974 001a 3B68     		ldr	r3, [r7]
 12975 001c 002B     		cmp	r3, #0
 12976 001e 02D1     		bne	.L709
 12977              		.loc 1 4015 0 is_stmt 0 discriminator 1
 12978 0020 6FF00203 		mvn	r3, #2
 12979 0024 19E2     		b	.L729
 12980              	.L709:
4016:ad5940.c      ****   if(pCalCfg->AdcClkFreq > (32000000*0.8))
 12981              		.loc 1 4016 0 is_stmt 1
 12982 0026 7B68     		ldr	r3, [r7, #4]
 12983 0028 9B68     		ldr	r3, [r3, #8]	@ float
 12984 002a A049     		ldr	r1, .L731
 12985 002c 1846     		mov	r0, r3
 12986 002e FFF7FEFF 		bl	__aeabi_fcmpgt
 12987 0032 0346     		mov	r3, r0
 12988 0034 002B     		cmp	r3, #0
 12989 0036 02D0     		beq	.L710
4017:ad5940.c      ****     bADCClk32MHzMode = bTRUE;
 12990              		.loc 1 4017 0
 12991 0038 0123     		movs	r3, #1
 12992 003a 87F85B30 		strb	r3, [r7, #91]
 12993              	.L710:
4018:ad5940.c      **** 
4019:ad5940.c      ****   /* Step0: Do initialization */
4020:ad5940.c      ****   /* Turn on AD5940 references in case it's disabled. */
4021:ad5940.c      ****   __AD5940_ReferenceON();
 12994              		.loc 1 4021 0
 12995 003e FFF7FEFF 		bl	__AD5940_ReferenceON
4022:ad5940.c      ****   LpDacCfg.LpdacSel = pCalCfg->LpdacSel;
 12996              		.loc 1 4022 0
 12997 0042 7B68     		ldr	r3, [r7, #4]
 12998 0044 1B68     		ldr	r3, [r3]
 12999 0046 FB62     		str	r3, [r7, #44]
4023:ad5940.c      ****   LpDacCfg.DacData12Bit = 0;
 13000              		.loc 1 4023 0
 13001 0048 0023     		movs	r3, #0
 13002 004a A7F84630 		strh	r3, [r7, #70]	@ movhi
4024:ad5940.c      ****   LpDacCfg.DacData6Bit = 0;  
 13003              		.loc 1 4024 0
 13004 004e 0023     		movs	r3, #0
 13005 0050 A7F84830 		strh	r3, [r7, #72]	@ movhi
4025:ad5940.c      ****   LpDacCfg.DataRst = bFALSE;
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 301


 13006              		.loc 1 4025 0
 13007 0054 0023     		movs	r3, #0
 13008 0056 87F84430 		strb	r3, [r7, #68]
4026:ad5940.c      ****   LpDacCfg.LpDacRef = LPDACREF_2P5;
 13009              		.loc 1 4026 0
 13010 005a 0023     		movs	r3, #0
 13011 005c 3B64     		str	r3, [r7, #64]
4027:ad5940.c      ****   LpDacCfg.LpDacSrc = LPDACSRC_MMR;
 13012              		.loc 1 4027 0
 13013 005e 0023     		movs	r3, #0
 13014 0060 3B63     		str	r3, [r7, #48]
4028:ad5940.c      ****   LpDacCfg.LpDacSW = LPDACSW_VBIAS2PIN|LPDACSW_VZERO2PIN;
 13015              		.loc 1 4028 0
 13016 0062 0A23     		movs	r3, #10
 13017 0064 FB63     		str	r3, [r7, #60]
4029:ad5940.c      ****   LpDacCfg.LpDacVbiasMux = LPDACVBIAS_12BIT;
 13018              		.loc 1 4029 0
 13019 0066 0023     		movs	r3, #0
 13020 0068 BB63     		str	r3, [r7, #56]
4030:ad5940.c      ****   LpDacCfg.LpDacVzeroMux = LPDACVZERO_6BIT;
 13021              		.loc 1 4030 0
 13022 006a 0023     		movs	r3, #0
 13023 006c 7B63     		str	r3, [r7, #52]
4031:ad5940.c      ****   LpDacCfg.PowerEn = bTRUE;
 13024              		.loc 1 4031 0
 13025 006e 0123     		movs	r3, #1
 13026 0070 87F84530 		strb	r3, [r7, #69]
4032:ad5940.c      ****   AD5940_LPDACCfgS(&LpDacCfg);
 13027              		.loc 1 4032 0
 13028 0074 07F12C03 		add	r3, r7, #44
 13029 0078 1846     		mov	r0, r3
 13030 007a FFF7FEFF 		bl	AD5940_LPDACCfgS
4033:ad5940.c      **** 
4034:ad5940.c      ****   /* Initialize ADC filters ADCRawData-->SINC3-->SINC2+NOTCH. Use SIN2 data for calibration-->Lower
4035:ad5940.c      ****   adc_filter.ADCSinc3Osr = pCalCfg->ADCSinc3Osr;
 13031              		.loc 1 4035 0
 13032 007e 7B68     		ldr	r3, [r7, #4]
 13033 0080 1B69     		ldr	r3, [r3, #16]
 13034 0082 FB60     		str	r3, [r7, #12]
4036:ad5940.c      ****   adc_filter.ADCSinc2Osr = pCalCfg->ADCSinc2Osr;  /* 800KSPS/4/1333 = 150SPS */
 13035              		.loc 1 4036 0
 13036 0084 7B68     		ldr	r3, [r7, #4]
 13037 0086 5B69     		ldr	r3, [r3, #20]
 13038 0088 3B61     		str	r3, [r7, #16]
4037:ad5940.c      ****   adc_filter.ADCAvgNum = ADCAVGNUM_2;               /* Don't care about it. Average function is onl
 13039              		.loc 1 4037 0
 13040 008a 0023     		movs	r3, #0
 13041 008c 7B61     		str	r3, [r7, #20]
4038:ad5940.c      ****   adc_filter.ADCRate = bADCClk32MHzMode?ADCRATE_1P6MHZ:ADCRATE_800KHZ;        /* If ADC clock is 32
 13042              		.loc 1 4038 0
 13043 008e 97F85B30 		ldrb	r3, [r7, #91]	@ zero_extendqisi2
 13044 0092 002B     		cmp	r3, #0
 13045 0094 0CBF     		ite	eq
 13046 0096 0123     		moveq	r3, #1
 13047 0098 0023     		movne	r3, #0
 13048 009a DBB2     		uxtb	r3, r3
 13049 009c BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 302


4039:ad5940.c      ****   adc_filter.BpNotch = bTRUE;                       /* SINC2+Notch is one block, when bypass notch 
 13050              		.loc 1 4039 0
 13051 009e 0123     		movs	r3, #1
 13052 00a0 3B77     		strb	r3, [r7, #28]
4040:ad5940.c      ****   adc_filter.BpSinc3 = bFALSE;                      /* We use SINC3 filter. */
 13053              		.loc 1 4040 0
 13054 00a2 0023     		movs	r3, #0
 13055 00a4 7B77     		strb	r3, [r7, #29]
4041:ad5940.c      ****   adc_filter.Sinc2NotchEnable = bTRUE;              /* Enable the SINC2+Notch block. You can also u
 13056              		.loc 1 4041 0
 13057 00a6 0123     		movs	r3, #1
 13058 00a8 BB77     		strb	r3, [r7, #30]
4042:ad5940.c      ****   AD5940_ADCFilterCfgS(&adc_filter);
 13059              		.loc 1 4042 0
 13060 00aa 07F10C03 		add	r3, r7, #12
 13061 00ae 1846     		mov	r0, r3
 13062 00b0 FFF7FEFF 		bl	AD5940_ADCFilterCfgS
4043:ad5940.c      ****   /* Initialize ADC MUx and PGA */
4044:ad5940.c      ****   adc_base.ADCMuxP = ADCMUXP_AGND;
 13063              		.loc 1 4044 0
 13064 00b4 2323     		movs	r3, #35
 13065 00b6 3B62     		str	r3, [r7, #32]
4045:ad5940.c      ****   adc_base.ADCMuxN = ADCMUXN_VSET1P1;
 13066              		.loc 1 4045 0
 13067 00b8 0823     		movs	r3, #8
 13068 00ba 7B62     		str	r3, [r7, #36]
4046:ad5940.c      ****   adc_base.ADCPga = ADCPGA_1;
 13069              		.loc 1 4046 0
 13070 00bc 0023     		movs	r3, #0
 13071 00be BB62     		str	r3, [r7, #40]
4047:ad5940.c      ****   AD5940_ADCBaseCfgS(&adc_base);
 13072              		.loc 1 4047 0
 13073 00c0 07F12003 		add	r3, r7, #32
 13074 00c4 1846     		mov	r0, r3
 13075 00c6 FFF7FEFF 		bl	AD5940_ADCBaseCfgS
4048:ad5940.c      ****   /* Turn ON ADC and its reference. And SINC2. */
4049:ad5940.c      ****   AD5940_AFECtrlS(AFECTRL_ALL, bFALSE); /* Disable all firstly, we only enable things we use */
 13076              		.loc 1 4049 0
 13077 00ca 0021     		movs	r1, #0
 13078 00cc 7848     		ldr	r0, .L731+4
 13079 00ce FFF7FEFF 		bl	AD5940_AFECtrlS
4050:ad5940.c      ****   AD5940_AFECtrlS(AFECTRL_ADCPWR|AFECTRL_HPREFPWR|AFECTRL_SINC2NOTCH, bTRUE);
 13080              		.loc 1 4050 0
 13081 00d2 0121     		movs	r1, #1
 13082 00d4 7748     		ldr	r0, .L731+8
 13083 00d6 FFF7FEFF 		bl	AD5940_AFECtrlS
4051:ad5940.c      ****   AD5940_Delay10us(25);                     /* Wait 250us for reference power up */
 13084              		.loc 1 4051 0
 13085 00da 1920     		movs	r0, #25
 13086 00dc FFF7FEFF 		bl	AD5940_Delay10us
4052:ad5940.c      ****   /* INTC configure and open calibration lock */
4053:ad5940.c      ****   INTCCfg = AD5940_INTCGetCfg(AFEINTC_1);
 13087              		.loc 1 4053 0
 13088 00e0 0120     		movs	r0, #1
 13089 00e2 FFF7FEFF 		bl	AD5940_INTCGetCfg
 13090 00e6 7865     		str	r0, [r7, #84]
4054:ad5940.c      ****   AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_SINC2RDY, bTRUE); /* Enable SINC2 Interrupt in INTC1 */
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 303


 13091              		.loc 1 4054 0
 13092 00e8 0122     		movs	r2, #1
 13093 00ea 0421     		movs	r1, #4
 13094 00ec 0120     		movs	r0, #1
 13095 00ee FFF7FEFF 		bl	AD5940_INTCCfg
4055:ad5940.c      ****   /* Step1: Measure internal 1.1V reference. */
4056:ad5940.c      ****   {
4057:ad5940.c      ****     //AD5940_ADCMuxCfgS(ADCMUXP_AGND, ADCMUXN_VSET1P1);
4058:ad5940.c      ****     time_out = pCalCfg->TimeOut10us;   /* Reset time out counter */
 13096              		.loc 1 4058 0
 13097 00f2 7B68     		ldr	r3, [r7, #4]
 13098 00f4 DB69     		ldr	r3, [r3, #28]
 13099 00f6 BB60     		str	r3, [r7, #8]
4059:ad5940.c      ****     ADCCodeVref1p1 = __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and
 13100              		.loc 1 4059 0
 13101 00f8 07F10803 		add	r3, r7, #8
 13102 00fc 1846     		mov	r0, r3
 13103 00fe FFF7FEFF 		bl	__AD5940_TakeMeasurement
 13104 0102 0346     		mov	r3, r0
 13105 0104 3B65     		str	r3, [r7, #80]
4060:ad5940.c      ****     if(time_out == 0)
 13106              		.loc 1 4060 0
 13107 0106 BB68     		ldr	r3, [r7, #8]
 13108 0108 002B     		cmp	r3, #0
 13109 010a 03D1     		bne	.L712
4061:ad5940.c      ****     {
4062:ad5940.c      ****       error = AD5940ERR_TIMEOUT;
 13110              		.loc 1 4062 0
 13111 010c 6FF00903 		mvn	r3, #9
 13112 0110 FB65     		str	r3, [r7, #92]
4063:ad5940.c      ****       goto LPDACCALERROR;
 13113              		.loc 1 4063 0
 13114 0112 9EE1     		b	.L713
 13115              	.L712:
4064:ad5940.c      ****     }  /* Time out error. */
4065:ad5940.c      ****     /* Equation1: ADCCodeVref1p1 = AGND - Vref1p1 */
4066:ad5940.c      ****   }
4067:ad5940.c      ****   /* Step2: Do offset measurement. */
4068:ad5940.c      ****   {
4069:ad5940.c      ****     /* Equation2': ADCCode = Vbias0/1 - Vref1p1 */
4070:ad5940.c      ****     AD5940_LPDACWriteS(0,0);  /* Set LPDAC output voltage to 0.2V(zero code) */
 13116              		.loc 1 4070 0
 13117 0114 0021     		movs	r1, #0
 13118 0116 0020     		movs	r0, #0
 13119 0118 FFF7FEFF 		bl	AD5940_LPDACWriteS
4071:ad5940.c      ****     if(pCalCfg->SettleTime10us > 0)
 13120              		.loc 1 4071 0
 13121 011c 7B68     		ldr	r3, [r7, #4]
 13122 011e 9B69     		ldr	r3, [r3, #24]
 13123 0120 002B     		cmp	r3, #0
 13124 0122 04DD     		ble	.L714
4072:ad5940.c      ****       AD5940_Delay10us(pCalCfg->SettleTime10us);  /* Delay nx10us */
 13125              		.loc 1 4072 0
 13126 0124 7B68     		ldr	r3, [r7, #4]
 13127 0126 9B69     		ldr	r3, [r3, #24]
 13128 0128 1846     		mov	r0, r3
 13129 012a FFF7FEFF 		bl	AD5940_Delay10us
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 304


 13130              	.L714:
4073:ad5940.c      ****     if(pCalCfg->LpdacSel == LPDAC0)
 13131              		.loc 1 4073 0
 13132 012e 7B68     		ldr	r3, [r7, #4]
 13133 0130 1B68     		ldr	r3, [r3]
 13134 0132 002B     		cmp	r3, #0
 13135 0134 04D1     		bne	.L715
4074:ad5940.c      ****       AD5940_ADCMuxCfgS(ADCMUXP_VBIAS0, ADCMUXN_VREF1P1); /* Vbias0 is routed to 12BIT LPDAC */
 13136              		.loc 1 4074 0
 13137 0136 0821     		movs	r1, #8
 13138 0138 1820     		movs	r0, #24
 13139 013a FFF7FEFF 		bl	AD5940_ADCMuxCfgS
 13140 013e 03E0     		b	.L716
 13141              	.L715:
4075:ad5940.c      ****     else
4076:ad5940.c      ****       AD5940_ADCMuxCfgS(ADCMUXP_VBIAS1, ADCMUXN_VREF1P1); /* Vbias1 is routed to 12BIT LPDAC */
 13142              		.loc 1 4076 0
 13143 0140 0821     		movs	r1, #8
 13144 0142 1C20     		movs	r0, #28
 13145 0144 FFF7FEFF 		bl	AD5940_ADCMuxCfgS
 13146              	.L716:
4077:ad5940.c      **** 
4078:ad5940.c      ****     AD5940_Delay10us(5);  /* Delay 50us */
 13147              		.loc 1 4078 0
 13148 0148 0520     		movs	r0, #5
 13149 014a FFF7FEFF 		bl	AD5940_Delay10us
4079:ad5940.c      ****     time_out = pCalCfg->TimeOut10us;   /* Reset time out counter */
 13150              		.loc 1 4079 0
 13151 014e 7B68     		ldr	r3, [r7, #4]
 13152 0150 DB69     		ldr	r3, [r3, #28]
 13153 0152 BB60     		str	r3, [r7, #8]
4080:ad5940.c      ****     ADCCode = __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and then t
 13154              		.loc 1 4080 0
 13155 0154 07F10803 		add	r3, r7, #8
 13156 0158 1846     		mov	r0, r3
 13157 015a FFF7FEFF 		bl	__AD5940_TakeMeasurement
 13158 015e 0346     		mov	r3, r0
 13159 0160 FB64     		str	r3, [r7, #76]
4081:ad5940.c      ****     if(time_out == 0)
 13160              		.loc 1 4081 0
 13161 0162 BB68     		ldr	r3, [r7, #8]
 13162 0164 002B     		cmp	r3, #0
 13163 0166 03D1     		bne	.L717
4082:ad5940.c      ****     {
4083:ad5940.c      ****       error = AD5940ERR_TIMEOUT;
 13164              		.loc 1 4083 0
 13165 0168 6FF00903 		mvn	r3, #9
 13166 016c FB65     		str	r3, [r7, #92]
4084:ad5940.c      ****       goto LPDACCALERROR;
 13167              		.loc 1 4084 0
 13168 016e 70E1     		b	.L713
 13169              	.L717:
4085:ad5940.c      ****     }  /* Time out error. */
4086:ad5940.c      ****     /* Calculate the offset voltage using Equation2 - Equation1 */
4087:ad5940.c      ****     ADCCode -= ADCCodeVref1p1;  /* Get the code of Vbias0-AGND. Then calculate the offset voltage i
 13170              		.loc 1 4087 0
 13171 0170 FA6C     		ldr	r2, [r7, #76]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 305


 13172 0172 3B6D     		ldr	r3, [r7, #80]
 13173 0174 D31A     		subs	r3, r2, r3
 13174 0176 FB64     		str	r3, [r7, #76]
4088:ad5940.c      ****     pResult->bC2V_DAC12B = ADCCode*pCalCfg->ADCRefVolt*1e3f/32768*1.835f/1.82f; /*mV unit*/
 13175              		.loc 1 4088 0
 13176 0178 F86C     		ldr	r0, [r7, #76]
 13177 017a FFF7FEFF 		bl	__aeabi_i2f
 13178 017e 0246     		mov	r2, r0
 13179 0180 7B68     		ldr	r3, [r7, #4]
 13180 0182 DB68     		ldr	r3, [r3, #12]	@ float
 13181 0184 1946     		mov	r1, r3
 13182 0186 1046     		mov	r0, r2
 13183 0188 FFF7FEFF 		bl	__aeabi_fmul
 13184 018c 0346     		mov	r3, r0
 13185 018e 4A49     		ldr	r1, .L731+12
 13186 0190 1846     		mov	r0, r3
 13187 0192 FFF7FEFF 		bl	__aeabi_fmul
 13188 0196 0346     		mov	r3, r0
 13189 0198 4FF08E41 		mov	r1, #1191182336
 13190 019c 1846     		mov	r0, r3
 13191 019e FFF7FEFF 		bl	__aeabi_fdiv
 13192 01a2 0346     		mov	r3, r0
 13193 01a4 4549     		ldr	r1, .L731+16
 13194 01a6 1846     		mov	r0, r3
 13195 01a8 FFF7FEFF 		bl	__aeabi_fmul
 13196 01ac 0346     		mov	r3, r0
 13197 01ae 4449     		ldr	r1, .L731+20
 13198 01b0 1846     		mov	r0, r3
 13199 01b2 FFF7FEFF 		bl	__aeabi_fdiv
 13200 01b6 0346     		mov	r3, r0
 13201 01b8 1A46     		mov	r2, r3
 13202 01ba 3B68     		ldr	r3, [r7]
 13203 01bc 5A60     		str	r2, [r3, #4]	@ float
4089:ad5940.c      ****     /* Measure 6BIT DAC output(Vzero0/1) */
4090:ad5940.c      ****     if(pCalCfg->LpdacSel == LPDAC0)
 13204              		.loc 1 4090 0
 13205 01be 7B68     		ldr	r3, [r7, #4]
 13206 01c0 1B68     		ldr	r3, [r3]
 13207 01c2 002B     		cmp	r3, #0
 13208 01c4 04D1     		bne	.L718
4091:ad5940.c      ****       AD5940_ADCMuxCfgS(ADCMUXP_VZERO0, ADCMUXN_VREF1P1); /* Vbias0 is routed to 12BIT LPDAC */
 13209              		.loc 1 4091 0
 13210 01c6 0821     		movs	r1, #8
 13211 01c8 1720     		movs	r0, #23
 13212 01ca FFF7FEFF 		bl	AD5940_ADCMuxCfgS
 13213 01ce 03E0     		b	.L719
 13214              	.L718:
4092:ad5940.c      ****     else
4093:ad5940.c      ****       AD5940_ADCMuxCfgS(ADCMUXP_VZERO1, ADCMUXN_VREF1P1); /* Vbias1 is routed to 12BIT LPDAC */
 13215              		.loc 1 4093 0
 13216 01d0 0821     		movs	r1, #8
 13217 01d2 1B20     		movs	r0, #27
 13218 01d4 FFF7FEFF 		bl	AD5940_ADCMuxCfgS
 13219              	.L719:
4094:ad5940.c      ****     AD5940_Delay10us(5);  /* Delay 50us */
 13220              		.loc 1 4094 0
 13221 01d8 0520     		movs	r0, #5
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 306


 13222 01da FFF7FEFF 		bl	AD5940_Delay10us
4095:ad5940.c      ****     time_out = pCalCfg->TimeOut10us;   /* Reset time out counter */
 13223              		.loc 1 4095 0
 13224 01de 7B68     		ldr	r3, [r7, #4]
 13225 01e0 DB69     		ldr	r3, [r3, #28]
 13226 01e2 BB60     		str	r3, [r7, #8]
4096:ad5940.c      ****     ADCCode = __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and then t
 13227              		.loc 1 4096 0
 13228 01e4 07F10803 		add	r3, r7, #8
 13229 01e8 1846     		mov	r0, r3
 13230 01ea FFF7FEFF 		bl	__AD5940_TakeMeasurement
 13231 01ee 0346     		mov	r3, r0
 13232 01f0 FB64     		str	r3, [r7, #76]
4097:ad5940.c      ****     if(time_out == 0)
 13233              		.loc 1 4097 0
 13234 01f2 BB68     		ldr	r3, [r7, #8]
 13235 01f4 002B     		cmp	r3, #0
 13236 01f6 03D1     		bne	.L720
4098:ad5940.c      ****     {
4099:ad5940.c      ****       error = AD5940ERR_TIMEOUT;
 13237              		.loc 1 4099 0
 13238 01f8 6FF00903 		mvn	r3, #9
 13239 01fc FB65     		str	r3, [r7, #92]
4100:ad5940.c      ****       goto LPDACCALERROR;
 13240              		.loc 1 4100 0
 13241 01fe 28E1     		b	.L713
 13242              	.L720:
4101:ad5940.c      ****     }  /* Time out error. */
4102:ad5940.c      ****     /* Calculate the offset voltage */
4103:ad5940.c      ****     ADCCode -= ADCCodeVref1p1;  /* Get the code of Vbias0-AGND. Then calculate the offset voltage i
 13243              		.loc 1 4103 0
 13244 0200 FA6C     		ldr	r2, [r7, #76]
 13245 0202 3B6D     		ldr	r3, [r7, #80]
 13246 0204 D31A     		subs	r3, r2, r3
 13247 0206 FB64     		str	r3, [r7, #76]
4104:ad5940.c      ****     pResult->bC2V_DAC6B = ADCCode*pCalCfg->ADCRefVolt*1e3f/32768*1.835f/1.82f; /*mV unit*/
 13248              		.loc 1 4104 0
 13249 0208 F86C     		ldr	r0, [r7, #76]
 13250 020a FFF7FEFF 		bl	__aeabi_i2f
 13251 020e 0246     		mov	r2, r0
 13252 0210 7B68     		ldr	r3, [r7, #4]
 13253 0212 DB68     		ldr	r3, [r3, #12]	@ float
 13254 0214 1946     		mov	r1, r3
 13255 0216 1046     		mov	r0, r2
 13256 0218 FFF7FEFF 		bl	__aeabi_fmul
 13257 021c 0346     		mov	r3, r0
 13258 021e 2649     		ldr	r1, .L731+12
 13259 0220 1846     		mov	r0, r3
 13260 0222 FFF7FEFF 		bl	__aeabi_fmul
 13261 0226 0346     		mov	r3, r0
 13262 0228 4FF08E41 		mov	r1, #1191182336
 13263 022c 1846     		mov	r0, r3
 13264 022e FFF7FEFF 		bl	__aeabi_fdiv
 13265 0232 0346     		mov	r3, r0
 13266 0234 2149     		ldr	r1, .L731+16
 13267 0236 1846     		mov	r0, r3
 13268 0238 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 307


 13269 023c 0346     		mov	r3, r0
 13270 023e 2049     		ldr	r1, .L731+20
 13271 0240 1846     		mov	r0, r3
 13272 0242 FFF7FEFF 		bl	__aeabi_fdiv
 13273 0246 0346     		mov	r3, r0
 13274 0248 1A46     		mov	r2, r3
 13275 024a 3B68     		ldr	r3, [r7]
 13276 024c DA60     		str	r2, [r3, #12]	@ float
4105:ad5940.c      ****   }
4106:ad5940.c      ****   /* Step3: Do gain measurement */
4107:ad5940.c      ****   {
4108:ad5940.c      ****     /* Equation2: ADCCode = Vbias0 - Vref1p1 */
4109:ad5940.c      ****     AD5940_LPDACWriteS(0xfff,0x3f);  /* Set LPDAC output voltage to 2.4V(zero code) */
 13277              		.loc 1 4109 0
 13278 024e 3F21     		movs	r1, #63
 13279 0250 40F6FF70 		movw	r0, #4095
 13280 0254 FFF7FEFF 		bl	AD5940_LPDACWriteS
4110:ad5940.c      ****     if(pCalCfg->SettleTime10us > 0)
 13281              		.loc 1 4110 0
 13282 0258 7B68     		ldr	r3, [r7, #4]
 13283 025a 9B69     		ldr	r3, [r3, #24]
 13284 025c 002B     		cmp	r3, #0
 13285 025e 04DD     		ble	.L721
4111:ad5940.c      ****       AD5940_Delay10us(pCalCfg->SettleTime10us);  /* Delay nx10us */
 13286              		.loc 1 4111 0
 13287 0260 7B68     		ldr	r3, [r7, #4]
 13288 0262 9B69     		ldr	r3, [r3, #24]
 13289 0264 1846     		mov	r0, r3
 13290 0266 FFF7FEFF 		bl	AD5940_Delay10us
 13291              	.L721:
4112:ad5940.c      ****     if(pCalCfg->LpdacSel == LPDAC0)
 13292              		.loc 1 4112 0
 13293 026a 7B68     		ldr	r3, [r7, #4]
 13294 026c 1B68     		ldr	r3, [r3]
 13295 026e 002B     		cmp	r3, #0
 13296 0270 04D1     		bne	.L722
4113:ad5940.c      ****       AD5940_ADCMuxCfgS(ADCMUXP_VBIAS0, ADCMUXN_VREF1P1); /* Vbias0 is routed to 12BIT LPDAC */
 13297              		.loc 1 4113 0
 13298 0272 0821     		movs	r1, #8
 13299 0274 1820     		movs	r0, #24
 13300 0276 FFF7FEFF 		bl	AD5940_ADCMuxCfgS
 13301 027a 03E0     		b	.L723
 13302              	.L722:
4114:ad5940.c      ****     else
4115:ad5940.c      ****       AD5940_ADCMuxCfgS(ADCMUXP_VBIAS1, ADCMUXN_VREF1P1); /* Vbias1 is routed to 12BIT LPDAC */
 13303              		.loc 1 4115 0
 13304 027c 0821     		movs	r1, #8
 13305 027e 1C20     		movs	r0, #28
 13306 0280 FFF7FEFF 		bl	AD5940_ADCMuxCfgS
 13307              	.L723:
4116:ad5940.c      ****     AD5940_Delay10us(5);  /* Delay 50us */
 13308              		.loc 1 4116 0
 13309 0284 0520     		movs	r0, #5
 13310 0286 FFF7FEFF 		bl	AD5940_Delay10us
4117:ad5940.c      ****     time_out = pCalCfg->TimeOut10us;   /* Reset time out counter */
 13311              		.loc 1 4117 0
 13312 028a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 308


 13313 028c DB69     		ldr	r3, [r3, #28]
 13314 028e BB60     		str	r3, [r7, #8]
4118:ad5940.c      ****     ADCCode = __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and then t
 13315              		.loc 1 4118 0
 13316 0290 07F10803 		add	r3, r7, #8
 13317 0294 1846     		mov	r0, r3
 13318 0296 FFF7FEFF 		bl	__AD5940_TakeMeasurement
 13319 029a 0346     		mov	r3, r0
 13320 029c FB64     		str	r3, [r7, #76]
4119:ad5940.c      ****     if(time_out == 0)
 13321              		.loc 1 4119 0
 13322 029e BB68     		ldr	r3, [r7, #8]
 13323 02a0 002B     		cmp	r3, #0
 13324 02a2 0FD1     		bne	.L724
4120:ad5940.c      ****     {
4121:ad5940.c      ****       error = AD5940ERR_TIMEOUT;
 13325              		.loc 1 4121 0
 13326 02a4 6FF00903 		mvn	r3, #9
 13327 02a8 FB65     		str	r3, [r7, #92]
4122:ad5940.c      ****       goto LPDACCALERROR;
 13328              		.loc 1 4122 0
 13329 02aa D2E0     		b	.L713
 13330              	.L732:
 13331              		.align	2
 13332              	.L731:
 13333 02ac 0050C34B 		.word	1271091200
 13334 02b0 E0FF3900 		.word	3801056
 13335 02b4 A0000100 		.word	65696
 13336 02b8 00007A44 		.word	1148846080
 13337 02bc 48E1EA3F 		.word	1072357704
 13338 02c0 C3F5E83F 		.word	1072231875
 13339              	.L724:
4123:ad5940.c      ****     }  /* Time out error. */
4124:ad5940.c      ****     /* Calculate the offset voltage */
4125:ad5940.c      ****     ADCCode -= ADCCodeVref1p1;  /* Get the code of Vbias0-AGND. Then calculate the gain factor 'k'.
 13340              		.loc 1 4125 0
 13341 02c4 FA6C     		ldr	r2, [r7, #76]
 13342 02c6 3B6D     		ldr	r3, [r7, #80]
 13343 02c8 D31A     		subs	r3, r2, r3
 13344 02ca FB64     		str	r3, [r7, #76]
4126:ad5940.c      ****     pResult->kC2V_DAC12B = (ADCCode*pCalCfg->ADCRefVolt*1e3f/32768*1.835f/1.82f - pResult->bC2V_DAC
 13345              		.loc 1 4126 0
 13346 02cc F86C     		ldr	r0, [r7, #76]
 13347 02ce FFF7FEFF 		bl	__aeabi_i2f
 13348 02d2 0246     		mov	r2, r0
 13349 02d4 7B68     		ldr	r3, [r7, #4]
 13350 02d6 DB68     		ldr	r3, [r3, #12]	@ float
 13351 02d8 1946     		mov	r1, r3
 13352 02da 1046     		mov	r0, r2
 13353 02dc FFF7FEFF 		bl	__aeabi_fmul
 13354 02e0 0346     		mov	r3, r0
 13355 02e2 6049     		ldr	r1, .L733
 13356 02e4 1846     		mov	r0, r3
 13357 02e6 FFF7FEFF 		bl	__aeabi_fmul
 13358 02ea 0346     		mov	r3, r0
 13359 02ec 4FF08E41 		mov	r1, #1191182336
 13360 02f0 1846     		mov	r0, r3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 309


 13361 02f2 FFF7FEFF 		bl	__aeabi_fdiv
 13362 02f6 0346     		mov	r3, r0
 13363 02f8 5B49     		ldr	r1, .L733+4
 13364 02fa 1846     		mov	r0, r3
 13365 02fc FFF7FEFF 		bl	__aeabi_fmul
 13366 0300 0346     		mov	r3, r0
 13367 0302 5A49     		ldr	r1, .L733+8
 13368 0304 1846     		mov	r0, r3
 13369 0306 FFF7FEFF 		bl	__aeabi_fdiv
 13370 030a 0346     		mov	r3, r0
 13371 030c 1A46     		mov	r2, r3
 13372 030e 3B68     		ldr	r3, [r7]
 13373 0310 5B68     		ldr	r3, [r3, #4]	@ float
 13374 0312 1946     		mov	r1, r3
 13375 0314 1046     		mov	r0, r2
 13376 0316 FFF7FEFF 		bl	__aeabi_fsub
 13377 031a 0346     		mov	r3, r0
 13378 031c 5449     		ldr	r1, .L733+12
 13379 031e 1846     		mov	r0, r3
 13380 0320 FFF7FEFF 		bl	__aeabi_fdiv
 13381 0324 0346     		mov	r3, r0
 13382 0326 1A46     		mov	r2, r3
 13383 0328 3B68     		ldr	r3, [r7]
 13384 032a 1A60     		str	r2, [r3]	@ float
4127:ad5940.c      ****     /* Measure 6BIT DAC output(Vzero0) */
4128:ad5940.c      ****     if(pCalCfg->LpdacSel == LPDAC0)
 13385              		.loc 1 4128 0
 13386 032c 7B68     		ldr	r3, [r7, #4]
 13387 032e 1B68     		ldr	r3, [r3]
 13388 0330 002B     		cmp	r3, #0
 13389 0332 04D1     		bne	.L725
4129:ad5940.c      ****       AD5940_ADCMuxCfgS(ADCMUXP_VZERO0, ADCMUXN_VREF1P1); /* Vbias0 is routed to 12BIT LPDAC */
 13390              		.loc 1 4129 0
 13391 0334 0821     		movs	r1, #8
 13392 0336 1720     		movs	r0, #23
 13393 0338 FFF7FEFF 		bl	AD5940_ADCMuxCfgS
 13394 033c 03E0     		b	.L726
 13395              	.L725:
4130:ad5940.c      ****     else
4131:ad5940.c      ****       AD5940_ADCMuxCfgS(ADCMUXP_VZERO1, ADCMUXN_VREF1P1); /* Vbias1 is routed to 12BIT LPDAC */
 13396              		.loc 1 4131 0
 13397 033e 0821     		movs	r1, #8
 13398 0340 1B20     		movs	r0, #27
 13399 0342 FFF7FEFF 		bl	AD5940_ADCMuxCfgS
 13400              	.L726:
4132:ad5940.c      ****     AD5940_Delay10us(5);  /* Delay 50us */
 13401              		.loc 1 4132 0
 13402 0346 0520     		movs	r0, #5
 13403 0348 FFF7FEFF 		bl	AD5940_Delay10us
4133:ad5940.c      ****     time_out = pCalCfg->TimeOut10us;   /* Reset time out counter */
 13404              		.loc 1 4133 0
 13405 034c 7B68     		ldr	r3, [r7, #4]
 13406 034e DB69     		ldr	r3, [r3, #28]
 13407 0350 BB60     		str	r3, [r7, #8]
4134:ad5940.c      ****     ADCCode = __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and then t
 13408              		.loc 1 4134 0
 13409 0352 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 310


 13410 0356 1846     		mov	r0, r3
 13411 0358 FFF7FEFF 		bl	__AD5940_TakeMeasurement
 13412 035c 0346     		mov	r3, r0
 13413 035e FB64     		str	r3, [r7, #76]
4135:ad5940.c      ****     if(time_out == 0)
 13414              		.loc 1 4135 0
 13415 0360 BB68     		ldr	r3, [r7, #8]
 13416 0362 002B     		cmp	r3, #0
 13417 0364 03D1     		bne	.L727
4136:ad5940.c      ****     {
4137:ad5940.c      ****       error = AD5940ERR_TIMEOUT;
 13418              		.loc 1 4137 0
 13419 0366 6FF00903 		mvn	r3, #9
 13420 036a FB65     		str	r3, [r7, #92]
4138:ad5940.c      ****       goto LPDACCALERROR;
 13421              		.loc 1 4138 0
 13422 036c 71E0     		b	.L713
 13423              	.L727:
4139:ad5940.c      ****     }  /* Time out error. */
4140:ad5940.c      ****     /* Calculate the offset voltage */
4141:ad5940.c      ****     ADCCode -= ADCCodeVref1p1;  /* Get the code of Vbias0-AGND. Then calculate the offset voltage i
 13424              		.loc 1 4141 0
 13425 036e FA6C     		ldr	r2, [r7, #76]
 13426 0370 3B6D     		ldr	r3, [r7, #80]
 13427 0372 D31A     		subs	r3, r2, r3
 13428 0374 FB64     		str	r3, [r7, #76]
4142:ad5940.c      ****     pResult->kC2V_DAC6B = (ADCCode*pCalCfg->ADCRefVolt*1e3f/32768*1.835f/1.82f - pResult->bC2V_DAC6
 13429              		.loc 1 4142 0
 13430 0376 F86C     		ldr	r0, [r7, #76]
 13431 0378 FFF7FEFF 		bl	__aeabi_i2f
 13432 037c 0246     		mov	r2, r0
 13433 037e 7B68     		ldr	r3, [r7, #4]
 13434 0380 DB68     		ldr	r3, [r3, #12]	@ float
 13435 0382 1946     		mov	r1, r3
 13436 0384 1046     		mov	r0, r2
 13437 0386 FFF7FEFF 		bl	__aeabi_fmul
 13438 038a 0346     		mov	r3, r0
 13439 038c 3549     		ldr	r1, .L733
 13440 038e 1846     		mov	r0, r3
 13441 0390 FFF7FEFF 		bl	__aeabi_fmul
 13442 0394 0346     		mov	r3, r0
 13443 0396 4FF08E41 		mov	r1, #1191182336
 13444 039a 1846     		mov	r0, r3
 13445 039c FFF7FEFF 		bl	__aeabi_fdiv
 13446 03a0 0346     		mov	r3, r0
 13447 03a2 3149     		ldr	r1, .L733+4
 13448 03a4 1846     		mov	r0, r3
 13449 03a6 FFF7FEFF 		bl	__aeabi_fmul
 13450 03aa 0346     		mov	r3, r0
 13451 03ac 2F49     		ldr	r1, .L733+8
 13452 03ae 1846     		mov	r0, r3
 13453 03b0 FFF7FEFF 		bl	__aeabi_fdiv
 13454 03b4 0346     		mov	r3, r0
 13455 03b6 1A46     		mov	r2, r3
 13456 03b8 3B68     		ldr	r3, [r7]
 13457 03ba DB68     		ldr	r3, [r3, #12]	@ float
 13458 03bc 1946     		mov	r1, r3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 311


 13459 03be 1046     		mov	r0, r2
 13460 03c0 FFF7FEFF 		bl	__aeabi_fsub
 13461 03c4 0346     		mov	r3, r0
 13462 03c6 2B49     		ldr	r1, .L733+16
 13463 03c8 1846     		mov	r0, r3
 13464 03ca FFF7FEFF 		bl	__aeabi_fdiv
 13465 03ce 0346     		mov	r3, r0
 13466 03d0 1A46     		mov	r2, r3
 13467 03d2 3B68     		ldr	r3, [r7]
 13468 03d4 9A60     		str	r2, [r3, #8]	@ float
4143:ad5940.c      ****   }
4144:ad5940.c      ****   /* Step4: calculate the parameters for voltage to code calculation. */
4145:ad5940.c      ****   pResult->kV2C_DAC12B = 1/pResult->kC2V_DAC12B;
 13469              		.loc 1 4145 0
 13470 03d6 3B68     		ldr	r3, [r7]
 13471 03d8 1B68     		ldr	r3, [r3]	@ float
 13472 03da 1946     		mov	r1, r3
 13473 03dc 4FF07E50 		mov	r0, #1065353216
 13474 03e0 FFF7FEFF 		bl	__aeabi_fdiv
 13475 03e4 0346     		mov	r3, r0
 13476 03e6 1A46     		mov	r2, r3
 13477 03e8 3B68     		ldr	r3, [r7]
 13478 03ea 1A61     		str	r2, [r3, #16]	@ float
4146:ad5940.c      ****   pResult->bV2C_DAC12B = -pResult->bC2V_DAC12B/pResult->kC2V_DAC12B;
 13479              		.loc 1 4146 0
 13480 03ec 3B68     		ldr	r3, [r7]
 13481 03ee 5B68     		ldr	r3, [r3, #4]	@ float
 13482 03f0 83F00042 		eor	r2, r3, #-2147483648
 13483 03f4 3B68     		ldr	r3, [r7]
 13484 03f6 1B68     		ldr	r3, [r3]	@ float
 13485 03f8 1946     		mov	r1, r3
 13486 03fa 1046     		mov	r0, r2
 13487 03fc FFF7FEFF 		bl	__aeabi_fdiv
 13488 0400 0346     		mov	r3, r0
 13489 0402 1A46     		mov	r2, r3
 13490 0404 3B68     		ldr	r3, [r7]
 13491 0406 5A61     		str	r2, [r3, #20]	@ float
4147:ad5940.c      ****   pResult->kV2C_DAC6B = 1/pResult->kC2V_DAC6B;
 13492              		.loc 1 4147 0
 13493 0408 3B68     		ldr	r3, [r7]
 13494 040a 9B68     		ldr	r3, [r3, #8]	@ float
 13495 040c 1946     		mov	r1, r3
 13496 040e 4FF07E50 		mov	r0, #1065353216
 13497 0412 FFF7FEFF 		bl	__aeabi_fdiv
 13498 0416 0346     		mov	r3, r0
 13499 0418 1A46     		mov	r2, r3
 13500 041a 3B68     		ldr	r3, [r7]
 13501 041c 9A61     		str	r2, [r3, #24]	@ float
4148:ad5940.c      ****   pResult->bV2C_DAC6B = -pResult->bC2V_DAC6B/pResult->kC2V_DAC6B;
 13502              		.loc 1 4148 0
 13503 041e 3B68     		ldr	r3, [r7]
 13504 0420 DB68     		ldr	r3, [r3, #12]	@ float
 13505 0422 83F00042 		eor	r2, r3, #-2147483648
 13506 0426 3B68     		ldr	r3, [r7]
 13507 0428 9B68     		ldr	r3, [r3, #8]	@ float
 13508 042a 1946     		mov	r1, r3
 13509 042c 1046     		mov	r0, r2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 312


 13510 042e FFF7FEFF 		bl	__aeabi_fdiv
 13511 0432 0346     		mov	r3, r0
 13512 0434 1A46     		mov	r2, r3
 13513 0436 3B68     		ldr	r3, [r7]
 13514 0438 DA61     		str	r2, [r3, #28]	@ float
4149:ad5940.c      ****   /* Restore INTC1 SINC2 configure */
4150:ad5940.c      ****   if(INTCCfg&AFEINTSRC_SINC2RDY);
 13515              		.loc 1 4150 0
 13516 043a 7B6D     		ldr	r3, [r7, #84]
 13517 043c 03F00403 		and	r3, r3, #4
 13518 0440 002B     		cmp	r3, #0
 13519 0442 04D1     		bne	.L728
4151:ad5940.c      ****   else
4152:ad5940.c      ****     AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_SINC2RDY, bFALSE); /* Disable SINC2 Interrupt */
 13520              		.loc 1 4152 0
 13521 0444 0022     		movs	r2, #0
 13522 0446 0421     		movs	r1, #4
 13523 0448 0120     		movs	r0, #1
 13524 044a FFF7FEFF 		bl	AD5940_INTCCfg
 13525              	.L728:
4153:ad5940.c      ****   /* Done */
4154:ad5940.c      ****   return AD5940ERR_OK;
 13526              		.loc 1 4154 0
 13527 044e 0023     		movs	r3, #0
 13528 0450 03E0     		b	.L729
 13529              	.L713:
4155:ad5940.c      **** 
4156:ad5940.c      **** LPDACCALERROR:
4157:ad5940.c      ****   AD5940_ADCConvtCtrlS(bFALSE);  /* Stop conversion */
 13530              		.loc 1 4157 0
 13531 0452 0020     		movs	r0, #0
 13532 0454 FFF7FEFF 		bl	AD5940_ADCConvtCtrlS
4158:ad5940.c      ****   return error;
 13533              		.loc 1 4158 0
 13534 0458 FB6D     		ldr	r3, [r7, #92]
 13535              	.L729:
4159:ad5940.c      **** }
 13536              		.loc 1 4159 0 discriminator 1
 13537 045a 1846     		mov	r0, r3
 13538 045c 6037     		adds	r7, r7, #96
 13539              		.cfi_def_cfa_offset 8
 13540 045e BD46     		mov	sp, r7
 13541              		.cfi_def_cfa_register 13
 13542              		@ sp needed
 13543 0460 80BD     		pop	{r7, pc}
 13544              	.L734:
 13545 0462 00BF     		.align	2
 13546              	.L733:
 13547 0464 00007A44 		.word	1148846080
 13548 0468 48E1EA3F 		.word	1072357704
 13549 046c C3F5E83F 		.word	1072231875
 13550 0470 00F07F45 		.word	1166012416
 13551 0474 00007C42 		.word	1115422720
 13552              		.cfi_endproc
 13553              	.LFE119:
 13554              		.size	AD5940_LPDACCal, .-AD5940_LPDACCal
 13555              		.section	.text.AD5940_LFOSCMeasure,"ax",%progbits
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 313


 13556              		.align	2
 13557              		.global	AD5940_LFOSCMeasure
 13558              		.thumb
 13559              		.thumb_func
 13560              		.type	AD5940_LFOSCMeasure, %function
 13561              	AD5940_LFOSCMeasure:
 13562              	.LFB120:
4160:ad5940.c      **** 
4161:ad5940.c      **** /**
4162:ad5940.c      ****  * @brief Use system clock to measure LFOSC frequency.
4163:ad5940.c      ****  * @note Set system clock to external crystal to get a better measurement accuracy.
4164:ad5940.c      ****  *       This function use 3 sequences and the start address is specified by parameter.
4165:ad5940.c      ****  * @param pCfg: pointer to structure.
4166:ad5940.c      ****  * @param pFreq:  Pointer to a variable that used to store frequency in Hz. 
4167:ad5940.c      ****  * @return AD5940ERR_OK if succeed.
4168:ad5940.c      **** **/
4169:ad5940.c      **** AD5940Err AD5940_LFOSCMeasure(LFOSCMeasure_Type *pCfg, float *pFreq) /* Measure current LFOSC frequ
4170:ad5940.c      **** {
 13563              		.loc 1 4170 0
 13564              		.cfi_startproc
 13565              		@ args = 0, pretend = 0, frame = 144
 13566              		@ frame_needed = 1, uses_anonymous_args = 0
 13567 0000 90B5     		push	{r4, r7, lr}
 13568              		.cfi_def_cfa_offset 12
 13569              		.cfi_offset 4, -12
 13570              		.cfi_offset 7, -8
 13571              		.cfi_offset 14, -4
 13572 0002 A5B0     		sub	sp, sp, #148
 13573              		.cfi_def_cfa_offset 160
 13574 0004 00AF     		add	r7, sp, #0
 13575              		.cfi_def_cfa_register 7
 13576 0006 7860     		str	r0, [r7, #4]
 13577 0008 3960     		str	r1, [r7]
4171:ad5940.c      ****   /**
4172:ad5940.c      ****    * @code
4173:ad5940.c      ****    *  Sleep wakeup timer running...
4174:ad5940.c      ****    *  -SLP----WKP----SLP----WKP----SLP----WKP
4175:ad5940.c      ****    *  --|-----|-------------|-------------|------------Trigger sequencer when Wakeup Timer over.
4176:ad5940.c      ****    *  --------|SEQA---------|SEQB----------------------Execute SeqA then SeqB
4177:ad5940.c      ****    *  ---------|InitT--------|StopT--------------------SeqA start timer and SeqB trigger interrupt 
4178:ad5940.c      ****    *  ------------------------|INT---------------------
4179:ad5940.c      ****    *  -----------------------------------------|Read---We read SEQTIMEOUT register here
4180:ad5940.c      ****    *  ---------|-----TimerCount----------------|-------
4181:ad5940.c      ****    *  ---------|--------------|---TimerCount2--|-------We change SeqB to reset timer so we measure 
4182:ad5940.c      ****    * @endcode
4183:ad5940.c      ****    * **/
4184:ad5940.c      ****   uint32_t TimerCount, TimerCount2;
4185:ad5940.c      ****   SEQCfg_Type seq_cfg, seq_cfg_backup;
4186:ad5940.c      ****   SEQInfo_Type seqinfo;
4187:ad5940.c      ****   WUPTCfg_Type wupt_cfg;
4188:ad5940.c      ****   uint32_t INTCCfg;
4189:ad5940.c      ****   uint32_t WuptPeriod;
4190:ad5940.c      **** 
4191:ad5940.c      ****   static const uint32_t SeqA[]=
4192:ad5940.c      ****   {
4193:ad5940.c      ****     SEQ_TOUT(0x3fffffff),   /* Set time-out timer. It will always run until disable Sequencer by SP
4194:ad5940.c      ****   };
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 314


4195:ad5940.c      ****   static const uint32_t SeqB[]=
4196:ad5940.c      ****   {
4197:ad5940.c      ****     /**
4198:ad5940.c      ****      * Interrupt flag AFEINTSRC_ENDSEQ will be set after this command. So We can inform MCU to read
4199:ad5940.c      ****      * current timer value. MCU will need some additional time to read back time count.
4200:ad5940.c      ****      * So we use SeqB to measure how much time needed for MCU to read back 
4201:ad5940.c      ****      * */
4202:ad5940.c      ****     SEQ_STOP(),             
4203:ad5940.c      ****   };
4204:ad5940.c      ****   static const uint32_t SeqBB[]=
4205:ad5940.c      ****   {
4206:ad5940.c      ****     SEQ_TOUT(0x3fffffff),   /* Re-Set time-out timer, so we can measure the time needed for MCU to 
4207:ad5940.c      ****     SEQ_STOP(),             /* Interrupt flag AFEINTSRC_ENDSEQ will be set here */
4208:ad5940.c      ****   };
4209:ad5940.c      **** 
4210:ad5940.c      ****   if(pCfg == NULL) return AD5940ERR_NULLP;
 13578              		.loc 1 4210 0
 13579 000a 7B68     		ldr	r3, [r7, #4]
 13580 000c 002B     		cmp	r3, #0
 13581 000e 02D1     		bne	.L736
 13582              		.loc 1 4210 0 is_stmt 0 discriminator 1
 13583 0010 6FF00203 		mvn	r3, #2
 13584 0014 0EE1     		b	.L743
 13585              	.L736:
4211:ad5940.c      ****   if(pFreq == NULL) return AD5940ERR_NULLP;
 13586              		.loc 1 4211 0 is_stmt 1
 13587 0016 3B68     		ldr	r3, [r7]
 13588 0018 002B     		cmp	r3, #0
 13589 001a 02D1     		bne	.L738
 13590              		.loc 1 4211 0 is_stmt 0 discriminator 1
 13591 001c 6FF00203 		mvn	r3, #2
 13592 0020 08E1     		b	.L743
 13593              	.L738:
4212:ad5940.c      ****   if(pCfg->CalDuration < 1.0f)
 13594              		.loc 1 4212 0 is_stmt 1
 13595 0022 7B68     		ldr	r3, [r7, #4]
 13596 0024 5B68     		ldr	r3, [r3, #4]	@ float
 13597 0026 4FF07E51 		mov	r1, #1065353216
 13598 002a 1846     		mov	r0, r3
 13599 002c FFF7FEFF 		bl	__aeabi_fcmplt
 13600 0030 0346     		mov	r3, r0
 13601 0032 002B     		cmp	r3, #0
 13602 0034 02D0     		beq	.L745
4213:ad5940.c      ****     return AD5940ERR_PARA;
 13603              		.loc 1 4213 0
 13604 0036 6FF00103 		mvn	r3, #1
 13605 003a FBE0     		b	.L743
 13606              	.L745:
4214:ad5940.c      ****   AD5940_SEQGetCfg(&seq_cfg_backup);
 13607              		.loc 1 4214 0
 13608 003c 07F16803 		add	r3, r7, #104
 13609 0040 1846     		mov	r0, r3
 13610 0042 FFF7FEFF 		bl	AD5940_SEQGetCfg
4215:ad5940.c      ****   INTCCfg = AD5940_INTCGetCfg(AFEINTC_1);
 13611              		.loc 1 4215 0
 13612 0046 0120     		movs	r0, #1
 13613 0048 FFF7FEFF 		bl	AD5940_INTCGetCfg
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 315


 13614 004c C7F88C00 		str	r0, [r7, #140]
4216:ad5940.c      ****   AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_ENDSEQ, bTRUE);
 13615              		.loc 1 4216 0
 13616 0050 0122     		movs	r2, #1
 13617 0052 4FF40041 		mov	r1, #32768
 13618 0056 0120     		movs	r0, #1
 13619 0058 FFF7FEFF 		bl	AD5940_INTCCfg
4217:ad5940.c      **** 	AD5940_INTCClrFlag(AFEINTSRC_ALLINT);
 13620              		.loc 1 4217 0
 13621 005c 4FF0FF30 		mov	r0, #-1
 13622 0060 FFF7FEFF 		bl	AD5940_INTCClrFlag
4218:ad5940.c      **** 
4219:ad5940.c      ****   seq_cfg.SeqMemSize = SEQMEMSIZE_2KB;  /* 2kB SRAM is used for sequencer */
 13623              		.loc 1 4219 0
 13624 0064 0123     		movs	r3, #1
 13625 0066 7B67     		str	r3, [r7, #116]
4220:ad5940.c      ****   seq_cfg.SeqBreakEn = bFALSE;
 13626              		.loc 1 4220 0
 13627 0068 0023     		movs	r3, #0
 13628 006a 87F87930 		strb	r3, [r7, #121]
4221:ad5940.c      ****   seq_cfg.SeqIgnoreEn = bFALSE;
 13629              		.loc 1 4221 0
 13630 006e 0023     		movs	r3, #0
 13631 0070 87F87A30 		strb	r3, [r7, #122]
4222:ad5940.c      ****   seq_cfg.SeqCntCRCClr = bFALSE;
 13632              		.loc 1 4222 0
 13633 0074 0023     		movs	r3, #0
 13634 0076 87F87B30 		strb	r3, [r7, #123]
4223:ad5940.c      ****   seq_cfg.SeqEnable = bTRUE;
 13635              		.loc 1 4223 0
 13636 007a 0123     		movs	r3, #1
 13637 007c 87F87830 		strb	r3, [r7, #120]
4224:ad5940.c      ****   seq_cfg.SeqWrTimer = 0;
 13638              		.loc 1 4224 0
 13639 0080 0023     		movs	r3, #0
 13640 0082 FB67     		str	r3, [r7, #124]
4225:ad5940.c      ****   AD5940_SEQCfg(&seq_cfg);          /* Enable sequencer */
 13641              		.loc 1 4225 0
 13642 0084 07F17403 		add	r3, r7, #116
 13643 0088 1846     		mov	r0, r3
 13644 008a FFF7FEFF 		bl	AD5940_SEQCfg
4226:ad5940.c      ****   
4227:ad5940.c      ****   seqinfo.pSeqCmd = SeqA;
 13645              		.loc 1 4227 0
 13646 008e 6B4B     		ldr	r3, .L746
 13647 0090 7B66     		str	r3, [r7, #100]
4228:ad5940.c      ****   seqinfo.SeqId = SEQID_0;
 13648              		.loc 1 4228 0
 13649 0092 0023     		movs	r3, #0
 13650 0094 7B65     		str	r3, [r7, #84]
4229:ad5940.c      ****   seqinfo.SeqLen = SEQ_LEN(SeqA);
 13651              		.loc 1 4229 0
 13652 0096 0123     		movs	r3, #1
 13653 0098 FB65     		str	r3, [r7, #92]
4230:ad5940.c      ****   seqinfo.SeqRamAddr = pCfg->CalSeqAddr;
 13654              		.loc 1 4230 0
 13655 009a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 316


 13656 009c 1B68     		ldr	r3, [r3]
 13657 009e BB65     		str	r3, [r7, #88]
4231:ad5940.c      ****   seqinfo.WriteSRAM = bTRUE;
 13658              		.loc 1 4231 0
 13659 00a0 0123     		movs	r3, #1
 13660 00a2 87F86030 		strb	r3, [r7, #96]
4232:ad5940.c      ****   AD5940_SEQInfoCfg(&seqinfo);
 13661              		.loc 1 4232 0
 13662 00a6 07F15403 		add	r3, r7, #84
 13663 00aa 1846     		mov	r0, r3
 13664 00ac FFF7FEFF 		bl	AD5940_SEQInfoCfg
4233:ad5940.c      ****   seqinfo.SeqId = SEQID_1;
 13665              		.loc 1 4233 0
 13666 00b0 0123     		movs	r3, #1
 13667 00b2 7B65     		str	r3, [r7, #84]
4234:ad5940.c      ****   seqinfo.SeqRamAddr = pCfg->CalSeqAddr + SEQ_LEN(SeqA) ;
 13668              		.loc 1 4234 0
 13669 00b4 7B68     		ldr	r3, [r7, #4]
 13670 00b6 1B68     		ldr	r3, [r3]
 13671 00b8 0133     		adds	r3, r3, #1
 13672 00ba BB65     		str	r3, [r7, #88]
4235:ad5940.c      ****   seqinfo.SeqLen = SEQ_LEN(SeqB);
 13673              		.loc 1 4235 0
 13674 00bc 0123     		movs	r3, #1
 13675 00be FB65     		str	r3, [r7, #92]
4236:ad5940.c      ****   seqinfo.pSeqCmd = SeqB;
 13676              		.loc 1 4236 0
 13677 00c0 5F4B     		ldr	r3, .L746+4
 13678 00c2 7B66     		str	r3, [r7, #100]
4237:ad5940.c      ****   AD5940_SEQInfoCfg(&seqinfo);      /* Configure sequence0 and sequence1 with command SeqA and SeqB
 13679              		.loc 1 4237 0
 13680 00c4 07F15403 		add	r3, r7, #84
 13681 00c8 1846     		mov	r0, r3
 13682 00ca FFF7FEFF 		bl	AD5940_SEQInfoCfg
4238:ad5940.c      **** 	
4239:ad5940.c      ****   wupt_cfg.WuptEn = bFALSE;
 13683              		.loc 1 4239 0
 13684 00ce 0023     		movs	r3, #0
 13685 00d0 87F85030 		strb	r3, [r7, #80]
4240:ad5940.c      ****   wupt_cfg.WuptOrder[0] = SEQID_0;
 13686              		.loc 1 4240 0
 13687 00d4 0023     		movs	r3, #0
 13688 00d6 3B61     		str	r3, [r7, #16]
4241:ad5940.c      ****   wupt_cfg.WuptOrder[1] = SEQID_1;
 13689              		.loc 1 4241 0
 13690 00d8 0123     		movs	r3, #1
 13691 00da 7B61     		str	r3, [r7, #20]
4242:ad5940.c      ****   wupt_cfg.WuptEndSeq = WUPTENDSEQ_B;
 13692              		.loc 1 4242 0
 13693 00dc 0123     		movs	r3, #1
 13694 00de FB60     		str	r3, [r7, #12]
4243:ad5940.c      ****   wupt_cfg.SeqxWakeupTime[0] = 4;       /* Don't care. >4 is acceptable */
 13695              		.loc 1 4243 0
 13696 00e0 0423     		movs	r3, #4
 13697 00e2 3B64     		str	r3, [r7, #64]
4244:ad5940.c      ****   wupt_cfg.SeqxSleepTime[0] = (uint32_t)((pCfg->CalDuration)*32 + 0.5f) - 1 - 4;
 13698              		.loc 1 4244 0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 317


 13699 00e4 7B68     		ldr	r3, [r7, #4]
 13700 00e6 5B68     		ldr	r3, [r3, #4]	@ float
 13701 00e8 4FF08441 		mov	r1, #1107296256
 13702 00ec 1846     		mov	r0, r3
 13703 00ee FFF7FEFF 		bl	__aeabi_fmul
 13704 00f2 0346     		mov	r3, r0
 13705 00f4 4FF07C51 		mov	r1, #1056964608
 13706 00f8 1846     		mov	r0, r3
 13707 00fa FFF7FEFF 		bl	__aeabi_fadd
 13708 00fe 0346     		mov	r3, r0
 13709 0100 1846     		mov	r0, r3
 13710 0102 FFF7FEFF 		bl	__aeabi_f2uiz
 13711 0106 0346     		mov	r3, r0
 13712 0108 053B     		subs	r3, r3, #5
 13713 010a 3B63     		str	r3, [r7, #48]
4245:ad5940.c      ****   wupt_cfg.SeqxWakeupTime[1] = 4-1;
 13714              		.loc 1 4245 0
 13715 010c 0323     		movs	r3, #3
 13716 010e 7B64     		str	r3, [r7, #68]
4246:ad5940.c      ****   wupt_cfg.SeqxSleepTime[1] = 0xffffffff; /* Don't care */
 13717              		.loc 1 4246 0
 13718 0110 4FF0FF33 		mov	r3, #-1
 13719 0114 7B63     		str	r3, [r7, #52]
4247:ad5940.c      ****   WuptPeriod = (wupt_cfg.SeqxSleepTime[0]+1) + (wupt_cfg.SeqxWakeupTime[1]+1);
 13720              		.loc 1 4247 0
 13721 0116 3A6B     		ldr	r2, [r7, #48]
 13722 0118 7B6C     		ldr	r3, [r7, #68]
 13723 011a 1344     		add	r3, r3, r2
 13724 011c 0233     		adds	r3, r3, #2
 13725 011e C7F88830 		str	r3, [r7, #136]
4248:ad5940.c      ****   AD5940_WUPTCfg(&wupt_cfg);
 13726              		.loc 1 4248 0
 13727 0122 07F10C03 		add	r3, r7, #12
 13728 0126 1846     		mov	r0, r3
 13729 0128 FFF7FEFF 		bl	AD5940_WUPTCfg
4249:ad5940.c      ****   
4250:ad5940.c      ****   AD5940_INTCClrFlag(AFEINTSRC_ENDSEQ);
 13730              		.loc 1 4250 0
 13731 012c 4FF40040 		mov	r0, #32768
 13732 0130 FFF7FEFF 		bl	AD5940_INTCClrFlag
4251:ad5940.c      ****   AD5940_WUPTCtrl(bTRUE);
 13733              		.loc 1 4251 0
 13734 0134 0120     		movs	r0, #1
 13735 0136 FFF7FEFF 		bl	AD5940_WUPTCtrl
4252:ad5940.c      ****   
4253:ad5940.c      ****   while(AD5940_INTCTestFlag(AFEINTC_1, AFEINTSRC_ENDSEQ) == bFALSE);
 13736              		.loc 1 4253 0
 13737 013a 00BF     		nop
 13738              	.L741:
 13739              		.loc 1 4253 0 is_stmt 0 discriminator 1
 13740 013c 4FF40041 		mov	r1, #32768
 13741 0140 0120     		movs	r0, #1
 13742 0142 FFF7FEFF 		bl	AD5940_INTCTestFlag
 13743 0146 0346     		mov	r3, r0
 13744 0148 002B     		cmp	r3, #0
 13745 014a F7D0     		beq	.L741
4254:ad5940.c      ****   TimerCount = AD5940_SEQTimeOutRd();
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 318


 13746              		.loc 1 4254 0 is_stmt 1
 13747 014c FFF7FEFF 		bl	AD5940_SEQTimeOutRd
 13748 0150 C7F88400 		str	r0, [r7, #132]
4255:ad5940.c      ****   
4256:ad5940.c      ****   AD5940_WUPTCtrl(bFALSE);
 13749              		.loc 1 4256 0
 13750 0154 0020     		movs	r0, #0
 13751 0156 FFF7FEFF 		bl	AD5940_WUPTCtrl
4257:ad5940.c      **** 	AD5940_WUPTTime(SEQID_0, 4, 4);	/* Set it to minimum value because we don't care about sequence0 n
 13752              		.loc 1 4257 0
 13753 015a 0422     		movs	r2, #4
 13754 015c 0421     		movs	r1, #4
 13755 015e 0020     		movs	r0, #0
 13756 0160 FFF7FEFF 		bl	AD5940_WUPTTime
4258:ad5940.c      ****   seqinfo.SeqId = SEQID_1;
 13757              		.loc 1 4258 0
 13758 0164 0123     		movs	r3, #1
 13759 0166 7B65     		str	r3, [r7, #84]
4259:ad5940.c      ****   seqinfo.SeqRamAddr = pCfg->CalSeqAddr + SEQ_LEN(SeqA) ;
 13760              		.loc 1 4259 0
 13761 0168 7B68     		ldr	r3, [r7, #4]
 13762 016a 1B68     		ldr	r3, [r3]
 13763 016c 0133     		adds	r3, r3, #1
 13764 016e BB65     		str	r3, [r7, #88]
4260:ad5940.c      ****   seqinfo.SeqLen = SEQ_LEN(SeqBB);
 13765              		.loc 1 4260 0
 13766 0170 0223     		movs	r3, #2
 13767 0172 FB65     		str	r3, [r7, #92]
4261:ad5940.c      ****   seqinfo.pSeqCmd = SeqBB;
 13768              		.loc 1 4261 0
 13769 0174 334B     		ldr	r3, .L746+8
 13770 0176 7B66     		str	r3, [r7, #100]
4262:ad5940.c      ****   seqinfo.WriteSRAM = bTRUE;
 13771              		.loc 1 4262 0
 13772 0178 0123     		movs	r3, #1
 13773 017a 87F86030 		strb	r3, [r7, #96]
4263:ad5940.c      ****   AD5940_SEQInfoCfg(&seqinfo);
 13774              		.loc 1 4263 0
 13775 017e 07F15403 		add	r3, r7, #84
 13776 0182 1846     		mov	r0, r3
 13777 0184 FFF7FEFF 		bl	AD5940_SEQInfoCfg
4264:ad5940.c      ****   AD5940_SEQCtrlS(bTRUE); /* Enable Sequencer again */
 13778              		.loc 1 4264 0
 13779 0188 0120     		movs	r0, #1
 13780 018a FFF7FEFF 		bl	AD5940_SEQCtrlS
4265:ad5940.c      **** 
4266:ad5940.c      ****   AD5940_INTCClrFlag(AFEINTSRC_ENDSEQ);
 13781              		.loc 1 4266 0
 13782 018e 4FF40040 		mov	r0, #32768
 13783 0192 FFF7FEFF 		bl	AD5940_INTCClrFlag
4267:ad5940.c      ****   AD5940_WUPTCtrl(bTRUE);
 13784              		.loc 1 4267 0
 13785 0196 0120     		movs	r0, #1
 13786 0198 FFF7FEFF 		bl	AD5940_WUPTCtrl
4268:ad5940.c      ****   while(AD5940_INTCTestFlag(AFEINTC_1, AFEINTSRC_ENDSEQ) == bFALSE);
 13787              		.loc 1 4268 0
 13788 019c 00BF     		nop
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 319


 13789              	.L742:
 13790              		.loc 1 4268 0 is_stmt 0 discriminator 1
 13791 019e 4FF40041 		mov	r1, #32768
 13792 01a2 0120     		movs	r0, #1
 13793 01a4 FFF7FEFF 		bl	AD5940_INTCTestFlag
 13794 01a8 0346     		mov	r3, r0
 13795 01aa 002B     		cmp	r3, #0
 13796 01ac F7D0     		beq	.L742
4269:ad5940.c      ****   TimerCount2 = AD5940_SEQTimeOutRd();
 13797              		.loc 1 4269 0 is_stmt 1
 13798 01ae FFF7FEFF 		bl	AD5940_SEQTimeOutRd
 13799 01b2 C7F88000 		str	r0, [r7, #128]
4270:ad5940.c      **** 	AD5940_INTCTestFlag(AFEINTC_0, AFEINTSRC_ENDSEQ);
 13800              		.loc 1 4270 0
 13801 01b6 4FF40041 		mov	r1, #32768
 13802 01ba 0020     		movs	r0, #0
 13803 01bc FFF7FEFF 		bl	AD5940_INTCTestFlag
4271:ad5940.c      **** 
4272:ad5940.c      ****   AD5940_WUPTCtrl(bFALSE);
 13804              		.loc 1 4272 0
 13805 01c0 0020     		movs	r0, #0
 13806 01c2 FFF7FEFF 		bl	AD5940_WUPTCtrl
4273:ad5940.c      ****   AD5940_SEQCfg(&seq_cfg_backup);          /* restore sequencer configuration */
 13807              		.loc 1 4273 0
 13808 01c6 07F16803 		add	r3, r7, #104
 13809 01ca 1846     		mov	r0, r3
 13810 01cc FFF7FEFF 		bl	AD5940_SEQCfg
4274:ad5940.c      ****   AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_ENDSEQ, (INTCCfg&AFEINTSRC_ENDSEQ)?bTRUE:bFALSE); /* Restore 
 13811              		.loc 1 4274 0
 13812 01d0 D7F88C30 		ldr	r3, [r7, #140]
 13813 01d4 03F40043 		and	r3, r3, #32768
 13814 01d8 002B     		cmp	r3, #0
 13815 01da 14BF     		ite	ne
 13816 01dc 0123     		movne	r3, #1
 13817 01de 0023     		moveq	r3, #0
 13818 01e0 DBB2     		uxtb	r3, r3
 13819 01e2 1A46     		mov	r2, r3
 13820 01e4 4FF40041 		mov	r1, #32768
 13821 01e8 0120     		movs	r0, #1
 13822 01ea FFF7FEFF 		bl	AD5940_INTCCfg
4275:ad5940.c      ****   AD5940_INTCClrFlag(AFEINTSRC_ENDSEQ);
 13823              		.loc 1 4275 0
 13824 01ee 4FF40040 		mov	r0, #32768
 13825 01f2 FFF7FEFF 		bl	AD5940_INTCClrFlag
4276:ad5940.c      ****   //printf("Time duration:%d ", (TimerCount2 - TimerCount));
4277:ad5940.c      **** 	*pFreq = pCfg->SystemClkFreq*WuptPeriod/(TimerCount2 - TimerCount);
 13826              		.loc 1 4277 0
 13827 01f6 7B68     		ldr	r3, [r7, #4]
 13828 01f8 9C68     		ldr	r4, [r3, #8]	@ float
 13829 01fa D7F88800 		ldr	r0, [r7, #136]
 13830 01fe FFF7FEFF 		bl	__aeabi_ui2f
 13831 0202 0346     		mov	r3, r0
 13832 0204 1946     		mov	r1, r3
 13833 0206 2046     		mov	r0, r4
 13834 0208 FFF7FEFF 		bl	__aeabi_fmul
 13835 020c 0346     		mov	r3, r0
 13836 020e 1C46     		mov	r4, r3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 320


 13837 0210 D7F88020 		ldr	r2, [r7, #128]
 13838 0214 D7F88430 		ldr	r3, [r7, #132]
 13839 0218 D31A     		subs	r3, r2, r3
 13840 021a 1846     		mov	r0, r3
 13841 021c FFF7FEFF 		bl	__aeabi_ui2f
 13842 0220 0346     		mov	r3, r0
 13843 0222 1946     		mov	r1, r3
 13844 0224 2046     		mov	r0, r4
 13845 0226 FFF7FEFF 		bl	__aeabi_fdiv
 13846 022a 0346     		mov	r3, r0
 13847 022c 1A46     		mov	r2, r3
 13848 022e 3B68     		ldr	r3, [r7]
 13849 0230 1A60     		str	r2, [r3]	@ float
4278:ad5940.c      ****   return AD5940ERR_OK;
 13850              		.loc 1 4278 0
 13851 0232 0023     		movs	r3, #0
 13852              	.L743:
4279:ad5940.c      **** }
 13853              		.loc 1 4279 0 discriminator 1
 13854 0234 1846     		mov	r0, r3
 13855 0236 9437     		adds	r7, r7, #148
 13856              		.cfi_def_cfa_offset 12
 13857 0238 BD46     		mov	sp, r7
 13858              		.cfi_def_cfa_register 13
 13859              		@ sp needed
 13860 023a 90BD     		pop	{r4, r7, pc}
 13861              	.L747:
 13862              		.align	2
 13863              	.L746:
 13864 023c D8010000 		.word	SeqA.7192
 13865 0240 DC010000 		.word	SeqB.7193
 13866 0244 E0010000 		.word	SeqBB.7194
 13867              		.cfi_endproc
 13868              	.LFE120:
 13869              		.size	AD5940_LFOSCMeasure, .-AD5940_LFOSCMeasure
 13870              		.section	.rodata
 13871              		.align	2
 13872              		.type	cal_registers.7056, %object
 13873              		.size	cal_registers.7056, 20
 13874              	cal_registers.7056:
 13875 01b0 4022     		.short	8768
 13876 01b2 4422     		.short	8772
 13877 01b4 7022     		.short	8816
 13878 01b6 CC22     		.short	8908
 13879 01b8 7422     		.short	8820
 13880 01ba C822     		.short	8904
 13881 01bc 7822     		.short	8824
 13882 01be D422     		.short	8916
 13883 01c0 9822     		.short	8856
 13884 01c2 D022     		.short	8912
 13885              		.align	2
 13886              		.type	ideal_pga_gain.7066, %object
 13887              		.size	ideal_pga_gain.7066, 20
 13888              	ideal_pga_gain.7066:
 13889 01c4 0000803F 		.word	1065353216
 13890 01c8 0000C03F 		.word	1069547520
 13891 01cc 00000040 		.word	1073741824
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 321


 13892 01d0 00008040 		.word	1082130432
 13893 01d4 00001041 		.word	1091567616
 13894              		.align	2
 13895              		.type	SeqA.7192, %object
 13896              		.size	SeqA.7192, 4
 13897              	SeqA.7192:
 13898 01d8 FFFFFF7F 		.word	2147483647
 13899              		.align	2
 13900              		.type	SeqB.7193, %object
 13901              		.size	SeqB.7193, 4
 13902              	SeqB.7193:
 13903 01dc 00000081 		.word	-2130706432
 13904              		.align	2
 13905              		.type	SeqBB.7194, %object
 13906              		.size	SeqBB.7194, 8
 13907              	SeqBB.7194:
 13908 01e0 FFFFFF7F 		.word	2147483647
 13909 01e4 00000081 		.word	-2130706432
 13910              		.text
 13911              	.Letext0:
 13912              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 13913              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 13914              		.file 4 "ad5940.h"
 13915              		.section	.debug_info,"",%progbits
 13916              	.Ldebug_info0:
 13917 0000 7E350000 		.4byte	0x357e
 13918 0004 0400     		.2byte	0x4
 13919 0006 00000000 		.4byte	.Ldebug_abbrev0
 13920 000a 04       		.byte	0x4
 13921 000b 01       		.uleb128 0x1
 13922 000c 470E0000 		.4byte	.LASF550
 13923 0010 0C       		.byte	0xc
 13924 0011 73130000 		.4byte	.LASF551
 13925 0015 73010000 		.4byte	.LASF552
 13926 0019 90000000 		.4byte	.Ldebug_ranges0+0x90
 13927 001d 00000000 		.4byte	0
 13928 0021 00000000 		.4byte	.Ldebug_line0
 13929 0025 02       		.uleb128 0x2
 13930 0026 04       		.byte	0x4
 13931 0027 05       		.byte	0x5
 13932 0028 696E7400 		.ascii	"int\000"
 13933 002c 03       		.uleb128 0x3
 13934 002d 04       		.byte	0x4
 13935 002e 07       		.byte	0x7
 13936 002f D1100000 		.4byte	.LASF0
 13937 0033 03       		.uleb128 0x3
 13938 0034 08       		.byte	0x8
 13939 0035 05       		.byte	0x5
 13940 0036 430F0000 		.4byte	.LASF1
 13941 003a 03       		.uleb128 0x3
 13942 003b 08       		.byte	0x8
 13943 003c 04       		.byte	0x4
 13944 003d 0D130000 		.4byte	.LASF2
 13945 0041 03       		.uleb128 0x3
 13946 0042 01       		.byte	0x1
 13947 0043 06       		.byte	0x6
 13948 0044 02060000 		.4byte	.LASF3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 322


 13949 0048 04       		.uleb128 0x4
 13950 0049 9C030000 		.4byte	.LASF6
 13951 004d 02       		.byte	0x2
 13952 004e 1D       		.byte	0x1d
 13953 004f 53000000 		.4byte	0x53
 13954 0053 03       		.uleb128 0x3
 13955 0054 01       		.byte	0x1
 13956 0055 08       		.byte	0x8
 13957 0056 A0060000 		.4byte	.LASF4
 13958 005a 03       		.uleb128 0x3
 13959 005b 02       		.byte	0x2
 13960 005c 05       		.byte	0x5
 13961 005d A7160000 		.4byte	.LASF5
 13962 0061 04       		.uleb128 0x4
 13963 0062 29080000 		.4byte	.LASF7
 13964 0066 02       		.byte	0x2
 13965 0067 2B       		.byte	0x2b
 13966 0068 6C000000 		.4byte	0x6c
 13967 006c 03       		.uleb128 0x3
 13968 006d 02       		.byte	0x2
 13969 006e 07       		.byte	0x7
 13970 006f 2F190000 		.4byte	.LASF8
 13971 0073 04       		.uleb128 0x4
 13972 0074 CF190000 		.4byte	.LASF9
 13973 0078 02       		.byte	0x2
 13974 0079 3F       		.byte	0x3f
 13975 007a 7E000000 		.4byte	0x7e
 13976 007e 03       		.uleb128 0x3
 13977 007f 04       		.byte	0x4
 13978 0080 05       		.byte	0x5
 13979 0081 A4040000 		.4byte	.LASF10
 13980 0085 04       		.uleb128 0x4
 13981 0086 270F0000 		.4byte	.LASF11
 13982 008a 02       		.byte	0x2
 13983 008b 41       		.byte	0x41
 13984 008c 90000000 		.4byte	0x90
 13985 0090 03       		.uleb128 0x3
 13986 0091 04       		.byte	0x4
 13987 0092 07       		.byte	0x7
 13988 0093 8C0C0000 		.4byte	.LASF12
 13989 0097 03       		.uleb128 0x3
 13990 0098 08       		.byte	0x8
 13991 0099 07       		.byte	0x7
 13992 009a C7130000 		.4byte	.LASF13
 13993 009e 03       		.uleb128 0x3
 13994 009f 04       		.byte	0x4
 13995 00a0 07       		.byte	0x7
 13996 00a1 74000000 		.4byte	.LASF14
 13997 00a5 05       		.uleb128 0x5
 13998 00a6 04       		.byte	0x4
 13999 00a7 03       		.uleb128 0x3
 14000 00a8 01       		.byte	0x1
 14001 00a9 08       		.byte	0x8
 14002 00aa 9F070000 		.4byte	.LASF15
 14003 00ae 03       		.uleb128 0x3
 14004 00af 08       		.byte	0x8
 14005 00b0 04       		.byte	0x4
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 323


 14006 00b1 C60F0000 		.4byte	.LASF16
 14007 00b5 03       		.uleb128 0x3
 14008 00b6 04       		.byte	0x4
 14009 00b7 04       		.byte	0x4
 14010 00b8 88100000 		.4byte	.LASF17
 14011 00bc 04       		.uleb128 0x4
 14012 00bd 0E060000 		.4byte	.LASF18
 14013 00c1 03       		.byte	0x3
 14014 00c2 18       		.byte	0x18
 14015 00c3 48000000 		.4byte	0x48
 14016 00c7 04       		.uleb128 0x4
 14017 00c8 1A140000 		.4byte	.LASF19
 14018 00cc 03       		.byte	0x3
 14019 00cd 24       		.byte	0x24
 14020 00ce 61000000 		.4byte	0x61
 14021 00d2 04       		.uleb128 0x4
 14022 00d3 06010000 		.4byte	.LASF20
 14023 00d7 03       		.byte	0x3
 14024 00d8 2C       		.byte	0x2c
 14025 00d9 73000000 		.4byte	0x73
 14026 00dd 04       		.uleb128 0x4
 14027 00de 84180000 		.4byte	.LASF21
 14028 00e2 03       		.byte	0x3
 14029 00e3 30       		.byte	0x30
 14030 00e4 85000000 		.4byte	0x85
 14031 00e8 06       		.uleb128 0x6
 14032 00e9 1A090000 		.4byte	.LASF22
 14033 00ed 04       		.byte	0x4
 14034 00ee 7910     		.2byte	0x1079
 14035 00f0 D2000000 		.4byte	0xd2
 14036 00f4 07       		.uleb128 0x7
 14037 00f5 01       		.byte	0x1
 14038 00f6 53000000 		.4byte	0x53
 14039 00fa 04       		.byte	0x4
 14040 00fb 7F10     		.2byte	0x107f
 14041 00fd 0E010000 		.4byte	0x10e
 14042 0101 08       		.uleb128 0x8
 14043 0102 CC020000 		.4byte	.LASF23
 14044 0106 00       		.byte	0
 14045 0107 08       		.uleb128 0x8
 14046 0108 25050000 		.4byte	.LASF24
 14047 010c 01       		.byte	0x1
 14048 010d 00       		.byte	0
 14049 010e 06       		.uleb128 0x6
 14050 010f 7D000000 		.4byte	.LASF25
 14051 0113 04       		.byte	0x4
 14052 0114 8110     		.2byte	0x1081
 14053 0116 F4000000 		.4byte	0xf4
 14054 011a 09       		.uleb128 0x9
 14055 011b 0D       		.byte	0xd
 14056 011c 04       		.byte	0x4
 14057 011d 8310     		.2byte	0x1083
 14058 011f CD010000 		.4byte	0x1cd
 14059 0123 0A       		.uleb128 0xa
 14060 0124 D9190000 		.4byte	.LASF26
 14061 0128 04       		.byte	0x4
 14062 0129 8610     		.2byte	0x1086
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 324


 14063 012b 0E010000 		.4byte	0x10e
 14064 012f 00       		.byte	0
 14065 0130 0A       		.uleb128 0xa
 14066 0131 35150000 		.4byte	.LASF27
 14067 0135 04       		.byte	0x4
 14068 0136 8710     		.2byte	0x1087
 14069 0138 0E010000 		.4byte	0x10e
 14070 013c 01       		.byte	0x1
 14071 013d 0A       		.uleb128 0xa
 14072 013e 3F0B0000 		.4byte	.LASF28
 14073 0142 04       		.byte	0x4
 14074 0143 8810     		.2byte	0x1088
 14075 0145 0E010000 		.4byte	0x10e
 14076 0149 02       		.byte	0x2
 14077 014a 0A       		.uleb128 0xa
 14078 014b 4C080000 		.4byte	.LASF29
 14079 014f 04       		.byte	0x4
 14080 0150 8910     		.2byte	0x1089
 14081 0152 0E010000 		.4byte	0x10e
 14082 0156 03       		.byte	0x3
 14083 0157 0A       		.uleb128 0xa
 14084 0158 7A120000 		.4byte	.LASF30
 14085 015c 04       		.byte	0x4
 14086 015d 8A10     		.2byte	0x108a
 14087 015f 0E010000 		.4byte	0x10e
 14088 0163 04       		.byte	0x4
 14089 0164 0A       		.uleb128 0xa
 14090 0165 DC050000 		.4byte	.LASF31
 14091 0169 04       		.byte	0x4
 14092 016a 8C10     		.2byte	0x108c
 14093 016c 0E010000 		.4byte	0x10e
 14094 0170 05       		.byte	0x5
 14095 0171 0A       		.uleb128 0xa
 14096 0172 F90A0000 		.4byte	.LASF32
 14097 0176 04       		.byte	0x4
 14098 0177 8D10     		.2byte	0x108d
 14099 0179 0E010000 		.4byte	0x10e
 14100 017d 06       		.byte	0x6
 14101 017e 0A       		.uleb128 0xa
 14102 017f 090F0000 		.4byte	.LASF33
 14103 0183 04       		.byte	0x4
 14104 0184 8E10     		.2byte	0x108e
 14105 0186 0E010000 		.4byte	0x10e
 14106 018a 07       		.byte	0x7
 14107 018b 0A       		.uleb128 0xa
 14108 018c 69000000 		.4byte	.LASF34
 14109 0190 04       		.byte	0x4
 14110 0191 9010     		.2byte	0x1090
 14111 0193 0E010000 		.4byte	0x10e
 14112 0197 08       		.byte	0x8
 14113 0198 0A       		.uleb128 0xa
 14114 0199 42020000 		.4byte	.LASF35
 14115 019d 04       		.byte	0x4
 14116 019e 9210     		.2byte	0x1092
 14117 01a0 0E010000 		.4byte	0x10e
 14118 01a4 09       		.byte	0x9
 14119 01a5 0A       		.uleb128 0xa
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 325


 14120 01a6 CD0F0000 		.4byte	.LASF36
 14121 01aa 04       		.byte	0x4
 14122 01ab 9310     		.2byte	0x1093
 14123 01ad 0E010000 		.4byte	0x10e
 14124 01b1 0A       		.byte	0xa
 14125 01b2 0A       		.uleb128 0xa
 14126 01b3 FF070000 		.4byte	.LASF37
 14127 01b7 04       		.byte	0x4
 14128 01b8 9410     		.2byte	0x1094
 14129 01ba 0E010000 		.4byte	0x10e
 14130 01be 0B       		.byte	0xb
 14131 01bf 0A       		.uleb128 0xa
 14132 01c0 A6150000 		.4byte	.LASF38
 14133 01c4 04       		.byte	0x4
 14134 01c5 9510     		.2byte	0x1095
 14135 01c7 0E010000 		.4byte	0x10e
 14136 01cb 0C       		.byte	0xc
 14137 01cc 00       		.byte	0
 14138 01cd 06       		.uleb128 0x6
 14139 01ce 37060000 		.4byte	.LASF39
 14140 01d2 04       		.byte	0x4
 14141 01d3 9610     		.2byte	0x1096
 14142 01d5 1A010000 		.4byte	0x11a
 14143 01d9 09       		.uleb128 0x9
 14144 01da 0C       		.byte	0xc
 14145 01db 04       		.byte	0x4
 14146 01dc A010     		.2byte	0x10a0
 14147 01de 0A020000 		.4byte	0x20a
 14148 01e2 0A       		.uleb128 0xa
 14149 01e3 31010000 		.4byte	.LASF40
 14150 01e7 04       		.byte	0x4
 14151 01e8 A210     		.2byte	0x10a2
 14152 01ea DD000000 		.4byte	0xdd
 14153 01ee 00       		.byte	0
 14154 01ef 0A       		.uleb128 0xa
 14155 01f0 21010000 		.4byte	.LASF41
 14156 01f4 04       		.byte	0x4
 14157 01f5 A310     		.2byte	0x10a3
 14158 01f7 DD000000 		.4byte	0xdd
 14159 01fb 04       		.byte	0x4
 14160 01fc 0A       		.uleb128 0xa
 14161 01fd 96000000 		.4byte	.LASF42
 14162 0201 04       		.byte	0x4
 14163 0202 A410     		.2byte	0x10a4
 14164 0204 DD000000 		.4byte	0xdd
 14165 0208 08       		.byte	0x8
 14166 0209 00       		.byte	0
 14167 020a 06       		.uleb128 0x6
 14168 020b A1090000 		.4byte	.LASF43
 14169 020f 04       		.byte	0x4
 14170 0210 A510     		.2byte	0x10a5
 14171 0212 D9010000 		.4byte	0x1d9
 14172 0216 09       		.uleb128 0x9
 14173 0217 14       		.byte	0x14
 14174 0218 04       		.byte	0x4
 14175 0219 AA10     		.2byte	0x10aa
 14176 021b 7B020000 		.4byte	0x27b
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 326


 14177 021f 0A       		.uleb128 0xa
 14178 0220 74040000 		.4byte	.LASF44
 14179 0224 04       		.byte	0x4
 14180 0225 AC10     		.2byte	0x10ac
 14181 0227 DD000000 		.4byte	0xdd
 14182 022b 00       		.byte	0
 14183 022c 0A       		.uleb128 0xa
 14184 022d DC120000 		.4byte	.LASF45
 14185 0231 04       		.byte	0x4
 14186 0232 AD10     		.2byte	0x10ad
 14187 0234 DD000000 		.4byte	0xdd
 14188 0238 04       		.byte	0x4
 14189 0239 0A       		.uleb128 0xa
 14190 023a 850B0000 		.4byte	.LASF46
 14191 023e 04       		.byte	0x4
 14192 023f AE10     		.2byte	0x10ae
 14193 0241 DD000000 		.4byte	0xdd
 14194 0245 08       		.byte	0x8
 14195 0246 0A       		.uleb128 0xa
 14196 0247 840C0000 		.4byte	.LASF47
 14197 024b 04       		.byte	0x4
 14198 024c AF10     		.2byte	0x10af
 14199 024e DD000000 		.4byte	0xdd
 14200 0252 0C       		.byte	0xc
 14201 0253 0A       		.uleb128 0xa
 14202 0254 76080000 		.4byte	.LASF48
 14203 0258 04       		.byte	0x4
 14204 0259 B010     		.2byte	0x10b0
 14205 025b 0E010000 		.4byte	0x10e
 14206 025f 10       		.byte	0x10
 14207 0260 0A       		.uleb128 0xa
 14208 0261 78070000 		.4byte	.LASF49
 14209 0265 04       		.byte	0x4
 14210 0266 B110     		.2byte	0x10b1
 14211 0268 0E010000 		.4byte	0x10e
 14212 026c 11       		.byte	0x11
 14213 026d 0A       		.uleb128 0xa
 14214 026e D4070000 		.4byte	.LASF50
 14215 0272 04       		.byte	0x4
 14216 0273 B210     		.2byte	0x10b2
 14217 0275 0E010000 		.4byte	0x10e
 14218 0279 12       		.byte	0x12
 14219 027a 00       		.byte	0
 14220 027b 06       		.uleb128 0x6
 14221 027c 5D190000 		.4byte	.LASF51
 14222 0280 04       		.byte	0x4
 14223 0281 B310     		.2byte	0x10b3
 14224 0283 16020000 		.4byte	0x216
 14225 0287 09       		.uleb128 0x9
 14226 0288 0C       		.byte	0xc
 14227 0289 04       		.byte	0x4
 14228 028a B910     		.2byte	0x10b9
 14229 028c B8020000 		.4byte	0x2b8
 14230 0290 0A       		.uleb128 0xa
 14231 0291 5A150000 		.4byte	.LASF52
 14232 0295 04       		.byte	0x4
 14233 0296 BB10     		.2byte	0x10bb
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 327


 14234 0298 DD000000 		.4byte	0xdd
 14235 029c 00       		.byte	0
 14236 029d 0A       		.uleb128 0xa
 14237 029e E8120000 		.4byte	.LASF53
 14238 02a2 04       		.byte	0x4
 14239 02a3 BC10     		.2byte	0x10bc
 14240 02a5 DD000000 		.4byte	0xdd
 14241 02a9 04       		.byte	0x4
 14242 02aa 0A       		.uleb128 0xa
 14243 02ab 79190000 		.4byte	.LASF54
 14244 02af 04       		.byte	0x4
 14245 02b0 BD10     		.2byte	0x10bd
 14246 02b2 0E010000 		.4byte	0x10e
 14247 02b6 08       		.byte	0x8
 14248 02b7 00       		.byte	0
 14249 02b8 06       		.uleb128 0x6
 14250 02b9 E90F0000 		.4byte	.LASF55
 14251 02bd 04       		.byte	0x4
 14252 02be BE10     		.2byte	0x10be
 14253 02c0 87020000 		.4byte	0x287
 14254 02c4 09       		.uleb128 0x9
 14255 02c5 08       		.byte	0x8
 14256 02c6 04       		.byte	0x4
 14257 02c7 C310     		.2byte	0x10c3
 14258 02c9 02030000 		.4byte	0x302
 14259 02cd 0A       		.uleb128 0xa
 14260 02ce 020F0000 		.4byte	.LASF56
 14261 02d2 04       		.byte	0x4
 14262 02d3 C510     		.2byte	0x10c5
 14263 02d5 C7000000 		.4byte	0xc7
 14264 02d9 00       		.byte	0
 14265 02da 0A       		.uleb128 0xa
 14266 02db 78100000 		.4byte	.LASF57
 14267 02df 04       		.byte	0x4
 14268 02e0 C610     		.2byte	0x10c6
 14269 02e2 C7000000 		.4byte	0xc7
 14270 02e6 02       		.byte	0x2
 14271 02e7 0A       		.uleb128 0xa
 14272 02e8 AE060000 		.4byte	.LASF58
 14273 02ec 04       		.byte	0x4
 14274 02ed C710     		.2byte	0x10c7
 14275 02ef C7000000 		.4byte	0xc7
 14276 02f3 04       		.byte	0x4
 14277 02f4 0A       		.uleb128 0xa
 14278 02f5 21170000 		.4byte	.LASF59
 14279 02f9 04       		.byte	0x4
 14280 02fa C810     		.2byte	0x10c8
 14281 02fc C7000000 		.4byte	0xc7
 14282 0300 06       		.byte	0x6
 14283 0301 00       		.byte	0
 14284 0302 06       		.uleb128 0x6
 14285 0303 D6030000 		.4byte	.LASF60
 14286 0307 04       		.byte	0x4
 14287 0308 C910     		.2byte	0x10c9
 14288 030a C4020000 		.4byte	0x2c4
 14289 030e 09       		.uleb128 0x9
 14290 030f 0C       		.byte	0xc
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 328


 14291 0310 04       		.byte	0x4
 14292 0311 CE10     		.2byte	0x10ce
 14293 0313 3F030000 		.4byte	0x33f
 14294 0317 0A       		.uleb128 0xa
 14295 0318 E3100000 		.4byte	.LASF61
 14296 031c 04       		.byte	0x4
 14297 031d D010     		.2byte	0x10d0
 14298 031f DD000000 		.4byte	0xdd
 14299 0323 00       		.byte	0
 14300 0324 0A       		.uleb128 0xa
 14301 0325 52060000 		.4byte	.LASF62
 14302 0329 04       		.byte	0x4
 14303 032a D110     		.2byte	0x10d1
 14304 032c DD000000 		.4byte	0xdd
 14305 0330 04       		.byte	0x4
 14306 0331 0A       		.uleb128 0xa
 14307 0332 24120000 		.4byte	.LASF63
 14308 0336 04       		.byte	0x4
 14309 0337 D210     		.2byte	0x10d2
 14310 0339 0E010000 		.4byte	0x10e
 14311 033d 08       		.byte	0x8
 14312 033e 00       		.byte	0
 14313 033f 06       		.uleb128 0x6
 14314 0340 48120000 		.4byte	.LASF64
 14315 0344 04       		.byte	0x4
 14316 0345 D310     		.2byte	0x10d3
 14317 0347 0E030000 		.4byte	0x30e
 14318 034b 09       		.uleb128 0x9
 14319 034c 10       		.byte	0x10
 14320 034d 04       		.byte	0x4
 14321 034e D710     		.2byte	0x10d7
 14322 0350 89030000 		.4byte	0x389
 14323 0354 0A       		.uleb128 0xa
 14324 0355 AA050000 		.4byte	.LASF65
 14325 0359 04       		.byte	0x4
 14326 035a D910     		.2byte	0x10d9
 14327 035c DD000000 		.4byte	0xdd
 14328 0360 00       		.byte	0
 14329 0361 0A       		.uleb128 0xa
 14330 0362 36030000 		.4byte	.LASF66
 14331 0366 04       		.byte	0x4
 14332 0367 DA10     		.2byte	0x10da
 14333 0369 DD000000 		.4byte	0xdd
 14334 036d 04       		.byte	0x4
 14335 036e 0A       		.uleb128 0xa
 14336 036f 4E000000 		.4byte	.LASF67
 14337 0373 04       		.byte	0x4
 14338 0374 DB10     		.2byte	0x10db
 14339 0376 DD000000 		.4byte	0xdd
 14340 037a 08       		.byte	0x8
 14341 037b 0A       		.uleb128 0xa
 14342 037c D3080000 		.4byte	.LASF68
 14343 0380 04       		.byte	0x4
 14344 0381 DC10     		.2byte	0x10dc
 14345 0383 DD000000 		.4byte	0xdd
 14346 0387 0C       		.byte	0xc
 14347 0388 00       		.byte	0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 329


 14348 0389 06       		.uleb128 0x6
 14349 038a E3110000 		.4byte	.LASF69
 14350 038e 04       		.byte	0x4
 14351 038f DD10     		.2byte	0x10dd
 14352 0391 4B030000 		.4byte	0x34b
 14353 0395 09       		.uleb128 0x9
 14354 0396 20       		.byte	0x20
 14355 0397 04       		.byte	0x4
 14356 0398 E010     		.2byte	0x10e0
 14357 039a 07040000 		.4byte	0x407
 14358 039e 0A       		.uleb128 0xa
 14359 039f EF010000 		.4byte	.LASF70
 14360 03a3 04       		.byte	0x4
 14361 03a4 E210     		.2byte	0x10e2
 14362 03a6 DD000000 		.4byte	0xdd
 14363 03aa 00       		.byte	0
 14364 03ab 0A       		.uleb128 0xa
 14365 03ac AB0B0000 		.4byte	.LASF71
 14366 03b0 04       		.byte	0x4
 14367 03b1 E310     		.2byte	0x10e3
 14368 03b3 DD000000 		.4byte	0xdd
 14369 03b7 04       		.byte	0x4
 14370 03b8 0A       		.uleb128 0xa
 14371 03b9 0E010000 		.4byte	.LASF72
 14372 03bd 04       		.byte	0x4
 14373 03be E410     		.2byte	0x10e4
 14374 03c0 DD000000 		.4byte	0xdd
 14375 03c4 08       		.byte	0x8
 14376 03c5 0A       		.uleb128 0xa
 14377 03c6 19130000 		.4byte	.LASF73
 14378 03ca 04       		.byte	0x4
 14379 03cb E510     		.2byte	0x10e5
 14380 03cd 0E010000 		.4byte	0x10e
 14381 03d1 0C       		.byte	0xc
 14382 03d2 0A       		.uleb128 0xa
 14383 03d3 D00A0000 		.4byte	.LASF74
 14384 03d7 04       		.byte	0x4
 14385 03d8 E610     		.2byte	0x10e6
 14386 03da DD000000 		.4byte	0xdd
 14387 03de 10       		.byte	0x10
 14388 03df 0A       		.uleb128 0xa
 14389 03e0 EB0D0000 		.4byte	.LASF75
 14390 03e4 04       		.byte	0x4
 14391 03e5 E710     		.2byte	0x10e7
 14392 03e7 DD000000 		.4byte	0xdd
 14393 03eb 14       		.byte	0x14
 14394 03ec 0A       		.uleb128 0xa
 14395 03ed BE0B0000 		.4byte	.LASF76
 14396 03f1 04       		.byte	0x4
 14397 03f2 E810     		.2byte	0x10e8
 14398 03f4 DD000000 		.4byte	0xdd
 14399 03f8 18       		.byte	0x18
 14400 03f9 0A       		.uleb128 0xa
 14401 03fa 6E090000 		.4byte	.LASF77
 14402 03fe 04       		.byte	0x4
 14403 03ff E910     		.2byte	0x10e9
 14404 0401 DD000000 		.4byte	0xdd
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 330


 14405 0405 1C       		.byte	0x1c
 14406 0406 00       		.byte	0
 14407 0407 06       		.uleb128 0x6
 14408 0408 CE010000 		.4byte	.LASF78
 14409 040c 04       		.byte	0x4
 14410 040d EA10     		.2byte	0x10ea
 14411 040f 95030000 		.4byte	0x395
 14412 0413 09       		.uleb128 0x9
 14413 0414 0C       		.byte	0xc
 14414 0415 04       		.byte	0x4
 14415 0416 ED10     		.2byte	0x10ed
 14416 0418 44040000 		.4byte	0x444
 14417 041c 0A       		.uleb128 0xa
 14418 041d 52070000 		.4byte	.LASF79
 14419 0421 04       		.byte	0x4
 14420 0422 EF10     		.2byte	0x10ef
 14421 0424 DD000000 		.4byte	0xdd
 14422 0428 00       		.byte	0
 14423 0429 0A       		.uleb128 0xa
 14424 042a C81A0000 		.4byte	.LASF80
 14425 042e 04       		.byte	0x4
 14426 042f F010     		.2byte	0x10f0
 14427 0431 DD000000 		.4byte	0xdd
 14428 0435 04       		.byte	0x4
 14429 0436 0A       		.uleb128 0xa
 14430 0437 86000000 		.4byte	.LASF81
 14431 043b 04       		.byte	0x4
 14432 043c F110     		.2byte	0x10f1
 14433 043e DD000000 		.4byte	0xdd
 14434 0442 08       		.byte	0x8
 14435 0443 00       		.byte	0
 14436 0444 06       		.uleb128 0x6
 14437 0445 611A0000 		.4byte	.LASF82
 14438 0449 04       		.byte	0x4
 14439 044a F210     		.2byte	0x10f2
 14440 044c 13040000 		.4byte	0x413
 14441 0450 09       		.uleb128 0x9
 14442 0451 20       		.byte	0x20
 14443 0452 04       		.byte	0x4
 14444 0453 0411     		.2byte	0x1104
 14445 0455 DC040000 		.4byte	0x4dc
 14446 0459 0A       		.uleb128 0xa
 14447 045a 980D0000 		.4byte	.LASF83
 14448 045e 04       		.byte	0x4
 14449 045f 0611     		.2byte	0x1106
 14450 0461 DD000000 		.4byte	0xdd
 14451 0465 00       		.byte	0
 14452 0466 0A       		.uleb128 0xa
 14453 0467 B2050000 		.4byte	.LASF84
 14454 046b 04       		.byte	0x4
 14455 046c 0711     		.2byte	0x1107
 14456 046e DD000000 		.4byte	0xdd
 14457 0472 04       		.byte	0x4
 14458 0473 0A       		.uleb128 0xa
 14459 0474 5C010000 		.4byte	.LASF85
 14460 0478 04       		.byte	0x4
 14461 0479 0811     		.2byte	0x1108
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 331


 14462 047b DD000000 		.4byte	0xdd
 14463 047f 08       		.byte	0x8
 14464 0480 0A       		.uleb128 0xa
 14465 0481 FF120000 		.4byte	.LASF86
 14466 0485 04       		.byte	0x4
 14467 0486 0911     		.2byte	0x1109
 14468 0488 DD000000 		.4byte	0xdd
 14469 048c 0C       		.byte	0xc
 14470 048d 0A       		.uleb128 0xa
 14471 048e EF120000 		.4byte	.LASF87
 14472 0492 04       		.byte	0x4
 14473 0493 0A11     		.2byte	0x110a
 14474 0495 DD000000 		.4byte	0xdd
 14475 0499 10       		.byte	0x10
 14476 049a 0A       		.uleb128 0xa
 14477 049b DB080000 		.4byte	.LASF88
 14478 049f 04       		.byte	0x4
 14479 04a0 0B11     		.2byte	0x110b
 14480 04a2 DD000000 		.4byte	0xdd
 14481 04a6 14       		.byte	0x14
 14482 04a7 0A       		.uleb128 0xa
 14483 04a8 95110000 		.4byte	.LASF89
 14484 04ac 04       		.byte	0x4
 14485 04ad 0C11     		.2byte	0x110c
 14486 04af 0E010000 		.4byte	0x10e
 14487 04b3 18       		.byte	0x18
 14488 04b4 0A       		.uleb128 0xa
 14489 04b5 DC180000 		.4byte	.LASF90
 14490 04b9 04       		.byte	0x4
 14491 04ba 0D11     		.2byte	0x110d
 14492 04bc 0E010000 		.4byte	0x10e
 14493 04c0 19       		.byte	0x19
 14494 04c1 0A       		.uleb128 0xa
 14495 04c2 0A080000 		.4byte	.LASF91
 14496 04c6 04       		.byte	0x4
 14497 04c7 0E11     		.2byte	0x110e
 14498 04c9 C7000000 		.4byte	0xc7
 14499 04cd 1A       		.byte	0x1a
 14500 04ce 0A       		.uleb128 0xa
 14501 04cf C1180000 		.4byte	.LASF92
 14502 04d3 04       		.byte	0x4
 14503 04d4 0F11     		.2byte	0x110f
 14504 04d6 C7000000 		.4byte	0xc7
 14505 04da 1C       		.byte	0x1c
 14506 04db 00       		.byte	0
 14507 04dc 06       		.uleb128 0x6
 14508 04dd 2A1B0000 		.4byte	.LASF93
 14509 04e1 04       		.byte	0x4
 14510 04e2 1011     		.2byte	0x1110
 14511 04e4 50040000 		.4byte	0x450
 14512 04e8 09       		.uleb128 0x9
 14513 04e9 1C       		.byte	0x1c
 14514 04ea 04       		.byte	0x4
 14515 04eb 1511     		.2byte	0x1115
 14516 04ed 5A050000 		.4byte	0x55a
 14517 04f1 0A       		.uleb128 0xa
 14518 04f2 6A010000 		.4byte	.LASF94
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 332


 14519 04f6 04       		.byte	0x4
 14520 04f7 1711     		.2byte	0x1117
 14521 04f9 DD000000 		.4byte	0xdd
 14522 04fd 00       		.byte	0
 14523 04fe 0A       		.uleb128 0xa
 14524 04ff FA150000 		.4byte	.LASF95
 14525 0503 04       		.byte	0x4
 14526 0504 1811     		.2byte	0x1118
 14527 0506 DD000000 		.4byte	0xdd
 14528 050a 04       		.byte	0x4
 14529 050b 0A       		.uleb128 0xa
 14530 050c 99040000 		.4byte	.LASF96
 14531 0510 04       		.byte	0x4
 14532 0511 1911     		.2byte	0x1119
 14533 0513 DD000000 		.4byte	0xdd
 14534 0517 08       		.byte	0x8
 14535 0518 0A       		.uleb128 0xa
 14536 0519 130A0000 		.4byte	.LASF97
 14537 051d 04       		.byte	0x4
 14538 051e 1A11     		.2byte	0x111a
 14539 0520 DD000000 		.4byte	0xdd
 14540 0524 0C       		.byte	0xc
 14541 0525 0A       		.uleb128 0xa
 14542 0526 16060000 		.4byte	.LASF98
 14543 052a 04       		.byte	0x4
 14544 052b 1B11     		.2byte	0x111b
 14545 052d DD000000 		.4byte	0xdd
 14546 0531 10       		.byte	0x10
 14547 0532 0A       		.uleb128 0xa
 14548 0533 52160000 		.4byte	.LASF99
 14549 0537 04       		.byte	0x4
 14550 0538 1C11     		.2byte	0x111c
 14551 053a DD000000 		.4byte	0xdd
 14552 053e 14       		.byte	0x14
 14553 053f 0A       		.uleb128 0xa
 14554 0540 121B0000 		.4byte	.LASF100
 14555 0544 04       		.byte	0x4
 14556 0545 1D11     		.2byte	0x111d
 14557 0547 0E010000 		.4byte	0x10e
 14558 054b 18       		.byte	0x18
 14559 054c 0A       		.uleb128 0xa
 14560 054d 65140000 		.4byte	.LASF101
 14561 0551 04       		.byte	0x4
 14562 0552 1E11     		.2byte	0x111e
 14563 0554 0E010000 		.4byte	0x10e
 14564 0558 19       		.byte	0x19
 14565 0559 00       		.byte	0
 14566 055a 06       		.uleb128 0x6
 14567 055b CC0D0000 		.4byte	.LASF102
 14568 055f 04       		.byte	0x4
 14569 0560 1F11     		.2byte	0x111f
 14570 0562 E8040000 		.4byte	0x4e8
 14571 0566 09       		.uleb128 0x9
 14572 0567 18       		.byte	0x18
 14573 0568 04       		.byte	0x4
 14574 0569 3411     		.2byte	0x1134
 14575 056b BE050000 		.4byte	0x5be
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 333


 14576 056f 0A       		.uleb128 0xa
 14577 0570 B5060000 		.4byte	.LASF103
 14578 0574 04       		.byte	0x4
 14579 0575 3611     		.2byte	0x1136
 14580 0577 DD000000 		.4byte	0xdd
 14581 057b 00       		.byte	0
 14582 057c 0A       		.uleb128 0xa
 14583 057d C5060000 		.4byte	.LASF104
 14584 0581 04       		.byte	0x4
 14585 0582 3711     		.2byte	0x1137
 14586 0584 DD000000 		.4byte	0xdd
 14587 0588 04       		.byte	0x4
 14588 0589 0A       		.uleb128 0xa
 14589 058a 30100000 		.4byte	.LASF105
 14590 058e 04       		.byte	0x4
 14591 058f 3811     		.2byte	0x1138
 14592 0591 DD000000 		.4byte	0xdd
 14593 0595 08       		.byte	0x8
 14594 0596 0A       		.uleb128 0xa
 14595 0597 3E100000 		.4byte	.LASF106
 14596 059b 04       		.byte	0x4
 14597 059c 3911     		.2byte	0x1139
 14598 059e DD000000 		.4byte	0xdd
 14599 05a2 0C       		.byte	0xc
 14600 05a3 0A       		.uleb128 0xa
 14601 05a4 8E050000 		.4byte	.LASF107
 14602 05a8 04       		.byte	0x4
 14603 05a9 3A11     		.2byte	0x113a
 14604 05ab DD000000 		.4byte	0xdd
 14605 05af 10       		.byte	0x10
 14606 05b0 0A       		.uleb128 0xa
 14607 05b1 9C050000 		.4byte	.LASF108
 14608 05b5 04       		.byte	0x4
 14609 05b6 3B11     		.2byte	0x113b
 14610 05b8 DD000000 		.4byte	0xdd
 14611 05bc 14       		.byte	0x14
 14612 05bd 00       		.byte	0
 14613 05be 06       		.uleb128 0x6
 14614 05bf F80D0000 		.4byte	.LASF109
 14615 05c3 04       		.byte	0x4
 14616 05c4 3C11     		.2byte	0x113c
 14617 05c6 66050000 		.4byte	0x566
 14618 05ca 09       		.uleb128 0x9
 14619 05cb 10       		.byte	0x10
 14620 05cc 04       		.byte	0x4
 14621 05cd 4111     		.2byte	0x1141
 14622 05cf 08060000 		.4byte	0x608
 14623 05d3 0A       		.uleb128 0xa
 14624 05d4 800A0000 		.4byte	.LASF110
 14625 05d8 04       		.byte	0x4
 14626 05d9 4311     		.2byte	0x1143
 14627 05db DD000000 		.4byte	0xdd
 14628 05df 00       		.byte	0
 14629 05e0 0A       		.uleb128 0xa
 14630 05e1 AC0A0000 		.4byte	.LASF111
 14631 05e5 04       		.byte	0x4
 14632 05e6 4411     		.2byte	0x1144
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 334


 14633 05e8 DD000000 		.4byte	0xdd
 14634 05ec 04       		.byte	0x4
 14635 05ed 0A       		.uleb128 0xa
 14636 05ee 3E080000 		.4byte	.LASF112
 14637 05f2 04       		.byte	0x4
 14638 05f3 4511     		.2byte	0x1145
 14639 05f5 DD000000 		.4byte	0xdd
 14640 05f9 08       		.byte	0x8
 14641 05fa 0A       		.uleb128 0xa
 14642 05fb 8C040000 		.4byte	.LASF113
 14643 05ff 04       		.byte	0x4
 14644 0600 4611     		.2byte	0x1146
 14645 0602 DD000000 		.4byte	0xdd
 14646 0606 0C       		.byte	0xc
 14647 0607 00       		.byte	0
 14648 0608 06       		.uleb128 0x6
 14649 0609 011A0000 		.4byte	.LASF114
 14650 060d 04       		.byte	0x4
 14651 060e 4711     		.2byte	0x1147
 14652 0610 CA050000 		.4byte	0x5ca
 14653 0614 09       		.uleb128 0x9
 14654 0615 34       		.byte	0x34
 14655 0616 04       		.byte	0x4
 14656 0617 4C11     		.2byte	0x114c
 14657 0619 6C060000 		.4byte	0x66c
 14658 061d 0A       		.uleb128 0xa
 14659 061e C3100000 		.4byte	.LASF115
 14660 0622 04       		.byte	0x4
 14661 0623 4E11     		.2byte	0x114e
 14662 0625 DD000000 		.4byte	0xdd
 14663 0629 00       		.byte	0
 14664 062a 0A       		.uleb128 0xa
 14665 062b 6C110000 		.4byte	.LASF116
 14666 062f 04       		.byte	0x4
 14667 0630 4F11     		.2byte	0x114f
 14668 0632 0E010000 		.4byte	0x10e
 14669 0636 04       		.byte	0x4
 14670 0637 0A       		.uleb128 0xa
 14671 0638 90030000 		.4byte	.LASF117
 14672 063c 04       		.byte	0x4
 14673 063d 5011     		.2byte	0x1150
 14674 063f 0E010000 		.4byte	0x10e
 14675 0643 05       		.byte	0x5
 14676 0644 0A       		.uleb128 0xa
 14677 0645 64180000 		.4byte	.LASF118
 14678 0649 04       		.byte	0x4
 14679 064a 5111     		.2byte	0x1151
 14680 064c BE050000 		.4byte	0x5be
 14681 0650 08       		.byte	0x8
 14682 0651 0A       		.uleb128 0xa
 14683 0652 1E0B0000 		.4byte	.LASF119
 14684 0656 04       		.byte	0x4
 14685 0657 5211     		.2byte	0x1152
 14686 0659 08060000 		.4byte	0x608
 14687 065d 20       		.byte	0x20
 14688 065e 0A       		.uleb128 0xa
 14689 065f CA100000 		.4byte	.LASF120
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 335


 14690 0663 04       		.byte	0x4
 14691 0664 5311     		.2byte	0x1153
 14692 0666 DD000000 		.4byte	0xdd
 14693 066a 30       		.byte	0x30
 14694 066b 00       		.byte	0
 14695 066c 06       		.uleb128 0x6
 14696 066d AF100000 		.4byte	.LASF121
 14697 0671 04       		.byte	0x4
 14698 0672 5411     		.2byte	0x1154
 14699 0674 14060000 		.4byte	0x614
 14700 0678 09       		.uleb128 0x9
 14701 0679 70       		.byte	0x70
 14702 067a 04       		.byte	0x4
 14703 067b 5911     		.2byte	0x1159
 14704 067d B6060000 		.4byte	0x6b6
 14705 0681 0A       		.uleb128 0xa
 14706 0682 A9080000 		.4byte	.LASF122
 14707 0686 04       		.byte	0x4
 14708 0687 5B11     		.2byte	0x115b
 14709 0689 89030000 		.4byte	0x389
 14710 068d 00       		.byte	0
 14711 068e 0A       		.uleb128 0xa
 14712 068f F7180000 		.4byte	.LASF123
 14713 0693 04       		.byte	0x4
 14714 0694 5C11     		.2byte	0x115c
 14715 0696 44040000 		.4byte	0x444
 14716 069a 10       		.byte	0x10
 14717 069b 0A       		.uleb128 0xa
 14718 069c 5F0A0000 		.4byte	.LASF124
 14719 06a0 04       		.byte	0x4
 14720 06a1 5D11     		.2byte	0x115d
 14721 06a3 6C060000 		.4byte	0x66c
 14722 06a7 1C       		.byte	0x1c
 14723 06a8 0A       		.uleb128 0xa
 14724 06a9 E51A0000 		.4byte	.LASF125
 14725 06ad 04       		.byte	0x4
 14726 06ae 5E11     		.2byte	0x115e
 14727 06b0 07040000 		.4byte	0x407
 14728 06b4 50       		.byte	0x50
 14729 06b5 00       		.byte	0
 14730 06b6 06       		.uleb128 0x6
 14731 06b7 B9030000 		.4byte	.LASF126
 14732 06bb 04       		.byte	0x4
 14733 06bc 5F11     		.2byte	0x115f
 14734 06be 78060000 		.4byte	0x678
 14735 06c2 09       		.uleb128 0x9
 14736 06c3 3C       		.byte	0x3c
 14737 06c4 04       		.byte	0x4
 14738 06c5 6411     		.2byte	0x1164
 14739 06c7 E6060000 		.4byte	0x6e6
 14740 06cb 0A       		.uleb128 0xa
 14741 06cc 08090000 		.4byte	.LASF127
 14742 06d0 04       		.byte	0x4
 14743 06d1 6611     		.2byte	0x1166
 14744 06d3 DC040000 		.4byte	0x4dc
 14745 06d7 00       		.byte	0
 14746 06d8 0A       		.uleb128 0xa
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 336


 14747 06d9 A3170000 		.4byte	.LASF128
 14748 06dd 04       		.byte	0x4
 14749 06de 6711     		.2byte	0x1167
 14750 06e0 5A050000 		.4byte	0x55a
 14751 06e4 20       		.byte	0x20
 14752 06e5 00       		.byte	0
 14753 06e6 06       		.uleb128 0x6
 14754 06e7 EA080000 		.4byte	.LASF129
 14755 06eb 04       		.byte	0x4
 14756 06ec 6811     		.2byte	0x1168
 14757 06ee C2060000 		.4byte	0x6c2
 14758 06f2 09       		.uleb128 0x9
 14759 06f3 40       		.byte	0x40
 14760 06f4 04       		.byte	0x4
 14761 06f5 6D11     		.2byte	0x116d
 14762 06f7 3D070000 		.4byte	0x73d
 14763 06fb 0A       		.uleb128 0xa
 14764 06fc DA1A0000 		.4byte	.LASF130
 14765 0700 04       		.byte	0x4
 14766 0701 6F11     		.2byte	0x116f
 14767 0703 0A020000 		.4byte	0x20a
 14768 0707 00       		.byte	0
 14769 0708 0A       		.uleb128 0xa
 14770 0709 E5170000 		.4byte	.LASF131
 14771 070d 04       		.byte	0x4
 14772 070e 7011     		.2byte	0x1170
 14773 0710 7B020000 		.4byte	0x27b
 14774 0714 0C       		.byte	0xc
 14775 0715 0A       		.uleb128 0xa
 14776 0716 B6110000 		.4byte	.LASF132
 14777 071a 04       		.byte	0x4
 14778 071b 7111     		.2byte	0x1171
 14779 071d 02030000 		.4byte	0x302
 14780 0721 20       		.byte	0x20
 14781 0722 0A       		.uleb128 0xa
 14782 0723 BC000000 		.4byte	.LASF133
 14783 0727 04       		.byte	0x4
 14784 0728 7211     		.2byte	0x1172
 14785 072a B8020000 		.4byte	0x2b8
 14786 072e 28       		.byte	0x28
 14787 072f 0A       		.uleb128 0xa
 14788 0730 8F0B0000 		.4byte	.LASF134
 14789 0734 04       		.byte	0x4
 14790 0735 7311     		.2byte	0x1173
 14791 0737 3F030000 		.4byte	0x33f
 14792 073b 34       		.byte	0x34
 14793 073c 00       		.byte	0
 14794 073d 06       		.uleb128 0x6
 14795 073e 2C1A0000 		.4byte	.LASF135
 14796 0742 04       		.byte	0x4
 14797 0743 7411     		.2byte	0x1174
 14798 0745 F2060000 		.4byte	0x6f2
 14799 0749 09       		.uleb128 0x9
 14800 074a 14       		.byte	0x14
 14801 074b 04       		.byte	0x4
 14802 074c 7911     		.2byte	0x1179
 14803 074e 94070000 		.4byte	0x794
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 337


 14804 0752 0A       		.uleb128 0xa
 14805 0753 86120000 		.4byte	.LASF136
 14806 0757 04       		.byte	0x4
 14807 0758 7B11     		.2byte	0x117b
 14808 075a DD000000 		.4byte	0xdd
 14809 075e 00       		.byte	0
 14810 075f 0A       		.uleb128 0xa
 14811 0760 740A0000 		.4byte	.LASF137
 14812 0764 04       		.byte	0x4
 14813 0765 7C11     		.2byte	0x117c
 14814 0767 DD000000 		.4byte	0xdd
 14815 076b 04       		.byte	0x4
 14816 076c 0A       		.uleb128 0xa
 14817 076d 76030000 		.4byte	.LASF138
 14818 0771 04       		.byte	0x4
 14819 0772 7D11     		.2byte	0x117d
 14820 0774 DD000000 		.4byte	0xdd
 14821 0778 08       		.byte	0x8
 14822 0779 0A       		.uleb128 0xa
 14823 077a 14040000 		.4byte	.LASF139
 14824 077e 04       		.byte	0x4
 14825 077f 7E11     		.2byte	0x117e
 14826 0781 DD000000 		.4byte	0xdd
 14827 0785 0C       		.byte	0xc
 14828 0786 0A       		.uleb128 0xa
 14829 0787 0C0D0000 		.4byte	.LASF140
 14830 078b 04       		.byte	0x4
 14831 078c 7F11     		.2byte	0x117f
 14832 078e DD000000 		.4byte	0xdd
 14833 0792 10       		.byte	0x10
 14834 0793 00       		.byte	0
 14835 0794 06       		.uleb128 0x6
 14836 0795 6C160000 		.4byte	.LASF141
 14837 0799 04       		.byte	0x4
 14838 079a 8011     		.2byte	0x1180
 14839 079c 49070000 		.4byte	0x749
 14840 07a0 09       		.uleb128 0x9
 14841 07a1 14       		.byte	0x14
 14842 07a2 04       		.byte	0x4
 14843 07a3 8511     		.2byte	0x1185
 14844 07a5 EB070000 		.4byte	0x7eb
 14845 07a9 0A       		.uleb128 0xa
 14846 07aa 35050000 		.4byte	.LASF142
 14847 07ae 04       		.byte	0x4
 14848 07af 8711     		.2byte	0x1187
 14849 07b1 0E010000 		.4byte	0x10e
 14850 07b5 00       		.byte	0
 14851 07b6 0A       		.uleb128 0xa
 14852 07b7 58080000 		.4byte	.LASF143
 14853 07bb 04       		.byte	0x4
 14854 07bc 8811     		.2byte	0x1188
 14855 07be DD000000 		.4byte	0xdd
 14856 07c2 04       		.byte	0x4
 14857 07c3 0A       		.uleb128 0xa
 14858 07c4 52170000 		.4byte	.LASF144
 14859 07c8 04       		.byte	0x4
 14860 07c9 8911     		.2byte	0x1189
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 338


 14861 07cb DD000000 		.4byte	0xdd
 14862 07cf 08       		.byte	0x8
 14863 07d0 0A       		.uleb128 0xa
 14864 07d1 D90F0000 		.4byte	.LASF145
 14865 07d5 04       		.byte	0x4
 14866 07d6 8A11     		.2byte	0x118a
 14867 07d8 DD000000 		.4byte	0xdd
 14868 07dc 0C       		.byte	0xc
 14869 07dd 0A       		.uleb128 0xa
 14870 07de 63090000 		.4byte	.LASF146
 14871 07e2 04       		.byte	0x4
 14872 07e3 8B11     		.2byte	0x118b
 14873 07e5 DD000000 		.4byte	0xdd
 14874 07e9 10       		.byte	0x10
 14875 07ea 00       		.byte	0
 14876 07eb 06       		.uleb128 0x6
 14877 07ec 381A0000 		.4byte	.LASF147
 14878 07f0 04       		.byte	0x4
 14879 07f1 8C11     		.2byte	0x118c
 14880 07f3 A0070000 		.4byte	0x7a0
 14881 07f7 09       		.uleb128 0x9
 14882 07f8 0C       		.byte	0xc
 14883 07f9 04       		.byte	0x4
 14884 07fa 9111     		.2byte	0x1191
 14885 07fc 4F080000 		.4byte	0x84f
 14886 0800 0A       		.uleb128 0xa
 14887 0801 AF0C0000 		.4byte	.LASF148
 14888 0805 04       		.byte	0x4
 14889 0806 9311     		.2byte	0x1193
 14890 0808 DD000000 		.4byte	0xdd
 14891 080c 00       		.byte	0
 14892 080d 0A       		.uleb128 0xa
 14893 080e 24130000 		.4byte	.LASF149
 14894 0812 04       		.byte	0x4
 14895 0813 9411     		.2byte	0x1194
 14896 0815 0E010000 		.4byte	0x10e
 14897 0819 04       		.byte	0x4
 14898 081a 0A       		.uleb128 0xa
 14899 081b E0160000 		.4byte	.LASF150
 14900 081f 04       		.byte	0x4
 14901 0820 9511     		.2byte	0x1195
 14902 0822 0E010000 		.4byte	0x10e
 14903 0826 05       		.byte	0x5
 14904 0827 0A       		.uleb128 0xa
 14905 0828 31020000 		.4byte	.LASF151
 14906 082c 04       		.byte	0x4
 14907 082d 9611     		.2byte	0x1196
 14908 082f 0E010000 		.4byte	0x10e
 14909 0833 06       		.byte	0x6
 14910 0834 0A       		.uleb128 0xa
 14911 0835 C2190000 		.4byte	.LASF152
 14912 0839 04       		.byte	0x4
 14913 083a 9711     		.2byte	0x1197
 14914 083c 0E010000 		.4byte	0x10e
 14915 0840 07       		.byte	0x7
 14916 0841 0A       		.uleb128 0xa
 14917 0842 2E130000 		.4byte	.LASF153
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 339


 14918 0846 04       		.byte	0x4
 14919 0847 9811     		.2byte	0x1198
 14920 0849 DD000000 		.4byte	0xdd
 14921 084d 08       		.byte	0x8
 14922 084e 00       		.byte	0
 14923 084f 06       		.uleb128 0x6
 14924 0850 530A0000 		.4byte	.LASF154
 14925 0854 04       		.byte	0x4
 14926 0855 9911     		.2byte	0x1199
 14927 0857 F7070000 		.4byte	0x7f7
 14928 085b 09       		.uleb128 0x9
 14929 085c 14       		.byte	0x14
 14930 085d 04       		.byte	0x4
 14931 085e 9E11     		.2byte	0x119e
 14932 0860 A6080000 		.4byte	0x8a6
 14933 0864 0A       		.uleb128 0xa
 14934 0865 AD190000 		.4byte	.LASF155
 14935 0869 04       		.byte	0x4
 14936 086a A011     		.2byte	0x11a0
 14937 086c DD000000 		.4byte	0xdd
 14938 0870 00       		.byte	0
 14939 0871 0A       		.uleb128 0xa
 14940 0872 1E020000 		.4byte	.LASF156
 14941 0876 04       		.byte	0x4
 14942 0877 A111     		.2byte	0x11a1
 14943 0879 DD000000 		.4byte	0xdd
 14944 087d 04       		.byte	0x4
 14945 087e 0A       		.uleb128 0xa
 14946 087f 61080000 		.4byte	.LASF157
 14947 0883 04       		.byte	0x4
 14948 0884 A211     		.2byte	0x11a2
 14949 0886 DD000000 		.4byte	0xdd
 14950 088a 08       		.byte	0x8
 14951 088b 0A       		.uleb128 0xa
 14952 088c D2050000 		.4byte	.LASF158
 14953 0890 04       		.byte	0x4
 14954 0891 A311     		.2byte	0x11a3
 14955 0893 0E010000 		.4byte	0x10e
 14956 0897 0C       		.byte	0xc
 14957 0898 0A       		.uleb128 0xa
 14958 0899 DE130000 		.4byte	.LASF159
 14959 089d 04       		.byte	0x4
 14960 089e A411     		.2byte	0x11a4
 14961 08a0 A6080000 		.4byte	0x8a6
 14962 08a4 10       		.byte	0x10
 14963 08a5 00       		.byte	0
 14964 08a6 0B       		.uleb128 0xb
 14965 08a7 04       		.byte	0x4
 14966 08a8 AC080000 		.4byte	0x8ac
 14967 08ac 0C       		.uleb128 0xc
 14968 08ad DD000000 		.4byte	0xdd
 14969 08b1 06       		.uleb128 0x6
 14970 08b2 3B120000 		.4byte	.LASF160
 14971 08b6 04       		.byte	0x4
 14972 08b7 A511     		.2byte	0x11a5
 14973 08b9 5B080000 		.4byte	0x85b
 14974 08bd 09       		.uleb128 0x9
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 340


 14975 08be 0C       		.byte	0xc
 14976 08bf 04       		.byte	0x4
 14977 08c0 A711     		.2byte	0x11a7
 14978 08c2 EE080000 		.4byte	0x8ee
 14979 08c6 0A       		.uleb128 0xa
 14980 08c7 220C0000 		.4byte	.LASF161
 14981 08cb 04       		.byte	0x4
 14982 08cc A911     		.2byte	0x11a9
 14983 08ce DD000000 		.4byte	0xdd
 14984 08d2 00       		.byte	0
 14985 08d3 0A       		.uleb128 0xa
 14986 08d4 B3190000 		.4byte	.LASF162
 14987 08d8 04       		.byte	0x4
 14988 08d9 AA11     		.2byte	0x11aa
 14989 08db DD000000 		.4byte	0xdd
 14990 08df 04       		.byte	0x4
 14991 08e0 0A       		.uleb128 0xa
 14992 08e1 320F0000 		.4byte	.LASF163
 14993 08e5 04       		.byte	0x4
 14994 08e6 AB11     		.2byte	0x11ab
 14995 08e8 0E010000 		.4byte	0x10e
 14996 08ec 08       		.byte	0x8
 14997 08ed 00       		.byte	0
 14998 08ee 06       		.uleb128 0x6
 14999 08ef E5040000 		.4byte	.LASF164
 15000 08f3 04       		.byte	0x4
 15001 08f4 AC11     		.2byte	0x11ac
 15002 08f6 BD080000 		.4byte	0x8bd
 15003 08fa 09       		.uleb128 0x9
 15004 08fb 48       		.byte	0x48
 15005 08fc 04       		.byte	0x4
 15006 08fd B111     		.2byte	0x11b1
 15007 08ff 45090000 		.4byte	0x945
 15008 0903 0A       		.uleb128 0xa
 15009 0904 17110000 		.4byte	.LASF165
 15010 0908 04       		.byte	0x4
 15011 0909 B311     		.2byte	0x11b3
 15012 090b DD000000 		.4byte	0xdd
 15013 090f 00       		.byte	0
 15014 0910 0A       		.uleb128 0xa
 15015 0911 93130000 		.4byte	.LASF166
 15016 0915 04       		.byte	0x4
 15017 0916 B411     		.2byte	0x11b4
 15018 0918 45090000 		.4byte	0x945
 15019 091c 04       		.byte	0x4
 15020 091d 0A       		.uleb128 0xa
 15021 091e 130D0000 		.4byte	.LASF167
 15022 0922 04       		.byte	0x4
 15023 0923 B511     		.2byte	0x11b5
 15024 0925 55090000 		.4byte	0x955
 15025 0929 24       		.byte	0x24
 15026 092a 0A       		.uleb128 0xa
 15027 092b 4B110000 		.4byte	.LASF168
 15028 092f 04       		.byte	0x4
 15029 0930 B611     		.2byte	0x11b6
 15030 0932 55090000 		.4byte	0x955
 15031 0936 34       		.byte	0x34
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 341


 15032 0937 0A       		.uleb128 0xa
 15033 0938 50030000 		.4byte	.LASF169
 15034 093c 04       		.byte	0x4
 15035 093d B711     		.2byte	0x11b7
 15036 093f 0E010000 		.4byte	0x10e
 15037 0943 44       		.byte	0x44
 15038 0944 00       		.byte	0
 15039 0945 0D       		.uleb128 0xd
 15040 0946 DD000000 		.4byte	0xdd
 15041 094a 55090000 		.4byte	0x955
 15042 094e 0E       		.uleb128 0xe
 15043 094f 9E000000 		.4byte	0x9e
 15044 0953 07       		.byte	0x7
 15045 0954 00       		.byte	0
 15046 0955 0D       		.uleb128 0xd
 15047 0956 DD000000 		.4byte	0xdd
 15048 095a 65090000 		.4byte	0x965
 15049 095e 0E       		.uleb128 0xe
 15050 095f 9E000000 		.4byte	0x9e
 15051 0963 03       		.byte	0x3
 15052 0964 00       		.byte	0
 15053 0965 06       		.uleb128 0x6
 15054 0966 E60A0000 		.4byte	.LASF170
 15055 096a 04       		.byte	0x4
 15056 096b B811     		.2byte	0x11b8
 15057 096d FA080000 		.4byte	0x8fa
 15058 0971 09       		.uleb128 0x9
 15059 0972 14       		.byte	0x14
 15060 0973 04       		.byte	0x4
 15061 0974 BD11     		.2byte	0x11bd
 15062 0976 E3090000 		.4byte	0x9e3
 15063 097a 0A       		.uleb128 0xa
 15064 097b D10C0000 		.4byte	.LASF171
 15065 097f 04       		.byte	0x4
 15066 0980 BF11     		.2byte	0x11bf
 15067 0982 DD000000 		.4byte	0xdd
 15068 0986 00       		.byte	0
 15069 0987 0A       		.uleb128 0xa
 15070 0988 DC0A0000 		.4byte	.LASF172
 15071 098c 04       		.byte	0x4
 15072 098d C011     		.2byte	0x11c0
 15073 098f DD000000 		.4byte	0xdd
 15074 0993 04       		.byte	0x4
 15075 0994 0A       		.uleb128 0xa
 15076 0995 57030000 		.4byte	.LASF173
 15077 0999 04       		.byte	0x4
 15078 099a C111     		.2byte	0x11c1
 15079 099c DD000000 		.4byte	0xdd
 15080 09a0 08       		.byte	0x8
 15081 09a1 0A       		.uleb128 0xa
 15082 09a2 DD020000 		.4byte	.LASF174
 15083 09a6 04       		.byte	0x4
 15084 09a7 C211     		.2byte	0x11c2
 15085 09a9 DD000000 		.4byte	0xdd
 15086 09ad 0C       		.byte	0xc
 15087 09ae 0A       		.uleb128 0xa
 15088 09af 68050000 		.4byte	.LASF175
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 342


 15089 09b3 04       		.byte	0x4
 15090 09b4 C311     		.2byte	0x11c3
 15091 09b6 0E010000 		.4byte	0x10e
 15092 09ba 10       		.byte	0x10
 15093 09bb 0A       		.uleb128 0xa
 15094 09bc 05050000 		.4byte	.LASF176
 15095 09c0 04       		.byte	0x4
 15096 09c1 C411     		.2byte	0x11c4
 15097 09c3 0E010000 		.4byte	0x10e
 15098 09c7 11       		.byte	0x11
 15099 09c8 0A       		.uleb128 0xa
 15100 09c9 5C180000 		.4byte	.LASF177
 15101 09cd 04       		.byte	0x4
 15102 09ce C511     		.2byte	0x11c5
 15103 09d0 0E010000 		.4byte	0x10e
 15104 09d4 12       		.byte	0x12
 15105 09d5 0A       		.uleb128 0xa
 15106 09d6 57100000 		.4byte	.LASF178
 15107 09da 04       		.byte	0x4
 15108 09db C611     		.2byte	0x11c6
 15109 09dd 0E010000 		.4byte	0x10e
 15110 09e1 13       		.byte	0x13
 15111 09e2 00       		.byte	0
 15112 09e3 06       		.uleb128 0x6
 15113 09e4 80040000 		.4byte	.LASF179
 15114 09e8 04       		.byte	0x4
 15115 09e9 C711     		.2byte	0x11c7
 15116 09eb 71090000 		.4byte	0x971
 15117 09ef 09       		.uleb128 0x9
 15118 09f0 48       		.byte	0x48
 15119 09f1 04       		.byte	0x4
 15120 09f2 CD11     		.2byte	0x11cd
 15121 09f4 6E0A0000 		.4byte	0xa6e
 15122 09f8 0A       		.uleb128 0xa
 15123 09f9 100E0000 		.4byte	.LASF180
 15124 09fd 04       		.byte	0x4
 15125 09fe CF11     		.2byte	0x11cf
 15126 0a00 B5000000 		.4byte	0xb5
 15127 0a04 00       		.byte	0
 15128 0a05 0A       		.uleb128 0xa
 15129 0a06 F30A0000 		.4byte	.LASF181
 15130 0a0a 04       		.byte	0x4
 15131 0a0b D011     		.2byte	0x11d0
 15132 0a0d B5000000 		.4byte	0xb5
 15133 0a11 04       		.byte	0x4
 15134 0a12 0A       		.uleb128 0xa
 15135 0a13 770D0000 		.4byte	.LASF182
 15136 0a17 04       		.byte	0x4
 15137 0a18 D111     		.2byte	0x11d1
 15138 0a1a B5000000 		.4byte	0xb5
 15139 0a1e 08       		.byte	0x8
 15140 0a1f 0A       		.uleb128 0xa
 15141 0a20 8E100000 		.4byte	.LASF183
 15142 0a24 04       		.byte	0x4
 15143 0a25 D211     		.2byte	0x11d2
 15144 0a27 B5000000 		.4byte	0xb5
 15145 0a2b 0C       		.byte	0xc
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 343


 15146 0a2c 0A       		.uleb128 0xa
 15147 0a2d E51A0000 		.4byte	.LASF125
 15148 0a31 04       		.byte	0x4
 15149 0a32 D411     		.2byte	0x11d4
 15150 0a34 07040000 		.4byte	0x407
 15151 0a38 10       		.byte	0x10
 15152 0a39 0A       		.uleb128 0xa
 15153 0a3a 74040000 		.4byte	.LASF44
 15154 0a3e 04       		.byte	0x4
 15155 0a3f D511     		.2byte	0x11d5
 15156 0a41 DD000000 		.4byte	0xdd
 15157 0a45 30       		.byte	0x30
 15158 0a46 0A       		.uleb128 0xa
 15159 0a47 DC120000 		.4byte	.LASF45
 15160 0a4b 04       		.byte	0x4
 15161 0a4c D611     		.2byte	0x11d6
 15162 0a4e DD000000 		.4byte	0xdd
 15163 0a52 34       		.byte	0x34
 15164 0a53 0A       		.uleb128 0xa
 15165 0a54 BC000000 		.4byte	.LASF133
 15166 0a58 04       		.byte	0x4
 15167 0a59 D711     		.2byte	0x11d7
 15168 0a5b B8020000 		.4byte	0x2b8
 15169 0a5f 38       		.byte	0x38
 15170 0a60 0A       		.uleb128 0xa
 15171 0a61 9D110000 		.4byte	.LASF184
 15172 0a65 04       		.byte	0x4
 15173 0a66 D811     		.2byte	0x11d8
 15174 0a68 DD000000 		.4byte	0xdd
 15175 0a6c 44       		.byte	0x44
 15176 0a6d 00       		.byte	0
 15177 0a6e 06       		.uleb128 0x6
 15178 0a6f 4E190000 		.4byte	.LASF185
 15179 0a73 04       		.byte	0x4
 15180 0a74 D911     		.2byte	0x11d9
 15181 0a76 EF090000 		.4byte	0x9ef
 15182 0a7a 09       		.uleb128 0x9
 15183 0a7b 38       		.byte	0x38
 15184 0a7c 04       		.byte	0x4
 15185 0a7d DE11     		.2byte	0x11de
 15186 0a7f 200B0000 		.4byte	0xb20
 15187 0a83 0A       		.uleb128 0xa
 15188 0a84 100E0000 		.4byte	.LASF180
 15189 0a88 04       		.byte	0x4
 15190 0a89 E011     		.2byte	0x11e0
 15191 0a8b B5000000 		.4byte	0xb5
 15192 0a8f 00       		.byte	0
 15193 0a90 0A       		.uleb128 0xa
 15194 0a91 F30A0000 		.4byte	.LASF181
 15195 0a95 04       		.byte	0x4
 15196 0a96 E111     		.2byte	0x11e1
 15197 0a98 B5000000 		.4byte	0xb5
 15198 0a9c 04       		.byte	0x4
 15199 0a9d 0A       		.uleb128 0xa
 15200 0a9e 770D0000 		.4byte	.LASF182
 15201 0aa2 04       		.byte	0x4
 15202 0aa3 E211     		.2byte	0x11e2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 344


 15203 0aa5 B5000000 		.4byte	0xb5
 15204 0aa9 08       		.byte	0x8
 15205 0aaa 0A       		.uleb128 0xa
 15206 0aab 8E100000 		.4byte	.LASF183
 15207 0aaf 04       		.byte	0x4
 15208 0ab0 E311     		.2byte	0x11e3
 15209 0ab2 B5000000 		.4byte	0xb5
 15210 0ab6 0C       		.byte	0xc
 15211 0ab7 0A       		.uleb128 0xa
 15212 0ab8 6A010000 		.4byte	.LASF94
 15213 0abc 04       		.byte	0x4
 15214 0abd E511     		.2byte	0x11e5
 15215 0abf DD000000 		.4byte	0xdd
 15216 0ac3 10       		.byte	0x10
 15217 0ac4 0A       		.uleb128 0xa
 15218 0ac5 2C030000 		.4byte	.LASF186
 15219 0ac9 04       		.byte	0x4
 15220 0aca E611     		.2byte	0x11e6
 15221 0acc 0E010000 		.4byte	0x10e
 15222 0ad0 14       		.byte	0x14
 15223 0ad1 0A       		.uleb128 0xa
 15224 0ad2 130A0000 		.4byte	.LASF97
 15225 0ad6 04       		.byte	0x4
 15226 0ad7 E711     		.2byte	0x11e7
 15227 0ad9 DD000000 		.4byte	0xdd
 15228 0add 18       		.byte	0x18
 15229 0ade 0A       		.uleb128 0xa
 15230 0adf 16060000 		.4byte	.LASF98
 15231 0ae3 04       		.byte	0x4
 15232 0ae4 E811     		.2byte	0x11e8
 15233 0ae6 DD000000 		.4byte	0xdd
 15234 0aea 1C       		.byte	0x1c
 15235 0aeb 0A       		.uleb128 0xa
 15236 0aec 74040000 		.4byte	.LASF44
 15237 0af0 04       		.byte	0x4
 15238 0af1 E911     		.2byte	0x11e9
 15239 0af3 DD000000 		.4byte	0xdd
 15240 0af7 20       		.byte	0x20
 15241 0af8 0A       		.uleb128 0xa
 15242 0af9 DC120000 		.4byte	.LASF45
 15243 0afd 04       		.byte	0x4
 15244 0afe EA11     		.2byte	0x11ea
 15245 0b00 DD000000 		.4byte	0xdd
 15246 0b04 24       		.byte	0x24
 15247 0b05 0A       		.uleb128 0xa
 15248 0b06 BC000000 		.4byte	.LASF133
 15249 0b0a 04       		.byte	0x4
 15250 0b0b EB11     		.2byte	0x11eb
 15251 0b0d B8020000 		.4byte	0x2b8
 15252 0b11 28       		.byte	0x28
 15253 0b12 0A       		.uleb128 0xa
 15254 0b13 9D110000 		.4byte	.LASF184
 15255 0b17 04       		.byte	0x4
 15256 0b18 EC11     		.2byte	0x11ec
 15257 0b1a DD000000 		.4byte	0xdd
 15258 0b1e 34       		.byte	0x34
 15259 0b1f 00       		.byte	0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 345


 15260 0b20 06       		.uleb128 0x6
 15261 0b21 81030000 		.4byte	.LASF187
 15262 0b25 04       		.byte	0x4
 15263 0b26 ED11     		.2byte	0x11ed
 15264 0b28 7A0A0000 		.4byte	0xa7a
 15265 0b2c 09       		.uleb128 0x9
 15266 0b2d 20       		.byte	0x20
 15267 0b2e 04       		.byte	0x4
 15268 0b2f F211     		.2byte	0x11f2
 15269 0b31 9E0B0000 		.4byte	0xb9e
 15270 0b35 0A       		.uleb128 0xa
 15271 0b36 F30A0000 		.4byte	.LASF181
 15272 0b3a 04       		.byte	0x4
 15273 0b3b F411     		.2byte	0x11f4
 15274 0b3d B5000000 		.4byte	0xb5
 15275 0b41 00       		.byte	0
 15276 0b42 0A       		.uleb128 0xa
 15277 0b43 770D0000 		.4byte	.LASF182
 15278 0b47 04       		.byte	0x4
 15279 0b48 F511     		.2byte	0x11f5
 15280 0b4a B5000000 		.4byte	0xb5
 15281 0b4e 04       		.byte	0x4
 15282 0b4f 0A       		.uleb128 0xa
 15283 0b50 8E100000 		.4byte	.LASF183
 15284 0b54 04       		.byte	0x4
 15285 0b55 F611     		.2byte	0x11f6
 15286 0b57 B5000000 		.4byte	0xb5
 15287 0b5b 08       		.byte	0x8
 15288 0b5c 0A       		.uleb128 0xa
 15289 0b5d F2020000 		.4byte	.LASF188
 15290 0b61 04       		.byte	0x4
 15291 0b62 F811     		.2byte	0x11f8
 15292 0b64 DD000000 		.4byte	0xdd
 15293 0b68 0C       		.byte	0xc
 15294 0b69 0A       		.uleb128 0xa
 15295 0b6a 52070000 		.4byte	.LASF79
 15296 0b6e 04       		.byte	0x4
 15297 0b6f F911     		.2byte	0x11f9
 15298 0b71 DD000000 		.4byte	0xdd
 15299 0b75 10       		.byte	0x10
 15300 0b76 0A       		.uleb128 0xa
 15301 0b77 C81A0000 		.4byte	.LASF80
 15302 0b7b 04       		.byte	0x4
 15303 0b7c FA11     		.2byte	0x11fa
 15304 0b7e DD000000 		.4byte	0xdd
 15305 0b82 14       		.byte	0x14
 15306 0b83 0A       		.uleb128 0xa
 15307 0b84 74040000 		.4byte	.LASF44
 15308 0b88 04       		.byte	0x4
 15309 0b89 FC11     		.2byte	0x11fc
 15310 0b8b DD000000 		.4byte	0xdd
 15311 0b8f 18       		.byte	0x18
 15312 0b90 0A       		.uleb128 0xa
 15313 0b91 DC120000 		.4byte	.LASF45
 15314 0b95 04       		.byte	0x4
 15315 0b96 FD11     		.2byte	0x11fd
 15316 0b98 DD000000 		.4byte	0xdd
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 346


 15317 0b9c 1C       		.byte	0x1c
 15318 0b9d 00       		.byte	0
 15319 0b9e 06       		.uleb128 0x6
 15320 0b9f C8030000 		.4byte	.LASF189
 15321 0ba3 04       		.byte	0x4
 15322 0ba4 FE11     		.2byte	0x11fe
 15323 0ba6 2C0B0000 		.4byte	0xb2c
 15324 0baa 09       		.uleb128 0x9
 15325 0bab 20       		.byte	0x20
 15326 0bac 04       		.byte	0x4
 15327 0bad 0312     		.2byte	0x1203
 15328 0baf 1C0C0000 		.4byte	0xc1c
 15329 0bb3 0A       		.uleb128 0xa
 15330 0bb4 980D0000 		.4byte	.LASF83
 15331 0bb8 04       		.byte	0x4
 15332 0bb9 0512     		.2byte	0x1205
 15333 0bbb DD000000 		.4byte	0xdd
 15334 0bbf 00       		.byte	0
 15335 0bc0 0A       		.uleb128 0xa
 15336 0bc1 770D0000 		.4byte	.LASF182
 15337 0bc5 04       		.byte	0x4
 15338 0bc6 0612     		.2byte	0x1206
 15339 0bc8 B5000000 		.4byte	0xb5
 15340 0bcc 04       		.byte	0x4
 15341 0bcd 0A       		.uleb128 0xa
 15342 0bce 8E100000 		.4byte	.LASF183
 15343 0bd2 04       		.byte	0x4
 15344 0bd3 0712     		.2byte	0x1207
 15345 0bd5 B5000000 		.4byte	0xb5
 15346 0bd9 08       		.byte	0x8
 15347 0bda 0A       		.uleb128 0xa
 15348 0bdb 5C0C0000 		.4byte	.LASF190
 15349 0bdf 04       		.byte	0x4
 15350 0be0 0812     		.2byte	0x1208
 15351 0be2 B5000000 		.4byte	0xb5
 15352 0be6 0C       		.byte	0xc
 15353 0be7 0A       		.uleb128 0xa
 15354 0be8 74040000 		.4byte	.LASF44
 15355 0bec 04       		.byte	0x4
 15356 0bed 0912     		.2byte	0x1209
 15357 0bef DD000000 		.4byte	0xdd
 15358 0bf3 10       		.byte	0x10
 15359 0bf4 0A       		.uleb128 0xa
 15360 0bf5 DC120000 		.4byte	.LASF45
 15361 0bf9 04       		.byte	0x4
 15362 0bfa 0A12     		.2byte	0x120a
 15363 0bfc DD000000 		.4byte	0xdd
 15364 0c00 14       		.byte	0x14
 15365 0c01 0A       		.uleb128 0xa
 15366 0c02 76110000 		.4byte	.LASF191
 15367 0c06 04       		.byte	0x4
 15368 0c07 0B12     		.2byte	0x120b
 15369 0c09 D2000000 		.4byte	0xd2
 15370 0c0d 18       		.byte	0x18
 15371 0c0e 0A       		.uleb128 0xa
 15372 0c0f E5190000 		.4byte	.LASF192
 15373 0c13 04       		.byte	0x4
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 347


 15374 0c14 0C12     		.2byte	0x120c
 15375 0c16 D2000000 		.4byte	0xd2
 15376 0c1a 1C       		.byte	0x1c
 15377 0c1b 00       		.byte	0
 15378 0c1c 06       		.uleb128 0x6
 15379 0c1d B6040000 		.4byte	.LASF193
 15380 0c21 04       		.byte	0x4
 15381 0c22 0D12     		.2byte	0x120d
 15382 0c24 AA0B0000 		.4byte	0xbaa
 15383 0c28 09       		.uleb128 0x9
 15384 0c29 20       		.byte	0x20
 15385 0c2a 04       		.byte	0x4
 15386 0c2b 1912     		.2byte	0x1219
 15387 0c2d 9A0C0000 		.4byte	0xc9a
 15388 0c31 0A       		.uleb128 0xa
 15389 0c32 160C0000 		.4byte	.LASF194
 15390 0c36 04       		.byte	0x4
 15391 0c37 1C12     		.2byte	0x121c
 15392 0c39 B5000000 		.4byte	0xb5
 15393 0c3d 00       		.byte	0
 15394 0c3e 0A       		.uleb128 0xa
 15395 0c3f 2F120000 		.4byte	.LASF195
 15396 0c43 04       		.byte	0x4
 15397 0c44 1D12     		.2byte	0x121d
 15398 0c46 B5000000 		.4byte	0xb5
 15399 0c4a 04       		.byte	0x4
 15400 0c4b 0A       		.uleb128 0xa
 15401 0c4c CB000000 		.4byte	.LASF196
 15402 0c50 04       		.byte	0x4
 15403 0c51 1E12     		.2byte	0x121e
 15404 0c53 B5000000 		.4byte	0xb5
 15405 0c57 08       		.byte	0x8
 15406 0c58 0A       		.uleb128 0xa
 15407 0c59 931A0000 		.4byte	.LASF197
 15408 0c5d 04       		.byte	0x4
 15409 0c5e 1F12     		.2byte	0x121f
 15410 0c60 B5000000 		.4byte	0xb5
 15411 0c64 0C       		.byte	0xc
 15412 0c65 0A       		.uleb128 0xa
 15413 0c66 AA110000 		.4byte	.LASF198
 15414 0c6a 04       		.byte	0x4
 15415 0c6b 2112     		.2byte	0x1221
 15416 0c6d B5000000 		.4byte	0xb5
 15417 0c71 10       		.byte	0x10
 15418 0c72 0A       		.uleb128 0xa
 15419 0c73 7A160000 		.4byte	.LASF199
 15420 0c77 04       		.byte	0x4
 15421 0c78 2212     		.2byte	0x1222
 15422 0c7a B5000000 		.4byte	0xb5
 15423 0c7e 14       		.byte	0x14
 15424 0c7f 0A       		.uleb128 0xa
 15425 0c80 F1190000 		.4byte	.LASF200
 15426 0c84 04       		.byte	0x4
 15427 0c85 2312     		.2byte	0x1223
 15428 0c87 B5000000 		.4byte	0xb5
 15429 0c8b 18       		.byte	0x18
 15430 0c8c 0A       		.uleb128 0xa
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 348


 15431 0c8d A2180000 		.4byte	.LASF201
 15432 0c91 04       		.byte	0x4
 15433 0c92 2412     		.2byte	0x1224
 15434 0c94 B5000000 		.4byte	0xb5
 15435 0c98 1C       		.byte	0x1c
 15436 0c99 00       		.byte	0
 15437 0c9a 06       		.uleb128 0x6
 15438 0c9b F7130000 		.4byte	.LASF202
 15439 0c9f 04       		.byte	0x4
 15440 0ca0 2512     		.2byte	0x1225
 15441 0ca2 280C0000 		.4byte	0xc28
 15442 0ca6 09       		.uleb128 0x9
 15443 0ca7 0C       		.byte	0xc
 15444 0ca8 04       		.byte	0x4
 15445 0ca9 2A12     		.2byte	0x122a
 15446 0cab D70C0000 		.4byte	0xcd7
 15447 0caf 0A       		.uleb128 0xa
 15448 0cb0 C60C0000 		.4byte	.LASF203
 15449 0cb4 04       		.byte	0x4
 15450 0cb5 2C12     		.2byte	0x122c
 15451 0cb7 DD000000 		.4byte	0xdd
 15452 0cbb 00       		.byte	0
 15453 0cbc 0A       		.uleb128 0xa
 15454 0cbd 9F0B0000 		.4byte	.LASF204
 15455 0cc1 04       		.byte	0x4
 15456 0cc2 2D12     		.2byte	0x122d
 15457 0cc4 B5000000 		.4byte	0xb5
 15458 0cc8 04       		.byte	0x4
 15459 0cc9 0A       		.uleb128 0xa
 15460 0cca F1070000 		.4byte	.LASF205
 15461 0cce 04       		.byte	0x4
 15462 0ccf 2E12     		.2byte	0x122e
 15463 0cd1 B5000000 		.4byte	0xb5
 15464 0cd5 08       		.byte	0x8
 15465 0cd6 00       		.byte	0
 15466 0cd7 06       		.uleb128 0x6
 15467 0cd8 BA020000 		.4byte	.LASF206
 15468 0cdc 04       		.byte	0x4
 15469 0cdd 2F12     		.2byte	0x122f
 15470 0cdf A60C0000 		.4byte	0xca6
 15471 0ce3 09       		.uleb128 0x9
 15472 0ce4 24       		.byte	0x24
 15473 0ce5 04       		.byte	0x4
 15474 0ce6 3412     		.2byte	0x1234
 15475 0ce8 620D0000 		.4byte	0xd62
 15476 0cec 0A       		.uleb128 0xa
 15477 0ced 770D0000 		.4byte	.LASF182
 15478 0cf1 04       		.byte	0x4
 15479 0cf2 3612     		.2byte	0x1236
 15480 0cf4 B5000000 		.4byte	0xb5
 15481 0cf8 00       		.byte	0
 15482 0cf9 0A       		.uleb128 0xa
 15483 0cfa 8E100000 		.4byte	.LASF183
 15484 0cfe 04       		.byte	0x4
 15485 0cff 3712     		.2byte	0x1237
 15486 0d01 B5000000 		.4byte	0xb5
 15487 0d05 04       		.byte	0x4
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 349


 15488 0d06 0A       		.uleb128 0xa
 15489 0d07 01070000 		.4byte	.LASF207
 15490 0d0b 04       		.byte	0x4
 15491 0d0c 3812     		.2byte	0x1238
 15492 0d0e B5000000 		.4byte	0xb5
 15493 0d12 08       		.byte	0x8
 15494 0d13 0A       		.uleb128 0xa
 15495 0d14 FA110000 		.4byte	.LASF208
 15496 0d18 04       		.byte	0x4
 15497 0d19 3912     		.2byte	0x1239
 15498 0d1b B5000000 		.4byte	0xb5
 15499 0d1f 0C       		.byte	0xc
 15500 0d20 0A       		.uleb128 0xa
 15501 0d21 74040000 		.4byte	.LASF44
 15502 0d25 04       		.byte	0x4
 15503 0d26 3A12     		.2byte	0x123a
 15504 0d28 DD000000 		.4byte	0xdd
 15505 0d2c 10       		.byte	0x10
 15506 0d2d 0A       		.uleb128 0xa
 15507 0d2e DC120000 		.4byte	.LASF45
 15508 0d32 04       		.byte	0x4
 15509 0d33 3B12     		.2byte	0x123b
 15510 0d35 DD000000 		.4byte	0xdd
 15511 0d39 14       		.byte	0x14
 15512 0d3a 0A       		.uleb128 0xa
 15513 0d3b 96000000 		.4byte	.LASF42
 15514 0d3f 04       		.byte	0x4
 15515 0d40 3C12     		.2byte	0x123c
 15516 0d42 DD000000 		.4byte	0xdd
 15517 0d46 18       		.byte	0x18
 15518 0d47 0A       		.uleb128 0xa
 15519 0d48 45030000 		.4byte	.LASF209
 15520 0d4c 04       		.byte	0x4
 15521 0d4d 3D12     		.2byte	0x123d
 15522 0d4f DD000000 		.4byte	0xdd
 15523 0d53 1C       		.byte	0x1c
 15524 0d54 0A       		.uleb128 0xa
 15525 0d55 E5190000 		.4byte	.LASF192
 15526 0d59 04       		.byte	0x4
 15527 0d5a 3E12     		.2byte	0x123e
 15528 0d5c D2000000 		.4byte	0xd2
 15529 0d60 20       		.byte	0x20
 15530 0d61 00       		.byte	0
 15531 0d62 06       		.uleb128 0x6
 15532 0d63 3C110000 		.4byte	.LASF210
 15533 0d67 04       		.byte	0x4
 15534 0d68 3F12     		.2byte	0x123f
 15535 0d6a E30C0000 		.4byte	0xce3
 15536 0d6e 09       		.uleb128 0x9
 15537 0d6f 38       		.byte	0x38
 15538 0d70 04       		.byte	0x4
 15539 0d71 4412     		.2byte	0x1244
 15540 0d73 2E0E0000 		.4byte	0xe2e
 15541 0d77 0A       		.uleb128 0xa
 15542 0d78 6A010000 		.4byte	.LASF94
 15543 0d7c 04       		.byte	0x4
 15544 0d7d 4612     		.2byte	0x1246
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 350


 15545 0d7f DD000000 		.4byte	0xdd
 15546 0d83 00       		.byte	0
 15547 0d84 0A       		.uleb128 0xa
 15548 0d85 770D0000 		.4byte	.LASF182
 15549 0d89 04       		.byte	0x4
 15550 0d8a 4712     		.2byte	0x1247
 15551 0d8c B5000000 		.4byte	0xb5
 15552 0d90 04       		.byte	0x4
 15553 0d91 0A       		.uleb128 0xa
 15554 0d92 8E100000 		.4byte	.LASF183
 15555 0d96 04       		.byte	0x4
 15556 0d97 4812     		.2byte	0x1248
 15557 0d99 B5000000 		.4byte	0xb5
 15558 0d9d 08       		.byte	0x8
 15559 0d9e 0A       		.uleb128 0xa
 15560 0d9f 74040000 		.4byte	.LASF44
 15561 0da3 04       		.byte	0x4
 15562 0da4 4912     		.2byte	0x1249
 15563 0da6 DD000000 		.4byte	0xdd
 15564 0daa 0C       		.byte	0xc
 15565 0dab 0A       		.uleb128 0xa
 15566 0dac DC120000 		.4byte	.LASF45
 15567 0db0 04       		.byte	0x4
 15568 0db1 4A12     		.2byte	0x124a
 15569 0db3 DD000000 		.4byte	0xdd
 15570 0db7 10       		.byte	0x10
 15571 0db8 0A       		.uleb128 0xa
 15572 0db9 96000000 		.4byte	.LASF42
 15573 0dbd 04       		.byte	0x4
 15574 0dbe 4B12     		.2byte	0x124b
 15575 0dc0 DD000000 		.4byte	0xdd
 15576 0dc4 14       		.byte	0x14
 15577 0dc5 0A       		.uleb128 0xa
 15578 0dc6 0A080000 		.4byte	.LASF91
 15579 0dca 04       		.byte	0x4
 15580 0dcb 4C12     		.2byte	0x124c
 15581 0dcd DD000000 		.4byte	0xdd
 15582 0dd1 18       		.byte	0x18
 15583 0dd2 0A       		.uleb128 0xa
 15584 0dd3 C1180000 		.4byte	.LASF92
 15585 0dd7 04       		.byte	0x4
 15586 0dd8 4D12     		.2byte	0x124d
 15587 0dda DD000000 		.4byte	0xdd
 15588 0dde 1C       		.byte	0x1c
 15589 0ddf 0A       		.uleb128 0xa
 15590 0de0 5C010000 		.4byte	.LASF85
 15591 0de4 04       		.byte	0x4
 15592 0de5 4E12     		.2byte	0x124e
 15593 0de7 DD000000 		.4byte	0xdd
 15594 0deb 20       		.byte	0x20
 15595 0dec 0A       		.uleb128 0xa
 15596 0ded 16060000 		.4byte	.LASF98
 15597 0df1 04       		.byte	0x4
 15598 0df2 4F12     		.2byte	0x124f
 15599 0df4 DD000000 		.4byte	0xdd
 15600 0df8 24       		.byte	0x24
 15601 0df9 0A       		.uleb128 0xa
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 351


 15602 0dfa 52160000 		.4byte	.LASF99
 15603 0dfe 04       		.byte	0x4
 15604 0dff 5012     		.2byte	0x1250
 15605 0e01 DD000000 		.4byte	0xdd
 15606 0e05 28       		.byte	0x28
 15607 0e06 0A       		.uleb128 0xa
 15608 0e07 130A0000 		.4byte	.LASF97
 15609 0e0b 04       		.byte	0x4
 15610 0e0c 5112     		.2byte	0x1251
 15611 0e0e DD000000 		.4byte	0xdd
 15612 0e12 2C       		.byte	0x2c
 15613 0e13 0A       		.uleb128 0xa
 15614 0e14 76110000 		.4byte	.LASF191
 15615 0e18 04       		.byte	0x4
 15616 0e19 5212     		.2byte	0x1252
 15617 0e1b D2000000 		.4byte	0xd2
 15618 0e1f 30       		.byte	0x30
 15619 0e20 0A       		.uleb128 0xa
 15620 0e21 E5190000 		.4byte	.LASF192
 15621 0e25 04       		.byte	0x4
 15622 0e26 5312     		.2byte	0x1253
 15623 0e28 D2000000 		.4byte	0xd2
 15624 0e2c 34       		.byte	0x34
 15625 0e2d 00       		.byte	0
 15626 0e2e 06       		.uleb128 0x6
 15627 0e2f B5070000 		.4byte	.LASF211
 15628 0e33 04       		.byte	0x4
 15629 0e34 5412     		.2byte	0x1254
 15630 0e36 6E0D0000 		.4byte	0xd6e
 15631 0e3a 09       		.uleb128 0x9
 15632 0e3b 20       		.byte	0x20
 15633 0e3c 04       		.byte	0x4
 15634 0e3d 5912     		.2byte	0x1259
 15635 0e3f B90E0000 		.4byte	0xeb9
 15636 0e43 0A       		.uleb128 0xa
 15637 0e44 2B180000 		.4byte	.LASF212
 15638 0e48 04       		.byte	0x4
 15639 0e49 5B12     		.2byte	0x125b
 15640 0e4b DD000000 		.4byte	0xdd
 15641 0e4f 00       		.byte	0
 15642 0e50 0A       		.uleb128 0xa
 15643 0e51 21150000 		.4byte	.LASF213
 15644 0e55 04       		.byte	0x4
 15645 0e56 5C12     		.2byte	0x125c
 15646 0e58 DD000000 		.4byte	0xdd
 15647 0e5c 04       		.byte	0x4
 15648 0e5d 0A       		.uleb128 0xa
 15649 0e5e 74040000 		.4byte	.LASF44
 15650 0e62 04       		.byte	0x4
 15651 0e63 5D12     		.2byte	0x125d
 15652 0e65 DD000000 		.4byte	0xdd
 15653 0e69 08       		.byte	0x8
 15654 0e6a 0A       		.uleb128 0xa
 15655 0e6b DC120000 		.4byte	.LASF45
 15656 0e6f 04       		.byte	0x4
 15657 0e70 5E12     		.2byte	0x125e
 15658 0e72 DD000000 		.4byte	0xdd
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 352


 15659 0e76 0C       		.byte	0xc
 15660 0e77 0A       		.uleb128 0xa
 15661 0e78 850B0000 		.4byte	.LASF46
 15662 0e7c 04       		.byte	0x4
 15663 0e7d 5F12     		.2byte	0x125f
 15664 0e7f DD000000 		.4byte	0xdd
 15665 0e83 10       		.byte	0x10
 15666 0e84 0A       		.uleb128 0xa
 15667 0e85 E8120000 		.4byte	.LASF53
 15668 0e89 04       		.byte	0x4
 15669 0e8a 6012     		.2byte	0x1260
 15670 0e8c DD000000 		.4byte	0xdd
 15671 0e90 14       		.byte	0x14
 15672 0e91 0A       		.uleb128 0xa
 15673 0e92 840C0000 		.4byte	.LASF47
 15674 0e96 04       		.byte	0x4
 15675 0e97 6112     		.2byte	0x1261
 15676 0e99 BC000000 		.4byte	0xbc
 15677 0e9d 18       		.byte	0x18
 15678 0e9e 0A       		.uleb128 0xa
 15679 0e9f 76080000 		.4byte	.LASF48
 15680 0ea3 04       		.byte	0x4
 15681 0ea4 6212     		.2byte	0x1262
 15682 0ea6 0E010000 		.4byte	0x10e
 15683 0eaa 19       		.byte	0x19
 15684 0eab 0A       		.uleb128 0xa
 15685 0eac 71150000 		.4byte	.LASF214
 15686 0eb0 04       		.byte	0x4
 15687 0eb1 6312     		.2byte	0x1263
 15688 0eb3 B5000000 		.4byte	0xb5
 15689 0eb7 1C       		.byte	0x1c
 15690 0eb8 00       		.byte	0
 15691 0eb9 06       		.uleb128 0x6
 15692 0eba 12070000 		.4byte	.LASF215
 15693 0ebe 04       		.byte	0x4
 15694 0ebf 6412     		.2byte	0x1264
 15695 0ec1 3A0E0000 		.4byte	0xe3a
 15696 0ec5 09       		.uleb128 0x9
 15697 0ec6 18       		.byte	0x18
 15698 0ec7 04       		.byte	0x4
 15699 0ec8 6912     		.2byte	0x1269
 15700 0eca 1D0F0000 		.4byte	0xf1d
 15701 0ece 0A       		.uleb128 0xa
 15702 0ecf C3000000 		.4byte	.LASF216
 15703 0ed3 04       		.byte	0x4
 15704 0ed4 6B12     		.2byte	0x126b
 15705 0ed6 0E010000 		.4byte	0x10e
 15706 0eda 00       		.byte	0
 15707 0edb 0A       		.uleb128 0xa
 15708 0edc 4C100000 		.4byte	.LASF217
 15709 0ee0 04       		.byte	0x4
 15710 0ee1 6C12     		.2byte	0x126c
 15711 0ee3 B5000000 		.4byte	0xb5
 15712 0ee7 04       		.byte	0x4
 15713 0ee8 0A       		.uleb128 0xa
 15714 0ee9 430D0000 		.4byte	.LASF218
 15715 0eed 04       		.byte	0x4
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 353


 15716 0eee 6D12     		.2byte	0x126d
 15717 0ef0 B5000000 		.4byte	0xb5
 15718 0ef4 08       		.byte	0x8
 15719 0ef5 0A       		.uleb128 0xa
 15720 0ef6 A50F0000 		.4byte	.LASF219
 15721 0efa 04       		.byte	0x4
 15722 0efb 6E12     		.2byte	0x126e
 15723 0efd DD000000 		.4byte	0xdd
 15724 0f01 0C       		.byte	0xc
 15725 0f02 0A       		.uleb128 0xa
 15726 0f03 01020000 		.4byte	.LASF220
 15727 0f07 04       		.byte	0x4
 15728 0f08 6F12     		.2byte	0x126f
 15729 0f0a 0E010000 		.4byte	0x10e
 15730 0f0e 10       		.byte	0x10
 15731 0f0f 0A       		.uleb128 0xa
 15732 0f10 ED060000 		.4byte	.LASF221
 15733 0f14 04       		.byte	0x4
 15734 0f15 7012     		.2byte	0x1270
 15735 0f17 DD000000 		.4byte	0xdd
 15736 0f1b 14       		.byte	0x14
 15737 0f1c 00       		.byte	0
 15738 0f1d 06       		.uleb128 0x6
 15739 0f1e 53140000 		.4byte	.LASF222
 15740 0f22 04       		.byte	0x4
 15741 0f23 7112     		.2byte	0x1271
 15742 0f25 C50E0000 		.4byte	0xec5
 15743 0f29 09       		.uleb128 0x9
 15744 0f2a 08       		.byte	0x8
 15745 0f2b 04       		.byte	0x4
 15746 0f2c 7612     		.2byte	0x1276
 15747 0f2e 4D0F0000 		.4byte	0xf4d
 15748 0f32 0A       		.uleb128 0xa
 15749 0f33 1D0A0000 		.4byte	.LASF223
 15750 0f37 04       		.byte	0x4
 15751 0f38 7812     		.2byte	0x1278
 15752 0f3a B5000000 		.4byte	0xb5
 15753 0f3e 00       		.byte	0
 15754 0f3f 0A       		.uleb128 0xa
 15755 0f40 75020000 		.4byte	.LASF224
 15756 0f44 04       		.byte	0x4
 15757 0f45 7912     		.2byte	0x1279
 15758 0f47 B5000000 		.4byte	0xb5
 15759 0f4b 04       		.byte	0x4
 15760 0f4c 00       		.byte	0
 15761 0f4d 06       		.uleb128 0x6
 15762 0f4e EA180000 		.4byte	.LASF225
 15763 0f52 04       		.byte	0x4
 15764 0f53 7A12     		.2byte	0x127a
 15765 0f55 290F0000 		.4byte	0xf29
 15766 0f59 09       		.uleb128 0x9
 15767 0f5a 08       		.byte	0x8
 15768 0f5b 04       		.byte	0x4
 15769 0f5c 7F12     		.2byte	0x127f
 15770 0f5e 7D0F0000 		.4byte	0xf7d
 15771 0f62 0A       		.uleb128 0xa
 15772 0f63 3D020000 		.4byte	.LASF226
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 354


 15773 0f67 04       		.byte	0x4
 15774 0f68 8112     		.2byte	0x1281
 15775 0f6a B5000000 		.4byte	0xb5
 15776 0f6e 00       		.byte	0
 15777 0f6f 0A       		.uleb128 0xa
 15778 0f70 241B0000 		.4byte	.LASF227
 15779 0f74 04       		.byte	0x4
 15780 0f75 8212     		.2byte	0x1282
 15781 0f77 B5000000 		.4byte	0xb5
 15782 0f7b 04       		.byte	0x4
 15783 0f7c 00       		.byte	0
 15784 0f7d 06       		.uleb128 0x6
 15785 0f7e 34090000 		.4byte	.LASF228
 15786 0f82 04       		.byte	0x4
 15787 0f83 8312     		.2byte	0x1283
 15788 0f85 590F0000 		.4byte	0xf59
 15789 0f89 09       		.uleb128 0x9
 15790 0f8a 08       		.byte	0x8
 15791 0f8b 04       		.byte	0x4
 15792 0f8c 8812     		.2byte	0x1288
 15793 0f8e AD0F0000 		.4byte	0xfad
 15794 0f92 0A       		.uleb128 0xa
 15795 0f93 3D020000 		.4byte	.LASF226
 15796 0f97 04       		.byte	0x4
 15797 0f98 8A12     		.2byte	0x128a
 15798 0f9a D2000000 		.4byte	0xd2
 15799 0f9e 00       		.byte	0
 15800 0f9f 0A       		.uleb128 0xa
 15801 0fa0 241B0000 		.4byte	.LASF227
 15802 0fa4 04       		.byte	0x4
 15803 0fa5 8B12     		.2byte	0x128b
 15804 0fa7 D2000000 		.4byte	0xd2
 15805 0fab 04       		.byte	0x4
 15806 0fac 00       		.byte	0
 15807 0fad 06       		.uleb128 0x6
 15808 0fae 55120000 		.4byte	.LASF229
 15809 0fb2 04       		.byte	0x4
 15810 0fb3 8C12     		.2byte	0x128c
 15811 0fb5 890F0000 		.4byte	0xf89
 15812 0fb9 0F       		.uleb128 0xf
 15813 0fba 04       		.byte	0x4
 15814 0fbb 01       		.byte	0x1
 15815 0fbc 56       		.byte	0x56
 15816 0fbd E00F0000 		.4byte	0xfe0
 15817 0fc1 10       		.uleb128 0x10
 15818 0fc2 250B0000 		.4byte	.LASF230
 15819 0fc6 01       		.byte	0x1
 15820 0fc7 58       		.byte	0x58
 15821 0fc8 DD000000 		.4byte	0xdd
 15822 0fcc 04       		.byte	0x4
 15823 0fcd 08       		.byte	0x8
 15824 0fce 18       		.byte	0x18
 15825 0fcf 00       		.byte	0
 15826 0fd0 10       		.uleb128 0x10
 15827 0fd1 C4040000 		.4byte	.LASF231
 15828 0fd5 01       		.byte	0x1
 15829 0fd6 59       		.byte	0x59
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 355


 15830 0fd7 DD000000 		.4byte	0xdd
 15831 0fdb 04       		.byte	0x4
 15832 0fdc 18       		.byte	0x18
 15833 0fdd 00       		.byte	0
 15834 0fde 00       		.byte	0
 15835 0fdf 00       		.byte	0
 15836 0fe0 04       		.uleb128 0x4
 15837 0fe1 A6030000 		.4byte	.LASF232
 15838 0fe5 01       		.byte	0x1
 15839 0fe6 5A       		.byte	0x5a
 15840 0fe7 B90F0000 		.4byte	0xfb9
 15841 0feb 0F       		.uleb128 0xf
 15842 0fec 1C       		.byte	0x1c
 15843 0fed 01       		.byte	0x1
 15844 0fee 5F       		.byte	0x5f
 15845 0fef 48100000 		.4byte	0x1048
 15846 0ff3 11       		.uleb128 0x11
 15847 0ff4 BA0C0000 		.4byte	.LASF233
 15848 0ff8 01       		.byte	0x1
 15849 0ff9 61       		.byte	0x61
 15850 0ffa 0E010000 		.4byte	0x10e
 15851 0ffe 00       		.byte	0
 15852 0fff 11       		.uleb128 0x11
 15853 1000 5B040000 		.4byte	.LASF234
 15854 1004 01       		.byte	0x1
 15855 1005 62       		.byte	0x62
 15856 1006 DD000000 		.4byte	0xdd
 15857 100a 04       		.byte	0x4
 15858 100b 11       		.uleb128 0x11
 15859 100c E4060000 		.4byte	.LASF235
 15860 1010 01       		.byte	0x1
 15861 1011 64       		.byte	0x64
 15862 1012 48100000 		.4byte	0x1048
 15863 1016 08       		.byte	0x8
 15864 1017 11       		.uleb128 0x11
 15865 1018 61080000 		.4byte	.LASF157
 15866 101c 01       		.byte	0x1
 15867 101d 65       		.byte	0x65
 15868 101e DD000000 		.4byte	0xdd
 15869 1022 0C       		.byte	0xc
 15870 1023 11       		.uleb128 0x11
 15871 1024 C8170000 		.4byte	.LASF236
 15872 1028 01       		.byte	0x1
 15873 1029 66       		.byte	0x66
 15874 102a 4E100000 		.4byte	0x104e
 15875 102e 10       		.byte	0x10
 15876 102f 11       		.uleb128 0x11
 15877 1030 E1150000 		.4byte	.LASF237
 15878 1034 01       		.byte	0x1
 15879 1035 67       		.byte	0x67
 15880 1036 DD000000 		.4byte	0xdd
 15881 103a 14       		.byte	0x14
 15882 103b 11       		.uleb128 0x11
 15883 103c 0C0C0000 		.4byte	.LASF238
 15884 1040 01       		.byte	0x1
 15885 1041 68       		.byte	0x68
 15886 1042 E8000000 		.4byte	0xe8
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 356


 15887 1046 18       		.byte	0x18
 15888 1047 00       		.byte	0
 15889 1048 0B       		.uleb128 0xb
 15890 1049 04       		.byte	0x4
 15891 104a DD000000 		.4byte	0xdd
 15892 104e 0B       		.uleb128 0xb
 15893 104f 04       		.byte	0x4
 15894 1050 E00F0000 		.4byte	0xfe0
 15895 1054 12       		.uleb128 0x12
 15896 1055 CF110000 		.4byte	.LASF250
 15897 1059 01       		.byte	0x1
 15898 105a 70       		.byte	0x70
 15899 105b 00000000 		.4byte	.LFB1
 15900 105f 50000000 		.4byte	.LFE1-.LFB1
 15901 1063 01       		.uleb128 0x1
 15902 1064 9C       		.byte	0x9c
 15903 1065 86100000 		.4byte	0x1086
 15904 1069 13       		.uleb128 0x13
 15905 106a E6030000 		.4byte	.LASF239
 15906 106e 01       		.byte	0x1
 15907 106f 70       		.byte	0x70
 15908 1070 DD000000 		.4byte	0xdd
 15909 1074 02       		.uleb128 0x2
 15910 1075 91       		.byte	0x91
 15911 1076 6C       		.sleb128 -20
 15912 1077 14       		.uleb128 0x14
 15913 1078 FC190000 		.4byte	.LASF241
 15914 107c 01       		.byte	0x1
 15915 107d 72       		.byte	0x72
 15916 107e DD000000 		.4byte	0xdd
 15917 1082 02       		.uleb128 0x2
 15918 1083 91       		.byte	0x91
 15919 1084 74       		.sleb128 -12
 15920 1085 00       		.byte	0
 15921 1086 15       		.uleb128 0x15
 15922 1087 5D060000 		.4byte	.LASF242
 15923 108b 01       		.byte	0x1
 15924 108c 84       		.byte	0x84
 15925 108d E8000000 		.4byte	0xe8
 15926 1091 00000000 		.4byte	.LFB2
 15927 1095 58000000 		.4byte	.LFE2-.LFB2
 15928 1099 01       		.uleb128 0x1
 15929 109a 9C       		.byte	0x9c
 15930 109b C8100000 		.4byte	0x10c8
 15931 109f 13       		.uleb128 0x13
 15932 10a0 250B0000 		.4byte	.LASF230
 15933 10a4 01       		.byte	0x1
 15934 10a5 84       		.byte	0x84
 15935 10a6 DD000000 		.4byte	0xdd
 15936 10aa 02       		.uleb128 0x2
 15937 10ab 91       		.byte	0x91
 15938 10ac 6C       		.sleb128 -20
 15939 10ad 13       		.uleb128 0x13
 15940 10ae 6D180000 		.4byte	.LASF240
 15941 10b2 01       		.byte	0x1
 15942 10b3 84       		.byte	0x84
 15943 10b4 48100000 		.4byte	0x1048
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 357


 15944 10b8 02       		.uleb128 0x2
 15945 10b9 91       		.byte	0x91
 15946 10ba 68       		.sleb128 -24
 15947 10bb 16       		.uleb128 0x16
 15948 10bc 6900     		.ascii	"i\000"
 15949 10be 01       		.byte	0x1
 15950 10bf 86       		.byte	0x86
 15951 10c0 DD000000 		.4byte	0xdd
 15952 10c4 02       		.uleb128 0x2
 15953 10c5 91       		.byte	0x91
 15954 10c6 74       		.sleb128 -12
 15955 10c7 00       		.byte	0
 15956 10c8 17       		.uleb128 0x17
 15957 10c9 70140000 		.4byte	.LASF243
 15958 10cd 01       		.byte	0x1
 15959 10ce 9A       		.byte	0x9a
 15960 10cf E8000000 		.4byte	0xe8
 15961 10d3 00000000 		.4byte	.LFB3
 15962 10d7 24000000 		.4byte	.LFE3-.LFB3
 15963 10db 01       		.uleb128 0x1
 15964 10dc 9C       		.byte	0x9c
 15965 10dd FE100000 		.4byte	0x10fe
 15966 10e1 13       		.uleb128 0x13
 15967 10e2 250B0000 		.4byte	.LASF230
 15968 10e6 01       		.byte	0x1
 15969 10e7 9A       		.byte	0x9a
 15970 10e8 DD000000 		.4byte	0xdd
 15971 10ec 02       		.uleb128 0x2
 15972 10ed 91       		.byte	0x91
 15973 10ee 74       		.sleb128 -12
 15974 10ef 13       		.uleb128 0x13
 15975 10f0 440C0000 		.4byte	.LASF244
 15976 10f4 01       		.byte	0x1
 15977 10f5 9A       		.byte	0x9a
 15978 10f6 48100000 		.4byte	0x1048
 15979 10fa 02       		.uleb128 0x2
 15980 10fb 91       		.byte	0x91
 15981 10fc 70       		.sleb128 -16
 15982 10fd 00       		.byte	0
 15983 10fe 18       		.uleb128 0x18
 15984 10ff D5140000 		.4byte	.LASF248
 15985 1103 01       		.byte	0x1
 15986 1104 AA       		.byte	0xaa
 15987 1105 00000000 		.4byte	.LFB4
 15988 1109 70000000 		.4byte	.LFE4-.LFB4
 15989 110d 01       		.uleb128 0x1
 15990 110e 9C       		.byte	0x9c
 15991 110f 3E110000 		.4byte	0x113e
 15992 1113 13       		.uleb128 0x13
 15993 1114 250B0000 		.4byte	.LASF230
 15994 1118 01       		.byte	0x1
 15995 1119 AA       		.byte	0xaa
 15996 111a C7000000 		.4byte	0xc7
 15997 111e 02       		.uleb128 0x2
 15998 111f 91       		.byte	0x91
 15999 1120 6E       		.sleb128 -18
 16000 1121 13       		.uleb128 0x13
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 358


 16001 1122 86160000 		.4byte	.LASF245
 16002 1126 01       		.byte	0x1
 16003 1127 AA       		.byte	0xaa
 16004 1128 DD000000 		.4byte	0xdd
 16005 112c 02       		.uleb128 0x2
 16006 112d 91       		.byte	0x91
 16007 112e 68       		.sleb128 -24
 16008 112f 14       		.uleb128 0x14
 16009 1130 FC190000 		.4byte	.LASF241
 16010 1134 01       		.byte	0x1
 16011 1135 AC       		.byte	0xac
 16012 1136 DD000000 		.4byte	0xdd
 16013 113a 02       		.uleb128 0x2
 16014 113b 91       		.byte	0x91
 16015 113c 74       		.sleb128 -12
 16016 113d 00       		.byte	0
 16017 113e 17       		.uleb128 0x17
 16018 113f 50050000 		.4byte	.LASF246
 16019 1143 01       		.byte	0x1
 16020 1144 C1       		.byte	0xc1
 16021 1145 DD000000 		.4byte	0xdd
 16022 1149 00000000 		.4byte	.LFB5
 16023 114d 5C000000 		.4byte	.LFE5-.LFB5
 16024 1151 01       		.uleb128 0x1
 16025 1152 9C       		.byte	0x9c
 16026 1153 82110000 		.4byte	0x1182
 16027 1157 13       		.uleb128 0x13
 16028 1158 250B0000 		.4byte	.LASF230
 16029 115c 01       		.byte	0x1
 16030 115d C1       		.byte	0xc1
 16031 115e C7000000 		.4byte	0xc7
 16032 1162 02       		.uleb128 0x2
 16033 1163 91       		.byte	0x91
 16034 1164 6E       		.sleb128 -18
 16035 1165 14       		.uleb128 0x14
 16036 1166 53130000 		.4byte	.LASF247
 16037 116a 01       		.byte	0x1
 16038 116b C3       		.byte	0xc3
 16039 116c DD000000 		.4byte	0xdd
 16040 1170 02       		.uleb128 0x2
 16041 1171 91       		.byte	0x91
 16042 1172 74       		.sleb128 -12
 16043 1173 14       		.uleb128 0x14
 16044 1174 86160000 		.4byte	.LASF245
 16045 1178 01       		.byte	0x1
 16046 1179 C3       		.byte	0xc3
 16047 117a DD000000 		.4byte	0xdd
 16048 117e 02       		.uleb128 0x2
 16049 117f 91       		.byte	0x91
 16050 1180 70       		.sleb128 -16
 16051 1181 00       		.byte	0
 16052 1182 19       		.uleb128 0x19
 16053 1183 F9030000 		.4byte	.LASF249
 16054 1187 01       		.byte	0x1
 16055 1188 DB       		.byte	0xdb
 16056 1189 00000000 		.4byte	.LFB6
 16057 118d 9C000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 359


 16058 1191 01       		.uleb128 0x1
 16059 1192 9C       		.byte	0x9c
 16060 1193 C2110000 		.4byte	0x11c2
 16061 1197 13       		.uleb128 0x13
 16062 1198 250B0000 		.4byte	.LASF230
 16063 119c 01       		.byte	0x1
 16064 119d DB       		.byte	0xdb
 16065 119e C7000000 		.4byte	0xc7
 16066 11a2 02       		.uleb128 0x2
 16067 11a3 91       		.byte	0x91
 16068 11a4 6E       		.sleb128 -18
 16069 11a5 13       		.uleb128 0x13
 16070 11a6 86160000 		.4byte	.LASF245
 16071 11aa 01       		.byte	0x1
 16072 11ab DB       		.byte	0xdb
 16073 11ac DD000000 		.4byte	0xdd
 16074 11b0 02       		.uleb128 0x2
 16075 11b1 91       		.byte	0x91
 16076 11b2 68       		.sleb128 -24
 16077 11b3 14       		.uleb128 0x14
 16078 11b4 53130000 		.4byte	.LASF247
 16079 11b8 01       		.byte	0x1
 16080 11b9 DD       		.byte	0xdd
 16081 11ba DD000000 		.4byte	0xdd
 16082 11be 02       		.uleb128 0x2
 16083 11bf 91       		.byte	0x91
 16084 11c0 74       		.sleb128 -12
 16085 11c1 00       		.byte	0
 16086 11c2 1A       		.uleb128 0x1a
 16087 11c3 F50F0000 		.4byte	.LASF251
 16088 11c7 01       		.byte	0x1
 16089 11c8 0101     		.2byte	0x101
 16090 11ca 00000000 		.4byte	.LFB7
 16091 11ce 58000000 		.4byte	.LFE7-.LFB7
 16092 11d2 01       		.uleb128 0x1
 16093 11d3 9C       		.byte	0x9c
 16094 11d4 F7110000 		.4byte	0x11f7
 16095 11d8 1B       		.uleb128 0x1b
 16096 11d9 E8050000 		.4byte	.LASF252
 16097 11dd 01       		.byte	0x1
 16098 11de 0101     		.2byte	0x101
 16099 11e0 48100000 		.4byte	0x1048
 16100 11e4 02       		.uleb128 0x2
 16101 11e5 91       		.byte	0x91
 16102 11e6 74       		.sleb128 -12
 16103 11e7 1B       		.uleb128 0x1b
 16104 11e8 5B040000 		.4byte	.LASF234
 16105 11ec 01       		.byte	0x1
 16106 11ed 0101     		.2byte	0x101
 16107 11ef DD000000 		.4byte	0xdd
 16108 11f3 02       		.uleb128 0x2
 16109 11f4 91       		.byte	0x91
 16110 11f5 70       		.sleb128 -16
 16111 11f6 00       		.byte	0
 16112 11f7 1C       		.uleb128 0x1c
 16113 11f8 34040000 		.4byte	.LASF258
 16114 11fc 01       		.byte	0x1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 360


 16115 11fd 1401     		.2byte	0x114
 16116 11ff E8000000 		.4byte	0xe8
 16117 1203 00000000 		.4byte	.LFB8
 16118 1207 3C000000 		.4byte	.LFE8-.LFB8
 16119 120b 01       		.uleb128 0x1
 16120 120c 9C       		.byte	0x9c
 16121 120d 3F120000 		.4byte	0x123f
 16122 1211 1B       		.uleb128 0x1b
 16123 1212 C5010000 		.4byte	.LASF253
 16124 1216 01       		.byte	0x1
 16125 1217 1401     		.2byte	0x114
 16126 1219 3F120000 		.4byte	0x123f
 16127 121d 02       		.uleb128 0x2
 16128 121e 91       		.byte	0x91
 16129 121f 6C       		.sleb128 -20
 16130 1220 1B       		.uleb128 0x1b
 16131 1221 2C070000 		.4byte	.LASF254
 16132 1225 01       		.byte	0x1
 16133 1226 1401     		.2byte	0x114
 16134 1228 48100000 		.4byte	0x1048
 16135 122c 02       		.uleb128 0x2
 16136 122d 91       		.byte	0x91
 16137 122e 68       		.sleb128 -24
 16138 122f 1D       		.uleb128 0x1d
 16139 1230 48170000 		.4byte	.LASF255
 16140 1234 01       		.byte	0x1
 16141 1235 1601     		.2byte	0x116
 16142 1237 E8000000 		.4byte	0xe8
 16143 123b 02       		.uleb128 0x2
 16144 123c 91       		.byte	0x91
 16145 123d 74       		.sleb128 -12
 16146 123e 00       		.byte	0
 16147 123f 0B       		.uleb128 0xb
 16148 1240 04       		.byte	0x4
 16149 1241 A6080000 		.4byte	0x8a6
 16150 1245 1A       		.uleb128 0x1a
 16151 1246 001B0000 		.4byte	.LASF256
 16152 124a 01       		.byte	0x1
 16153 124b 2901     		.2byte	0x129
 16154 124d 00000000 		.4byte	.LFB9
 16155 1251 38000000 		.4byte	.LFE9-.LFB9
 16156 1255 01       		.uleb128 0x1
 16157 1256 9C       		.byte	0x9c
 16158 1257 6B120000 		.4byte	0x126b
 16159 125b 1B       		.uleb128 0x1b
 16160 125c 8D150000 		.4byte	.LASF257
 16161 1260 01       		.byte	0x1
 16162 1261 2901     		.2byte	0x129
 16163 1263 0E010000 		.4byte	0x10e
 16164 1267 02       		.uleb128 0x2
 16165 1268 91       		.byte	0x91
 16166 1269 77       		.sleb128 -9
 16167 126a 00       		.byte	0
 16168 126b 1C       		.uleb128 0x1c
 16169 126c 06140000 		.4byte	.LASF259
 16170 1270 01       		.byte	0x1
 16171 1271 3B01     		.2byte	0x13b
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 361


 16172 1273 DD000000 		.4byte	0xdd
 16173 1277 00000000 		.4byte	.LFB10
 16174 127b 7C000000 		.4byte	.LFE10-.LFB10
 16175 127f 01       		.uleb128 0x1
 16176 1280 9C       		.byte	0x9c
 16177 1281 B1120000 		.4byte	0x12b1
 16178 1285 1E       		.uleb128 0x1e
 16179 1286 6900     		.ascii	"i\000"
 16180 1288 01       		.byte	0x1
 16181 1289 3D01     		.2byte	0x13d
 16182 128b DD000000 		.4byte	0xdd
 16183 128f 02       		.uleb128 0x2
 16184 1290 91       		.byte	0x91
 16185 1291 74       		.sleb128 -12
 16186 1292 1D       		.uleb128 0x1d
 16187 1293 3E030000 		.4byte	.LASF260
 16188 1297 01       		.byte	0x1
 16189 1298 3D01     		.2byte	0x13d
 16190 129a DD000000 		.4byte	0xdd
 16191 129e 02       		.uleb128 0x2
 16192 129f 91       		.byte	0x91
 16193 12a0 70       		.sleb128 -16
 16194 12a1 1E       		.uleb128 0x1e
 16195 12a2 436D6400 		.ascii	"Cmd\000"
 16196 12a6 01       		.byte	0x1
 16197 12a7 3D01     		.2byte	0x13d
 16198 12a9 DD000000 		.4byte	0xdd
 16199 12ad 02       		.uleb128 0x2
 16200 12ae 91       		.byte	0x91
 16201 12af 6C       		.sleb128 -20
 16202 12b0 00       		.byte	0
 16203 12b1 1F       		.uleb128 0x1f
 16204 12b2 90170000 		.4byte	.LASF261
 16205 12b6 01       		.byte	0x1
 16206 12b7 5F01     		.2byte	0x15f
 16207 12b9 D2000000 		.4byte	0xd2
 16208 12bd 00000000 		.4byte	.LFB11
 16209 12c1 4C000000 		.4byte	.LFE11-.LFB11
 16210 12c5 01       		.uleb128 0x1
 16211 12c6 9C       		.byte	0x9c
 16212 12c7 1F130000 		.4byte	0x131f
 16213 12cb 1B       		.uleb128 0x1b
 16214 12cc AA140000 		.4byte	.LASF262
 16215 12d0 01       		.byte	0x1
 16216 12d1 5F01     		.2byte	0x15f
 16217 12d3 BC000000 		.4byte	0xbc
 16218 12d7 02       		.uleb128 0x2
 16219 12d8 91       		.byte	0x91
 16220 12d9 6F       		.sleb128 -17
 16221 12da 1B       		.uleb128 0x1b
 16222 12db 72070000 		.4byte	.LASF263
 16223 12df 01       		.byte	0x1
 16224 12e0 5F01     		.2byte	0x15f
 16225 12e2 1F130000 		.4byte	0x131f
 16226 12e6 02       		.uleb128 0x2
 16227 12e7 91       		.byte	0x91
 16228 12e8 68       		.sleb128 -24
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 362


 16229 12e9 20       		.uleb128 0x20
 16230 12ea 6C656E00 		.ascii	"len\000"
 16231 12ee 01       		.byte	0x1
 16232 12ef 5F01     		.2byte	0x15f
 16233 12f1 BC000000 		.4byte	0xbc
 16234 12f5 02       		.uleb128 0x2
 16235 12f6 91       		.byte	0x91
 16236 12f7 6E       		.sleb128 -18
 16237 12f8 1B       		.uleb128 0x1b
 16238 12f9 B80B0000 		.4byte	.LASF264
 16239 12fd 01       		.byte	0x1
 16240 12fe 5F01     		.2byte	0x15f
 16241 1300 2A130000 		.4byte	0x132a
 16242 1304 02       		.uleb128 0x2
 16243 1305 91       		.byte	0x91
 16244 1306 64       		.sleb128 -28
 16245 1307 21       		.uleb128 0x21
 16246 1308 12000000 		.4byte	.LBB2
 16247 130c 2E000000 		.4byte	.LBE2-.LBB2
 16248 1310 1E       		.uleb128 0x1e
 16249 1311 6900     		.ascii	"i\000"
 16250 1313 01       		.byte	0x1
 16251 1314 6101     		.2byte	0x161
 16252 1316 25000000 		.4byte	0x25
 16253 131a 02       		.uleb128 0x2
 16254 131b 91       		.byte	0x91
 16255 131c 74       		.sleb128 -12
 16256 131d 00       		.byte	0
 16257 131e 00       		.byte	0
 16258 131f 0B       		.uleb128 0xb
 16259 1320 04       		.byte	0x4
 16260 1321 25130000 		.4byte	0x1325
 16261 1325 0C       		.uleb128 0xc
 16262 1326 BC000000 		.4byte	0xbc
 16263 132a 0B       		.uleb128 0xb
 16264 132b 04       		.byte	0x4
 16265 132c BC000000 		.4byte	0xbc
 16266 1330 22       		.uleb128 0x22
 16267 1331 15190000 		.4byte	.LASF265
 16268 1335 01       		.byte	0x1
 16269 1336 7201     		.2byte	0x172
 16270 1338 0E010000 		.4byte	0x10e
 16271 133c 00000000 		.4byte	.LFB12
 16272 1340 58010000 		.4byte	.LFE12-.LFB12
 16273 1344 01       		.uleb128 0x1
 16274 1345 9C       		.byte	0x9c
 16275 1346 15140000 		.4byte	0x1415
 16276 134a 1B       		.uleb128 0x1b
 16277 134b 42190000 		.4byte	.LASF266
 16278 134f 01       		.byte	0x1
 16279 1350 7201     		.2byte	0x172
 16280 1352 15140000 		.4byte	0x1415
 16281 1356 02       		.uleb128 0x2
 16282 1357 91       		.byte	0x91
 16283 1358 44       		.sleb128 -60
 16284 1359 20       		.uleb128 0x20
 16285 135a 646C00   		.ascii	"dl\000"
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 363


 16286 135d 01       		.byte	0x1
 16287 135e 7201     		.2byte	0x172
 16288 1360 2A130000 		.4byte	0x132a
 16289 1364 02       		.uleb128 0x2
 16290 1365 91       		.byte	0x91
 16291 1366 40       		.sleb128 -64
 16292 1367 23       		.uleb128 0x23
 16293 1368 2A000000 		.4byte	.LBB3
 16294 136c 4C000000 		.4byte	.LBE3-.LBB3
 16295 1370 A2130000 		.4byte	0x13a2
 16296 1374 1D       		.uleb128 0x1d
 16297 1375 34180000 		.4byte	.LASF267
 16298 1379 01       		.byte	0x1
 16299 137a 7A01     		.2byte	0x17a
 16300 137c 2B140000 		.4byte	0x142b
 16301 1380 02       		.uleb128 0x2
 16302 1381 91       		.byte	0x91
 16303 1382 70       		.sleb128 -16
 16304 1383 1D       		.uleb128 0x1d
 16305 1384 F3090000 		.4byte	.LASF268
 16306 1388 01       		.byte	0x1
 16307 1389 7B01     		.2byte	0x17b
 16308 138b 30140000 		.4byte	0x1430
 16309 138f 02       		.uleb128 0x2
 16310 1390 91       		.byte	0x91
 16311 1391 68       		.sleb128 -24
 16312 1392 1D       		.uleb128 0x1d
 16313 1393 B80B0000 		.4byte	.LASF264
 16314 1397 01       		.byte	0x1
 16315 1398 7C01     		.2byte	0x17c
 16316 139a BC000000 		.4byte	0xbc
 16317 139e 02       		.uleb128 0x2
 16318 139f 91       		.byte	0x91
 16319 13a0 67       		.sleb128 -25
 16320 13a1 00       		.byte	0
 16321 13a2 23       		.uleb128 0x23
 16322 13a3 86000000 		.4byte	.LBB4
 16323 13a7 4A000000 		.4byte	.LBE4-.LBB4
 16324 13ab DD130000 		.4byte	0x13dd
 16325 13af 1D       		.uleb128 0x1d
 16326 13b0 34180000 		.4byte	.LASF267
 16327 13b4 01       		.byte	0x1
 16328 13b5 8701     		.2byte	0x187
 16329 13b7 45140000 		.4byte	0x1445
 16330 13bb 02       		.uleb128 0x2
 16331 13bc 91       		.byte	0x91
 16332 13bd 64       		.sleb128 -28
 16333 13be 1D       		.uleb128 0x1d
 16334 13bf F3090000 		.4byte	.LASF268
 16335 13c3 01       		.byte	0x1
 16336 13c4 8801     		.2byte	0x188
 16337 13c6 4A140000 		.4byte	0x144a
 16338 13ca 02       		.uleb128 0x2
 16339 13cb 91       		.byte	0x91
 16340 13cc 60       		.sleb128 -32
 16341 13cd 1D       		.uleb128 0x1d
 16342 13ce B80B0000 		.4byte	.LASF264
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 364


 16343 13d2 01       		.byte	0x1
 16344 13d3 8901     		.2byte	0x189
 16345 13d5 BC000000 		.4byte	0xbc
 16346 13d9 02       		.uleb128 0x2
 16347 13da 91       		.byte	0x91
 16348 13db 5F       		.sleb128 -33
 16349 13dc 00       		.byte	0
 16350 13dd 21       		.uleb128 0x21
 16351 13de E0000000 		.4byte	.LBB5
 16352 13e2 4A000000 		.4byte	.LBE5-.LBB5
 16353 13e6 1D       		.uleb128 0x1d
 16354 13e7 34180000 		.4byte	.LASF267
 16355 13eb 01       		.byte	0x1
 16356 13ec 9401     		.2byte	0x194
 16357 13ee 5F140000 		.4byte	0x145f
 16358 13f2 02       		.uleb128 0x2
 16359 13f3 91       		.byte	0x91
 16360 13f4 58       		.sleb128 -40
 16361 13f5 1D       		.uleb128 0x1d
 16362 13f6 F3090000 		.4byte	.LASF268
 16363 13fa 01       		.byte	0x1
 16364 13fb 9601     		.2byte	0x196
 16365 13fd 64140000 		.4byte	0x1464
 16366 1401 02       		.uleb128 0x2
 16367 1402 91       		.byte	0x91
 16368 1403 50       		.sleb128 -48
 16369 1404 1D       		.uleb128 0x1d
 16370 1405 B80B0000 		.4byte	.LASF264
 16371 1409 01       		.byte	0x1
 16372 140a 9701     		.2byte	0x197
 16373 140c BC000000 		.4byte	0xbc
 16374 1410 02       		.uleb128 0x2
 16375 1411 91       		.byte	0x91
 16376 1412 4F       		.sleb128 -49
 16377 1413 00       		.byte	0
 16378 1414 00       		.byte	0
 16379 1415 0B       		.uleb128 0xb
 16380 1416 04       		.byte	0x4
 16381 1417 7B020000 		.4byte	0x27b
 16382 141b 0D       		.uleb128 0xd
 16383 141c 25130000 		.4byte	0x1325
 16384 1420 2B140000 		.4byte	0x142b
 16385 1424 0E       		.uleb128 0xe
 16386 1425 9E000000 		.4byte	0x9e
 16387 1429 04       		.byte	0x4
 16388 142a 00       		.byte	0
 16389 142b 0C       		.uleb128 0xc
 16390 142c 1B140000 		.4byte	0x141b
 16391 1430 0C       		.uleb128 0xc
 16392 1431 1B140000 		.4byte	0x141b
 16393 1435 0D       		.uleb128 0xd
 16394 1436 25130000 		.4byte	0x1325
 16395 143a 45140000 		.4byte	0x1445
 16396 143e 0E       		.uleb128 0xe
 16397 143f 9E000000 		.4byte	0x9e
 16398 1443 02       		.byte	0x2
 16399 1444 00       		.byte	0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 365


 16400 1445 0C       		.uleb128 0xc
 16401 1446 35140000 		.4byte	0x1435
 16402 144a 0C       		.uleb128 0xc
 16403 144b 35140000 		.4byte	0x1435
 16404 144f 0D       		.uleb128 0xd
 16405 1450 25130000 		.4byte	0x1325
 16406 1454 5F140000 		.4byte	0x145f
 16407 1458 0E       		.uleb128 0xe
 16408 1459 9E000000 		.4byte	0x9e
 16409 145d 05       		.byte	0x5
 16410 145e 00       		.byte	0
 16411 145f 0C       		.uleb128 0xc
 16412 1460 4F140000 		.4byte	0x144f
 16413 1464 0C       		.uleb128 0xc
 16414 1465 4F140000 		.4byte	0x144f
 16415 1469 22       		.uleb128 0x22
 16416 146a 390A0000 		.4byte	.LASF269
 16417 146e 01       		.byte	0x1
 16418 146f A801     		.2byte	0x1a8
 16419 1471 0E010000 		.4byte	0x10e
 16420 1475 00000000 		.4byte	.LFB13
 16421 1479 48010000 		.4byte	.LFE13-.LFB13
 16422 147d 01       		.uleb128 0x1
 16423 147e 9C       		.byte	0x9c
 16424 147f 4E150000 		.4byte	0x154e
 16425 1483 1B       		.uleb128 0x1b
 16426 1484 42190000 		.4byte	.LASF266
 16427 1488 01       		.byte	0x1
 16428 1489 A801     		.2byte	0x1a8
 16429 148b 15140000 		.4byte	0x1415
 16430 148f 02       		.uleb128 0x2
 16431 1490 91       		.byte	0x91
 16432 1491 4C       		.sleb128 -52
 16433 1492 20       		.uleb128 0x20
 16434 1493 646C00   		.ascii	"dl\000"
 16435 1496 01       		.byte	0x1
 16436 1497 A801     		.2byte	0x1a8
 16437 1499 2A130000 		.4byte	0x132a
 16438 149d 02       		.uleb128 0x2
 16439 149e 91       		.byte	0x91
 16440 149f 48       		.sleb128 -56
 16441 14a0 23       		.uleb128 0x23
 16442 14a1 2A000000 		.4byte	.LBB6
 16443 14a5 44000000 		.4byte	.LBE6-.LBB6
 16444 14a9 DB140000 		.4byte	0x14db
 16445 14ad 1D       		.uleb128 0x1d
 16446 14ae 34180000 		.4byte	.LASF267
 16447 14b2 01       		.byte	0x1
 16448 14b3 B001     		.2byte	0x1b0
 16449 14b5 5E150000 		.4byte	0x155e
 16450 14b9 02       		.uleb128 0x2
 16451 14ba 91       		.byte	0x91
 16452 14bb 74       		.sleb128 -12
 16453 14bc 1D       		.uleb128 0x1d
 16454 14bd 63170000 		.4byte	.LASF270
 16455 14c1 01       		.byte	0x1
 16456 14c2 B101     		.2byte	0x1b1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 366


 16457 14c4 63150000 		.4byte	0x1563
 16458 14c8 02       		.uleb128 0x2
 16459 14c9 91       		.byte	0x91
 16460 14ca 70       		.sleb128 -16
 16461 14cb 1D       		.uleb128 0x1d
 16462 14cc B80B0000 		.4byte	.LASF264
 16463 14d0 01       		.byte	0x1
 16464 14d1 B201     		.2byte	0x1b2
 16465 14d3 BC000000 		.4byte	0xbc
 16466 14d7 02       		.uleb128 0x2
 16467 14d8 91       		.byte	0x91
 16468 14d9 6F       		.sleb128 -17
 16469 14da 00       		.byte	0
 16470 14db 23       		.uleb128 0x23
 16471 14dc 7E000000 		.4byte	.LBB7
 16472 14e0 42000000 		.4byte	.LBE7-.LBB7
 16473 14e4 16150000 		.4byte	0x1516
 16474 14e8 1D       		.uleb128 0x1d
 16475 14e9 34180000 		.4byte	.LASF267
 16476 14ed 01       		.byte	0x1
 16477 14ee BD01     		.2byte	0x1bd
 16478 14f0 68150000 		.4byte	0x1568
 16479 14f4 02       		.uleb128 0x2
 16480 14f5 91       		.byte	0x91
 16481 14f6 6C       		.sleb128 -20
 16482 14f7 1D       		.uleb128 0x1d
 16483 14f8 63170000 		.4byte	.LASF270
 16484 14fc 01       		.byte	0x1
 16485 14fd BE01     		.2byte	0x1be
 16486 14ff 6D150000 		.4byte	0x156d
 16487 1503 02       		.uleb128 0x2
 16488 1504 91       		.byte	0x91
 16489 1505 68       		.sleb128 -24
 16490 1506 1D       		.uleb128 0x1d
 16491 1507 B80B0000 		.4byte	.LASF264
 16492 150b 01       		.byte	0x1
 16493 150c BF01     		.2byte	0x1bf
 16494 150e BC000000 		.4byte	0xbc
 16495 1512 02       		.uleb128 0x2
 16496 1513 91       		.byte	0x91
 16497 1514 67       		.sleb128 -25
 16498 1515 00       		.byte	0
 16499 1516 21       		.uleb128 0x21
 16500 1517 D0000000 		.4byte	.LBB8
 16501 151b 4A000000 		.4byte	.LBE8-.LBB8
 16502 151f 1D       		.uleb128 0x1d
 16503 1520 34180000 		.4byte	.LASF267
 16504 1524 01       		.byte	0x1
 16505 1525 CA01     		.2byte	0x1ca
 16506 1527 72150000 		.4byte	0x1572
 16507 152b 02       		.uleb128 0x2
 16508 152c 91       		.byte	0x91
 16509 152d 60       		.sleb128 -32
 16510 152e 1D       		.uleb128 0x1d
 16511 152f 63170000 		.4byte	.LASF270
 16512 1533 01       		.byte	0x1
 16513 1534 CC01     		.2byte	0x1cc
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 367


 16514 1536 77150000 		.4byte	0x1577
 16515 153a 02       		.uleb128 0x2
 16516 153b 91       		.byte	0x91
 16517 153c 58       		.sleb128 -40
 16518 153d 1D       		.uleb128 0x1d
 16519 153e B80B0000 		.4byte	.LASF264
 16520 1542 01       		.byte	0x1
 16521 1543 CD01     		.2byte	0x1cd
 16522 1545 BC000000 		.4byte	0xbc
 16523 1549 02       		.uleb128 0x2
 16524 154a 91       		.byte	0x91
 16525 154b 57       		.sleb128 -41
 16526 154c 00       		.byte	0
 16527 154d 00       		.byte	0
 16528 154e 0D       		.uleb128 0xd
 16529 154f 25130000 		.4byte	0x1325
 16530 1553 5E150000 		.4byte	0x155e
 16531 1557 0E       		.uleb128 0xe
 16532 1558 9E000000 		.4byte	0x9e
 16533 155c 01       		.byte	0x1
 16534 155d 00       		.byte	0
 16535 155e 0C       		.uleb128 0xc
 16536 155f 4E150000 		.4byte	0x154e
 16537 1563 0C       		.uleb128 0xc
 16538 1564 4E150000 		.4byte	0x154e
 16539 1568 0C       		.uleb128 0xc
 16540 1569 4E150000 		.4byte	0x154e
 16541 156d 0C       		.uleb128 0xc
 16542 156e 4E150000 		.4byte	0x154e
 16543 1572 0C       		.uleb128 0xc
 16544 1573 4F140000 		.4byte	0x144f
 16545 1577 0C       		.uleb128 0xc
 16546 1578 4F140000 		.4byte	0x144f
 16547 157c 24       		.uleb128 0x24
 16548 157d B10F0000 		.4byte	.LASF271
 16549 1581 01       		.byte	0x1
 16550 1582 E001     		.2byte	0x1e0
 16551 1584 00000000 		.4byte	.LFB14
 16552 1588 B8020000 		.4byte	.LFE14-.LFB14
 16553 158c 01       		.uleb128 0x1
 16554 158d 9C       		.byte	0x9c
 16555 158e 2A160000 		.4byte	0x162a
 16556 1592 1B       		.uleb128 0x1b
 16557 1593 42190000 		.4byte	.LASF266
 16558 1597 01       		.byte	0x1
 16559 1598 E001     		.2byte	0x1e0
 16560 159a 2A160000 		.4byte	0x162a
 16561 159e 03       		.uleb128 0x3
 16562 159f 91       		.byte	0x91
 16563 15a0 847F     		.sleb128 -124
 16564 15a2 1B       		.uleb128 0x1b
 16565 15a3 E10F0000 		.4byte	.LASF272
 16566 15a7 01       		.byte	0x1
 16567 15a8 E001     		.2byte	0x1e0
 16568 15aa 48100000 		.4byte	0x1048
 16569 15ae 03       		.uleb128 0x3
 16570 15af 91       		.byte	0x91
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 368


 16571 15b0 807F     		.sleb128 -128
 16572 15b2 1D       		.uleb128 0x1d
 16573 15b3 FC190000 		.4byte	.LASF241
 16574 15b7 01       		.byte	0x1
 16575 15b8 E201     		.2byte	0x1e2
 16576 15ba DD000000 		.4byte	0xdd
 16577 15be 02       		.uleb128 0x2
 16578 15bf 91       		.byte	0x91
 16579 15c0 68       		.sleb128 -24
 16580 15c1 1D       		.uleb128 0x1d
 16581 15c2 C6090000 		.4byte	.LASF273
 16582 15c6 01       		.byte	0x1
 16583 15c7 E301     		.2byte	0x1e3
 16584 15c9 40160000 		.4byte	0x1640
 16585 15cd 03       		.uleb128 0x3
 16586 15ce 91       		.byte	0x91
 16587 15cf B47F     		.sleb128 -76
 16588 15d1 1D       		.uleb128 0x1d
 16589 15d2 2B170000 		.4byte	.LASF274
 16590 15d6 01       		.byte	0x1
 16591 15d7 E401     		.2byte	0x1e4
 16592 15d9 55160000 		.4byte	0x1655
 16593 15dd 03       		.uleb128 0x3
 16594 15de 91       		.byte	0x91
 16595 15df A47F     		.sleb128 -92
 16596 15e1 21       		.uleb128 0x21
 16597 15e2 52010000 		.4byte	.LBB9
 16598 15e6 9C000000 		.4byte	.LBE9-.LBB9
 16599 15ea 1D       		.uleb128 0x1d
 16600 15eb C1170000 		.4byte	.LASF275
 16601 15ef 01       		.byte	0x1
 16602 15f0 FE01     		.2byte	0x1fe
 16603 15f2 7B020000 		.4byte	0x27b
 16604 15f6 03       		.uleb128 0x3
 16605 15f7 91       		.byte	0x91
 16606 15f8 907F     		.sleb128 -112
 16607 15fa 1E       		.uleb128 0x1e
 16608 15fb 646C00   		.ascii	"dl\000"
 16609 15fe 01       		.byte	0x1
 16610 15ff 0202     		.2byte	0x202
 16611 1601 BC000000 		.4byte	0xbc
 16612 1605 02       		.uleb128 0x2
 16613 1606 91       		.byte	0x91
 16614 1607 6F       		.sleb128 -17
 16615 1608 1D       		.uleb128 0x1d
 16616 1609 E4080000 		.4byte	.LASF276
 16617 160d 01       		.byte	0x1
 16618 160e 0202     		.2byte	0x202
 16619 1610 BC000000 		.4byte	0xbc
 16620 1614 03       		.uleb128 0x3
 16621 1615 91       		.byte	0x91
 16622 1616 8F7F     		.sleb128 -113
 16623 1618 1D       		.uleb128 0x1d
 16624 1619 22110000 		.4byte	.LASF277
 16625 161d 01       		.byte	0x1
 16626 161e 0202     		.2byte	0x202
 16627 1620 BC000000 		.4byte	0xbc
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 369


 16628 1624 03       		.uleb128 0x3
 16629 1625 91       		.byte	0x91
 16630 1626 8E7F     		.sleb128 -114
 16631 1628 00       		.byte	0
 16632 1629 00       		.byte	0
 16633 162a 0B       		.uleb128 0xb
 16634 162b 04       		.byte	0x4
 16635 162c B90E0000 		.4byte	0xeb9
 16636 1630 0D       		.uleb128 0xd
 16637 1631 AC080000 		.4byte	0x8ac
 16638 1635 40160000 		.4byte	0x1640
 16639 1639 0E       		.uleb128 0xe
 16640 163a 9E000000 		.4byte	0x9e
 16641 163e 0C       		.byte	0xc
 16642 163f 00       		.byte	0
 16643 1640 0C       		.uleb128 0xc
 16644 1641 30160000 		.4byte	0x1630
 16645 1645 0D       		.uleb128 0xd
 16646 1646 AC080000 		.4byte	0x8ac
 16647 164a 55160000 		.4byte	0x1655
 16648 164e 0E       		.uleb128 0xe
 16649 164f 9E000000 		.4byte	0x9e
 16650 1653 03       		.byte	0x3
 16651 1654 00       		.byte	0
 16652 1655 0C       		.uleb128 0xc
 16653 1656 45160000 		.4byte	0x1645
 16654 165a 24       		.uleb128 0x24
 16655 165b DA0D0000 		.4byte	.LASF278
 16656 165f 01       		.byte	0x1
 16657 1660 3902     		.2byte	0x239
 16658 1662 00000000 		.4byte	.LFB15
 16659 1666 F4020000 		.4byte	.LFE15-.LFB15
 16660 166a 01       		.uleb128 0x1
 16661 166b 9C       		.byte	0x9c
 16662 166c 9E160000 		.4byte	0x169e
 16663 1670 1B       		.uleb128 0x1b
 16664 1671 2B150000 		.4byte	.LASF279
 16665 1675 01       		.byte	0x1
 16666 1676 3902     		.2byte	0x239
 16667 1678 9E160000 		.4byte	0x169e
 16668 167c 02       		.uleb128 0x2
 16669 167d 91       		.byte	0x91
 16670 167e 54       		.sleb128 -44
 16671 167f 1B       		.uleb128 0x1b
 16672 1680 F2170000 		.4byte	.LASF280
 16673 1684 01       		.byte	0x1
 16674 1685 3902     		.2byte	0x239
 16675 1687 A4160000 		.4byte	0x16a4
 16676 168b 02       		.uleb128 0x2
 16677 168c 91       		.byte	0x91
 16678 168d 50       		.sleb128 -48
 16679 168e 1D       		.uleb128 0x1d
 16680 168f 60100000 		.4byte	.LASF281
 16681 1693 01       		.byte	0x1
 16682 1694 3B02     		.2byte	0x23b
 16683 1696 B5000000 		.4byte	0xb5
 16684 169a 02       		.uleb128 0x2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 370


 16685 169b 91       		.byte	0x91
 16686 169c 5C       		.sleb128 -36
 16687 169d 00       		.byte	0
 16688 169e 0B       		.uleb128 0xb
 16689 169f 04       		.byte	0x4
 16690 16a0 1D0F0000 		.4byte	0xf1d
 16691 16a4 0B       		.uleb128 0xb
 16692 16a5 04       		.byte	0x4
 16693 16a6 B5000000 		.4byte	0xb5
 16694 16aa 24       		.uleb128 0x24
 16695 16ab EE1A0000 		.4byte	.LASF282
 16696 16af 01       		.byte	0x1
 16697 16b0 6802     		.2byte	0x268
 16698 16b2 00000000 		.4byte	.LFB16
 16699 16b6 1C000000 		.4byte	.LFE16-.LFB16
 16700 16ba 01       		.uleb128 0x1
 16701 16bb 9C       		.byte	0x9c
 16702 16bc DF160000 		.4byte	0x16df
 16703 16c0 1B       		.uleb128 0x1b
 16704 16c1 99120000 		.4byte	.LASF283
 16705 16c5 01       		.byte	0x1
 16706 16c6 6802     		.2byte	0x268
 16707 16c8 A5000000 		.4byte	0xa5
 16708 16cc 02       		.uleb128 0x2
 16709 16cd 91       		.byte	0x91
 16710 16ce 74       		.sleb128 -12
 16711 16cf 1B       		.uleb128 0x1b
 16712 16d0 29140000 		.4byte	.LASF284
 16713 16d4 01       		.byte	0x1
 16714 16d5 6802     		.2byte	0x268
 16715 16d7 DD000000 		.4byte	0xdd
 16716 16db 02       		.uleb128 0x2
 16717 16dc 91       		.byte	0x91
 16718 16dd 70       		.sleb128 -16
 16719 16de 00       		.byte	0
 16720 16df 22       		.uleb128 0x22
 16721 16e0 80070000 		.4byte	.LASF285
 16722 16e4 01       		.byte	0x1
 16723 16e5 7402     		.2byte	0x274
 16724 16e7 B5000000 		.4byte	0xb5
 16725 16eb 00000000 		.4byte	.LFB17
 16726 16ef C0000000 		.4byte	.LFE17-.LFB17
 16727 16f3 01       		.uleb128 0x1
 16728 16f4 9C       		.byte	0x9c
 16729 16f5 54170000 		.4byte	0x1754
 16730 16f9 1B       		.uleb128 0x1b
 16731 16fa F5150000 		.4byte	.LASF286
 16732 16fe 01       		.byte	0x1
 16733 16ff 7402     		.2byte	0x274
 16734 1701 DD000000 		.4byte	0xdd
 16735 1705 02       		.uleb128 0x2
 16736 1706 91       		.byte	0x91
 16737 1707 64       		.sleb128 -28
 16738 1708 1B       		.uleb128 0x1b
 16739 1709 96000000 		.4byte	.LASF42
 16740 170d 01       		.byte	0x1
 16741 170e 7402     		.2byte	0x274
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 371


 16742 1710 DD000000 		.4byte	0xdd
 16743 1714 02       		.uleb128 0x2
 16744 1715 91       		.byte	0x91
 16745 1716 60       		.sleb128 -32
 16746 1717 1B       		.uleb128 0x1b
 16747 1718 01070000 		.4byte	.LASF207
 16748 171c 01       		.byte	0x1
 16749 171d 7402     		.2byte	0x274
 16750 171f B5000000 		.4byte	0xb5
 16751 1723 02       		.uleb128 0x2
 16752 1724 91       		.byte	0x91
 16753 1725 5C       		.sleb128 -36
 16754 1726 1D       		.uleb128 0x1d
 16755 1727 F7120000 		.4byte	.LASF287
 16756 172b 01       		.byte	0x1
 16757 172c 7602     		.2byte	0x276
 16758 172e B5000000 		.4byte	0xb5
 16759 1732 02       		.uleb128 0x2
 16760 1733 91       		.byte	0x91
 16761 1734 70       		.sleb128 -16
 16762 1735 1D       		.uleb128 0x1d
 16763 1736 62050000 		.4byte	.LASF288
 16764 173a 01       		.byte	0x1
 16765 173b 7702     		.2byte	0x277
 16766 173d B5000000 		.4byte	0xb5
 16767 1741 02       		.uleb128 0x2
 16768 1742 91       		.byte	0x91
 16769 1743 6C       		.sleb128 -20
 16770 1744 1E       		.uleb128 0x1e
 16771 1745 746D7000 		.ascii	"tmp\000"
 16772 1749 01       		.byte	0x1
 16773 174a 7802     		.2byte	0x278
 16774 174c B5000000 		.4byte	0xb5
 16775 1750 02       		.uleb128 0x2
 16776 1751 91       		.byte	0x91
 16777 1752 74       		.sleb128 -12
 16778 1753 00       		.byte	0
 16779 1754 22       		.uleb128 0x22
 16780 1755 50020000 		.4byte	.LASF289
 16781 1759 01       		.byte	0x1
 16782 175a 9602     		.2byte	0x296
 16783 175c 7D0F0000 		.4byte	0xf7d
 16784 1760 00000000 		.4byte	.LFB18
 16785 1764 D6000000 		.4byte	.LFE18-.LFB18
 16786 1768 01       		.uleb128 0x1
 16787 1769 9C       		.byte	0x9c
 16788 176a A7170000 		.4byte	0x17a7
 16789 176e 20       		.uleb128 0x20
 16790 176f 6100     		.ascii	"a\000"
 16791 1771 01       		.byte	0x1
 16792 1772 9602     		.2byte	0x296
 16793 1774 A7170000 		.4byte	0x17a7
 16794 1778 02       		.uleb128 0x2
 16795 1779 91       		.byte	0x91
 16796 177a 58       		.sleb128 -40
 16797 177b 20       		.uleb128 0x20
 16798 177c 6200     		.ascii	"b\000"
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 372


 16799 177e 01       		.byte	0x1
 16800 177f 9602     		.2byte	0x296
 16801 1781 A7170000 		.4byte	0x17a7
 16802 1785 02       		.uleb128 0x2
 16803 1786 91       		.byte	0x91
 16804 1787 54       		.sleb128 -44
 16805 1788 1E       		.uleb128 0x1e
 16806 1789 72657300 		.ascii	"res\000"
 16807 178d 01       		.byte	0x1
 16808 178e 9802     		.2byte	0x298
 16809 1790 7D0F0000 		.4byte	0xf7d
 16810 1794 02       		.uleb128 0x2
 16811 1795 91       		.byte	0x91
 16812 1796 64       		.sleb128 -28
 16813 1797 1D       		.uleb128 0x1d
 16814 1798 FC190000 		.4byte	.LASF241
 16815 179c 01       		.byte	0x1
 16816 179d 9902     		.2byte	0x299
 16817 179f B5000000 		.4byte	0xb5
 16818 17a3 02       		.uleb128 0x2
 16819 17a4 91       		.byte	0x91
 16820 17a5 6C       		.sleb128 -20
 16821 17a6 00       		.byte	0
 16822 17a7 0B       		.uleb128 0xb
 16823 17a8 04       		.byte	0x4
 16824 17a9 7D0F0000 		.4byte	0xf7d
 16825 17ad 22       		.uleb128 0x22
 16826 17ae DB0C0000 		.4byte	.LASF290
 16827 17b2 01       		.byte	0x1
 16828 17b3 A802     		.2byte	0x2a8
 16829 17b5 7D0F0000 		.4byte	0xf7d
 16830 17b9 00000000 		.4byte	.LFB19
 16831 17bd 88000000 		.4byte	.LFE19-.LFB19
 16832 17c1 01       		.uleb128 0x1
 16833 17c2 9C       		.byte	0x9c
 16834 17c3 F1170000 		.4byte	0x17f1
 16835 17c7 20       		.uleb128 0x20
 16836 17c8 6100     		.ascii	"a\000"
 16837 17ca 01       		.byte	0x1
 16838 17cb A802     		.2byte	0x2a8
 16839 17cd A7170000 		.4byte	0x17a7
 16840 17d1 02       		.uleb128 0x2
 16841 17d2 91       		.byte	0x91
 16842 17d3 60       		.sleb128 -32
 16843 17d4 20       		.uleb128 0x20
 16844 17d5 6200     		.ascii	"b\000"
 16845 17d7 01       		.byte	0x1
 16846 17d8 A802     		.2byte	0x2a8
 16847 17da A7170000 		.4byte	0x17a7
 16848 17de 02       		.uleb128 0x2
 16849 17df 91       		.byte	0x91
 16850 17e0 5C       		.sleb128 -36
 16851 17e1 1E       		.uleb128 0x1e
 16852 17e2 72657300 		.ascii	"res\000"
 16853 17e6 01       		.byte	0x1
 16854 17e7 AA02     		.2byte	0x2aa
 16855 17e9 7D0F0000 		.4byte	0xf7d
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 373


 16856 17ed 02       		.uleb128 0x2
 16857 17ee 91       		.byte	0x91
 16858 17ef 68       		.sleb128 -24
 16859 17f0 00       		.byte	0
 16860 17f1 22       		.uleb128 0x22
 16861 17f2 F50B0000 		.4byte	.LASF291
 16862 17f6 01       		.byte	0x1
 16863 17f7 B702     		.2byte	0x2b7
 16864 17f9 7D0F0000 		.4byte	0xf7d
 16865 17fd 00000000 		.4byte	.LFB20
 16866 1801 4C000000 		.4byte	.LFE20-.LFB20
 16867 1805 01       		.uleb128 0x1
 16868 1806 9C       		.byte	0x9c
 16869 1807 35180000 		.4byte	0x1835
 16870 180b 20       		.uleb128 0x20
 16871 180c 6100     		.ascii	"a\000"
 16872 180e 01       		.byte	0x1
 16873 180f B702     		.2byte	0x2b7
 16874 1811 A7170000 		.4byte	0x17a7
 16875 1815 02       		.uleb128 0x2
 16876 1816 91       		.byte	0x91
 16877 1817 68       		.sleb128 -24
 16878 1818 20       		.uleb128 0x20
 16879 1819 6200     		.ascii	"b\000"
 16880 181b 01       		.byte	0x1
 16881 181c B702     		.2byte	0x2b7
 16882 181e A7170000 		.4byte	0x17a7
 16883 1822 02       		.uleb128 0x2
 16884 1823 91       		.byte	0x91
 16885 1824 64       		.sleb128 -28
 16886 1825 1E       		.uleb128 0x1e
 16887 1826 72657300 		.ascii	"res\000"
 16888 182a 01       		.byte	0x1
 16889 182b B902     		.2byte	0x2b9
 16890 182d 7D0F0000 		.4byte	0xf7d
 16891 1831 02       		.uleb128 0x2
 16892 1832 91       		.byte	0x91
 16893 1833 70       		.sleb128 -16
 16894 1834 00       		.byte	0
 16895 1835 22       		.uleb128 0x22
 16896 1836 210D0000 		.4byte	.LASF292
 16897 183a 01       		.byte	0x1
 16898 183b C702     		.2byte	0x2c7
 16899 183d 7D0F0000 		.4byte	0xf7d
 16900 1841 00000000 		.4byte	.LFB21
 16901 1845 4C000000 		.4byte	.LFE21-.LFB21
 16902 1849 01       		.uleb128 0x1
 16903 184a 9C       		.byte	0x9c
 16904 184b 79180000 		.4byte	0x1879
 16905 184f 20       		.uleb128 0x20
 16906 1850 6100     		.ascii	"a\000"
 16907 1852 01       		.byte	0x1
 16908 1853 C702     		.2byte	0x2c7
 16909 1855 A7170000 		.4byte	0x17a7
 16910 1859 02       		.uleb128 0x2
 16911 185a 91       		.byte	0x91
 16912 185b 68       		.sleb128 -24
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 374


 16913 185c 20       		.uleb128 0x20
 16914 185d 6200     		.ascii	"b\000"
 16915 185f 01       		.byte	0x1
 16916 1860 C702     		.2byte	0x2c7
 16917 1862 A7170000 		.4byte	0x17a7
 16918 1866 02       		.uleb128 0x2
 16919 1867 91       		.byte	0x91
 16920 1868 64       		.sleb128 -28
 16921 1869 1E       		.uleb128 0x1e
 16922 186a 72657300 		.ascii	"res\000"
 16923 186e 01       		.byte	0x1
 16924 186f C902     		.2byte	0x2c9
 16925 1871 7D0F0000 		.4byte	0xf7d
 16926 1875 02       		.uleb128 0x2
 16927 1876 91       		.byte	0x91
 16928 1877 70       		.sleb128 -16
 16929 1878 00       		.byte	0
 16930 1879 22       		.uleb128 0x22
 16931 187a 61030000 		.4byte	.LASF293
 16932 187e 01       		.byte	0x1
 16933 187f D702     		.2byte	0x2d7
 16934 1881 7D0F0000 		.4byte	0xf7d
 16935 1885 00000000 		.4byte	.LFB22
 16936 1889 36010000 		.4byte	.LFE22-.LFB22
 16937 188d 01       		.uleb128 0x1
 16938 188e 9C       		.byte	0x9c
 16939 188f CC180000 		.4byte	0x18cc
 16940 1893 20       		.uleb128 0x20
 16941 1894 6100     		.ascii	"a\000"
 16942 1896 01       		.byte	0x1
 16943 1897 D702     		.2byte	0x2d7
 16944 1899 CC180000 		.4byte	0x18cc
 16945 189d 02       		.uleb128 0x2
 16946 189e 91       		.byte	0x91
 16947 189f 58       		.sleb128 -40
 16948 18a0 20       		.uleb128 0x20
 16949 18a1 6200     		.ascii	"b\000"
 16950 18a3 01       		.byte	0x1
 16951 18a4 D702     		.2byte	0x2d7
 16952 18a6 CC180000 		.4byte	0x18cc
 16953 18aa 02       		.uleb128 0x2
 16954 18ab 91       		.byte	0x91
 16955 18ac 54       		.sleb128 -44
 16956 18ad 1E       		.uleb128 0x1e
 16957 18ae 72657300 		.ascii	"res\000"
 16958 18b2 01       		.byte	0x1
 16959 18b3 D902     		.2byte	0x2d9
 16960 18b5 7D0F0000 		.4byte	0xf7d
 16961 18b9 02       		.uleb128 0x2
 16962 18ba 91       		.byte	0x91
 16963 18bb 64       		.sleb128 -28
 16964 18bc 1D       		.uleb128 0x1d
 16965 18bd FC190000 		.4byte	.LASF241
 16966 18c1 01       		.byte	0x1
 16967 18c2 DA02     		.2byte	0x2da
 16968 18c4 B5000000 		.4byte	0xb5
 16969 18c8 02       		.uleb128 0x2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 375


 16970 18c9 91       		.byte	0x91
 16971 18ca 6C       		.sleb128 -20
 16972 18cb 00       		.byte	0
 16973 18cc 0B       		.uleb128 0xb
 16974 18cd 04       		.byte	0x4
 16975 18ce AD0F0000 		.4byte	0xfad
 16976 18d2 22       		.uleb128 0x22
 16977 18d3 7C090000 		.4byte	.LASF294
 16978 18d7 01       		.byte	0x1
 16979 18d8 E902     		.2byte	0x2e9
 16980 18da 7D0F0000 		.4byte	0xf7d
 16981 18de 00000000 		.4byte	.LFB23
 16982 18e2 C8000000 		.4byte	.LFE23-.LFB23
 16983 18e6 01       		.uleb128 0x1
 16984 18e7 9C       		.byte	0x9c
 16985 18e8 16190000 		.4byte	0x1916
 16986 18ec 20       		.uleb128 0x20
 16987 18ed 6100     		.ascii	"a\000"
 16988 18ef 01       		.byte	0x1
 16989 18f0 E902     		.2byte	0x2e9
 16990 18f2 CC180000 		.4byte	0x18cc
 16991 18f6 02       		.uleb128 0x2
 16992 18f7 91       		.byte	0x91
 16993 18f8 60       		.sleb128 -32
 16994 18f9 20       		.uleb128 0x20
 16995 18fa 6200     		.ascii	"b\000"
 16996 18fc 01       		.byte	0x1
 16997 18fd E902     		.2byte	0x2e9
 16998 18ff CC180000 		.4byte	0x18cc
 16999 1903 02       		.uleb128 0x2
 17000 1904 91       		.byte	0x91
 17001 1905 5C       		.sleb128 -36
 17002 1906 1E       		.uleb128 0x1e
 17003 1907 72657300 		.ascii	"res\000"
 17004 190b 01       		.byte	0x1
 17005 190c EB02     		.2byte	0x2eb
 17006 190e 7D0F0000 		.4byte	0xf7d
 17007 1912 02       		.uleb128 0x2
 17008 1913 91       		.byte	0x91
 17009 1914 68       		.sleb128 -24
 17010 1915 00       		.byte	0
 17011 1916 22       		.uleb128 0x22
 17012 1917 650D0000 		.4byte	.LASF295
 17013 191b 01       		.byte	0x1
 17014 191c F802     		.2byte	0x2f8
 17015 191e B5000000 		.4byte	0xb5
 17016 1922 00000000 		.4byte	.LFB24
 17017 1926 60000000 		.4byte	.LFE24-.LFB24
 17018 192a 01       		.uleb128 0x1
 17019 192b 9C       		.byte	0x9c
 17020 192c 3E190000 		.4byte	0x193e
 17021 1930 20       		.uleb128 0x20
 17022 1931 6100     		.ascii	"a\000"
 17023 1933 01       		.byte	0x1
 17024 1934 F802     		.2byte	0x2f8
 17025 1936 A7170000 		.4byte	0x17a7
 17026 193a 02       		.uleb128 0x2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 376


 17027 193b 91       		.byte	0x91
 17028 193c 6C       		.sleb128 -20
 17029 193d 00       		.byte	0
 17030 193e 22       		.uleb128 0x22
 17031 193f 3C050000 		.4byte	.LASF296
 17032 1943 01       		.byte	0x1
 17033 1944 0203     		.2byte	0x302
 17034 1946 B5000000 		.4byte	0xb5
 17035 194a 00000000 		.4byte	.LFB25
 17036 194e 42000000 		.4byte	.LFE25-.LFB25
 17037 1952 01       		.uleb128 0x1
 17038 1953 9C       		.byte	0x9c
 17039 1954 66190000 		.4byte	0x1966
 17040 1958 20       		.uleb128 0x20
 17041 1959 6100     		.ascii	"a\000"
 17042 195b 01       		.byte	0x1
 17043 195c 0203     		.2byte	0x302
 17044 195e A7170000 		.4byte	0x17a7
 17045 1962 02       		.uleb128 0x2
 17046 1963 91       		.byte	0x91
 17047 1964 6C       		.sleb128 -20
 17048 1965 00       		.byte	0
 17049 1966 25       		.uleb128 0x25
 17050 1967 1D000000 		.4byte	.LASF297
 17051 196b 01       		.byte	0x1
 17052 196c 3603     		.2byte	0x336
 17053 196e 53000000 		.4byte	0x53
 17054 1972 00000000 		.4byte	.LFB26
 17055 1976 28000000 		.4byte	.LFE26-.LFB26
 17056 197a 01       		.uleb128 0x1
 17057 197b 9C       		.byte	0x9c
 17058 197c AC190000 		.4byte	0x19ac
 17059 1980 1B       		.uleb128 0x1b
 17060 1981 9E1A0000 		.4byte	.LASF298
 17061 1985 01       		.byte	0x1
 17062 1986 3603     		.2byte	0x336
 17063 1988 53000000 		.4byte	0x53
 17064 198c 02       		.uleb128 0x2
 17065 198d 91       		.byte	0x91
 17066 198e 6F       		.sleb128 -17
 17067 198f 1E       		.uleb128 0x1e
 17068 1990 747800   		.ascii	"tx\000"
 17069 1993 01       		.byte	0x1
 17070 1994 3803     		.2byte	0x338
 17071 1996 AC190000 		.4byte	0x19ac
 17072 199a 02       		.uleb128 0x2
 17073 199b 91       		.byte	0x91
 17074 199c 74       		.sleb128 -12
 17075 199d 1E       		.uleb128 0x1e
 17076 199e 727800   		.ascii	"rx\000"
 17077 19a1 01       		.byte	0x1
 17078 19a2 3803     		.2byte	0x338
 17079 19a4 AC190000 		.4byte	0x19ac
 17080 19a8 02       		.uleb128 0x2
 17081 19a9 91       		.byte	0x91
 17082 19aa 70       		.sleb128 -16
 17083 19ab 00       		.byte	0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 377


 17084 19ac 0D       		.uleb128 0xd
 17085 19ad BC000000 		.4byte	0xbc
 17086 19b1 BC190000 		.4byte	0x19bc
 17087 19b5 0E       		.uleb128 0xe
 17088 19b6 9E000000 		.4byte	0x9e
 17089 19ba 00       		.byte	0
 17090 19bb 00       		.byte	0
 17091 19bc 25       		.uleb128 0x25
 17092 19bd 0A020000 		.4byte	.LASF299
 17093 19c1 01       		.byte	0x1
 17094 19c2 4303     		.2byte	0x343
 17095 19c4 C7000000 		.4byte	0xc7
 17096 19c8 00000000 		.4byte	.LFB27
 17097 19cc 42000000 		.4byte	.LFE27-.LFB27
 17098 19d0 01       		.uleb128 0x1
 17099 19d1 9C       		.byte	0x9c
 17100 19d2 041A0000 		.4byte	0x1a04
 17101 19d6 1B       		.uleb128 0x1b
 17102 19d7 9E1A0000 		.4byte	.LASF298
 17103 19db 01       		.byte	0x1
 17104 19dc 4303     		.2byte	0x343
 17105 19de C7000000 		.4byte	0xc7
 17106 19e2 02       		.uleb128 0x2
 17107 19e3 91       		.byte	0x91
 17108 19e4 6E       		.sleb128 -18
 17109 19e5 1D       		.uleb128 0x1d
 17110 19e6 89190000 		.4byte	.LASF300
 17111 19ea 01       		.byte	0x1
 17112 19eb 4503     		.2byte	0x345
 17113 19ed 041A0000 		.4byte	0x1a04
 17114 19f1 02       		.uleb128 0x2
 17115 19f2 91       		.byte	0x91
 17116 19f3 74       		.sleb128 -12
 17117 19f4 1D       		.uleb128 0x1d
 17118 19f5 A8000000 		.4byte	.LASF301
 17119 19f9 01       		.byte	0x1
 17120 19fa 4603     		.2byte	0x346
 17121 19fc 041A0000 		.4byte	0x1a04
 17122 1a00 02       		.uleb128 0x2
 17123 1a01 91       		.byte	0x91
 17124 1a02 70       		.sleb128 -16
 17125 1a03 00       		.byte	0
 17126 1a04 0D       		.uleb128 0xd
 17127 1a05 BC000000 		.4byte	0xbc
 17128 1a09 141A0000 		.4byte	0x1a14
 17129 1a0d 0E       		.uleb128 0xe
 17130 1a0e 9E000000 		.4byte	0x9e
 17131 1a12 01       		.byte	0x1
 17132 1a13 00       		.byte	0
 17133 1a14 25       		.uleb128 0x25
 17134 1a15 AD180000 		.4byte	.LASF302
 17135 1a19 01       		.byte	0x1
 17136 1a1a 5203     		.2byte	0x352
 17137 1a1c DD000000 		.4byte	0xdd
 17138 1a20 00000000 		.4byte	.LFB28
 17139 1a24 52000000 		.4byte	.LFE28-.LFB28
 17140 1a28 01       		.uleb128 0x1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 378


 17141 1a29 9C       		.byte	0x9c
 17142 1a2a 5C1A0000 		.4byte	0x1a5c
 17143 1a2e 1B       		.uleb128 0x1b
 17144 1a2f 9E1A0000 		.4byte	.LASF298
 17145 1a33 01       		.byte	0x1
 17146 1a34 5203     		.2byte	0x352
 17147 1a36 DD000000 		.4byte	0xdd
 17148 1a3a 02       		.uleb128 0x2
 17149 1a3b 91       		.byte	0x91
 17150 1a3c 6C       		.sleb128 -20
 17151 1a3d 1D       		.uleb128 0x1d
 17152 1a3e 89190000 		.4byte	.LASF300
 17153 1a42 01       		.byte	0x1
 17154 1a43 5403     		.2byte	0x354
 17155 1a45 5C1A0000 		.4byte	0x1a5c
 17156 1a49 02       		.uleb128 0x2
 17157 1a4a 91       		.byte	0x91
 17158 1a4b 74       		.sleb128 -12
 17159 1a4c 1D       		.uleb128 0x1d
 17160 1a4d A8000000 		.4byte	.LASF301
 17161 1a51 01       		.byte	0x1
 17162 1a52 5503     		.2byte	0x355
 17163 1a54 5C1A0000 		.4byte	0x1a5c
 17164 1a58 02       		.uleb128 0x2
 17165 1a59 91       		.byte	0x91
 17166 1a5a 70       		.sleb128 -16
 17167 1a5b 00       		.byte	0
 17168 1a5c 0D       		.uleb128 0xd
 17169 1a5d BC000000 		.4byte	0xbc
 17170 1a61 6C1A0000 		.4byte	0x1a6c
 17171 1a65 0E       		.uleb128 0xe
 17172 1a66 9E000000 		.4byte	0x9e
 17173 1a6a 03       		.byte	0x3
 17174 1a6b 00       		.byte	0
 17175 1a6c 26       		.uleb128 0x26
 17176 1a6d DC010000 		.4byte	.LASF303
 17177 1a71 01       		.byte	0x1
 17178 1a72 6503     		.2byte	0x365
 17179 1a74 00000000 		.4byte	.LFB29
 17180 1a78 5C000000 		.4byte	.LFE29-.LFB29
 17181 1a7c 01       		.uleb128 0x1
 17182 1a7d 9C       		.byte	0x9c
 17183 1a7e A11A0000 		.4byte	0x1aa1
 17184 1a82 1B       		.uleb128 0x1b
 17185 1a83 250B0000 		.4byte	.LASF230
 17186 1a87 01       		.byte	0x1
 17187 1a88 6503     		.2byte	0x365
 17188 1a8a C7000000 		.4byte	0xc7
 17189 1a8e 02       		.uleb128 0x2
 17190 1a8f 91       		.byte	0x91
 17191 1a90 76       		.sleb128 -10
 17192 1a91 1B       		.uleb128 0x1b
 17193 1a92 86160000 		.4byte	.LASF245
 17194 1a96 01       		.byte	0x1
 17195 1a97 6503     		.2byte	0x365
 17196 1a99 DD000000 		.4byte	0xdd
 17197 1a9d 02       		.uleb128 0x2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 379


 17198 1a9e 91       		.byte	0x91
 17199 1a9f 70       		.sleb128 -16
 17200 1aa0 00       		.byte	0
 17201 1aa1 25       		.uleb128 0x25
 17202 1aa2 17080000 		.4byte	.LASF304
 17203 1aa6 01       		.byte	0x1
 17204 1aa7 7B03     		.2byte	0x37b
 17205 1aa9 DD000000 		.4byte	0xdd
 17206 1aad 00000000 		.4byte	.LFB30
 17207 1ab1 68000000 		.4byte	.LFE30-.LFB30
 17208 1ab5 01       		.uleb128 0x1
 17209 1ab6 9C       		.byte	0x9c
 17210 1ab7 DA1A0000 		.4byte	0x1ada
 17211 1abb 1B       		.uleb128 0x1b
 17212 1abc 250B0000 		.4byte	.LASF230
 17213 1ac0 01       		.byte	0x1
 17214 1ac1 7B03     		.2byte	0x37b
 17215 1ac3 C7000000 		.4byte	0xc7
 17216 1ac7 02       		.uleb128 0x2
 17217 1ac8 91       		.byte	0x91
 17218 1ac9 6E       		.sleb128 -18
 17219 1aca 1D       		.uleb128 0x1d
 17220 1acb 8E160000 		.4byte	.LASF305
 17221 1acf 01       		.byte	0x1
 17222 1ad0 7D03     		.2byte	0x37d
 17223 1ad2 DD000000 		.4byte	0xdd
 17224 1ad6 02       		.uleb128 0x2
 17225 1ad7 91       		.byte	0x91
 17226 1ad8 74       		.sleb128 -12
 17227 1ad9 00       		.byte	0
 17228 1ada 24       		.uleb128 0x24
 17229 1adb 6C120000 		.4byte	.LASF306
 17230 1adf 01       		.byte	0x1
 17231 1ae0 9603     		.2byte	0x396
 17232 1ae2 00000000 		.4byte	.LFB31
 17233 1ae6 E4000000 		.4byte	.LFE31-.LFB31
 17234 1aea 01       		.uleb128 0x1
 17235 1aeb 9C       		.byte	0x9c
 17236 1aec 331B0000 		.4byte	0x1b33
 17237 1af0 1B       		.uleb128 0x1b
 17238 1af1 E8050000 		.4byte	.LASF252
 17239 1af5 01       		.byte	0x1
 17240 1af6 9603     		.2byte	0x396
 17241 1af8 48100000 		.4byte	0x1048
 17242 1afc 02       		.uleb128 0x2
 17243 1afd 91       		.byte	0x91
 17244 1afe 64       		.sleb128 -28
 17245 1aff 1B       		.uleb128 0x1b
 17246 1b00 E5070000 		.4byte	.LASF307
 17247 1b04 01       		.byte	0x1
 17248 1b05 9603     		.2byte	0x396
 17249 1b07 DD000000 		.4byte	0xdd
 17250 1b0b 02       		.uleb128 0x2
 17251 1b0c 91       		.byte	0x91
 17252 1b0d 60       		.sleb128 -32
 17253 1b0e 1E       		.uleb128 0x1e
 17254 1b0f 6900     		.ascii	"i\000"
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 380


 17255 1b11 01       		.byte	0x1
 17256 1b12 9903     		.2byte	0x399
 17257 1b14 DD000000 		.4byte	0xdd
 17258 1b18 02       		.uleb128 0x2
 17259 1b19 91       		.byte	0x91
 17260 1b1a 6C       		.sleb128 -20
 17261 1b1b 21       		.uleb128 0x21
 17262 1b1c 10000000 		.4byte	.LBB10
 17263 1b20 50000000 		.4byte	.LBE10-.LBB10
 17264 1b24 1E       		.uleb128 0x1e
 17265 1b25 6900     		.ascii	"i\000"
 17266 1b27 01       		.byte	0x1
 17267 1b28 9E03     		.2byte	0x39e
 17268 1b2a DD000000 		.4byte	0xdd
 17269 1b2e 02       		.uleb128 0x2
 17270 1b2f 91       		.byte	0x91
 17271 1b30 68       		.sleb128 -24
 17272 1b31 00       		.byte	0
 17273 1b32 00       		.byte	0
 17274 1b33 24       		.uleb128 0x24
 17275 1b34 FB090000 		.4byte	.LASF308
 17276 1b38 01       		.byte	0x1
 17277 1b39 CC03     		.2byte	0x3cc
 17278 1b3b 00000000 		.4byte	.LFB32
 17279 1b3f 38000000 		.4byte	.LFE32-.LFB32
 17280 1b43 01       		.uleb128 0x1
 17281 1b44 9C       		.byte	0x9c
 17282 1b45 681B0000 		.4byte	0x1b68
 17283 1b49 1B       		.uleb128 0x1b
 17284 1b4a 250B0000 		.4byte	.LASF230
 17285 1b4e 01       		.byte	0x1
 17286 1b4f CC03     		.2byte	0x3cc
 17287 1b51 C7000000 		.4byte	0xc7
 17288 1b55 02       		.uleb128 0x2
 17289 1b56 91       		.byte	0x91
 17290 1b57 76       		.sleb128 -10
 17291 1b58 1B       		.uleb128 0x1b
 17292 1b59 86160000 		.4byte	.LASF245
 17293 1b5d 01       		.byte	0x1
 17294 1b5e CC03     		.2byte	0x3cc
 17295 1b60 DD000000 		.4byte	0xdd
 17296 1b64 02       		.uleb128 0x2
 17297 1b65 91       		.byte	0x91
 17298 1b66 70       		.sleb128 -16
 17299 1b67 00       		.byte	0
 17300 1b68 22       		.uleb128 0x22
 17301 1b69 3D1B0000 		.4byte	.LASF309
 17302 1b6d 01       		.byte	0x1
 17303 1b6e E003     		.2byte	0x3e0
 17304 1b70 DD000000 		.4byte	0xdd
 17305 1b74 00000000 		.4byte	.LFB33
 17306 1b78 34000000 		.4byte	.LFE33-.LFB33
 17307 1b7c 01       		.uleb128 0x1
 17308 1b7d 9C       		.byte	0x9c
 17309 1b7e 921B0000 		.4byte	0x1b92
 17310 1b82 1B       		.uleb128 0x1b
 17311 1b83 250B0000 		.4byte	.LASF230
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 381


 17312 1b87 01       		.byte	0x1
 17313 1b88 E003     		.2byte	0x3e0
 17314 1b8a C7000000 		.4byte	0xc7
 17315 1b8e 02       		.uleb128 0x2
 17316 1b8f 91       		.byte	0x91
 17317 1b90 76       		.sleb128 -10
 17318 1b91 00       		.byte	0
 17319 1b92 24       		.uleb128 0x24
 17320 1b93 F0050000 		.4byte	.LASF310
 17321 1b97 01       		.byte	0x1
 17322 1b98 0004     		.2byte	0x400
 17323 1b9a 00000000 		.4byte	.LFB34
 17324 1b9e B8000000 		.4byte	.LFE34-.LFB34
 17325 1ba2 01       		.uleb128 0x1
 17326 1ba3 9C       		.byte	0x9c
 17327 1ba4 EF1B0000 		.4byte	0x1bef
 17328 1ba8 1E       		.uleb128 0x1e
 17329 1ba9 6900     		.ascii	"i\000"
 17330 1bab 01       		.byte	0x1
 17331 1bac 0204     		.2byte	0x402
 17332 1bae 25000000 		.4byte	0x25
 17333 1bb2 02       		.uleb128 0x2
 17334 1bb3 91       		.byte	0x91
 17335 1bb4 74       		.sleb128 -12
 17336 1bb5 09       		.uleb128 0x9
 17337 1bb6 08       		.byte	0x8
 17338 1bb7 01       		.byte	0x1
 17339 1bb8 0404     		.2byte	0x404
 17340 1bba D91B0000 		.4byte	0x1bd9
 17341 1bbe 0A       		.uleb128 0xa
 17342 1bbf 23070000 		.4byte	.LASF311
 17343 1bc3 01       		.byte	0x1
 17344 1bc4 0604     		.2byte	0x406
 17345 1bc6 C7000000 		.4byte	0xc7
 17346 1bca 00       		.byte	0
 17347 1bcb 0A       		.uleb128 0xa
 17348 1bcc DC040000 		.4byte	.LASF312
 17349 1bd0 01       		.byte	0x1
 17350 1bd1 0704     		.2byte	0x407
 17351 1bd3 DD000000 		.4byte	0xdd
 17352 1bd7 04       		.byte	0x4
 17353 1bd8 00       		.byte	0
 17354 1bd9 0C       		.uleb128 0xc
 17355 1bda B51B0000 		.4byte	0x1bb5
 17356 1bde 1D       		.uleb128 0x1d
 17357 1bdf AD040000 		.4byte	.LASF313
 17358 1be3 01       		.byte	0x1
 17359 1be4 0804     		.2byte	0x408
 17360 1be6 FF1B0000 		.4byte	0x1bff
 17361 1bea 03       		.uleb128 0x3
 17362 1beb 91       		.byte	0x91
 17363 1bec 847F     		.sleb128 -124
 17364 1bee 00       		.byte	0
 17365 1bef 0D       		.uleb128 0xd
 17366 1bf0 D91B0000 		.4byte	0x1bd9
 17367 1bf4 FF1B0000 		.4byte	0x1bff
 17368 1bf8 0E       		.uleb128 0xe
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 382


 17369 1bf9 9E000000 		.4byte	0x9e
 17370 1bfd 0D       		.byte	0xd
 17371 1bfe 00       		.byte	0
 17372 1bff 0C       		.uleb128 0xc
 17373 1c00 EF1B0000 		.4byte	0x1bef
 17374 1c04 24       		.uleb128 0x24
 17375 1c05 24090000 		.4byte	.LASF314
 17376 1c09 01       		.byte	0x1
 17377 1c0a 4C04     		.2byte	0x44c
 17378 1c0c 00000000 		.4byte	.LFB35
 17379 1c10 AA000000 		.4byte	.LFE35-.LFB35
 17380 1c14 01       		.uleb128 0x1
 17381 1c15 9C       		.byte	0x9c
 17382 1c16 481C0000 		.4byte	0x1c48
 17383 1c1a 1B       		.uleb128 0x1b
 17384 1c1b 9D000000 		.4byte	.LASF315
 17385 1c1f 01       		.byte	0x1
 17386 1c20 4C04     		.2byte	0x44c
 17387 1c22 DD000000 		.4byte	0xdd
 17388 1c26 02       		.uleb128 0x2
 17389 1c27 91       		.byte	0x91
 17390 1c28 6C       		.sleb128 -20
 17391 1c29 1B       		.uleb128 0x1b
 17392 1c2a B0140000 		.4byte	.LASF316
 17393 1c2e 01       		.byte	0x1
 17394 1c2f 4C04     		.2byte	0x44c
 17395 1c31 0E010000 		.4byte	0x10e
 17396 1c35 02       		.uleb128 0x2
 17397 1c36 91       		.byte	0x91
 17398 1c37 6B       		.sleb128 -21
 17399 1c38 1D       		.uleb128 0x1d
 17400 1c39 970B0000 		.4byte	.LASF317
 17401 1c3d 01       		.byte	0x1
 17402 1c3e 4F04     		.2byte	0x44f
 17403 1c40 DD000000 		.4byte	0xdd
 17404 1c44 02       		.uleb128 0x2
 17405 1c45 91       		.byte	0x91
 17406 1c46 74       		.sleb128 -12
 17407 1c47 00       		.byte	0
 17408 1c48 22       		.uleb128 0x22
 17409 1c49 C2140000 		.4byte	.LASF318
 17410 1c4d 01       		.byte	0x1
 17411 1c4e 7A04     		.2byte	0x47a
 17412 1c50 E8000000 		.4byte	0xe8
 17413 1c54 00000000 		.4byte	.LFB36
 17414 1c58 DE000000 		.4byte	.LFE36-.LFB36
 17415 1c5c 01       		.uleb128 0x1
 17416 1c5d 9C       		.byte	0x9c
 17417 1c5e 901C0000 		.4byte	0x1c90
 17418 1c62 1B       		.uleb128 0x1b
 17419 1c63 82100000 		.4byte	.LASF319
 17420 1c67 01       		.byte	0x1
 17421 1c68 7A04     		.2byte	0x47a
 17422 1c6a DD000000 		.4byte	0xdd
 17423 1c6e 02       		.uleb128 0x2
 17424 1c6f 91       		.byte	0x91
 17425 1c70 6C       		.sleb128 -20
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 383


 17426 1c71 1D       		.uleb128 0x1d
 17427 1c72 970B0000 		.4byte	.LASF317
 17428 1c76 01       		.byte	0x1
 17429 1c77 7D04     		.2byte	0x47d
 17430 1c79 DD000000 		.4byte	0xdd
 17431 1c7d 02       		.uleb128 0x2
 17432 1c7e 91       		.byte	0x91
 17433 1c7f 74       		.sleb128 -12
 17434 1c80 1D       		.uleb128 0x1d
 17435 1c81 34070000 		.4byte	.LASF320
 17436 1c85 01       		.byte	0x1
 17437 1c86 7E04     		.2byte	0x47e
 17438 1c88 DD000000 		.4byte	0xdd
 17439 1c8c 02       		.uleb128 0x2
 17440 1c8d 91       		.byte	0x91
 17441 1c8e 70       		.sleb128 -16
 17442 1c8f 00       		.byte	0
 17443 1c90 24       		.uleb128 0x24
 17444 1c91 4D0D0000 		.4byte	.LASF321
 17445 1c95 01       		.byte	0x1
 17446 1c96 B904     		.2byte	0x4b9
 17447 1c98 00000000 		.4byte	.LFB37
 17448 1c9c 2A000000 		.4byte	.LFE37-.LFB37
 17449 1ca0 01       		.uleb128 0x1
 17450 1ca1 9C       		.byte	0x9c
 17451 1ca2 D41C0000 		.4byte	0x1cd4
 17452 1ca6 1B       		.uleb128 0x1b
 17453 1ca7 C50D0000 		.4byte	.LASF322
 17454 1cab 01       		.byte	0x1
 17455 1cac B904     		.2byte	0x4b9
 17456 1cae DD000000 		.4byte	0xdd
 17457 1cb2 02       		.uleb128 0x2
 17458 1cb3 91       		.byte	0x91
 17459 1cb4 6C       		.sleb128 -20
 17460 1cb5 1B       		.uleb128 0x1b
 17461 1cb6 F4110000 		.4byte	.LASF323
 17462 1cba 01       		.byte	0x1
 17463 1cbb B904     		.2byte	0x4b9
 17464 1cbd DD000000 		.4byte	0xdd
 17465 1cc1 02       		.uleb128 0x2
 17466 1cc2 91       		.byte	0x91
 17467 1cc3 68       		.sleb128 -24
 17468 1cc4 1D       		.uleb128 0x1d
 17469 1cc5 970B0000 		.4byte	.LASF317
 17470 1cc9 01       		.byte	0x1
 17471 1cca BC04     		.2byte	0x4bc
 17472 1ccc DD000000 		.4byte	0xdd
 17473 1cd0 02       		.uleb128 0x2
 17474 1cd1 91       		.byte	0x91
 17475 1cd2 74       		.sleb128 -12
 17476 1cd3 00       		.byte	0
 17477 1cd4 24       		.uleb128 0x24
 17478 1cd5 7F050000 		.4byte	.LASF324
 17479 1cd9 01       		.byte	0x1
 17480 1cda C704     		.2byte	0x4c7
 17481 1cdc 00000000 		.4byte	.LFB38
 17482 1ce0 0E010000 		.4byte	.LFE38-.LFB38
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 384


 17483 1ce4 01       		.uleb128 0x1
 17484 1ce5 9C       		.byte	0x9c
 17485 1ce6 091D0000 		.4byte	0x1d09
 17486 1cea 1B       		.uleb128 0x1b
 17487 1ceb 0B0A0000 		.4byte	.LASF325
 17488 1cef 01       		.byte	0x1
 17489 1cf0 C704     		.2byte	0x4c7
 17490 1cf2 091D0000 		.4byte	0x1d09
 17491 1cf6 02       		.uleb128 0x2
 17492 1cf7 91       		.byte	0x91
 17493 1cf8 6C       		.sleb128 -20
 17494 1cf9 1D       		.uleb128 0x1d
 17495 1cfa 970B0000 		.4byte	.LASF317
 17496 1cfe 01       		.byte	0x1
 17497 1cff C904     		.2byte	0x4c9
 17498 1d01 DD000000 		.4byte	0xdd
 17499 1d05 02       		.uleb128 0x2
 17500 1d06 91       		.byte	0x91
 17501 1d07 74       		.sleb128 -12
 17502 1d08 00       		.byte	0
 17503 1d09 0B       		.uleb128 0xb
 17504 1d0a 04       		.byte	0x4
 17505 1d0b CD010000 		.4byte	0x1cd
 17506 1d0f 24       		.uleb128 0x24
 17507 1d10 E00E0000 		.4byte	.LASF326
 17508 1d14 01       		.byte	0x1
 17509 1d15 0205     		.2byte	0x502
 17510 1d17 00000000 		.4byte	.LFB39
 17511 1d1b 36000000 		.4byte	.LFE39-.LFB39
 17512 1d1f 01       		.uleb128 0x1
 17513 1d20 9C       		.byte	0x9c
 17514 1d21 351D0000 		.4byte	0x1d35
 17515 1d25 1B       		.uleb128 0x1b
 17516 1d26 730F0000 		.4byte	.LASF327
 17517 1d2a 01       		.byte	0x1
 17518 1d2b 0205     		.2byte	0x502
 17519 1d2d 351D0000 		.4byte	0x1d35
 17520 1d31 02       		.uleb128 0x2
 17521 1d32 91       		.byte	0x91
 17522 1d33 74       		.sleb128 -12
 17523 1d34 00       		.byte	0
 17524 1d35 0B       		.uleb128 0xb
 17525 1d36 04       		.byte	0x4
 17526 1d37 B6060000 		.4byte	0x6b6
 17527 1d3b 24       		.uleb128 0x24
 17528 1d3c 00000000 		.4byte	.LASF328
 17529 1d40 01       		.byte	0x1
 17530 1d41 0F05     		.2byte	0x50f
 17531 1d43 00000000 		.4byte	.LFB40
 17532 1d47 54000000 		.4byte	.LFE40-.LFB40
 17533 1d4b 01       		.uleb128 0x1
 17534 1d4c 9C       		.byte	0x9c
 17535 1d4d 611D0000 		.4byte	0x1d61
 17536 1d51 1B       		.uleb128 0x1b
 17537 1d52 7F060000 		.4byte	.LASF329
 17538 1d56 01       		.byte	0x1
 17539 1d57 0F05     		.2byte	0x50f
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 385


 17540 1d59 611D0000 		.4byte	0x1d61
 17541 1d5d 02       		.uleb128 0x2
 17542 1d5e 91       		.byte	0x91
 17543 1d5f 74       		.sleb128 -12
 17544 1d60 00       		.byte	0
 17545 1d61 0B       		.uleb128 0xb
 17546 1d62 04       		.byte	0x4
 17547 1d63 89030000 		.4byte	0x389
 17548 1d67 24       		.uleb128 0x24
 17549 1d68 160F0000 		.4byte	.LASF330
 17550 1d6c 01       		.byte	0x1
 17551 1d6d 1D05     		.2byte	0x51d
 17552 1d6f 00000000 		.4byte	.LFB41
 17553 1d73 4E000000 		.4byte	.LFE41-.LFB41
 17554 1d77 01       		.uleb128 0x1
 17555 1d78 9C       		.byte	0x9c
 17556 1d79 9C1D0000 		.4byte	0x1d9c
 17557 1d7d 1B       		.uleb128 0x1b
 17558 1d7e 49140000 		.4byte	.LASF331
 17559 1d82 01       		.byte	0x1
 17560 1d83 1D05     		.2byte	0x51d
 17561 1d85 9C1D0000 		.4byte	0x1d9c
 17562 1d89 02       		.uleb128 0x2
 17563 1d8a 91       		.byte	0x91
 17564 1d8b 6C       		.sleb128 -20
 17565 1d8c 1D       		.uleb128 0x1d
 17566 1d8d 970B0000 		.4byte	.LASF317
 17567 1d91 01       		.byte	0x1
 17568 1d92 1F05     		.2byte	0x51f
 17569 1d94 DD000000 		.4byte	0xdd
 17570 1d98 02       		.uleb128 0x2
 17571 1d99 91       		.byte	0x91
 17572 1d9a 74       		.sleb128 -12
 17573 1d9b 00       		.byte	0
 17574 1d9c 0B       		.uleb128 0xb
 17575 1d9d 04       		.byte	0x4
 17576 1d9e 44040000 		.4byte	0x444
 17577 1da2 26       		.uleb128 0x26
 17578 1da3 6B170000 		.4byte	.LASF332
 17579 1da7 01       		.byte	0x1
 17580 1da8 2B05     		.2byte	0x52b
 17581 1daa 00000000 		.4byte	.LFB42
 17582 1dae 98000000 		.4byte	.LFE42-.LFB42
 17583 1db2 01       		.uleb128 0x1
 17584 1db3 9C       		.byte	0x9c
 17585 1db4 0E1E0000 		.4byte	0x1e0e
 17586 1db8 1B       		.uleb128 0x1b
 17587 1db9 24180000 		.4byte	.LASF333
 17588 1dbd 01       		.byte	0x1
 17589 1dbe 2B05     		.2byte	0x52b
 17590 1dc0 DD000000 		.4byte	0xdd
 17591 1dc4 02       		.uleb128 0x2
 17592 1dc5 91       		.byte	0x91
 17593 1dc6 54       		.sleb128 -44
 17594 1dc7 1B       		.uleb128 0x1b
 17595 1dc8 791A0000 		.4byte	.LASF334
 17596 1dcc 01       		.byte	0x1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 386


 17597 1dcd 2B05     		.2byte	0x52b
 17598 1dcf DD000000 		.4byte	0xdd
 17599 1dd3 02       		.uleb128 0x2
 17600 1dd4 91       		.byte	0x91
 17601 1dd5 50       		.sleb128 -48
 17602 1dd6 1B       		.uleb128 0x1b
 17603 1dd7 5D0D0000 		.4byte	.LASF335
 17604 1ddb 01       		.byte	0x1
 17605 1ddc 2B05     		.2byte	0x52b
 17606 1dde DD000000 		.4byte	0xdd
 17607 1de2 02       		.uleb128 0x2
 17608 1de3 91       		.byte	0x91
 17609 1de4 4C       		.sleb128 -52
 17610 1de5 1D       		.uleb128 0x1d
 17611 1de6 970B0000 		.4byte	.LASF317
 17612 1dea 01       		.byte	0x1
 17613 1deb 2D05     		.2byte	0x52d
 17614 1ded DD000000 		.4byte	0xdd
 17615 1df1 02       		.uleb128 0x2
 17616 1df2 91       		.byte	0x91
 17617 1df3 6C       		.sleb128 -20
 17618 1df4 21       		.uleb128 0x21
 17619 1df5 28000000 		.4byte	.LBB11
 17620 1df9 40000000 		.4byte	.LBE11-.LBB11
 17621 1dfd 1D       		.uleb128 0x1d
 17622 1dfe 4C1B0000 		.4byte	.LASF336
 17623 1e02 01       		.byte	0x1
 17624 1e03 3705     		.2byte	0x537
 17625 1e05 241E0000 		.4byte	0x1e24
 17626 1e09 02       		.uleb128 0x2
 17627 1e0a 91       		.byte	0x91
 17628 1e0b 5C       		.sleb128 -36
 17629 1e0c 00       		.byte	0
 17630 1e0d 00       		.byte	0
 17631 1e0e 0D       		.uleb128 0xd
 17632 1e0f 25130000 		.4byte	0x1325
 17633 1e13 241E0000 		.4byte	0x1e24
 17634 1e17 0E       		.uleb128 0xe
 17635 1e18 9E000000 		.4byte	0x9e
 17636 1e1c 02       		.byte	0x2
 17637 1e1d 0E       		.uleb128 0xe
 17638 1e1e 9E000000 		.4byte	0x9e
 17639 1e22 04       		.byte	0x4
 17640 1e23 00       		.byte	0
 17641 1e24 0C       		.uleb128 0xc
 17642 1e25 0E1E0000 		.4byte	0x1e0e
 17643 1e29 22       		.uleb128 0x22
 17644 1e2a 7F170000 		.4byte	.LASF337
 17645 1e2e 01       		.byte	0x1
 17646 1e2f 5005     		.2byte	0x550
 17647 1e31 E8000000 		.4byte	0xe8
 17648 1e35 00000000 		.4byte	.LFB43
 17649 1e39 9C000000 		.4byte	.LFE43-.LFB43
 17650 1e3d 01       		.uleb128 0x1
 17651 1e3e 9C       		.byte	0x9c
 17652 1e3f 621E0000 		.4byte	0x1e62
 17653 1e43 1B       		.uleb128 0x1b
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 387


 17654 1e44 2B050000 		.4byte	.LASF338
 17655 1e48 01       		.byte	0x1
 17656 1e49 5005     		.2byte	0x550
 17657 1e4b 621E0000 		.4byte	0x1e62
 17658 1e4f 02       		.uleb128 0x2
 17659 1e50 91       		.byte	0x91
 17660 1e51 6C       		.sleb128 -20
 17661 1e52 1D       		.uleb128 0x1d
 17662 1e53 970B0000 		.4byte	.LASF317
 17663 1e57 01       		.byte	0x1
 17664 1e58 5205     		.2byte	0x552
 17665 1e5a DD000000 		.4byte	0xdd
 17666 1e5e 02       		.uleb128 0x2
 17667 1e5f 91       		.byte	0x91
 17668 1e60 74       		.sleb128 -12
 17669 1e61 00       		.byte	0
 17670 1e62 0B       		.uleb128 0xb
 17671 1e63 04       		.byte	0x4
 17672 1e64 07040000 		.4byte	0x407
 17673 1e68 24       		.uleb128 0x24
 17674 1e69 0F1A0000 		.4byte	.LASF339
 17675 1e6d 01       		.byte	0x1
 17676 1e6e 7605     		.2byte	0x576
 17677 1e70 00000000 		.4byte	.LFB44
 17678 1e74 3C000000 		.4byte	.LFE44-.LFB44
 17679 1e78 01       		.uleb128 0x1
 17680 1e79 9C       		.byte	0x9c
 17681 1e7a 9D1E0000 		.4byte	0x1e9d
 17682 1e7e 1B       		.uleb128 0x1b
 17683 1e7f 50150000 		.4byte	.LASF340
 17684 1e83 01       		.byte	0x1
 17685 1e84 7605     		.2byte	0x576
 17686 1e86 DD000000 		.4byte	0xdd
 17687 1e8a 02       		.uleb128 0x2
 17688 1e8b 91       		.byte	0x91
 17689 1e8c 6C       		.sleb128 -20
 17690 1e8d 1D       		.uleb128 0x1d
 17691 1e8e 970B0000 		.4byte	.LASF317
 17692 1e92 01       		.byte	0x1
 17693 1e93 7805     		.2byte	0x578
 17694 1e95 DD000000 		.4byte	0xdd
 17695 1e99 02       		.uleb128 0x2
 17696 1e9a 91       		.byte	0x91
 17697 1e9b 74       		.sleb128 -12
 17698 1e9c 00       		.byte	0
 17699 1e9d 24       		.uleb128 0x24
 17700 1e9e 66040000 		.4byte	.LASF341
 17701 1ea2 01       		.byte	0x1
 17702 1ea3 8905     		.2byte	0x589
 17703 1ea5 00000000 		.4byte	.LFB45
 17704 1ea9 F8000000 		.4byte	.LFE45-.LFB45
 17705 1ead 01       		.uleb128 0x1
 17706 1eae 9C       		.byte	0x9c
 17707 1eaf D21E0000 		.4byte	0x1ed2
 17708 1eb3 1B       		.uleb128 0x1b
 17709 1eb4 080E0000 		.4byte	.LASF342
 17710 1eb8 01       		.byte	0x1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 388


 17711 1eb9 8905     		.2byte	0x589
 17712 1ebb D21E0000 		.4byte	0x1ed2
 17713 1ebf 02       		.uleb128 0x2
 17714 1ec0 91       		.byte	0x91
 17715 1ec1 6C       		.sleb128 -20
 17716 1ec2 1D       		.uleb128 0x1d
 17717 1ec3 970B0000 		.4byte	.LASF317
 17718 1ec7 01       		.byte	0x1
 17719 1ec8 8C05     		.2byte	0x58c
 17720 1eca DD000000 		.4byte	0xdd
 17721 1ece 02       		.uleb128 0x2
 17722 1ecf 91       		.byte	0x91
 17723 1ed0 74       		.sleb128 -12
 17724 1ed1 00       		.byte	0
 17725 1ed2 0B       		.uleb128 0xb
 17726 1ed3 04       		.byte	0x4
 17727 1ed4 6C060000 		.4byte	0x66c
 17728 1ed8 22       		.uleb128 0x22
 17729 1ed9 270A0000 		.4byte	.LASF343
 17730 1edd 01       		.byte	0x1
 17731 1ede B305     		.2byte	0x5b3
 17732 1ee0 E8000000 		.4byte	0xe8
 17733 1ee4 00000000 		.4byte	.LFB46
 17734 1ee8 24000000 		.4byte	.LFE46-.LFB46
 17735 1eec 01       		.uleb128 0x1
 17736 1eed 9C       		.byte	0x9c
 17737 1eee 021F0000 		.4byte	0x1f02
 17738 1ef2 1B       		.uleb128 0x1b
 17739 1ef3 F5150000 		.4byte	.LASF286
 17740 1ef7 01       		.byte	0x1
 17741 1ef8 B305     		.2byte	0x5b3
 17742 1efa DD000000 		.4byte	0xdd
 17743 1efe 02       		.uleb128 0x2
 17744 1eff 91       		.byte	0x91
 17745 1f00 74       		.sleb128 -12
 17746 1f01 00       		.byte	0
 17747 1f02 24       		.uleb128 0x24
 17748 1f03 600F0000 		.4byte	.LASF344
 17749 1f07 01       		.byte	0x1
 17750 1f08 C005     		.2byte	0x5c0
 17751 1f0a 00000000 		.4byte	.LFB47
 17752 1f0e 26000000 		.4byte	.LFE47-.LFB47
 17753 1f12 01       		.uleb128 0x1
 17754 1f13 9C       		.byte	0x9c
 17755 1f14 461F0000 		.4byte	0x1f46
 17756 1f18 1B       		.uleb128 0x1b
 17757 1f19 34080000 		.4byte	.LASF345
 17758 1f1d 01       		.byte	0x1
 17759 1f1e C005     		.2byte	0x5c0
 17760 1f20 B5000000 		.4byte	0xb5
 17761 1f24 02       		.uleb128 0x2
 17762 1f25 91       		.byte	0x91
 17763 1f26 6C       		.sleb128 -20
 17764 1f27 1B       		.uleb128 0x1b
 17765 1f28 3C0C0000 		.4byte	.LASF346
 17766 1f2c 01       		.byte	0x1
 17767 1f2d C005     		.2byte	0x5c0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 389


 17768 1f2f B5000000 		.4byte	0xb5
 17769 1f33 02       		.uleb128 0x2
 17770 1f34 91       		.byte	0x91
 17771 1f35 68       		.sleb128 -24
 17772 1f36 1D       		.uleb128 0x1d
 17773 1f37 0D150000 		.4byte	.LASF347
 17774 1f3b 01       		.byte	0x1
 17775 1f3c C205     		.2byte	0x5c2
 17776 1f3e DD000000 		.4byte	0xdd
 17777 1f42 02       		.uleb128 0x2
 17778 1f43 91       		.byte	0x91
 17779 1f44 74       		.sleb128 -12
 17780 1f45 00       		.byte	0
 17781 1f46 22       		.uleb128 0x22
 17782 1f47 22060000 		.4byte	.LASF348
 17783 1f4b 01       		.byte	0x1
 17784 1f4c CD05     		.2byte	0x5cd
 17785 1f4e DD000000 		.4byte	0xdd
 17786 1f52 00000000 		.4byte	.LFB48
 17787 1f56 C0000000 		.4byte	.LFE48-.LFB48
 17788 1f5a 01       		.uleb128 0x1
 17789 1f5b 9C       		.byte	0x9c
 17790 1f5c 9D1F0000 		.4byte	0x1f9d
 17791 1f60 1B       		.uleb128 0x1b
 17792 1f61 34080000 		.4byte	.LASF345
 17793 1f65 01       		.byte	0x1
 17794 1f66 CD05     		.2byte	0x5cd
 17795 1f68 B5000000 		.4byte	0xb5
 17796 1f6c 02       		.uleb128 0x2
 17797 1f6d 91       		.byte	0x91
 17798 1f6e 5C       		.sleb128 -36
 17799 1f6f 1B       		.uleb128 0x1b
 17800 1f70 3C0C0000 		.4byte	.LASF346
 17801 1f74 01       		.byte	0x1
 17802 1f75 CD05     		.2byte	0x5cd
 17803 1f77 B5000000 		.4byte	0xb5
 17804 1f7b 02       		.uleb128 0x2
 17805 1f7c 91       		.byte	0x91
 17806 1f7d 58       		.sleb128 -40
 17807 1f7e 1D       		.uleb128 0x1d
 17808 1f7f FC190000 		.4byte	.LASF241
 17809 1f83 01       		.byte	0x1
 17810 1f84 CF05     		.2byte	0x5cf
 17811 1f86 DD000000 		.4byte	0xdd
 17812 1f8a 02       		.uleb128 0x2
 17813 1f8b 91       		.byte	0x91
 17814 1f8c 64       		.sleb128 -28
 17815 1f8d 1D       		.uleb128 0x1d
 17816 1f8e A4070000 		.4byte	.LASF349
 17817 1f92 01       		.byte	0x1
 17818 1f93 D005     		.2byte	0x5d0
 17819 1f95 DD000000 		.4byte	0xdd
 17820 1f99 02       		.uleb128 0x2
 17821 1f9a 91       		.byte	0x91
 17822 1f9b 60       		.sleb128 -32
 17823 1f9c 00       		.byte	0
 17824 1f9d 24       		.uleb128 0x24
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 390


 17825 1f9e A8020000 		.4byte	.LASF350
 17826 1fa2 01       		.byte	0x1
 17827 1fa3 EF05     		.2byte	0x5ef
 17828 1fa5 00000000 		.4byte	.LFB49
 17829 1fa9 22000000 		.4byte	.LFE49-.LFB49
 17830 1fad 01       		.uleb128 0x1
 17831 1fae 9C       		.byte	0x9c
 17832 1faf C31F0000 		.4byte	0x1fc3
 17833 1fb3 1B       		.uleb128 0x1b
 17834 1fb4 D50E0000 		.4byte	.LASF351
 17835 1fb8 01       		.byte	0x1
 17836 1fb9 EF05     		.2byte	0x5ef
 17837 1fbb C31F0000 		.4byte	0x1fc3
 17838 1fbf 02       		.uleb128 0x2
 17839 1fc0 91       		.byte	0x91
 17840 1fc1 74       		.sleb128 -12
 17841 1fc2 00       		.byte	0
 17842 1fc3 0B       		.uleb128 0xb
 17843 1fc4 04       		.byte	0x4
 17844 1fc5 E6060000 		.4byte	0x6e6
 17845 1fc9 24       		.uleb128 0x24
 17846 1fca 14050000 		.4byte	.LASF352
 17847 1fce 01       		.byte	0x1
 17848 1fcf FA05     		.2byte	0x5fa
 17849 1fd1 00000000 		.4byte	.LFB50
 17850 1fd5 C6000000 		.4byte	.LFE50-.LFB50
 17851 1fd9 01       		.uleb128 0x1
 17852 1fda 9C       		.byte	0x9c
 17853 1fdb FE1F0000 		.4byte	0x1ffe
 17854 1fdf 1B       		.uleb128 0x1b
 17855 1fe0 D3020000 		.4byte	.LASF353
 17856 1fe4 01       		.byte	0x1
 17857 1fe5 FA05     		.2byte	0x5fa
 17858 1fe7 FE1F0000 		.4byte	0x1ffe
 17859 1feb 02       		.uleb128 0x2
 17860 1fec 91       		.byte	0x91
 17861 1fed 6C       		.sleb128 -20
 17862 1fee 1D       		.uleb128 0x1d
 17863 1fef 970B0000 		.4byte	.LASF317
 17864 1ff3 01       		.byte	0x1
 17865 1ff4 FC05     		.2byte	0x5fc
 17866 1ff6 DD000000 		.4byte	0xdd
 17867 1ffa 02       		.uleb128 0x2
 17868 1ffb 91       		.byte	0x91
 17869 1ffc 74       		.sleb128 -12
 17870 1ffd 00       		.byte	0
 17871 1ffe 0B       		.uleb128 0xb
 17872 1fff 04       		.byte	0x4
 17873 2000 DC040000 		.4byte	0x4dc
 17874 2004 24       		.uleb128 0x24
 17875 2005 B7120000 		.4byte	.LASF354
 17876 2009 01       		.byte	0x1
 17877 200a 1A06     		.2byte	0x61a
 17878 200c 00000000 		.4byte	.LFB51
 17879 2010 3A000000 		.4byte	.LFE51-.LFB51
 17880 2014 01       		.uleb128 0x1
 17881 2015 9C       		.byte	0x9c
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 391


 17882 2016 39200000 		.4byte	0x2039
 17883 201a 1B       		.uleb128 0x1b
 17884 201b 6F190000 		.4byte	.LASF355
 17885 201f 01       		.byte	0x1
 17886 2020 1A06     		.2byte	0x61a
 17887 2022 C7000000 		.4byte	0xc7
 17888 2026 02       		.uleb128 0x2
 17889 2027 91       		.byte	0x91
 17890 2028 76       		.sleb128 -10
 17891 2029 1B       		.uleb128 0x1b
 17892 202a 9E0C0000 		.4byte	.LASF356
 17893 202e 01       		.byte	0x1
 17894 202f 1A06     		.2byte	0x61a
 17895 2031 BC000000 		.4byte	0xbc
 17896 2035 02       		.uleb128 0x2
 17897 2036 91       		.byte	0x91
 17898 2037 75       		.sleb128 -11
 17899 2038 00       		.byte	0
 17900 2039 24       		.uleb128 0x24
 17901 203a B1160000 		.4byte	.LASF357
 17902 203e 01       		.byte	0x1
 17903 203f 2806     		.2byte	0x628
 17904 2041 00000000 		.4byte	.LFB52
 17905 2045 3A000000 		.4byte	.LFE52-.LFB52
 17906 2049 01       		.uleb128 0x1
 17907 204a 9C       		.byte	0x9c
 17908 204b 6E200000 		.4byte	0x206e
 17909 204f 1B       		.uleb128 0x1b
 17910 2050 6F190000 		.4byte	.LASF355
 17911 2054 01       		.byte	0x1
 17912 2055 2806     		.2byte	0x628
 17913 2057 C7000000 		.4byte	0xc7
 17914 205b 02       		.uleb128 0x2
 17915 205c 91       		.byte	0x91
 17916 205d 76       		.sleb128 -10
 17917 205e 1B       		.uleb128 0x1b
 17918 205f 9E0C0000 		.4byte	.LASF356
 17919 2063 01       		.byte	0x1
 17920 2064 2806     		.2byte	0x628
 17921 2066 BC000000 		.4byte	0xbc
 17922 206a 02       		.uleb128 0x2
 17923 206b 91       		.byte	0x91
 17924 206c 75       		.sleb128 -11
 17925 206d 00       		.byte	0
 17926 206e 24       		.uleb128 0x24
 17927 206f D1170000 		.4byte	.LASF358
 17928 2073 01       		.byte	0x1
 17929 2074 3606     		.2byte	0x636
 17930 2076 00000000 		.4byte	.LFB53
 17931 207a 3A000000 		.4byte	.LFE53-.LFB53
 17932 207e 01       		.uleb128 0x1
 17933 207f 9C       		.byte	0x9c
 17934 2080 A3200000 		.4byte	0x20a3
 17935 2084 1B       		.uleb128 0x1b
 17936 2085 6F190000 		.4byte	.LASF355
 17937 2089 01       		.byte	0x1
 17938 208a 3606     		.2byte	0x636
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 392


 17939 208c C7000000 		.4byte	0xc7
 17940 2090 02       		.uleb128 0x2
 17941 2091 91       		.byte	0x91
 17942 2092 76       		.sleb128 -10
 17943 2093 1B       		.uleb128 0x1b
 17944 2094 9E0C0000 		.4byte	.LASF356
 17945 2098 01       		.byte	0x1
 17946 2099 3606     		.2byte	0x636
 17947 209b BC000000 		.4byte	0xbc
 17948 209f 02       		.uleb128 0x2
 17949 20a0 91       		.byte	0x91
 17950 20a1 75       		.sleb128 -11
 17951 20a2 00       		.byte	0
 17952 20a3 24       		.uleb128 0x24
 17953 20a4 9D130000 		.4byte	.LASF359
 17954 20a8 01       		.byte	0x1
 17955 20a9 4306     		.2byte	0x643
 17956 20ab 00000000 		.4byte	.LFB54
 17957 20af B0000000 		.4byte	.LFE54-.LFB54
 17958 20b3 01       		.uleb128 0x1
 17959 20b4 9C       		.byte	0x9c
 17960 20b5 D8200000 		.4byte	0x20d8
 17961 20b9 1B       		.uleb128 0x1b
 17962 20ba CA120000 		.4byte	.LASF360
 17963 20be 01       		.byte	0x1
 17964 20bf 4306     		.2byte	0x643
 17965 20c1 D8200000 		.4byte	0x20d8
 17966 20c5 02       		.uleb128 0x2
 17967 20c6 91       		.byte	0x91
 17968 20c7 6C       		.sleb128 -20
 17969 20c8 1D       		.uleb128 0x1d
 17970 20c9 970B0000 		.4byte	.LASF317
 17971 20cd 01       		.byte	0x1
 17972 20ce 4606     		.2byte	0x646
 17973 20d0 DD000000 		.4byte	0xdd
 17974 20d4 02       		.uleb128 0x2
 17975 20d5 91       		.byte	0x91
 17976 20d6 74       		.sleb128 -12
 17977 20d7 00       		.byte	0
 17978 20d8 0B       		.uleb128 0xb
 17979 20d9 04       		.byte	0x4
 17980 20da 5A050000 		.4byte	0x55a
 17981 20de 24       		.uleb128 0x24
 17982 20df 41090000 		.4byte	.LASF361
 17983 20e3 01       		.byte	0x1
 17984 20e4 7406     		.2byte	0x674
 17985 20e6 00000000 		.4byte	.LFB55
 17986 20ea 40000000 		.4byte	.LFE55-.LFB55
 17987 20ee 01       		.uleb128 0x1
 17988 20ef 9C       		.byte	0x9c
 17989 20f0 04210000 		.4byte	0x2104
 17990 20f4 1B       		.uleb128 0x1b
 17991 20f5 1C1B0000 		.4byte	.LASF362
 17992 20f9 01       		.byte	0x1
 17993 20fa 7406     		.2byte	0x674
 17994 20fc 04210000 		.4byte	0x2104
 17995 2100 02       		.uleb128 0x2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 393


 17996 2101 91       		.byte	0x91
 17997 2102 74       		.sleb128 -12
 17998 2103 00       		.byte	0
 17999 2104 0B       		.uleb128 0xb
 18000 2105 04       		.byte	0x4
 18001 2106 3D070000 		.4byte	0x73d
 18002 210a 22       		.uleb128 0x22
 18003 210b 700B0000 		.4byte	.LASF363
 18004 210f 01       		.byte	0x1
 18005 2110 8506     		.2byte	0x685
 18006 2112 DD000000 		.4byte	0xdd
 18007 2116 00000000 		.4byte	.LFB56
 18008 211a 92000000 		.4byte	.LFE56-.LFB56
 18009 211e 01       		.uleb128 0x1
 18010 211f 9C       		.byte	0x9c
 18011 2120 42210000 		.4byte	0x2142
 18012 2124 1B       		.uleb128 0x1b
 18013 2125 0D170000 		.4byte	.LASF364
 18014 2129 01       		.byte	0x1
 18015 212a 8506     		.2byte	0x685
 18016 212c DD000000 		.4byte	0xdd
 18017 2130 02       		.uleb128 0x2
 18018 2131 91       		.byte	0x91
 18019 2132 6C       		.sleb128 -20
 18020 2133 1E       		.uleb128 0x1e
 18021 2134 726400   		.ascii	"rd\000"
 18022 2137 01       		.byte	0x1
 18023 2138 8706     		.2byte	0x687
 18024 213a DD000000 		.4byte	0xdd
 18025 213e 02       		.uleb128 0x2
 18026 213f 91       		.byte	0x91
 18027 2140 74       		.sleb128 -12
 18028 2141 00       		.byte	0
 18029 2142 24       		.uleb128 0x24
 18030 2143 EB160000 		.4byte	.LASF365
 18031 2147 01       		.byte	0x1
 18032 2148 AF06     		.2byte	0x6af
 18033 214a 00000000 		.4byte	.LFB57
 18034 214e 3C000000 		.4byte	.LFE57-.LFB57
 18035 2152 01       		.uleb128 0x1
 18036 2153 9C       		.byte	0x9c
 18037 2154 77210000 		.4byte	0x2177
 18038 2158 1B       		.uleb128 0x1b
 18039 2159 3A0F0000 		.4byte	.LASF366
 18040 215d 01       		.byte	0x1
 18041 215e AF06     		.2byte	0x6af
 18042 2160 77210000 		.4byte	0x2177
 18043 2164 02       		.uleb128 0x2
 18044 2165 91       		.byte	0x91
 18045 2166 6C       		.sleb128 -20
 18046 2167 1D       		.uleb128 0x1d
 18047 2168 970B0000 		.4byte	.LASF317
 18048 216c 01       		.byte	0x1
 18049 216d B106     		.2byte	0x6b1
 18050 216f DD000000 		.4byte	0xdd
 18051 2173 02       		.uleb128 0x2
 18052 2174 91       		.byte	0x91
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 394


 18053 2175 74       		.sleb128 -12
 18054 2176 00       		.byte	0
 18055 2177 0B       		.uleb128 0xb
 18056 2178 04       		.byte	0x4
 18057 2179 0A020000 		.4byte	0x20a
 18058 217d 24       		.uleb128 0x24
 18059 217e 39000000 		.4byte	.LASF367
 18060 2182 01       		.byte	0x1
 18061 2183 C506     		.2byte	0x6c5
 18062 2185 00000000 		.4byte	.LFB58
 18063 2189 8C000000 		.4byte	.LFE58-.LFB58
 18064 218d 01       		.uleb128 0x1
 18065 218e 9C       		.byte	0x9c
 18066 218f B2210000 		.4byte	0x21b2
 18067 2193 1B       		.uleb128 0x1b
 18068 2194 14000000 		.4byte	.LASF368
 18069 2198 01       		.byte	0x1
 18070 2199 C506     		.2byte	0x6c5
 18071 219b 15140000 		.4byte	0x1415
 18072 219f 02       		.uleb128 0x2
 18073 21a0 91       		.byte	0x91
 18074 21a1 6C       		.sleb128 -20
 18075 21a2 1D       		.uleb128 0x1d
 18076 21a3 970B0000 		.4byte	.LASF317
 18077 21a7 01       		.byte	0x1
 18078 21a8 C706     		.2byte	0x6c7
 18079 21aa DD000000 		.4byte	0xdd
 18080 21ae 02       		.uleb128 0x2
 18081 21af 91       		.byte	0x91
 18082 21b0 74       		.sleb128 -12
 18083 21b1 00       		.byte	0
 18084 21b2 24       		.uleb128 0x24
 18085 21b3 34140000 		.4byte	.LASF369
 18086 21b7 01       		.byte	0x1
 18087 21b8 EF06     		.2byte	0x6ef
 18088 21ba 00000000 		.4byte	.LFB59
 18089 21be 3E000000 		.4byte	.LFE59-.LFB59
 18090 21c2 01       		.uleb128 0x1
 18091 21c3 9C       		.byte	0x9c
 18092 21c4 E7210000 		.4byte	0x21e7
 18093 21c8 1B       		.uleb128 0x1b
 18094 21c9 B0140000 		.4byte	.LASF316
 18095 21cd 01       		.byte	0x1
 18096 21ce EF06     		.2byte	0x6ef
 18097 21d0 0E010000 		.4byte	0x10e
 18098 21d4 02       		.uleb128 0x2
 18099 21d5 91       		.byte	0x91
 18100 21d6 6F       		.sleb128 -17
 18101 21d7 1D       		.uleb128 0x1d
 18102 21d8 970B0000 		.4byte	.LASF317
 18103 21dc 01       		.byte	0x1
 18104 21dd F106     		.2byte	0x6f1
 18105 21df DD000000 		.4byte	0xdd
 18106 21e3 02       		.uleb128 0x2
 18107 21e4 91       		.byte	0x91
 18108 21e5 74       		.sleb128 -12
 18109 21e6 00       		.byte	0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 395


 18110 21e7 24       		.uleb128 0x24
 18111 21e8 F8140000 		.4byte	.LASF370
 18112 21ec 01       		.byte	0x1
 18113 21ed 0507     		.2byte	0x705
 18114 21ef 00000000 		.4byte	.LFB60
 18115 21f3 3E000000 		.4byte	.LFE60-.LFB60
 18116 21f7 01       		.uleb128 0x1
 18117 21f8 9C       		.byte	0x9c
 18118 21f9 1C220000 		.4byte	0x221c
 18119 21fd 1B       		.uleb128 0x1b
 18120 21fe B0140000 		.4byte	.LASF316
 18121 2202 01       		.byte	0x1
 18122 2203 0507     		.2byte	0x705
 18123 2205 0E010000 		.4byte	0x10e
 18124 2209 02       		.uleb128 0x2
 18125 220a 91       		.byte	0x91
 18126 220b 6F       		.sleb128 -17
 18127 220c 1D       		.uleb128 0x1d
 18128 220d 970B0000 		.4byte	.LASF317
 18129 2211 01       		.byte	0x1
 18130 2212 0707     		.2byte	0x707
 18131 2214 DD000000 		.4byte	0xdd
 18132 2218 02       		.uleb128 0x2
 18133 2219 91       		.byte	0x91
 18134 221a 74       		.sleb128 -12
 18135 221b 00       		.byte	0
 18136 221c 24       		.uleb128 0x24
 18137 221d A10D0000 		.4byte	.LASF371
 18138 2221 01       		.byte	0x1
 18139 2222 2107     		.2byte	0x721
 18140 2224 00000000 		.4byte	.LFB61
 18141 2228 44000000 		.4byte	.LFE61-.LFB61
 18142 222c 01       		.uleb128 0x1
 18143 222d 9C       		.byte	0x9c
 18144 222e 60220000 		.4byte	0x2260
 18145 2232 1B       		.uleb128 0x1b
 18146 2233 31010000 		.4byte	.LASF40
 18147 2237 01       		.byte	0x1
 18148 2238 2107     		.2byte	0x721
 18149 223a DD000000 		.4byte	0xdd
 18150 223e 02       		.uleb128 0x2
 18151 223f 91       		.byte	0x91
 18152 2240 6C       		.sleb128 -20
 18153 2241 1B       		.uleb128 0x1b
 18154 2242 21010000 		.4byte	.LASF41
 18155 2246 01       		.byte	0x1
 18156 2247 2107     		.2byte	0x721
 18157 2249 DD000000 		.4byte	0xdd
 18158 224d 02       		.uleb128 0x2
 18159 224e 91       		.byte	0x91
 18160 224f 68       		.sleb128 -24
 18161 2250 1D       		.uleb128 0x1d
 18162 2251 970B0000 		.4byte	.LASF317
 18163 2255 01       		.byte	0x1
 18164 2256 2307     		.2byte	0x723
 18165 2258 DD000000 		.4byte	0xdd
 18166 225c 02       		.uleb128 0x2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 396


 18167 225d 91       		.byte	0x91
 18168 225e 74       		.sleb128 -12
 18169 225f 00       		.byte	0
 18170 2260 24       		.uleb128 0x24
 18171 2261 0E120000 		.4byte	.LASF372
 18172 2265 01       		.byte	0x1
 18173 2266 3307     		.2byte	0x733
 18174 2268 00000000 		.4byte	.LFB62
 18175 226c 48000000 		.4byte	.LFE62-.LFB62
 18176 2270 01       		.uleb128 0x1
 18177 2271 9C       		.byte	0x9c
 18178 2272 86220000 		.4byte	0x2286
 18179 2276 1B       		.uleb128 0x1b
 18180 2277 B3000000 		.4byte	.LASF373
 18181 227b 01       		.byte	0x1
 18182 227c 3307     		.2byte	0x733
 18183 227e 86220000 		.4byte	0x2286
 18184 2282 02       		.uleb128 0x2
 18185 2283 91       		.byte	0x91
 18186 2284 74       		.sleb128 -12
 18187 2285 00       		.byte	0
 18188 2286 0B       		.uleb128 0xb
 18189 2287 04       		.byte	0x4
 18190 2288 02030000 		.4byte	0x302
 18191 228c 24       		.uleb128 0x24
 18192 228d 8D180000 		.4byte	.LASF374
 18193 2291 01       		.byte	0x1
 18194 2292 4207     		.2byte	0x742
 18195 2294 00000000 		.4byte	.LFB63
 18196 2298 46000000 		.4byte	.LFE63-.LFB63
 18197 229c 01       		.uleb128 0x1
 18198 229d 9C       		.byte	0x9c
 18199 229e C1220000 		.4byte	0x22c1
 18200 22a2 1B       		.uleb128 0x1b
 18201 22a3 F20C0000 		.4byte	.LASF375
 18202 22a7 01       		.byte	0x1
 18203 22a8 4207     		.2byte	0x742
 18204 22aa C1220000 		.4byte	0x22c1
 18205 22ae 02       		.uleb128 0x2
 18206 22af 91       		.byte	0x91
 18207 22b0 6C       		.sleb128 -20
 18208 22b1 1D       		.uleb128 0x1d
 18209 22b2 970B0000 		.4byte	.LASF317
 18210 22b6 01       		.byte	0x1
 18211 22b7 4407     		.2byte	0x744
 18212 22b9 DD000000 		.4byte	0xdd
 18213 22bd 02       		.uleb128 0x2
 18214 22be 91       		.byte	0x91
 18215 22bf 74       		.sleb128 -12
 18216 22c0 00       		.byte	0
 18217 22c1 0B       		.uleb128 0xb
 18218 22c2 04       		.byte	0x4
 18219 22c3 3F030000 		.4byte	0x33f
 18220 22c7 24       		.uleb128 0x24
 18221 22c8 B1090000 		.4byte	.LASF376
 18222 22cc 01       		.byte	0x1
 18223 22cd 5307     		.2byte	0x753
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 397


 18224 22cf 00000000 		.4byte	.LFB64
 18225 22d3 1E000000 		.4byte	.LFE64-.LFB64
 18226 22d7 01       		.uleb128 0x1
 18227 22d8 9C       		.byte	0x9c
 18228 22d9 ED220000 		.4byte	0x22ed
 18229 22dd 1B       		.uleb128 0x1b
 18230 22de 1A170000 		.4byte	.LASF377
 18231 22e2 01       		.byte	0x1
 18232 22e3 5307     		.2byte	0x753
 18233 22e5 DD000000 		.4byte	0xdd
 18234 22e9 02       		.uleb128 0x2
 18235 22ea 91       		.byte	0x91
 18236 22eb 74       		.sleb128 -12
 18237 22ec 00       		.byte	0
 18238 22ed 24       		.uleb128 0x24
 18239 22ee 4D0C0000 		.4byte	.LASF378
 18240 22f2 01       		.byte	0x1
 18241 22f3 5E07     		.2byte	0x75e
 18242 22f5 00000000 		.4byte	.LFB65
 18243 22f9 7E000000 		.4byte	.LFE65-.LFB65
 18244 22fd 01       		.uleb128 0x1
 18245 22fe 9C       		.byte	0x9c
 18246 22ff 31230000 		.4byte	0x2331
 18247 2303 1B       		.uleb128 0x1b
 18248 2304 451A0000 		.4byte	.LASF379
 18249 2308 01       		.byte	0x1
 18250 2309 5E07     		.2byte	0x75e
 18251 230b 31230000 		.4byte	0x2331
 18252 230f 02       		.uleb128 0x2
 18253 2310 91       		.byte	0x91
 18254 2311 6C       		.sleb128 -20
 18255 2312 1D       		.uleb128 0x1d
 18256 2313 211A0000 		.4byte	.LASF380
 18257 2317 01       		.byte	0x1
 18258 2318 6007     		.2byte	0x760
 18259 231a DD000000 		.4byte	0xdd
 18260 231e 02       		.uleb128 0x2
 18261 231f 91       		.byte	0x91
 18262 2320 74       		.sleb128 -12
 18263 2321 1D       		.uleb128 0x1d
 18264 2322 94140000 		.4byte	.LASF381
 18265 2326 01       		.byte	0x1
 18266 2327 6007     		.2byte	0x760
 18267 2329 DD000000 		.4byte	0xdd
 18268 232d 02       		.uleb128 0x2
 18269 232e 91       		.byte	0x91
 18270 232f 70       		.sleb128 -16
 18271 2330 00       		.byte	0
 18272 2331 0B       		.uleb128 0xb
 18273 2332 04       		.byte	0x4
 18274 2333 B8020000 		.4byte	0x2b8
 18275 2337 24       		.uleb128 0x24
 18276 2338 FE160000 		.4byte	.LASF382
 18277 233c 01       		.byte	0x1
 18278 233d 8D07     		.2byte	0x78d
 18279 233f 00000000 		.4byte	.LFB66
 18280 2343 88000000 		.4byte	.LFE66-.LFB66
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 398


 18281 2347 01       		.uleb128 0x1
 18282 2348 9C       		.byte	0x9c
 18283 2349 6C230000 		.4byte	0x236c
 18284 234d 1B       		.uleb128 0x1b
 18285 234e 670C0000 		.4byte	.LASF383
 18286 2352 01       		.byte	0x1
 18287 2353 8D07     		.2byte	0x78d
 18288 2355 6C230000 		.4byte	0x236c
 18289 2359 02       		.uleb128 0x2
 18290 235a 91       		.byte	0x91
 18291 235b 6C       		.sleb128 -20
 18292 235c 1D       		.uleb128 0x1d
 18293 235d 970B0000 		.4byte	.LASF317
 18294 2361 01       		.byte	0x1
 18295 2362 8F07     		.2byte	0x78f
 18296 2364 DD000000 		.4byte	0xdd
 18297 2368 02       		.uleb128 0x2
 18298 2369 91       		.byte	0x91
 18299 236a 74       		.sleb128 -12
 18300 236b 00       		.byte	0
 18301 236c 0B       		.uleb128 0xb
 18302 236d 04       		.byte	0x4
 18303 236e EB070000 		.4byte	0x7eb
 18304 2372 22       		.uleb128 0x22
 18305 2373 B61A0000 		.4byte	.LASF384
 18306 2377 01       		.byte	0x1
 18307 2378 A907     		.2byte	0x7a9
 18308 237a E8000000 		.4byte	0xe8
 18309 237e 00000000 		.4byte	.LFB67
 18310 2382 82000000 		.4byte	.LFE67-.LFB67
 18311 2386 01       		.uleb128 0x1
 18312 2387 9C       		.byte	0x9c
 18313 2388 AB230000 		.4byte	0x23ab
 18314 238c 1B       		.uleb128 0x1b
 18315 238d 670C0000 		.4byte	.LASF383
 18316 2391 01       		.byte	0x1
 18317 2392 A907     		.2byte	0x7a9
 18318 2394 6C230000 		.4byte	0x236c
 18319 2398 02       		.uleb128 0x2
 18320 2399 91       		.byte	0x91
 18321 239a 6C       		.sleb128 -20
 18322 239b 1D       		.uleb128 0x1d
 18323 239c 970B0000 		.4byte	.LASF317
 18324 23a0 01       		.byte	0x1
 18325 23a1 AB07     		.2byte	0x7ab
 18326 23a3 DD000000 		.4byte	0xdd
 18327 23a7 02       		.uleb128 0x2
 18328 23a8 91       		.byte	0x91
 18329 23a9 74       		.sleb128 -12
 18330 23aa 00       		.byte	0
 18331 23ab 24       		.uleb128 0x24
 18332 23ac EB100000 		.4byte	.LASF385
 18333 23b0 01       		.byte	0x1
 18334 23b1 C907     		.2byte	0x7c9
 18335 23b3 00000000 		.4byte	.LFB68
 18336 23b7 3A000000 		.4byte	.LFE68-.LFB68
 18337 23bb 01       		.uleb128 0x1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 399


 18338 23bc 9C       		.byte	0x9c
 18339 23bd EF230000 		.4byte	0x23ef
 18340 23c1 1B       		.uleb128 0x1b
 18341 23c2 7C130000 		.4byte	.LASF386
 18342 23c6 01       		.byte	0x1
 18343 23c7 C907     		.2byte	0x7c9
 18344 23c9 DD000000 		.4byte	0xdd
 18345 23cd 02       		.uleb128 0x2
 18346 23ce 91       		.byte	0x91
 18347 23cf 6C       		.sleb128 -20
 18348 23d0 1B       		.uleb128 0x1b
 18349 23d1 CB050000 		.4byte	.LASF387
 18350 23d5 01       		.byte	0x1
 18351 23d6 C907     		.2byte	0x7c9
 18352 23d8 0E010000 		.4byte	0x10e
 18353 23dc 02       		.uleb128 0x2
 18354 23dd 91       		.byte	0x91
 18355 23de 6B       		.sleb128 -21
 18356 23df 1D       		.uleb128 0x1d
 18357 23e0 970B0000 		.4byte	.LASF317
 18358 23e4 01       		.byte	0x1
 18359 23e5 CB07     		.2byte	0x7cb
 18360 23e7 DD000000 		.4byte	0xdd
 18361 23eb 02       		.uleb128 0x2
 18362 23ec 91       		.byte	0x91
 18363 23ed 74       		.sleb128 -12
 18364 23ee 00       		.byte	0
 18365 23ef 24       		.uleb128 0x24
 18366 23f0 28110000 		.4byte	.LASF388
 18367 23f4 01       		.byte	0x1
 18368 23f5 D907     		.2byte	0x7d9
 18369 23f7 00000000 		.4byte	.LFB69
 18370 23fb 1E000000 		.4byte	.LFE69-.LFB69
 18371 23ff 01       		.uleb128 0x1
 18372 2400 9C       		.byte	0x9c
 18373 2401 15240000 		.4byte	0x2415
 18374 2405 1B       		.uleb128 0x1b
 18375 2406 63090000 		.4byte	.LASF146
 18376 240a 01       		.byte	0x1
 18377 240b D907     		.2byte	0x7d9
 18378 240d DD000000 		.4byte	0xdd
 18379 2411 02       		.uleb128 0x2
 18380 2412 91       		.byte	0x91
 18381 2413 74       		.sleb128 -12
 18382 2414 00       		.byte	0
 18383 2415 27       		.uleb128 0x27
 18384 2416 2D0B0000 		.4byte	.LASF406
 18385 241a 01       		.byte	0x1
 18386 241b E307     		.2byte	0x7e3
 18387 241d DD000000 		.4byte	0xdd
 18388 2421 00000000 		.4byte	.LFB70
 18389 2425 14000000 		.4byte	.LFE70-.LFB70
 18390 2429 01       		.uleb128 0x1
 18391 242a 9C       		.byte	0x9c
 18392 242b 24       		.uleb128 0x24
 18393 242c E5090000 		.4byte	.LASF389
 18394 2430 01       		.byte	0x1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 400


 18395 2431 EF07     		.2byte	0x7ef
 18396 2433 00000000 		.4byte	.LFB71
 18397 2437 A2000000 		.4byte	.LFE71-.LFB71
 18398 243b 01       		.uleb128 0x1
 18399 243c 9C       		.byte	0x9c
 18400 243d 6F240000 		.4byte	0x246f
 18401 2441 1B       		.uleb128 0x1b
 18402 2442 0E030000 		.4byte	.LASF390
 18403 2446 01       		.byte	0x1
 18404 2447 EF07     		.2byte	0x7ef
 18405 2449 6F240000 		.4byte	0x246f
 18406 244d 02       		.uleb128 0x2
 18407 244e 91       		.byte	0x91
 18408 244f 6C       		.sleb128 -20
 18409 2450 1D       		.uleb128 0x1d
 18410 2451 970B0000 		.4byte	.LASF317
 18411 2455 01       		.byte	0x1
 18412 2456 F207     		.2byte	0x7f2
 18413 2458 DD000000 		.4byte	0xdd
 18414 245c 02       		.uleb128 0x2
 18415 245d 91       		.byte	0x91
 18416 245e 74       		.sleb128 -12
 18417 245f 1D       		.uleb128 0x1d
 18418 2460 29010000 		.4byte	.LASF391
 18419 2464 01       		.byte	0x1
 18420 2465 F207     		.2byte	0x7f2
 18421 2467 DD000000 		.4byte	0xdd
 18422 246b 02       		.uleb128 0x2
 18423 246c 91       		.byte	0x91
 18424 246d 70       		.sleb128 -16
 18425 246e 00       		.byte	0
 18426 246f 0B       		.uleb128 0xb
 18427 2470 04       		.byte	0x4
 18428 2471 4F080000 		.4byte	0x84f
 18429 2475 22       		.uleb128 0x22
 18430 2476 FD020000 		.4byte	.LASF392
 18431 247a 01       		.byte	0x1
 18432 247b 1508     		.2byte	0x815
 18433 247d E8000000 		.4byte	0xe8
 18434 2481 00000000 		.4byte	.LFB72
 18435 2485 62000000 		.4byte	.LFE72-.LFB72
 18436 2489 01       		.uleb128 0x1
 18437 248a 9C       		.byte	0x9c
 18438 248b AE240000 		.4byte	0x24ae
 18439 248f 1B       		.uleb128 0x1b
 18440 2490 0E030000 		.4byte	.LASF390
 18441 2494 01       		.byte	0x1
 18442 2495 1508     		.2byte	0x815
 18443 2497 6F240000 		.4byte	0x246f
 18444 249b 02       		.uleb128 0x2
 18445 249c 91       		.byte	0x91
 18446 249d 6C       		.sleb128 -20
 18447 249e 1D       		.uleb128 0x1d
 18448 249f 970B0000 		.4byte	.LASF317
 18449 24a3 01       		.byte	0x1
 18450 24a4 1808     		.2byte	0x818
 18451 24a6 DD000000 		.4byte	0xdd
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 401


 18452 24aa 02       		.uleb128 0x2
 18453 24ab 91       		.byte	0x91
 18454 24ac 74       		.sleb128 -12
 18455 24ad 00       		.byte	0
 18456 24ae 24       		.uleb128 0x24
 18457 24af AE130000 		.4byte	.LASF393
 18458 24b3 01       		.byte	0x1
 18459 24b4 2B08     		.2byte	0x82b
 18460 24b6 00000000 		.4byte	.LFB73
 18461 24ba 3E000000 		.4byte	.LFE73-.LFB73
 18462 24be 01       		.uleb128 0x1
 18463 24bf 9C       		.byte	0x9c
 18464 24c0 E3240000 		.4byte	0x24e3
 18465 24c4 1B       		.uleb128 0x1b
 18466 24c5 C5160000 		.4byte	.LASF394
 18467 24c9 01       		.byte	0x1
 18468 24ca 2B08     		.2byte	0x82b
 18469 24cc 0E010000 		.4byte	0x10e
 18470 24d0 02       		.uleb128 0x2
 18471 24d1 91       		.byte	0x91
 18472 24d2 6F       		.sleb128 -17
 18473 24d3 1D       		.uleb128 0x1d
 18474 24d4 970B0000 		.4byte	.LASF317
 18475 24d8 01       		.byte	0x1
 18476 24d9 2D08     		.2byte	0x82d
 18477 24db DD000000 		.4byte	0xdd
 18478 24df 02       		.uleb128 0x2
 18479 24e0 91       		.byte	0x91
 18480 24e1 74       		.sleb128 -12
 18481 24e2 00       		.byte	0
 18482 24e3 28       		.uleb128 0x28
 18483 24e4 61150000 		.4byte	.LASF459
 18484 24e8 01       		.byte	0x1
 18485 24e9 3A08     		.2byte	0x83a
 18486 24eb 00000000 		.4byte	.LFB74
 18487 24ef 12000000 		.4byte	.LFE74-.LFB74
 18488 24f3 01       		.uleb128 0x1
 18489 24f4 9C       		.byte	0x9c
 18490 24f5 24       		.uleb128 0x24
 18491 24f6 B30D0000 		.4byte	.LASF395
 18492 24fa 01       		.byte	0x1
 18493 24fb 4308     		.2byte	0x843
 18494 24fd 00000000 		.4byte	.LFB75
 18495 2501 2A000000 		.4byte	.LFE75-.LFB75
 18496 2505 01       		.uleb128 0x1
 18497 2506 9C       		.byte	0x9c
 18498 2507 1B250000 		.4byte	0x251b
 18499 250b 1B       		.uleb128 0x1b
 18500 250c AD190000 		.4byte	.LASF155
 18501 2510 01       		.byte	0x1
 18502 2511 4308     		.2byte	0x843
 18503 2513 DD000000 		.4byte	0xdd
 18504 2517 02       		.uleb128 0x2
 18505 2518 91       		.byte	0x91
 18506 2519 74       		.sleb128 -12
 18507 251a 00       		.byte	0
 18508 251b 24       		.uleb128 0x24
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 402


 18509 251c 801A0000 		.4byte	.LASF396
 18510 2520 01       		.byte	0x1
 18511 2521 4E08     		.2byte	0x84e
 18512 2523 00000000 		.4byte	.LFB76
 18513 2527 42000000 		.4byte	.LFE76-.LFB76
 18514 252b 01       		.uleb128 0x1
 18515 252c 9C       		.byte	0x9c
 18516 252d 5F250000 		.4byte	0x255f
 18517 2531 1B       		.uleb128 0x1b
 18518 2532 56000000 		.4byte	.LASF397
 18519 2536 01       		.byte	0x1
 18520 2537 4E08     		.2byte	0x84e
 18521 2539 DD000000 		.4byte	0xdd
 18522 253d 02       		.uleb128 0x2
 18523 253e 91       		.byte	0x91
 18524 253f 74       		.sleb128 -12
 18525 2540 1B       		.uleb128 0x1b
 18526 2541 93160000 		.4byte	.LASF398
 18527 2545 01       		.byte	0x1
 18528 2546 4E08     		.2byte	0x84e
 18529 2548 A6080000 		.4byte	0x8a6
 18530 254c 02       		.uleb128 0x2
 18531 254d 91       		.byte	0x91
 18532 254e 70       		.sleb128 -16
 18533 254f 1B       		.uleb128 0x1b
 18534 2550 8E0F0000 		.4byte	.LASF399
 18535 2554 01       		.byte	0x1
 18536 2555 4E08     		.2byte	0x84e
 18537 2557 DD000000 		.4byte	0xdd
 18538 255b 02       		.uleb128 0x2
 18539 255c 91       		.byte	0x91
 18540 255d 6C       		.sleb128 -20
 18541 255e 00       		.byte	0
 18542 255f 24       		.uleb128 0x24
 18543 2560 5A160000 		.4byte	.LASF400
 18544 2564 01       		.byte	0x1
 18545 2565 6108     		.2byte	0x861
 18546 2567 00000000 		.4byte	.LFB77
 18547 256b AC000000 		.4byte	.LFE77-.LFB77
 18548 256f 01       		.uleb128 0x1
 18549 2570 9C       		.byte	0x9c
 18550 2571 85250000 		.4byte	0x2585
 18551 2575 1B       		.uleb128 0x1b
 18552 2576 41150000 		.4byte	.LASF401
 18553 257a 01       		.byte	0x1
 18554 257b 6108     		.2byte	0x861
 18555 257d 85250000 		.4byte	0x2585
 18556 2581 02       		.uleb128 0x2
 18557 2582 91       		.byte	0x91
 18558 2583 74       		.sleb128 -12
 18559 2584 00       		.byte	0
 18560 2585 0B       		.uleb128 0xb
 18561 2586 04       		.byte	0x4
 18562 2587 B1080000 		.4byte	0x8b1
 18563 258b 22       		.uleb128 0x22
 18564 258c 5A110000 		.4byte	.LASF402
 18565 2590 01       		.byte	0x1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 403


 18566 2591 8208     		.2byte	0x882
 18567 2593 E8000000 		.4byte	0xe8
 18568 2597 00000000 		.4byte	.LFB78
 18569 259b 9C000000 		.4byte	.LFE78-.LFB78
 18570 259f 01       		.uleb128 0x1
 18571 25a0 9C       		.byte	0x9c
 18572 25a1 D3250000 		.4byte	0x25d3
 18573 25a5 1B       		.uleb128 0x1b
 18574 25a6 AD190000 		.4byte	.LASF155
 18575 25aa 01       		.byte	0x1
 18576 25ab 8208     		.2byte	0x882
 18577 25ad DD000000 		.4byte	0xdd
 18578 25b1 02       		.uleb128 0x2
 18579 25b2 91       		.byte	0x91
 18580 25b3 6C       		.sleb128 -20
 18581 25b4 1B       		.uleb128 0x1b
 18582 25b5 C70A0000 		.4byte	.LASF403
 18583 25b9 01       		.byte	0x1
 18584 25ba 8208     		.2byte	0x882
 18585 25bc 85250000 		.4byte	0x2585
 18586 25c0 02       		.uleb128 0x2
 18587 25c1 91       		.byte	0x91
 18588 25c2 68       		.sleb128 -24
 18589 25c3 1D       		.uleb128 0x1d
 18590 25c4 970B0000 		.4byte	.LASF317
 18591 25c8 01       		.byte	0x1
 18592 25c9 8408     		.2byte	0x884
 18593 25cb DD000000 		.4byte	0xdd
 18594 25cf 02       		.uleb128 0x2
 18595 25d0 91       		.byte	0x91
 18596 25d1 74       		.sleb128 -12
 18597 25d2 00       		.byte	0
 18598 25d3 24       		.uleb128 0x24
 18599 25d4 4D1A0000 		.4byte	.LASF404
 18600 25d8 01       		.byte	0x1
 18601 25d9 A908     		.2byte	0x8a9
 18602 25db 00000000 		.4byte	.LFB79
 18603 25df 1A000000 		.4byte	.LFE79-.LFB79
 18604 25e3 01       		.uleb128 0x1
 18605 25e4 9C       		.byte	0x9c
 18606 25e5 F9250000 		.4byte	0x25f9
 18607 25e9 1B       		.uleb128 0x1b
 18608 25ea 381B0000 		.4byte	.LASF405
 18609 25ee 01       		.byte	0x1
 18610 25ef A908     		.2byte	0x8a9
 18611 25f1 DD000000 		.4byte	0xdd
 18612 25f5 02       		.uleb128 0x2
 18613 25f6 91       		.byte	0x91
 18614 25f7 74       		.sleb128 -12
 18615 25f8 00       		.byte	0
 18616 25f9 27       		.uleb128 0x27
 18617 25fa 4B0B0000 		.4byte	.LASF407
 18618 25fe 01       		.byte	0x1
 18619 25ff B208     		.2byte	0x8b2
 18620 2601 DD000000 		.4byte	0xdd
 18621 2605 00000000 		.4byte	.LFB80
 18622 2609 12000000 		.4byte	.LFE80-.LFB80
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 404


 18623 260d 01       		.uleb128 0x1
 18624 260e 9C       		.byte	0x9c
 18625 260f 22       		.uleb128 0x22
 18626 2610 DF0B0000 		.4byte	.LASF408
 18627 2614 01       		.byte	0x1
 18628 2615 C108     		.2byte	0x8c1
 18629 2617 E8000000 		.4byte	0xe8
 18630 261b 00000000 		.4byte	.LFB81
 18631 261f 0C010000 		.4byte	.LFE81-.LFB81
 18632 2623 01       		.uleb128 0x1
 18633 2624 9C       		.byte	0x9c
 18634 2625 A7260000 		.4byte	0x26a7
 18635 2629 1B       		.uleb128 0x1b
 18636 262a CB160000 		.4byte	.LASF409
 18637 262e 01       		.byte	0x1
 18638 262f C108     		.2byte	0x8c1
 18639 2631 A7260000 		.4byte	0x26a7
 18640 2635 02       		.uleb128 0x2
 18641 2636 91       		.byte	0x91
 18642 2637 54       		.sleb128 -44
 18643 2638 1D       		.uleb128 0x1d
 18644 2639 EA150000 		.4byte	.LASF410
 18645 263d 01       		.byte	0x1
 18646 263e C308     		.2byte	0x8c3
 18647 2640 DD000000 		.4byte	0xdd
 18648 2644 02       		.uleb128 0x2
 18649 2645 91       		.byte	0x91
 18650 2646 68       		.sleb128 -24
 18651 2647 1D       		.uleb128 0x1d
 18652 2648 C9070000 		.4byte	.LASF411
 18653 264c 01       		.byte	0x1
 18654 264d C308     		.2byte	0x8c3
 18655 264f DD000000 		.4byte	0xdd
 18656 2653 02       		.uleb128 0x2
 18657 2654 91       		.byte	0x91
 18658 2655 74       		.sleb128 -12
 18659 2656 1D       		.uleb128 0x1d
 18660 2657 17150000 		.4byte	.LASF412
 18661 265b 01       		.byte	0x1
 18662 265c C408     		.2byte	0x8c4
 18663 265e DD000000 		.4byte	0xdd
 18664 2662 02       		.uleb128 0x2
 18665 2663 91       		.byte	0x91
 18666 2664 70       		.sleb128 -16
 18667 2665 1D       		.uleb128 0x1d
 18668 2666 67020000 		.4byte	.LASF413
 18669 266a 01       		.byte	0x1
 18670 266b C408     		.2byte	0x8c4
 18671 266d DD000000 		.4byte	0xdd
 18672 2671 02       		.uleb128 0x2
 18673 2672 91       		.byte	0x91
 18674 2673 6C       		.sleb128 -20
 18675 2674 1D       		.uleb128 0x1d
 18676 2675 DB160000 		.4byte	.LASF414
 18677 2679 01       		.byte	0x1
 18678 267a C508     		.2byte	0x8c5
 18679 267c DD000000 		.4byte	0xdd
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 405


 18680 2680 02       		.uleb128 0x2
 18681 2681 91       		.byte	0x91
 18682 2682 64       		.sleb128 -28
 18683 2683 1E       		.uleb128 0x1e
 18684 2684 656E00   		.ascii	"en\000"
 18685 2687 01       		.byte	0x1
 18686 2688 C508     		.2byte	0x8c5
 18687 268a DD000000 		.4byte	0xdd
 18688 268e 02       		.uleb128 0x2
 18689 268f 91       		.byte	0x91
 18690 2690 60       		.sleb128 -32
 18691 2691 29       		.uleb128 0x29
 18692 2692 00000000 		.4byte	.Ldebug_ranges0+0
 18693 2696 1D       		.uleb128 0x1d
 18694 2697 17180000 		.4byte	.LASF415
 18695 269b 01       		.byte	0x1
 18696 269c D308     		.2byte	0x8d3
 18697 269e DD000000 		.4byte	0xdd
 18698 26a2 02       		.uleb128 0x2
 18699 26a3 91       		.byte	0x91
 18700 26a4 5C       		.sleb128 -36
 18701 26a5 00       		.byte	0
 18702 26a6 00       		.byte	0
 18703 26a7 0B       		.uleb128 0xb
 18704 26a8 04       		.byte	0x4
 18705 26a9 EE080000 		.4byte	0x8ee
 18706 26ad 24       		.uleb128 0x24
 18707 26ae 5C130000 		.4byte	.LASF416
 18708 26b2 01       		.byte	0x1
 18709 26b3 F408     		.2byte	0x8f4
 18710 26b5 00000000 		.4byte	.LFB82
 18711 26b9 EE010000 		.4byte	.LFE82-.LFB82
 18712 26bd 01       		.uleb128 0x1
 18713 26be 9C       		.byte	0x9c
 18714 26bf E2260000 		.4byte	0x26e2
 18715 26c3 1B       		.uleb128 0x1b
 18716 26c4 F8060000 		.4byte	.LASF417
 18717 26c8 01       		.byte	0x1
 18718 26c9 F408     		.2byte	0x8f4
 18719 26cb E2260000 		.4byte	0x26e2
 18720 26cf 02       		.uleb128 0x2
 18721 26d0 91       		.byte	0x91
 18722 26d1 6C       		.sleb128 -20
 18723 26d2 1D       		.uleb128 0x1d
 18724 26d3 970B0000 		.4byte	.LASF317
 18725 26d7 01       		.byte	0x1
 18726 26d8 F608     		.2byte	0x8f6
 18727 26da DD000000 		.4byte	0xdd
 18728 26de 02       		.uleb128 0x2
 18729 26df 91       		.byte	0x91
 18730 26e0 74       		.sleb128 -12
 18731 26e1 00       		.byte	0
 18732 26e2 0B       		.uleb128 0xb
 18733 26e3 04       		.byte	0x4
 18734 26e4 65090000 		.4byte	0x965
 18735 26e8 24       		.uleb128 0x24
 18736 26e9 91090000 		.4byte	.LASF418
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 406


 18737 26ed 01       		.byte	0x1
 18738 26ee 2D09     		.2byte	0x92d
 18739 26f0 00000000 		.4byte	.LFB83
 18740 26f4 40000000 		.4byte	.LFE83-.LFB83
 18741 26f8 01       		.uleb128 0x1
 18742 26f9 9C       		.byte	0x9c
 18743 26fa 1D270000 		.4byte	0x271d
 18744 26fe 1B       		.uleb128 0x1b
 18745 26ff 10110000 		.4byte	.LASF419
 18746 2703 01       		.byte	0x1
 18747 2704 2D09     		.2byte	0x92d
 18748 2706 0E010000 		.4byte	0x10e
 18749 270a 02       		.uleb128 0x2
 18750 270b 91       		.byte	0x91
 18751 270c 6F       		.sleb128 -17
 18752 270d 1D       		.uleb128 0x1d
 18753 270e 970B0000 		.4byte	.LASF317
 18754 2712 01       		.byte	0x1
 18755 2713 2F09     		.2byte	0x92f
 18756 2715 C7000000 		.4byte	0xc7
 18757 2719 02       		.uleb128 0x2
 18758 271a 91       		.byte	0x91
 18759 271b 76       		.sleb128 -10
 18760 271c 00       		.byte	0
 18761 271d 22       		.uleb128 0x22
 18762 271e F20E0000 		.4byte	.LASF420
 18763 2722 01       		.byte	0x1
 18764 2723 4109     		.2byte	0x941
 18765 2725 E8000000 		.4byte	0xe8
 18766 2729 00000000 		.4byte	.LFB84
 18767 272d 44010000 		.4byte	.LFE84-.LFB84
 18768 2731 01       		.uleb128 0x1
 18769 2732 9C       		.byte	0x9c
 18770 2733 65270000 		.4byte	0x2765
 18771 2737 1B       		.uleb128 0x1b
 18772 2738 AD190000 		.4byte	.LASF155
 18773 273c 01       		.byte	0x1
 18774 273d 4109     		.2byte	0x941
 18775 273f DD000000 		.4byte	0xdd
 18776 2743 02       		.uleb128 0x2
 18777 2744 91       		.byte	0x91
 18778 2745 74       		.sleb128 -12
 18779 2746 1B       		.uleb128 0x1b
 18780 2747 C9150000 		.4byte	.LASF421
 18781 274b 01       		.byte	0x1
 18782 274c 4109     		.2byte	0x941
 18783 274e DD000000 		.4byte	0xdd
 18784 2752 02       		.uleb128 0x2
 18785 2753 91       		.byte	0x91
 18786 2754 70       		.sleb128 -16
 18787 2755 1B       		.uleb128 0x1b
 18788 2756 C4110000 		.4byte	.LASF422
 18789 275a 01       		.byte	0x1
 18790 275b 4109     		.2byte	0x941
 18791 275d DD000000 		.4byte	0xdd
 18792 2761 02       		.uleb128 0x2
 18793 2762 91       		.byte	0x91
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 407


 18794 2763 6C       		.sleb128 -20
 18795 2764 00       		.byte	0
 18796 2765 24       		.uleb128 0x24
 18797 2766 D3150000 		.4byte	.LASF423
 18798 276a 01       		.byte	0x1
 18799 276b 7D09     		.2byte	0x97d
 18800 276d 00000000 		.4byte	.LFB85
 18801 2771 78010000 		.4byte	.LFE85-.LFB85
 18802 2775 01       		.uleb128 0x1
 18803 2776 9C       		.byte	0x9c
 18804 2777 A9270000 		.4byte	0x27a9
 18805 277b 1B       		.uleb128 0x1b
 18806 277c 6B130000 		.4byte	.LASF424
 18807 2780 01       		.byte	0x1
 18808 2781 7D09     		.2byte	0x97d
 18809 2783 A9270000 		.4byte	0x27a9
 18810 2787 02       		.uleb128 0x2
 18811 2788 91       		.byte	0x91
 18812 2789 6C       		.sleb128 -20
 18813 278a 1D       		.uleb128 0x1d
 18814 278b 970B0000 		.4byte	.LASF317
 18815 278f 01       		.byte	0x1
 18816 2790 7F09     		.2byte	0x97f
 18817 2792 DD000000 		.4byte	0xdd
 18818 2796 02       		.uleb128 0x2
 18819 2797 91       		.byte	0x91
 18820 2798 70       		.sleb128 -16
 18821 2799 1D       		.uleb128 0x1d
 18822 279a 040B0000 		.4byte	.LASF425
 18823 279e 01       		.byte	0x1
 18824 279f 7F09     		.2byte	0x97f
 18825 27a1 DD000000 		.4byte	0xdd
 18826 27a5 02       		.uleb128 0x2
 18827 27a6 91       		.byte	0x91
 18828 27a7 74       		.sleb128 -12
 18829 27a8 00       		.byte	0
 18830 27a9 0B       		.uleb128 0xb
 18831 27aa 04       		.byte	0x4
 18832 27ab E3090000 		.4byte	0x9e3
 18833 27af 24       		.uleb128 0x24
 18834 27b0 A1120000 		.4byte	.LASF426
 18835 27b4 01       		.byte	0x1
 18836 27b5 BE09     		.2byte	0x9be
 18837 27b7 00000000 		.4byte	.LFB86
 18838 27bb C0000000 		.4byte	.LFE86-.LFB86
 18839 27bf 01       		.uleb128 0x1
 18840 27c0 9C       		.byte	0x9c
 18841 27c1 11280000 		.4byte	0x2811
 18842 27c5 1B       		.uleb128 0x1b
 18843 27c6 6F1A0000 		.4byte	.LASF427
 18844 27ca 01       		.byte	0x1
 18845 27cb BE09     		.2byte	0x9be
 18846 27cd 0E010000 		.4byte	0x10e
 18847 27d1 02       		.uleb128 0x2
 18848 27d2 91       		.byte	0x91
 18849 27d3 67       		.sleb128 -25
 18850 27d4 1D       		.uleb128 0x1d
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 408


 18851 27d5 11090000 		.4byte	.LASF428
 18852 27d9 01       		.byte	0x1
 18853 27da C009     		.2byte	0x9c0
 18854 27dc DD000000 		.4byte	0xdd
 18855 27e0 02       		.uleb128 0x2
 18856 27e1 91       		.byte	0x91
 18857 27e2 74       		.sleb128 -12
 18858 27e3 1D       		.uleb128 0x1d
 18859 27e4 0C180000 		.4byte	.LASF429
 18860 27e8 01       		.byte	0x1
 18861 27e9 C109     		.2byte	0x9c1
 18862 27eb DD000000 		.4byte	0xdd
 18863 27ef 02       		.uleb128 0x2
 18864 27f0 91       		.byte	0x91
 18865 27f1 68       		.sleb128 -24
 18866 27f2 1D       		.uleb128 0x1d
 18867 27f3 DE100000 		.4byte	.LASF430
 18868 27f7 01       		.byte	0x1
 18869 27f8 C309     		.2byte	0x9c3
 18870 27fa DD000000 		.4byte	0xdd
 18871 27fe 02       		.uleb128 0x2
 18872 27ff 91       		.byte	0x91
 18873 2800 70       		.sleb128 -16
 18874 2801 1D       		.uleb128 0x1d
 18875 2802 70020000 		.4byte	.LASF431
 18876 2806 01       		.byte	0x1
 18877 2807 C309     		.2byte	0x9c3
 18878 2809 DD000000 		.4byte	0xdd
 18879 280d 02       		.uleb128 0x2
 18880 280e 91       		.byte	0x91
 18881 280f 6C       		.sleb128 -20
 18882 2810 00       		.byte	0
 18883 2811 24       		.uleb128 0x24
 18884 2812 300E0000 		.4byte	.LASF432
 18885 2816 01       		.byte	0x1
 18886 2817 0D0A     		.2byte	0xa0d
 18887 2819 00000000 		.4byte	.LFB87
 18888 281d 5A000000 		.4byte	.LFE87-.LFB87
 18889 2821 01       		.uleb128 0x1
 18890 2822 9C       		.byte	0x9c
 18891 2823 73280000 		.4byte	0x2873
 18892 2827 1B       		.uleb128 0x1b
 18893 2828 380D0000 		.4byte	.LASF433
 18894 282c 01       		.byte	0x1
 18895 282d 0D0A     		.2byte	0xa0d
 18896 282f DD000000 		.4byte	0xdd
 18897 2833 02       		.uleb128 0x2
 18898 2834 91       		.byte	0x91
 18899 2835 6C       		.sleb128 -20
 18900 2836 1B       		.uleb128 0x1b
 18901 2837 BD0A0000 		.4byte	.LASF434
 18902 283b 01       		.byte	0x1
 18903 283c 0D0A     		.2byte	0xa0d
 18904 283e DD000000 		.4byte	0xdd
 18905 2842 02       		.uleb128 0x2
 18906 2843 91       		.byte	0x91
 18907 2844 68       		.sleb128 -24
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 409


 18908 2845 1B       		.uleb128 0x1b
 18909 2846 B0140000 		.4byte	.LASF316
 18910 284a 01       		.byte	0x1
 18911 284b 0D0A     		.2byte	0xa0d
 18912 284d 0E010000 		.4byte	0x10e
 18913 2851 02       		.uleb128 0x2
 18914 2852 91       		.byte	0x91
 18915 2853 67       		.sleb128 -25
 18916 2854 1D       		.uleb128 0x1d
 18917 2855 970B0000 		.4byte	.LASF317
 18918 2859 01       		.byte	0x1
 18919 285a 0F0A     		.2byte	0xa0f
 18920 285c DD000000 		.4byte	0xdd
 18921 2860 02       		.uleb128 0x2
 18922 2861 91       		.byte	0x91
 18923 2862 74       		.sleb128 -12
 18924 2863 1D       		.uleb128 0x1d
 18925 2864 24160000 		.4byte	.LASF435
 18926 2868 01       		.byte	0x1
 18927 2869 100A     		.2byte	0xa10
 18928 286b DD000000 		.4byte	0xdd
 18929 286f 02       		.uleb128 0x2
 18930 2870 91       		.byte	0x91
 18931 2871 70       		.sleb128 -16
 18932 2872 00       		.byte	0
 18933 2873 22       		.uleb128 0x22
 18934 2874 C1080000 		.4byte	.LASF436
 18935 2878 01       		.byte	0x1
 18936 2879 230A     		.2byte	0xa23
 18937 287b DD000000 		.4byte	0xdd
 18938 287f 00000000 		.4byte	.LFB88
 18939 2883 2E000000 		.4byte	.LFE88-.LFB88
 18940 2887 01       		.uleb128 0x1
 18941 2888 9C       		.byte	0x9c
 18942 2889 AC280000 		.4byte	0x28ac
 18943 288d 1B       		.uleb128 0x1b
 18944 288e 380D0000 		.4byte	.LASF433
 18945 2892 01       		.byte	0x1
 18946 2893 230A     		.2byte	0xa23
 18947 2895 DD000000 		.4byte	0xdd
 18948 2899 02       		.uleb128 0x2
 18949 289a 91       		.byte	0x91
 18950 289b 6C       		.sleb128 -20
 18951 289c 1D       		.uleb128 0x1d
 18952 289d 970B0000 		.4byte	.LASF317
 18953 28a1 01       		.byte	0x1
 18954 28a2 250A     		.2byte	0xa25
 18955 28a4 DD000000 		.4byte	0xdd
 18956 28a8 02       		.uleb128 0x2
 18957 28a9 91       		.byte	0x91
 18958 28aa 74       		.sleb128 -12
 18959 28ab 00       		.byte	0
 18960 28ac 24       		.uleb128 0x24
 18961 28ad 50090000 		.4byte	.LASF437
 18962 28b1 01       		.byte	0x1
 18963 28b2 320A     		.2byte	0xa32
 18964 28b4 00000000 		.4byte	.LFB89
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 410


 18965 28b8 1A000000 		.4byte	.LFE89-.LFB89
 18966 28bc 01       		.uleb128 0x1
 18967 28bd 9C       		.byte	0x9c
 18968 28be D2280000 		.4byte	0x28d2
 18969 28c2 1B       		.uleb128 0x1b
 18970 28c3 08190000 		.4byte	.LASF438
 18971 28c7 01       		.byte	0x1
 18972 28c8 320A     		.2byte	0xa32
 18973 28ca DD000000 		.4byte	0xdd
 18974 28ce 02       		.uleb128 0x2
 18975 28cf 91       		.byte	0x91
 18976 28d0 74       		.sleb128 -12
 18977 28d1 00       		.byte	0
 18978 28d2 22       		.uleb128 0x22
 18979 28d3 95080000 		.4byte	.LASF439
 18980 28d7 01       		.byte	0x1
 18981 28d8 3F0A     		.2byte	0xa3f
 18982 28da 0E010000 		.4byte	0x10e
 18983 28de 00000000 		.4byte	.LFB90
 18984 28e2 40000000 		.4byte	.LFE90-.LFB90
 18985 28e6 01       		.uleb128 0x1
 18986 28e7 9C       		.byte	0x9c
 18987 28e8 29290000 		.4byte	0x2929
 18988 28ec 1B       		.uleb128 0x1b
 18989 28ed 380D0000 		.4byte	.LASF433
 18990 28f1 01       		.byte	0x1
 18991 28f2 3F0A     		.2byte	0xa3f
 18992 28f4 DD000000 		.4byte	0xdd
 18993 28f8 02       		.uleb128 0x2
 18994 28f9 91       		.byte	0x91
 18995 28fa 6C       		.sleb128 -20
 18996 28fb 1B       		.uleb128 0x1b
 18997 28fc 08190000 		.4byte	.LASF438
 18998 2900 01       		.byte	0x1
 18999 2901 3F0A     		.2byte	0xa3f
 19000 2903 DD000000 		.4byte	0xdd
 19001 2907 02       		.uleb128 0x2
 19002 2908 91       		.byte	0x91
 19003 2909 68       		.sleb128 -24
 19004 290a 1D       		.uleb128 0x1d
 19005 290b 970B0000 		.4byte	.LASF317
 19006 290f 01       		.byte	0x1
 19007 2910 410A     		.2byte	0xa41
 19008 2912 DD000000 		.4byte	0xdd
 19009 2916 02       		.uleb128 0x2
 19010 2917 91       		.byte	0x91
 19011 2918 70       		.sleb128 -16
 19012 2919 1D       		.uleb128 0x1d
 19013 291a 24160000 		.4byte	.LASF435
 19014 291e 01       		.byte	0x1
 19015 291f 420A     		.2byte	0xa42
 19016 2921 DD000000 		.4byte	0xdd
 19017 2925 02       		.uleb128 0x2
 19018 2926 91       		.byte	0x91
 19019 2927 74       		.sleb128 -12
 19020 2928 00       		.byte	0
 19021 2929 22       		.uleb128 0x22
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 411


 19022 292a 5F070000 		.4byte	.LASF440
 19023 292e 01       		.byte	0x1
 19024 292f 520A     		.2byte	0xa52
 19025 2931 DD000000 		.4byte	0xdd
 19026 2935 00000000 		.4byte	.LFB91
 19027 2939 30000000 		.4byte	.LFE91-.LFB91
 19028 293d 01       		.uleb128 0x1
 19029 293e 9C       		.byte	0x9c
 19030 293f 71290000 		.4byte	0x2971
 19031 2943 1B       		.uleb128 0x1b
 19032 2944 380D0000 		.4byte	.LASF433
 19033 2948 01       		.byte	0x1
 19034 2949 520A     		.2byte	0xa52
 19035 294b DD000000 		.4byte	0xdd
 19036 294f 02       		.uleb128 0x2
 19037 2950 91       		.byte	0x91
 19038 2951 6C       		.sleb128 -20
 19039 2952 1D       		.uleb128 0x1d
 19040 2953 970B0000 		.4byte	.LASF317
 19041 2957 01       		.byte	0x1
 19042 2958 540A     		.2byte	0xa54
 19043 295a DD000000 		.4byte	0xdd
 19044 295e 02       		.uleb128 0x2
 19045 295f 91       		.byte	0x91
 19046 2960 70       		.sleb128 -16
 19047 2961 1D       		.uleb128 0x1d
 19048 2962 24160000 		.4byte	.LASF435
 19049 2966 01       		.byte	0x1
 19050 2967 550A     		.2byte	0xa55
 19051 2969 DD000000 		.4byte	0xdd
 19052 296d 02       		.uleb128 0x2
 19053 296e 91       		.byte	0x91
 19054 296f 74       		.sleb128 -12
 19055 2970 00       		.byte	0
 19056 2971 24       		.uleb128 0x24
 19057 2972 F5040000 		.4byte	.LASF441
 19058 2976 01       		.byte	0x1
 19059 2977 690A     		.2byte	0xa69
 19060 2979 00000000 		.4byte	.LFB92
 19061 297d 44000000 		.4byte	.LFE92-.LFB92
 19062 2981 01       		.uleb128 0x1
 19063 2982 9C       		.byte	0x9c
 19064 2983 97290000 		.4byte	0x2997
 19065 2987 1B       		.uleb128 0x1b
 19066 2988 820D0000 		.4byte	.LASF442
 19067 298c 01       		.byte	0x1
 19068 298d 690A     		.2byte	0xa69
 19069 298f 97290000 		.4byte	0x2997
 19070 2993 02       		.uleb128 0x2
 19071 2994 91       		.byte	0x91
 19072 2995 74       		.sleb128 -12
 19073 2996 00       		.byte	0
 19074 2997 0B       		.uleb128 0xb
 19075 2998 04       		.byte	0x4
 19076 2999 94070000 		.4byte	0x794
 19077 299d 24       		.uleb128 0x24
 19078 299e 48180000 		.4byte	.LASF443
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 412


 19079 29a2 01       		.byte	0x1
 19080 29a3 7E0A     		.2byte	0xa7e
 19081 29a5 00000000 		.4byte	.LFB93
 19082 29a9 18000000 		.4byte	.LFE93-.LFB93
 19083 29ad 01       		.uleb128 0x1
 19084 29ae 9C       		.byte	0x9c
 19085 29af C3290000 		.4byte	0x29c3
 19086 29b3 1B       		.uleb128 0x1b
 19087 29b4 76050000 		.4byte	.LASF444
 19088 29b8 01       		.byte	0x1
 19089 29b9 7E0A     		.2byte	0xa7e
 19090 29bb DD000000 		.4byte	0xdd
 19091 29bf 02       		.uleb128 0x2
 19092 29c0 91       		.byte	0x91
 19093 29c1 74       		.sleb128 -12
 19094 29c2 00       		.byte	0
 19095 29c3 24       		.uleb128 0x24
 19096 29c4 99100000 		.4byte	.LASF445
 19097 29c8 01       		.byte	0x1
 19098 29c9 880A     		.2byte	0xa88
 19099 29cb 00000000 		.4byte	.LFB94
 19100 29cf 18000000 		.4byte	.LFE94-.LFB94
 19101 29d3 01       		.uleb128 0x1
 19102 29d4 9C       		.byte	0x9c
 19103 29d5 E9290000 		.4byte	0x29e9
 19104 29d9 1B       		.uleb128 0x1b
 19105 29da BA100000 		.4byte	.LASF446
 19106 29de 01       		.byte	0x1
 19107 29df 880A     		.2byte	0xa88
 19108 29e1 DD000000 		.4byte	0xdd
 19109 29e5 02       		.uleb128 0x2
 19110 29e6 91       		.byte	0x91
 19111 29e7 74       		.sleb128 -12
 19112 29e8 00       		.byte	0
 19113 29e9 24       		.uleb128 0x24
 19114 29ea D5090000 		.4byte	.LASF447
 19115 29ee 01       		.byte	0x1
 19116 29ef 920A     		.2byte	0xa92
 19117 29f1 00000000 		.4byte	.LFB95
 19118 29f5 18000000 		.4byte	.LFE95-.LFB95
 19119 29f9 01       		.uleb128 0x1
 19120 29fa 9C       		.byte	0x9c
 19121 29fb 0F2A0000 		.4byte	0x2a0f
 19122 29ff 1B       		.uleb128 0x1b
 19123 2a00 BA100000 		.4byte	.LASF446
 19124 2a04 01       		.byte	0x1
 19125 2a05 920A     		.2byte	0xa92
 19126 2a07 DD000000 		.4byte	0xdd
 19127 2a0b 02       		.uleb128 0x2
 19128 2a0c 91       		.byte	0x91
 19129 2a0d 74       		.sleb128 -12
 19130 2a0e 00       		.byte	0
 19131 2a0f 27       		.uleb128 0x27
 19132 2a10 CD180000 		.4byte	.LASF448
 19133 2a14 01       		.byte	0x1
 19134 2a15 9B0A     		.2byte	0xa9b
 19135 2a17 DD000000 		.4byte	0xdd
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 413


 19136 2a1b 00000000 		.4byte	.LFB96
 19137 2a1f 10000000 		.4byte	.LFE96-.LFB96
 19138 2a23 01       		.uleb128 0x1
 19139 2a24 9C       		.byte	0x9c
 19140 2a25 24       		.uleb128 0x24
 19141 2a26 B9150000 		.4byte	.LASF449
 19142 2a2a 01       		.byte	0x1
 19143 2a2b A50A     		.2byte	0xaa5
 19144 2a2d 00000000 		.4byte	.LFB97
 19145 2a31 18000000 		.4byte	.LFE97-.LFB97
 19146 2a35 01       		.uleb128 0x1
 19147 2a36 9C       		.byte	0x9c
 19148 2a37 4B2A0000 		.4byte	0x2a4b
 19149 2a3b 1B       		.uleb128 0x1b
 19150 2a3c BA100000 		.4byte	.LASF446
 19151 2a40 01       		.byte	0x1
 19152 2a41 A50A     		.2byte	0xaa5
 19153 2a43 DD000000 		.4byte	0xdd
 19154 2a47 02       		.uleb128 0x2
 19155 2a48 91       		.byte	0x91
 19156 2a49 74       		.sleb128 -12
 19157 2a4a 00       		.byte	0
 19158 2a4b 24       		.uleb128 0x24
 19159 2a4c 8C0A0000 		.4byte	.LASF450
 19160 2a50 01       		.byte	0x1
 19161 2a51 AF0A     		.2byte	0xaaf
 19162 2a53 00000000 		.4byte	.LFB98
 19163 2a57 18000000 		.4byte	.LFE98-.LFB98
 19164 2a5b 01       		.uleb128 0x1
 19165 2a5c 9C       		.byte	0x9c
 19166 2a5d 712A0000 		.4byte	0x2a71
 19167 2a61 1B       		.uleb128 0x1b
 19168 2a62 BA100000 		.4byte	.LASF446
 19169 2a66 01       		.byte	0x1
 19170 2a67 AF0A     		.2byte	0xaaf
 19171 2a69 DD000000 		.4byte	0xdd
 19172 2a6d 02       		.uleb128 0x2
 19173 2a6e 91       		.byte	0x91
 19174 2a6f 74       		.sleb128 -12
 19175 2a70 00       		.byte	0
 19176 2a71 24       		.uleb128 0x24
 19177 2a72 9C0A0000 		.4byte	.LASF451
 19178 2a76 01       		.byte	0x1
 19179 2a77 B90A     		.2byte	0xab9
 19180 2a79 00000000 		.4byte	.LFB99
 19181 2a7d 18000000 		.4byte	.LFE99-.LFB99
 19182 2a81 01       		.uleb128 0x1
 19183 2a82 9C       		.byte	0x9c
 19184 2a83 972A0000 		.4byte	0x2a97
 19185 2a87 1B       		.uleb128 0x1b
 19186 2a88 BA100000 		.4byte	.LASF446
 19187 2a8c 01       		.byte	0x1
 19188 2a8d B90A     		.2byte	0xab9
 19189 2a8f DD000000 		.4byte	0xdd
 19190 2a93 02       		.uleb128 0x2
 19191 2a94 91       		.byte	0x91
 19192 2a95 74       		.sleb128 -12
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 414


 19193 2a96 00       		.byte	0
 19194 2a97 24       		.uleb128 0x24
 19195 2a98 290C0000 		.4byte	.LASF452
 19196 2a9c 01       		.byte	0x1
 19197 2a9d C30A     		.2byte	0xac3
 19198 2a9f 00000000 		.4byte	.LFB100
 19199 2aa3 18000000 		.4byte	.LFE100-.LFB100
 19200 2aa7 01       		.uleb128 0x1
 19201 2aa8 9C       		.byte	0x9c
 19202 2aa9 BD2A0000 		.4byte	0x2abd
 19203 2aad 1B       		.uleb128 0x1b
 19204 2aae BA100000 		.4byte	.LASF446
 19205 2ab2 01       		.byte	0x1
 19206 2ab3 C30A     		.2byte	0xac3
 19207 2ab5 DD000000 		.4byte	0xdd
 19208 2ab9 02       		.uleb128 0x2
 19209 2aba 91       		.byte	0x91
 19210 2abb 74       		.sleb128 -12
 19211 2abc 00       		.byte	0
 19212 2abd 22       		.uleb128 0x22
 19213 2abe FB0C0000 		.4byte	.LASF453
 19214 2ac2 01       		.byte	0x1
 19215 2ac3 D60A     		.2byte	0xad6
 19216 2ac5 E8000000 		.4byte	0xe8
 19217 2ac9 00000000 		.4byte	.LFB101
 19218 2acd 34000000 		.4byte	.LFE101-.LFB101
 19219 2ad1 01       		.uleb128 0x1
 19220 2ad2 9C       		.byte	0x9c
 19221 2ad3 E72A0000 		.4byte	0x2ae7
 19222 2ad7 1B       		.uleb128 0x1b
 19223 2ad8 BE130000 		.4byte	.LASF454
 19224 2adc 01       		.byte	0x1
 19225 2add D60A     		.2byte	0xad6
 19226 2adf 0E010000 		.4byte	0x10e
 19227 2ae3 02       		.uleb128 0x2
 19228 2ae4 91       		.byte	0x91
 19229 2ae5 77       		.sleb128 -9
 19230 2ae6 00       		.byte	0
 19231 2ae7 24       		.uleb128 0x24
 19232 2ae8 E4000000 		.4byte	.LASF455
 19233 2aec 01       		.byte	0x1
 19234 2aed E70A     		.2byte	0xae7
 19235 2aef 00000000 		.4byte	.LFB102
 19236 2af3 1A000000 		.4byte	.LFE102-.LFB102
 19237 2af7 01       		.uleb128 0x1
 19238 2af8 9C       		.byte	0x9c
 19239 2af9 0D2B0000 		.4byte	0x2b0d
 19240 2afd 1B       		.uleb128 0x1b
 19241 2afe 52010000 		.4byte	.LASF456
 19242 2b02 01       		.byte	0x1
 19243 2b03 E70A     		.2byte	0xae7
 19244 2b05 DD000000 		.4byte	0xdd
 19245 2b09 02       		.uleb128 0x2
 19246 2b0a 91       		.byte	0x91
 19247 2b0b 74       		.sleb128 -12
 19248 2b0c 00       		.byte	0
 19249 2b0d 24       		.uleb128 0x24
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 415


 19250 2b0e AC170000 		.4byte	.LASF457
 19251 2b12 01       		.byte	0x1
 19252 2b13 F80A     		.2byte	0xaf8
 19253 2b15 00000000 		.4byte	.LFB103
 19254 2b19 1A000000 		.4byte	.LFE103-.LFB103
 19255 2b1d 01       		.uleb128 0x1
 19256 2b1e 9C       		.byte	0x9c
 19257 2b1f 332B0000 		.4byte	0x2b33
 19258 2b23 1B       		.uleb128 0x1b
 19259 2b24 9E0F0000 		.4byte	.LASF458
 19260 2b28 01       		.byte	0x1
 19261 2b29 F80A     		.2byte	0xaf8
 19262 2b2b DD000000 		.4byte	0xdd
 19263 2b2f 02       		.uleb128 0x2
 19264 2b30 91       		.byte	0x91
 19265 2b31 74       		.sleb128 -12
 19266 2b32 00       		.byte	0
 19267 2b33 28       		.uleb128 0x28
 19268 2b34 93150000 		.4byte	.LASF460
 19269 2b38 01       		.byte	0x1
 19270 2b39 020B     		.2byte	0xb02
 19271 2b3b 00000000 		.4byte	.LFB104
 19272 2b3f 1C000000 		.4byte	.LFE104-.LFB104
 19273 2b43 01       		.uleb128 0x1
 19274 2b44 9C       		.byte	0x9c
 19275 2b45 24       		.uleb128 0x24
 19276 2b46 39130000 		.4byte	.LASF461
 19277 2b4a 01       		.byte	0x1
 19278 2b4b 0E0B     		.2byte	0xb0e
 19279 2b4d 00000000 		.4byte	.LFB105
 19280 2b51 44000000 		.4byte	.LFE105-.LFB105
 19281 2b55 01       		.uleb128 0x1
 19282 2b56 9C       		.byte	0x9c
 19283 2b57 7B2B0000 		.4byte	0x2b7b
 19284 2b5b 1D       		.uleb128 0x1d
 19285 2b5c 03120000 		.4byte	.LASF462
 19286 2b60 01       		.byte	0x1
 19287 2b61 110B     		.2byte	0xb11
 19288 2b63 CD010000 		.4byte	0x1cd
 19289 2b67 02       		.uleb128 0x2
 19290 2b68 91       		.byte	0x91
 19291 2b69 68       		.sleb128 -24
 19292 2b6a 1D       		.uleb128 0x1d
 19293 2b6b 29020000 		.4byte	.LASF463
 19294 2b6f 01       		.byte	0x1
 19295 2b70 120B     		.2byte	0xb12
 19296 2b72 E6060000 		.4byte	0x6e6
 19297 2b76 03       		.uleb128 0x3
 19298 2b77 91       		.byte	0x91
 19299 2b78 AC7F     		.sleb128 -84
 19300 2b7a 00       		.byte	0
 19301 2b7b 22       		.uleb128 0x22
 19302 2b7c 6A100000 		.4byte	.LASF464
 19303 2b80 01       		.byte	0x1
 19304 2b81 220B     		.2byte	0xb22
 19305 2b83 DD000000 		.4byte	0xdd
 19306 2b87 00000000 		.4byte	.LFB106
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 416


 19307 2b8b 48000000 		.4byte	.LFE106-.LFB106
 19308 2b8f 01       		.uleb128 0x1
 19309 2b90 9C       		.byte	0x9c
 19310 2b91 B42B0000 		.4byte	0x2bb4
 19311 2b95 1B       		.uleb128 0x1b
 19312 2b96 8B140000 		.4byte	.LASF465
 19313 2b9a 01       		.byte	0x1
 19314 2b9b 220B     		.2byte	0xb22
 19315 2b9d D2000000 		.4byte	0xd2
 19316 2ba1 02       		.uleb128 0x2
 19317 2ba2 91       		.byte	0x91
 19318 2ba3 6C       		.sleb128 -20
 19319 2ba4 1D       		.uleb128 0x1d
 19320 2ba5 A9100000 		.4byte	.LASF466
 19321 2ba9 01       		.byte	0x1
 19322 2baa 240B     		.2byte	0xb24
 19323 2bac DD000000 		.4byte	0xdd
 19324 2bb0 02       		.uleb128 0x2
 19325 2bb1 91       		.byte	0x91
 19326 2bb2 74       		.sleb128 -12
 19327 2bb3 00       		.byte	0
 19328 2bb4 27       		.uleb128 0x27
 19329 2bb5 98020000 		.4byte	.LASF467
 19330 2bb9 01       		.byte	0x1
 19331 2bba 370B     		.2byte	0xb37
 19332 2bbc DD000000 		.4byte	0xdd
 19333 2bc0 00000000 		.4byte	.LFB107
 19334 2bc4 12000000 		.4byte	.LFE107-.LFB107
 19335 2bc8 01       		.uleb128 0x1
 19336 2bc9 9C       		.byte	0x9c
 19337 2bca 27       		.uleb128 0x27
 19338 2bcb 1F0E0000 		.4byte	.LASF468
 19339 2bcf 01       		.byte	0x1
 19340 2bd0 400B     		.2byte	0xb40
 19341 2bd2 DD000000 		.4byte	0xdd
 19342 2bd6 00000000 		.4byte	.LFB108
 19343 2bda 12000000 		.4byte	.LFE108-.LFB108
 19344 2bde 01       		.uleb128 0x1
 19345 2bdf 9C       		.byte	0x9c
 19346 2be0 27       		.uleb128 0x27
 19347 2be1 D5060000 		.4byte	.LASF469
 19348 2be5 01       		.byte	0x1
 19349 2be6 4B0B     		.2byte	0xb4b
 19350 2be8 E8000000 		.4byte	0xe8
 19351 2bec 00000000 		.4byte	.LFB109
 19352 2bf0 1C000000 		.4byte	.LFE109-.LFB109
 19353 2bf4 01       		.uleb128 0x1
 19354 2bf5 9C       		.byte	0x9c
 19355 2bf6 28       		.uleb128 0x28
 19356 2bf7 84130000 		.4byte	.LASF470
 19357 2bfb 01       		.byte	0x1
 19358 2bfc 580B     		.2byte	0xb58
 19359 2bfe 00000000 		.4byte	.LFB110
 19360 2c02 1E000000 		.4byte	.LFE110-.LFB110
 19361 2c06 01       		.uleb128 0x1
 19362 2c07 9C       		.byte	0x9c
 19363 2c08 26       		.uleb128 0x26
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 417


 19364 2c09 02160000 		.4byte	.LASF471
 19365 2c0d 01       		.byte	0x1
 19366 2c0e 760B     		.2byte	0xb76
 19367 2c10 00000000 		.4byte	.LFB111
 19368 2c14 4A000000 		.4byte	.LFE111-.LFB111
 19369 2c18 01       		.uleb128 0x1
 19370 2c19 9C       		.byte	0x9c
 19371 2c1a 2E2C0000 		.4byte	0x2c2e
 19372 2c1e 1D       		.uleb128 0x1d
 19373 2c1f 3D160000 		.4byte	.LASF472
 19374 2c23 01       		.byte	0x1
 19375 2c24 780B     		.2byte	0xb78
 19376 2c26 CD010000 		.4byte	0x1cd
 19377 2c2a 02       		.uleb128 0x2
 19378 2c2b 91       		.byte	0x91
 19379 2c2c 68       		.sleb128 -24
 19380 2c2d 00       		.byte	0
 19381 2c2e 25       		.uleb128 0x25
 19382 2c2f 39010000 		.4byte	.LASF473
 19383 2c33 01       		.byte	0x1
 19384 2c34 8F0B     		.2byte	0xb8f
 19385 2c36 DD000000 		.4byte	0xdd
 19386 2c3a 00000000 		.4byte	.LFB112
 19387 2c3e 6C000000 		.4byte	.LFE112-.LFB112
 19388 2c42 01       		.uleb128 0x1
 19389 2c43 9C       		.byte	0x9c
 19390 2c44 672C0000 		.4byte	0x2c67
 19391 2c48 1B       		.uleb128 0x1b
 19392 2c49 30000000 		.4byte	.LASF474
 19393 2c4d 01       		.byte	0x1
 19394 2c4e 8F0B     		.2byte	0xb8f
 19395 2c50 672C0000 		.4byte	0x2c67
 19396 2c54 02       		.uleb128 0x2
 19397 2c55 91       		.byte	0x91
 19398 2c56 6C       		.sleb128 -20
 19399 2c57 1D       		.uleb128 0x1d
 19400 2c58 0A070000 		.4byte	.LASF475
 19401 2c5c 01       		.byte	0x1
 19402 2c5d 910B     		.2byte	0xb91
 19403 2c5f DD000000 		.4byte	0xdd
 19404 2c63 02       		.uleb128 0x2
 19405 2c64 91       		.byte	0x91
 19406 2c65 74       		.sleb128 -12
 19407 2c66 00       		.byte	0
 19408 2c67 0B       		.uleb128 0xb
 19409 2c68 04       		.byte	0x4
 19410 2c69 D2000000 		.4byte	0xd2
 19411 2c6d 22       		.uleb128 0x22
 19412 2c6e 5F0B0000 		.4byte	.LASF476
 19413 2c72 01       		.byte	0x1
 19414 2c73 A80B     		.2byte	0xba8
 19415 2c75 E8000000 		.4byte	0xe8
 19416 2c79 00000000 		.4byte	.LFB113
 19417 2c7d 28040000 		.4byte	.LFE113-.LFB113
 19418 2c81 01       		.uleb128 0x1
 19419 2c82 9C       		.byte	0x9c
 19420 2c83 F32D0000 		.4byte	0x2df3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 418


 19421 2c87 1B       		.uleb128 0x1b
 19422 2c88 8E120000 		.4byte	.LASF477
 19423 2c8c 01       		.byte	0x1
 19424 2c8d A80B     		.2byte	0xba8
 19425 2c8f F32D0000 		.4byte	0x2df3
 19426 2c93 03       		.uleb128 0x3
 19427 2c94 91       		.byte	0x91
 19428 2c95 B47E     		.sleb128 -204
 19429 2c97 1D       		.uleb128 0x1d
 19430 2c98 F7120000 		.4byte	.LASF287
 19431 2c9c 01       		.byte	0x1
 19432 2c9d AA0B     		.2byte	0xbaa
 19433 2c9f F92D0000 		.4byte	0x2df9
 19434 2ca3 02       		.uleb128 0x2
 19435 2ca4 91       		.byte	0x91
 19436 2ca5 60       		.sleb128 -32
 19437 2ca6 1D       		.uleb128 0x1d
 19438 2ca7 60000000 		.4byte	.LASF478
 19439 2cab 01       		.byte	0x1
 19440 2cac AB0B     		.2byte	0xbab
 19441 2cae 0A020000 		.4byte	0x20a
 19442 2cb2 02       		.uleb128 0x2
 19443 2cb3 91       		.byte	0x91
 19444 2cb4 40       		.sleb128 -64
 19445 2cb5 1D       		.uleb128 0x1d
 19446 2cb6 30000000 		.4byte	.LASF474
 19447 2cba 01       		.byte	0x1
 19448 2cbb AD0B     		.2byte	0xbad
 19449 2cbd D2000000 		.4byte	0xd2
 19450 2cc1 03       		.uleb128 0x3
 19451 2cc2 91       		.byte	0x91
 19452 2cc3 BC7F     		.sleb128 -68
 19453 2cc5 1D       		.uleb128 0x1d
 19454 2cc6 A70C0000 		.4byte	.LASF479
 19455 2cca 01       		.byte	0x1
 19456 2ccb AE0B     		.2byte	0xbae
 19457 2ccd DD000000 		.4byte	0xdd
 19458 2cd1 02       		.uleb128 0x2
 19459 2cd2 91       		.byte	0x91
 19460 2cd3 54       		.sleb128 -44
 19461 2cd4 1D       		.uleb128 0x1d
 19462 2cd5 0A070000 		.4byte	.LASF475
 19463 2cd9 01       		.byte	0x1
 19464 2cda AF0B     		.2byte	0xbaf
 19465 2cdc D2000000 		.4byte	0xd2
 19466 2ce0 02       		.uleb128 0x2
 19467 2ce1 91       		.byte	0x91
 19468 2ce2 74       		.sleb128 -12
 19469 2ce3 1D       		.uleb128 0x1d
 19470 2ce4 4A040000 		.4byte	.LASF480
 19471 2ce8 01       		.byte	0x1
 19472 2ce9 B00B     		.2byte	0xbb0
 19473 2ceb 0E010000 		.4byte	0x10e
 19474 2cef 02       		.uleb128 0x2
 19475 2cf0 91       		.byte	0x91
 19476 2cf1 73       		.sleb128 -13
 19477 2cf2 1D       		.uleb128 0x1d
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 419


 19478 2cf3 A0190000 		.4byte	.LASF481
 19479 2cf7 01       		.byte	0x1
 19480 2cf8 B20B     		.2byte	0xbb2
 19481 2cfa DD000000 		.4byte	0xdd
 19482 2cfe 02       		.uleb128 0x2
 19483 2cff 91       		.byte	0x91
 19484 2d00 5C       		.sleb128 -36
 19485 2d01 1D       		.uleb128 0x1d
 19486 2d02 B2080000 		.4byte	.LASF482
 19487 2d06 01       		.byte	0x1
 19488 2d07 B20B     		.2byte	0xbb2
 19489 2d09 DD000000 		.4byte	0xdd
 19490 2d0d 02       		.uleb128 0x2
 19491 2d0e 91       		.byte	0x91
 19492 2d0f 58       		.sleb128 -40
 19493 2d10 2A       		.uleb128 0x2a
 19494 2d11 3B070000 		.4byte	.LASF553
 19495 2d15 04       		.byte	0x4
 19496 2d16 01       		.byte	0x1
 19497 2d17 BE0B     		.2byte	0xbbe
 19498 2d19 382D0000 		.4byte	0x2d38
 19499 2d1d 0A       		.uleb128 0xa
 19500 2d1e 160E0000 		.4byte	.LASF483
 19501 2d22 01       		.byte	0x1
 19502 2d23 C00B     		.2byte	0xbc0
 19503 2d25 C7000000 		.4byte	0xc7
 19504 2d29 00       		.byte	0
 19505 2d2a 0A       		.uleb128 0xa
 19506 2d2b 94070000 		.4byte	.LASF484
 19507 2d2f 01       		.byte	0x1
 19508 2d30 C10B     		.2byte	0xbc1
 19509 2d32 C7000000 		.4byte	0xc7
 19510 2d36 02       		.byte	0x2
 19511 2d37 00       		.byte	0
 19512 2d38 0C       		.uleb128 0xc
 19513 2d39 102D0000 		.4byte	0x2d10
 19514 2d3d 1D       		.uleb128 0x1d
 19515 2d3e 68080000 		.4byte	.LASF485
 19516 2d42 01       		.byte	0x1
 19517 2d43 C20B     		.2byte	0xbc2
 19518 2d45 0E2E0000 		.4byte	0x2e0e
 19519 2d49 05       		.uleb128 0x5
 19520 2d4a 03       		.byte	0x3
 19521 2d4b B0010000 		.4byte	cal_registers.7056
 19522 2d4f 1D       		.uleb128 0x1d
 19523 2d50 EE030000 		.4byte	.LASF486
 19524 2d54 01       		.byte	0x1
 19525 2d55 CE0B     		.2byte	0xbce
 19526 2d57 7B020000 		.4byte	0x27b
 19527 2d5b 03       		.uleb128 0x3
 19528 2d5c 91       		.byte	0x91
 19529 2d5d A87F     		.sleb128 -88
 19530 2d5f 2B       		.uleb128 0x2b
 19531 2d60 7E080000 		.4byte	.LASF497
 19532 2d64 01       		.byte	0x1
 19533 2d65 4D0C     		.2byte	0xc4d
 19534 2d67 08040000 		.4byte	.L514
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 420


 19535 2d6b 2C       		.uleb128 0x2c
 19536 2d6c 18000000 		.4byte	.Ldebug_ranges0+0x18
 19537 2d70 A62D0000 		.4byte	0x2da6
 19538 2d74 1D       		.uleb128 0x1d
 19539 2d75 17160000 		.4byte	.LASF487
 19540 2d79 01       		.byte	0x1
 19541 2d7a E30B     		.2byte	0xbe3
 19542 2d7c D2000000 		.4byte	0xd2
 19543 2d80 02       		.uleb128 0x2
 19544 2d81 91       		.byte	0x91
 19545 2d82 50       		.sleb128 -48
 19546 2d83 1D       		.uleb128 0x1d
 19547 2d84 2F040000 		.4byte	.LASF488
 19548 2d88 01       		.byte	0x1
 19549 2d89 F80B     		.2byte	0xbf8
 19550 2d8b DD000000 		.4byte	0xdd
 19551 2d8f 02       		.uleb128 0x2
 19552 2d90 91       		.byte	0x91
 19553 2d91 4C       		.sleb128 -52
 19554 2d92 29       		.uleb128 0x29
 19555 2d93 30000000 		.4byte	.Ldebug_ranges0+0x30
 19556 2d97 1E       		.uleb128 0x1e
 19557 2d98 6900     		.ascii	"i\000"
 19558 2d9a 01       		.byte	0x1
 19559 2d9b EC0B     		.2byte	0xbec
 19560 2d9d 25000000 		.4byte	0x25
 19561 2da1 02       		.uleb128 0x2
 19562 2da2 91       		.byte	0x91
 19563 2da3 6C       		.sleb128 -20
 19564 2da4 00       		.byte	0
 19565 2da5 00       		.byte	0
 19566 2da6 29       		.uleb128 0x29
 19567 2da7 48000000 		.4byte	.Ldebug_ranges0+0x48
 19568 2dab 1D       		.uleb128 0x1d
 19569 2dac E6130000 		.4byte	.LASF489
 19570 2db0 01       		.byte	0x1
 19571 2db1 010C     		.2byte	0xc01
 19572 2db3 D2000000 		.4byte	0xd2
 19573 2db7 02       		.uleb128 0x2
 19574 2db8 91       		.byte	0x91
 19575 2db9 68       		.sleb128 -24
 19576 2dba 1D       		.uleb128 0x1d
 19577 2dbb CD040000 		.4byte	.LASF490
 19578 2dbf 01       		.byte	0x1
 19579 2dc0 020C     		.2byte	0xc02
 19580 2dc2 232E0000 		.4byte	0x2e23
 19581 2dc6 05       		.uleb128 0x5
 19582 2dc7 03       		.byte	0x3
 19583 2dc8 C4010000 		.4byte	ideal_pga_gain.7066
 19584 2dcc 29       		.uleb128 0x29
 19585 2dcd 60000000 		.4byte	.Ldebug_ranges0+0x60
 19586 2dd1 1D       		.uleb128 0x1d
 19587 2dd2 E7020000 		.4byte	.LASF491
 19588 2dd6 01       		.byte	0x1
 19589 2dd7 140C     		.2byte	0xc14
 19590 2dd9 B6060000 		.4byte	0x6b6
 19591 2ddd 03       		.uleb128 0x3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 421


 19592 2dde 91       		.byte	0x91
 19593 2ddf B87E     		.sleb128 -200
 19594 2de1 1D       		.uleb128 0x1d
 19595 2de2 AC1A0000 		.4byte	.LASF492
 19596 2de6 01       		.byte	0x1
 19597 2de7 270C     		.2byte	0xc27
 19598 2de9 DD000000 		.4byte	0xdd
 19599 2ded 02       		.uleb128 0x2
 19600 2dee 91       		.byte	0x91
 19601 2def 64       		.sleb128 -28
 19602 2df0 00       		.byte	0
 19603 2df1 00       		.byte	0
 19604 2df2 00       		.byte	0
 19605 2df3 0B       		.uleb128 0xb
 19606 2df4 04       		.byte	0x4
 19607 2df5 620D0000 		.4byte	0xd62
 19608 2df9 0C       		.uleb128 0xc
 19609 2dfa B5000000 		.4byte	0xb5
 19610 2dfe 0D       		.uleb128 0xd
 19611 2dff 382D0000 		.4byte	0x2d38
 19612 2e03 0E2E0000 		.4byte	0x2e0e
 19613 2e07 0E       		.uleb128 0xe
 19614 2e08 9E000000 		.4byte	0x9e
 19615 2e0c 04       		.byte	0x4
 19616 2e0d 00       		.byte	0
 19617 2e0e 0C       		.uleb128 0xc
 19618 2e0f FE2D0000 		.4byte	0x2dfe
 19619 2e13 0D       		.uleb128 0xd
 19620 2e14 F92D0000 		.4byte	0x2df9
 19621 2e18 232E0000 		.4byte	0x2e23
 19622 2e1c 0E       		.uleb128 0xe
 19623 2e1d 9E000000 		.4byte	0x9e
 19624 2e21 04       		.byte	0x4
 19625 2e22 00       		.byte	0
 19626 2e23 0C       		.uleb128 0xc
 19627 2e24 132E0000 		.4byte	0x2e13
 19628 2e28 22       		.uleb128 0x22
 19629 2e29 15100000 		.4byte	.LASF493
 19630 2e2d 01       		.byte	0x1
 19631 2e2e 580C     		.2byte	0xc58
 19632 2e30 E8000000 		.4byte	0xe8
 19633 2e34 00000000 		.4byte	.LFB114
 19634 2e38 2C020000 		.4byte	.LFE114-.LFB114
 19635 2e3c 01       		.uleb128 0x1
 19636 2e3d 9C       		.byte	0x9c
 19637 2e3e F42E0000 		.4byte	0x2ef4
 19638 2e42 1B       		.uleb128 0x1b
 19639 2e43 7E0F0000 		.4byte	.LASF494
 19640 2e47 01       		.byte	0x1
 19641 2e48 580C     		.2byte	0xc58
 19642 2e4a F42E0000 		.4byte	0x2ef4
 19643 2e4e 03       		.uleb128 0x3
 19644 2e4f 91       		.byte	0x91
 19645 2e50 FC7E     		.sleb128 -132
 19646 2e52 1D       		.uleb128 0x1d
 19647 2e53 70050000 		.4byte	.LASF495
 19648 2e57 01       		.byte	0x1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 422


 19649 2e58 5A0C     		.2byte	0xc5a
 19650 2e5a E8000000 		.4byte	0xe8
 19651 2e5e 02       		.uleb128 0x2
 19652 2e5f 91       		.byte	0x91
 19653 2e60 74       		.sleb128 -12
 19654 2e61 1D       		.uleb128 0x1d
 19655 2e62 ED140000 		.4byte	.LASF496
 19656 2e66 01       		.byte	0x1
 19657 2e67 5B0C     		.2byte	0xc5b
 19658 2e69 E6060000 		.4byte	0x6e6
 19659 2e6d 03       		.uleb128 0x3
 19660 2e6e 91       		.byte	0x91
 19661 2e6f A87F     		.sleb128 -88
 19662 2e71 1D       		.uleb128 0x1d
 19663 2e72 60000000 		.4byte	.LASF478
 19664 2e76 01       		.byte	0x1
 19665 2e77 5C0C     		.2byte	0xc5c
 19666 2e79 0A020000 		.4byte	0x20a
 19667 2e7d 03       		.uleb128 0x3
 19668 2e7e 91       		.byte	0x91
 19669 2e7f 9C7F     		.sleb128 -100
 19670 2e81 1D       		.uleb128 0x1d
 19671 2e82 EE030000 		.4byte	.LASF486
 19672 2e86 01       		.byte	0x1
 19673 2e87 5D0C     		.2byte	0xc5d
 19674 2e89 7B020000 		.4byte	0x27b
 19675 2e8d 03       		.uleb128 0x3
 19676 2e8e 91       		.byte	0x91
 19677 2e8f 887F     		.sleb128 -120
 19678 2e91 1D       		.uleb128 0x1d
 19679 2e92 30000000 		.4byte	.LASF474
 19680 2e96 01       		.byte	0x1
 19681 2e97 5F0C     		.2byte	0xc5f
 19682 2e99 D2000000 		.4byte	0xd2
 19683 2e9d 03       		.uleb128 0x3
 19684 2e9e 91       		.byte	0x91
 19685 2e9f 847F     		.sleb128 -124
 19686 2ea1 1D       		.uleb128 0x1d
 19687 2ea2 A70C0000 		.4byte	.LASF479
 19688 2ea6 01       		.byte	0x1
 19689 2ea7 600C     		.2byte	0xc60
 19690 2ea9 DD000000 		.4byte	0xdd
 19691 2ead 02       		.uleb128 0x2
 19692 2eae 91       		.byte	0x91
 19693 2eaf 6C       		.sleb128 -20
 19694 2eb0 1D       		.uleb128 0x1d
 19695 2eb1 0A070000 		.4byte	.LASF475
 19696 2eb5 01       		.byte	0x1
 19697 2eb6 610C     		.2byte	0xc61
 19698 2eb8 D2000000 		.4byte	0xd2
 19699 2ebc 02       		.uleb128 0x2
 19700 2ebd 91       		.byte	0x91
 19701 2ebe 64       		.sleb128 -28
 19702 2ebf 1D       		.uleb128 0x1d
 19703 2ec0 4A040000 		.4byte	.LASF480
 19704 2ec4 01       		.byte	0x1
 19705 2ec5 620C     		.2byte	0xc62
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 423


 19706 2ec7 0E010000 		.4byte	0x10e
 19707 2ecb 02       		.uleb128 0x2
 19708 2ecc 91       		.byte	0x91
 19709 2ecd 73       		.sleb128 -13
 19710 2ece 2B       		.uleb128 0x2b
 19711 2ecf 700C0000 		.4byte	.LASF498
 19712 2ed3 01       		.byte	0x1
 19713 2ed4 C40C     		.2byte	0xcc4
 19714 2ed6 02020000 		.4byte	.L542
 19715 2eda 21       		.uleb128 0x21
 19716 2edb 48010000 		.4byte	.LBB22
 19717 2edf 98000000 		.4byte	.LBE22-.LBB22
 19718 2ee3 1D       		.uleb128 0x1d
 19719 2ee4 17160000 		.4byte	.LASF487
 19720 2ee8 01       		.byte	0x1
 19721 2ee9 A00C     		.2byte	0xca0
 19722 2eeb D2000000 		.4byte	0xd2
 19723 2eef 02       		.uleb128 0x2
 19724 2ef0 91       		.byte	0x91
 19725 2ef1 68       		.sleb128 -24
 19726 2ef2 00       		.byte	0
 19727 2ef3 00       		.byte	0
 19728 2ef4 0B       		.uleb128 0xb
 19729 2ef5 04       		.byte	0x4
 19730 2ef6 2E0E0000 		.4byte	0xe2e
 19731 2efa 1C       		.uleb128 0x1c
 19732 2efb 16030000 		.4byte	.LASF499
 19733 2eff 01       		.byte	0x1
 19734 2f00 CF0C     		.2byte	0xccf
 19735 2f02 E8000000 		.4byte	0xe8
 19736 2f06 00000000 		.4byte	.LFB115
 19737 2f0a 14000000 		.4byte	.LFE115-.LFB115
 19738 2f0e 01       		.uleb128 0x1
 19739 2f0f 9C       		.byte	0x9c
 19740 2f10 242F0000 		.4byte	0x2f24
 19741 2f14 1B       		.uleb128 0x1b
 19742 2f15 F6000000 		.4byte	.LASF500
 19743 2f19 01       		.byte	0x1
 19744 2f1a CF0C     		.2byte	0xccf
 19745 2f1c F42E0000 		.4byte	0x2ef4
 19746 2f20 02       		.uleb128 0x2
 19747 2f21 91       		.byte	0x91
 19748 2f22 74       		.sleb128 -12
 19749 2f23 00       		.byte	0
 19750 2f24 22       		.uleb128 0x22
 19751 2f25 1E040000 		.4byte	.LASF501
 19752 2f29 01       		.byte	0x1
 19753 2f2a DB0C     		.2byte	0xcdb
 19754 2f2c E8000000 		.4byte	0xe8
 19755 2f30 00000000 		.4byte	.LFB116
 19756 2f34 5A060000 		.4byte	.LFE116-.LFB116
 19757 2f38 01       		.uleb128 0x1
 19758 2f39 9C       		.byte	0x9c
 19759 2f3a 37300000 		.4byte	0x3037
 19760 2f3e 1B       		.uleb128 0x1b
 19761 2f3f 90020000 		.4byte	.LASF502
 19762 2f43 01       		.byte	0x1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 424


 19763 2f44 DB0C     		.2byte	0xcdb
 19764 2f46 37300000 		.4byte	0x3037
 19765 2f4a 03       		.uleb128 0x3
 19766 2f4b 91       		.byte	0x91
 19767 2f4c D47D     		.sleb128 -300
 19768 2f4e 1B       		.uleb128 0x1b
 19769 2f4f D4120000 		.4byte	.LASF503
 19770 2f53 01       		.byte	0x1
 19771 2f54 DB0C     		.2byte	0xcdb
 19772 2f56 A5000000 		.4byte	0xa5
 19773 2f5a 03       		.uleb128 0x3
 19774 2f5b 91       		.byte	0x91
 19775 2f5c D07D     		.sleb128 -304
 19776 2f5e 1D       		.uleb128 0x1d
 19777 2f5f 03120000 		.4byte	.LASF462
 19778 2f63 01       		.byte	0x1
 19779 2f64 DD0C     		.2byte	0xcdd
 19780 2f66 CD010000 		.4byte	0x1cd
 19781 2f6a 02       		.uleb128 0x2
 19782 2f6b 91       		.byte	0x91
 19783 2f6c 44       		.sleb128 -60
 19784 2f6d 1D       		.uleb128 0x1d
 19785 2f6e 4A070000 		.4byte	.LASF504
 19786 2f72 01       		.byte	0x1
 19787 2f73 DE0C     		.2byte	0xcde
 19788 2f75 B6060000 		.4byte	0x6b6
 19789 2f79 03       		.uleb128 0x3
 19790 2f7a 91       		.byte	0x91
 19791 2f7b D47E     		.sleb128 -172
 19792 2f7d 1D       		.uleb128 0x1d
 19793 2f7e 0C040000 		.4byte	.LASF505
 19794 2f82 01       		.byte	0x1
 19795 2f83 DF0C     		.2byte	0xcdf
 19796 2f85 3D070000 		.4byte	0x73d
 19797 2f89 03       		.uleb128 0x3
 19798 2f8a 91       		.byte	0x91
 19799 2f8b 947E     		.sleb128 -236
 19800 2f8d 1D       		.uleb128 0x1d
 19801 2f8e A70C0000 		.4byte	.LASF479
 19802 2f92 01       		.byte	0x1
 19803 2f93 E00C     		.2byte	0xce0
 19804 2f95 DD000000 		.4byte	0xdd
 19805 2f99 02       		.uleb128 0x2
 19806 2f9a 91       		.byte	0x91
 19807 2f9b 54       		.sleb128 -44
 19808 2f9c 1D       		.uleb128 0x1d
 19809 2f9d 4A040000 		.4byte	.LASF480
 19810 2fa1 01       		.byte	0x1
 19811 2fa2 E20C     		.2byte	0xce2
 19812 2fa4 0E010000 		.4byte	0x10e
 19813 2fa8 02       		.uleb128 0x2
 19814 2fa9 91       		.byte	0x91
 19815 2faa 6F       		.sleb128 -17
 19816 2fab 1D       		.uleb128 0x1d
 19817 2fac 3A170000 		.4byte	.LASF506
 19818 2fb0 01       		.byte	0x1
 19819 2fb1 E30C     		.2byte	0xce3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 425


 19820 2fb3 DD000000 		.4byte	0xdd
 19821 2fb7 02       		.uleb128 0x2
 19822 2fb8 91       		.byte	0x91
 19823 2fb9 68       		.sleb128 -24
 19824 2fba 1D       		.uleb128 0x1d
 19825 2fbb C81A0000 		.4byte	.LASF80
 19826 2fbf 01       		.byte	0x1
 19827 2fc0 E40C     		.2byte	0xce4
 19828 2fc2 DD000000 		.4byte	0xdd
 19829 2fc6 02       		.uleb128 0x2
 19830 2fc7 91       		.byte	0x91
 19831 2fc8 64       		.sleb128 -28
 19832 2fc9 1D       		.uleb128 0x1d
 19833 2fca 62120000 		.4byte	.LASF507
 19834 2fce 01       		.byte	0x1
 19835 2fcf E60C     		.2byte	0xce6
 19836 2fd1 B5000000 		.4byte	0xb5
 19837 2fd5 02       		.uleb128 0x2
 19838 2fd6 91       		.byte	0x91
 19839 2fd7 58       		.sleb128 -40
 19840 2fd8 1D       		.uleb128 0x1d
 19841 2fd9 5B170000 		.4byte	.LASF508
 19842 2fdd 01       		.byte	0x1
 19843 2fde E70C     		.2byte	0xce7
 19844 2fe0 DD000000 		.4byte	0xdd
 19845 2fe4 02       		.uleb128 0x2
 19846 2fe5 91       		.byte	0x91
 19847 2fe6 5C       		.sleb128 -36
 19848 2fe7 1D       		.uleb128 0x1d
 19849 2fe8 46060000 		.4byte	.LASF509
 19850 2fec 01       		.byte	0x1
 19851 2fed E80C     		.2byte	0xce8
 19852 2fef 4D300000 		.4byte	0x304d
 19853 2ff3 03       		.uleb128 0x3
 19854 2ff4 91       		.byte	0x91
 19855 2ff5 F07D     		.sleb128 -272
 19856 2ff7 1D       		.uleb128 0x1d
 19857 2ff8 46150000 		.4byte	.LASF510
 19858 2ffc 01       		.byte	0x1
 19859 2ffd E90C     		.2byte	0xce9
 19860 2fff DD000000 		.4byte	0xdd
 19861 3003 02       		.uleb128 0x2
 19862 3004 91       		.byte	0x91
 19863 3005 60       		.sleb128 -32
 19864 3006 1D       		.uleb128 0x1d
 19865 3007 A2140000 		.4byte	.LASF511
 19866 300b 01       		.byte	0x1
 19867 300c EB0C     		.2byte	0xceb
 19868 300e AD0F0000 		.4byte	0xfad
 19869 3012 03       		.uleb128 0x3
 19870 3013 91       		.byte	0x91
 19871 3014 E87D     		.sleb128 -280
 19872 3016 1D       		.uleb128 0x1d
 19873 3017 00190000 		.4byte	.LASF512
 19874 301b 01       		.byte	0x1
 19875 301c EB0C     		.2byte	0xceb
 19876 301e AD0F0000 		.4byte	0xfad
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 426


 19877 3022 03       		.uleb128 0x3
 19878 3023 91       		.byte	0x91
 19879 3024 E07D     		.sleb128 -288
 19880 3026 1D       		.uleb128 0x1d
 19881 3027 FC190000 		.4byte	.LASF241
 19882 302b 01       		.byte	0x1
 19883 302c 910D     		.2byte	0xd91
 19884 302e 7D0F0000 		.4byte	0xf7d
 19885 3032 03       		.uleb128 0x3
 19886 3033 91       		.byte	0x91
 19887 3034 D87D     		.sleb128 -296
 19888 3036 00       		.byte	0
 19889 3037 0B       		.uleb128 0xb
 19890 3038 04       		.byte	0x4
 19891 3039 6E0A0000 		.4byte	0xa6e
 19892 303d 0D       		.uleb128 0xd
 19893 303e AC080000 		.4byte	0x8ac
 19894 3042 4D300000 		.4byte	0x304d
 19895 3046 0E       		.uleb128 0xe
 19896 3047 9E000000 		.4byte	0x9e
 19897 304b 08       		.byte	0x8
 19898 304c 00       		.byte	0
 19899 304d 0C       		.uleb128 0xc
 19900 304e 3D300000 		.4byte	0x303d
 19901 3052 22       		.uleb128 0x22
 19902 3053 2C160000 		.4byte	.LASF513
 19903 3057 01       		.byte	0x1
 19904 3058 AE0D     		.2byte	0xdae
 19905 305a E8000000 		.4byte	0xe8
 19906 305e 00000000 		.4byte	.LFB117
 19907 3062 D40A0000 		.4byte	.LFE117-.LFB117
 19908 3066 01       		.uleb128 0x1
 19909 3067 9C       		.byte	0x9c
 19910 3068 38320000 		.4byte	0x3238
 19911 306c 1B       		.uleb128 0x1b
 19912 306d 90020000 		.4byte	.LASF502
 19913 3071 01       		.byte	0x1
 19914 3072 AE0D     		.2byte	0xdae
 19915 3074 38320000 		.4byte	0x3238
 19916 3078 03       		.uleb128 0x3
 19917 3079 91       		.byte	0x91
 19918 307a A47C     		.sleb128 -476
 19919 307c 1B       		.uleb128 0x1b
 19920 307d D4120000 		.4byte	.LASF503
 19921 3081 01       		.byte	0x1
 19922 3082 AE0D     		.2byte	0xdae
 19923 3084 A5000000 		.4byte	0xa5
 19924 3088 03       		.uleb128 0x3
 19925 3089 91       		.byte	0x91
 19926 308a A07C     		.sleb128 -480
 19927 308c 1D       		.uleb128 0x1d
 19928 308d 4A070000 		.4byte	.LASF504
 19929 3091 01       		.byte	0x1
 19930 3092 B00D     		.2byte	0xdb0
 19931 3094 B6060000 		.4byte	0x6b6
 19932 3098 03       		.uleb128 0x3
 19933 3099 91       		.byte	0x91
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 427


 19934 309a C07E     		.sleb128 -192
 19935 309c 1D       		.uleb128 0x1d
 19936 309d 29020000 		.4byte	.LASF463
 19937 30a1 01       		.byte	0x1
 19938 30a2 B10D     		.2byte	0xdb1
 19939 30a4 E6060000 		.4byte	0x6e6
 19940 30a8 03       		.uleb128 0x3
 19941 30a9 91       		.byte	0x91
 19942 30aa 847E     		.sleb128 -252
 19943 30ac 1D       		.uleb128 0x1d
 19944 30ad 0C040000 		.4byte	.LASF505
 19945 30b1 01       		.byte	0x1
 19946 30b2 B20D     		.2byte	0xdb2
 19947 30b4 3D070000 		.4byte	0x73d
 19948 30b8 03       		.uleb128 0x3
 19949 30b9 91       		.byte	0x91
 19950 30ba C47D     		.sleb128 -316
 19951 30bc 1D       		.uleb128 0x1d
 19952 30bd 89060000 		.4byte	.LASF514
 19953 30c1 01       		.byte	0x1
 19954 30c2 B30D     		.2byte	0xdb3
 19955 30c4 77210000 		.4byte	0x2177
 19956 30c8 02       		.uleb128 0x2
 19957 30c9 91       		.byte	0x91
 19958 30ca 58       		.sleb128 -40
 19959 30cb 1D       		.uleb128 0x1d
 19960 30cc 82190000 		.4byte	.LASF515
 19961 30d0 01       		.byte	0x1
 19962 30d1 B40D     		.2byte	0xdb4
 19963 30d3 611D0000 		.4byte	0x1d61
 19964 30d7 02       		.uleb128 0x2
 19965 30d8 91       		.byte	0x91
 19966 30d9 5C       		.sleb128 -36
 19967 30da 1D       		.uleb128 0x1d
 19968 30db A70C0000 		.4byte	.LASF479
 19969 30df 01       		.byte	0x1
 19970 30e0 B50D     		.2byte	0xdb5
 19971 30e2 DD000000 		.4byte	0xdd
 19972 30e6 03       		.uleb128 0x3
 19973 30e7 91       		.byte	0x91
 19974 30e8 B87F     		.sleb128 -72
 19975 30ea 1D       		.uleb128 0x1d
 19976 30eb 74060000 		.4byte	.LASF516
 19977 30ef 01       		.byte	0x1
 19978 30f0 B50D     		.2byte	0xdb5
 19979 30f2 DD000000 		.4byte	0xdd
 19980 30f6 03       		.uleb128 0x3
 19981 30f7 91       		.byte	0x91
 19982 30f8 BC7F     		.sleb128 -68
 19983 30fa 1D       		.uleb128 0x1d
 19984 30fb 4A040000 		.4byte	.LASF480
 19985 30ff 01       		.byte	0x1
 19986 3100 B60D     		.2byte	0xdb6
 19987 3102 0E010000 		.4byte	0x10e
 19988 3106 02       		.uleb128 0x2
 19989 3107 91       		.byte	0x91
 19990 3108 6F       		.sleb128 -17
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 428


 19991 3109 1D       		.uleb128 0x1d
 19992 310a 3F0E0000 		.4byte	.LASF517
 19993 310e 01       		.byte	0x1
 19994 310f B70D     		.2byte	0xdb7
 19995 3111 0E010000 		.4byte	0x10e
 19996 3115 02       		.uleb128 0x2
 19997 3116 91       		.byte	0x91
 19998 3117 6E       		.sleb128 -18
 19999 3118 1D       		.uleb128 0x1d
 20000 3119 62120000 		.4byte	.LASF507
 20001 311d 01       		.byte	0x1
 20002 311e B90D     		.2byte	0xdb9
 20003 3120 B5000000 		.4byte	0xb5
 20004 3124 02       		.uleb128 0x2
 20005 3125 91       		.byte	0x91
 20006 3126 50       		.sleb128 -48
 20007 3127 1D       		.uleb128 0x1d
 20008 3128 5B170000 		.4byte	.LASF508
 20009 312c 01       		.byte	0x1
 20010 312d BA0D     		.2byte	0xdba
 20011 312f DD000000 		.4byte	0xdd
 20012 3133 02       		.uleb128 0x2
 20013 3134 91       		.byte	0x91
 20014 3135 54       		.sleb128 -44
 20015 3136 1D       		.uleb128 0x1d
 20016 3137 8C0D0000 		.4byte	.LASF518
 20017 313b 01       		.byte	0x1
 20018 313c BC0D     		.2byte	0xdbc
 20019 313e 4E320000 		.4byte	0x324e
 20020 3142 03       		.uleb128 0x3
 20021 3143 91       		.byte	0x91
 20022 3144 D87C     		.sleb128 -424
 20023 3146 1D       		.uleb128 0x1d
 20024 3147 FC170000 		.4byte	.LASF519
 20025 314b 01       		.byte	0x1
 20026 314c BD0D     		.2byte	0xdbd
 20027 314e 53320000 		.4byte	0x3253
 20028 3152 03       		.uleb128 0x3
 20029 3153 91       		.byte	0x91
 20030 3154 C47C     		.sleb128 -444
 20031 3156 1D       		.uleb128 0x1d
 20032 3157 46150000 		.4byte	.LASF510
 20033 315b 01       		.byte	0x1
 20034 315c BE0D     		.2byte	0xdbe
 20035 315e DD000000 		.4byte	0xdd
 20036 3162 02       		.uleb128 0x2
 20037 3163 91       		.byte	0x91
 20038 3164 68       		.sleb128 -24
 20039 3165 1D       		.uleb128 0x1d
 20040 3166 510F0000 		.4byte	.LASF520
 20041 316a 01       		.byte	0x1
 20042 316b C00D     		.2byte	0xdc0
 20043 316d DD000000 		.4byte	0xdd
 20044 3171 02       		.uleb128 0x2
 20045 3172 91       		.byte	0x91
 20046 3173 64       		.sleb128 -28
 20047 3174 1D       		.uleb128 0x1d
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 429


 20048 3175 650A0000 		.4byte	.LASF521
 20049 3179 01       		.byte	0x1
 20050 317a C00D     		.2byte	0xdc0
 20051 317c DD000000 		.4byte	0xdd
 20052 3180 02       		.uleb128 0x2
 20053 3181 91       		.byte	0x91
 20054 3182 60       		.sleb128 -32
 20055 3183 1D       		.uleb128 0x1d
 20056 3184 BB010000 		.4byte	.LASF522
 20057 3188 01       		.byte	0x1
 20058 3189 C10D     		.2byte	0xdc1
 20059 318b B5000000 		.4byte	0xb5
 20060 318f 02       		.uleb128 0x2
 20061 3190 91       		.byte	0x91
 20062 3191 40       		.sleb128 -64
 20063 3192 1D       		.uleb128 0x1d
 20064 3193 A2140000 		.4byte	.LASF511
 20065 3197 01       		.byte	0x1
 20066 3198 C30D     		.2byte	0xdc3
 20067 319a AD0F0000 		.4byte	0xfad
 20068 319e 03       		.uleb128 0x3
 20069 319f 91       		.byte	0x91
 20070 31a0 BC7C     		.sleb128 -452
 20071 31a2 1D       		.uleb128 0x1d
 20072 31a3 00190000 		.4byte	.LASF512
 20073 31a7 01       		.byte	0x1
 20074 31a8 C30D     		.2byte	0xdc3
 20075 31aa AD0F0000 		.4byte	0xfad
 20076 31ae 03       		.uleb128 0x3
 20077 31af 91       		.byte	0x91
 20078 31b0 B47C     		.sleb128 -460
 20079 31b2 1E       		.uleb128 0x1e
 20080 31b3 72657300 		.ascii	"res\000"
 20081 31b7 01       		.byte	0x1
 20082 31b8 D30E     		.2byte	0xed3
 20083 31ba 7D0F0000 		.4byte	0xf7d
 20084 31be 03       		.uleb128 0x3
 20085 31bf 91       		.byte	0x91
 20086 31c0 AC7C     		.sleb128 -468
 20087 31c2 23       		.uleb128 0x23
 20088 31c3 96010000 		.4byte	.LBB23
 20089 31c7 CC010000 		.4byte	.LBE23-.LBB23
 20090 31cb FD310000 		.4byte	0x31fd
 20091 31cf 1D       		.uleb128 0x1d
 20092 31d0 950F0000 		.4byte	.LASF523
 20093 31d4 01       		.byte	0x1
 20094 31d5 F60D     		.2byte	0xdf6
 20095 31d7 B5000000 		.4byte	0xb5
 20096 31db 02       		.uleb128 0x2
 20097 31dc 91       		.byte	0x91
 20098 31dd 4C       		.sleb128 -52
 20099 31de 1D       		.uleb128 0x1d
 20100 31df A31A0000 		.4byte	.LASF524
 20101 31e3 01       		.byte	0x1
 20102 31e4 F60D     		.2byte	0xdf6
 20103 31e6 B5000000 		.4byte	0xb5
 20104 31ea 02       		.uleb128 0x2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 430


 20105 31eb 91       		.byte	0x91
 20106 31ec 48       		.sleb128 -56
 20107 31ed 1D       		.uleb128 0x1d
 20108 31ee FC190000 		.4byte	.LASF241
 20109 31f2 01       		.byte	0x1
 20110 31f3 F60D     		.2byte	0xdf6
 20111 31f5 B5000000 		.4byte	0xb5
 20112 31f9 02       		.uleb128 0x2
 20113 31fa 91       		.byte	0x91
 20114 31fb 44       		.sleb128 -60
 20115 31fc 00       		.byte	0
 20116 31fd 21       		.uleb128 0x21
 20117 31fe 64050000 		.4byte	.LBB24
 20118 3202 0A020000 		.4byte	.LBE24-.LBB24
 20119 3206 1D       		.uleb128 0x1d
 20120 3207 30000000 		.4byte	.LASF474
 20121 320b 01       		.byte	0x1
 20122 320c 4A0E     		.2byte	0xe4a
 20123 320e D2000000 		.4byte	0xd2
 20124 3212 03       		.uleb128 0x3
 20125 3213 91       		.byte	0x91
 20126 3214 A87C     		.sleb128 -472
 20127 3216 1D       		.uleb128 0x1d
 20128 3217 B6140000 		.4byte	.LASF525
 20129 321b 01       		.byte	0x1
 20130 321c 4B0E     		.2byte	0xe4b
 20131 321e D2000000 		.4byte	0xd2
 20132 3222 03       		.uleb128 0x3
 20133 3223 91       		.byte	0x91
 20134 3224 B47F     		.sleb128 -76
 20135 3226 1D       		.uleb128 0x1d
 20136 3227 81150000 		.4byte	.LASF526
 20137 322b 01       		.byte	0x1
 20138 322c 4B0E     		.2byte	0xe4b
 20139 322e D2000000 		.4byte	0xd2
 20140 3232 03       		.uleb128 0x3
 20141 3233 91       		.byte	0x91
 20142 3234 B07F     		.sleb128 -80
 20143 3236 00       		.byte	0
 20144 3237 00       		.byte	0
 20145 3238 0B       		.uleb128 0xb
 20146 3239 04       		.byte	0x4
 20147 323a 200B0000 		.4byte	0xb20
 20148 323e 0D       		.uleb128 0xd
 20149 323f AC080000 		.4byte	0x8ac
 20150 3243 4E320000 		.4byte	0x324e
 20151 3247 0E       		.uleb128 0xe
 20152 3248 9E000000 		.4byte	0x9e
 20153 324c 1A       		.byte	0x1a
 20154 324d 00       		.byte	0
 20155 324e 0C       		.uleb128 0xc
 20156 324f 3E320000 		.4byte	0x323e
 20157 3253 0C       		.uleb128 0xc
 20158 3254 132E0000 		.4byte	0x2e13
 20159 3258 22       		.uleb128 0x22
 20160 3259 BB050000 		.4byte	.LASF527
 20161 325d 01       		.byte	0x1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 431


 20162 325e FB0E     		.2byte	0xefb
 20163 3260 E8000000 		.4byte	0xe8
 20164 3264 00000000 		.4byte	.LFB118
 20165 3268 1C030000 		.4byte	.LFE118-.LFB118
 20166 326c 01       		.uleb128 0x1
 20167 326d 9C       		.byte	0x9c
 20168 326e 5C330000 		.4byte	0x335c
 20169 3272 1B       		.uleb128 0x1b
 20170 3273 90020000 		.4byte	.LASF502
 20171 3277 01       		.byte	0x1
 20172 3278 FB0E     		.2byte	0xefb
 20173 327a 5C330000 		.4byte	0x335c
 20174 327e 03       		.uleb128 0x3
 20175 327f 91       		.byte	0x91
 20176 3280 847E     		.sleb128 -252
 20177 3282 1D       		.uleb128 0x1d
 20178 3283 60000000 		.4byte	.LASF478
 20179 3287 01       		.byte	0x1
 20180 3288 FD0E     		.2byte	0xefd
 20181 328a 0A020000 		.4byte	0x20a
 20182 328e 02       		.uleb128 0x2
 20183 328f 91       		.byte	0x91
 20184 3290 4C       		.sleb128 -52
 20185 3291 1D       		.uleb128 0x1d
 20186 3292 EE030000 		.4byte	.LASF486
 20187 3296 01       		.byte	0x1
 20188 3297 FE0E     		.2byte	0xefe
 20189 3299 7B020000 		.4byte	0x27b
 20190 329d 03       		.uleb128 0x3
 20191 329e 91       		.byte	0x91
 20192 329f B87F     		.sleb128 -72
 20193 32a1 1D       		.uleb128 0x1d
 20194 32a2 E7020000 		.4byte	.LASF491
 20195 32a6 01       		.byte	0x1
 20196 32a7 FF0E     		.2byte	0xeff
 20197 32a9 B6060000 		.4byte	0x6b6
 20198 32ad 03       		.uleb128 0x3
 20199 32ae 91       		.byte	0x91
 20200 32af C87E     		.sleb128 -184
 20201 32b1 1D       		.uleb128 0x1d
 20202 32b2 ED140000 		.4byte	.LASF496
 20203 32b6 01       		.byte	0x1
 20204 32b7 000F     		.2byte	0xf00
 20205 32b9 E6060000 		.4byte	0x6e6
 20206 32bd 03       		.uleb128 0x3
 20207 32be 91       		.byte	0x91
 20208 32bf 8C7E     		.sleb128 -244
 20209 32c1 1D       		.uleb128 0x1d
 20210 32c2 07100000 		.4byte	.LASF528
 20211 32c6 01       		.byte	0x1
 20212 32c7 070F     		.2byte	0xf07
 20213 32c9 D2000000 		.4byte	0xd2
 20214 32cd 02       		.uleb128 0x2
 20215 32ce 91       		.byte	0x91
 20216 32cf 74       		.sleb128 -12
 20217 32d0 1D       		.uleb128 0x1d
 20218 32d1 74180000 		.4byte	.LASF529
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 432


 20219 32d5 01       		.byte	0x1
 20220 32d6 080F     		.2byte	0xf08
 20221 32d8 D2000000 		.4byte	0xd2
 20222 32dc 02       		.uleb128 0x2
 20223 32dd 91       		.byte	0x91
 20224 32de 70       		.sleb128 -16
 20225 32df 1D       		.uleb128 0x1d
 20226 32e0 30000000 		.4byte	.LASF474
 20227 32e4 01       		.byte	0x1
 20228 32e5 090F     		.2byte	0xf09
 20229 32e7 D2000000 		.4byte	0xd2
 20230 32eb 03       		.uleb128 0x3
 20231 32ec 91       		.byte	0x91
 20232 32ed 887E     		.sleb128 -248
 20233 32ef 1D       		.uleb128 0x1d
 20234 32f0 0A070000 		.4byte	.LASF475
 20235 32f4 01       		.byte	0x1
 20236 32f5 0A0F     		.2byte	0xf0a
 20237 32f7 D2000000 		.4byte	0xd2
 20238 32fb 02       		.uleb128 0x2
 20239 32fc 91       		.byte	0x91
 20240 32fd 6C       		.sleb128 -20
 20241 32fe 1D       		.uleb128 0x1d
 20242 32ff AC1A0000 		.4byte	.LASF492
 20243 3303 01       		.byte	0x1
 20244 3304 0B0F     		.2byte	0xf0b
 20245 3306 DD000000 		.4byte	0xdd
 20246 330a 02       		.uleb128 0x2
 20247 330b 91       		.byte	0x91
 20248 330c 60       		.sleb128 -32
 20249 330d 1D       		.uleb128 0x1d
 20250 330e B2080000 		.4byte	.LASF482
 20251 3312 01       		.byte	0x1
 20252 3313 0D0F     		.2byte	0xf0d
 20253 3315 DD000000 		.4byte	0xdd
 20254 3319 02       		.uleb128 0x2
 20255 331a 91       		.byte	0x91
 20256 331b 68       		.sleb128 -24
 20257 331c 1D       		.uleb128 0x1d
 20258 331d 9C160000 		.4byte	.LASF530
 20259 3321 01       		.byte	0x1
 20260 3322 0E0F     		.2byte	0xf0e
 20261 3324 DD000000 		.4byte	0xdd
 20262 3328 02       		.uleb128 0x2
 20263 3329 91       		.byte	0x91
 20264 332a 64       		.sleb128 -28
 20265 332b 1D       		.uleb128 0x1d
 20266 332c D21A0000 		.4byte	.LASF531
 20267 3330 01       		.byte	0x1
 20268 3331 0F0F     		.2byte	0xf0f
 20269 3333 0E010000 		.4byte	0x10e
 20270 3337 02       		.uleb128 0x2
 20271 3338 91       		.byte	0x91
 20272 3339 5F       		.sleb128 -33
 20273 333a 2B       		.uleb128 0x2b
 20274 333b CB0B0000 		.4byte	.LASF532
 20275 333f 01       		.byte	0x1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 433


 20276 3340 950F     		.2byte	0xf95
 20277 3342 F4020000 		.4byte	.L697
 20278 3346 29       		.uleb128 0x29
 20279 3347 78000000 		.4byte	.Ldebug_ranges0+0x78
 20280 334b 1D       		.uleb128 0x1d
 20281 334c 17160000 		.4byte	.LASF487
 20282 3350 01       		.byte	0x1
 20283 3351 7B0F     		.2byte	0xf7b
 20284 3353 D2000000 		.4byte	0xd2
 20285 3357 02       		.uleb128 0x2
 20286 3358 91       		.byte	0x91
 20287 3359 58       		.sleb128 -40
 20288 335a 00       		.byte	0
 20289 335b 00       		.byte	0
 20290 335c 0B       		.uleb128 0xb
 20291 335d 04       		.byte	0x4
 20292 335e 9E0B0000 		.4byte	0xb9e
 20293 3362 22       		.uleb128 0x22
 20294 3363 85110000 		.4byte	.LASF533
 20295 3367 01       		.byte	0x1
 20296 3368 A20F     		.2byte	0xfa2
 20297 336a E8000000 		.4byte	0xe8
 20298 336e 00000000 		.4byte	.LFB119
 20299 3372 78040000 		.4byte	.LFE119-.LFB119
 20300 3376 01       		.uleb128 0x1
 20301 3377 9C       		.byte	0x9c
 20302 3378 33340000 		.4byte	0x3433
 20303 337c 1B       		.uleb128 0x1b
 20304 337d 90020000 		.4byte	.LASF502
 20305 3381 01       		.byte	0x1
 20306 3382 A20F     		.2byte	0xfa2
 20307 3384 33340000 		.4byte	0x3433
 20308 3388 03       		.uleb128 0x3
 20309 3389 91       		.byte	0x91
 20310 338a 9C7F     		.sleb128 -100
 20311 338c 1B       		.uleb128 0x1b
 20312 338d D4120000 		.4byte	.LASF503
 20313 3391 01       		.byte	0x1
 20314 3392 A20F     		.2byte	0xfa2
 20315 3394 39340000 		.4byte	0x3439
 20316 3398 03       		.uleb128 0x3
 20317 3399 91       		.byte	0x91
 20318 339a 987F     		.sleb128 -104
 20319 339c 1D       		.uleb128 0x1d
 20320 339d 70050000 		.4byte	.LASF495
 20321 33a1 01       		.byte	0x1
 20322 33a2 A40F     		.2byte	0xfa4
 20323 33a4 E8000000 		.4byte	0xe8
 20324 33a8 02       		.uleb128 0x2
 20325 33a9 91       		.byte	0x91
 20326 33aa 74       		.sleb128 -12
 20327 33ab 1D       		.uleb128 0x1d
 20328 33ac 08090000 		.4byte	.LASF127
 20329 33b0 01       		.byte	0x1
 20330 33b1 A50F     		.2byte	0xfa5
 20331 33b3 DC040000 		.4byte	0x4dc
 20332 33b7 02       		.uleb128 0x2
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 434


 20333 33b8 91       		.byte	0x91
 20334 33b9 44       		.sleb128 -60
 20335 33ba 1D       		.uleb128 0x1d
 20336 33bb 60000000 		.4byte	.LASF478
 20337 33bf 01       		.byte	0x1
 20338 33c0 A60F     		.2byte	0xfa6
 20339 33c2 0A020000 		.4byte	0x20a
 20340 33c6 03       		.uleb128 0x3
 20341 33c7 91       		.byte	0x91
 20342 33c8 B87F     		.sleb128 -72
 20343 33ca 1D       		.uleb128 0x1d
 20344 33cb EE030000 		.4byte	.LASF486
 20345 33cf 01       		.byte	0x1
 20346 33d0 A70F     		.2byte	0xfa7
 20347 33d2 7B020000 		.4byte	0x27b
 20348 33d6 03       		.uleb128 0x3
 20349 33d7 91       		.byte	0x91
 20350 33d8 A47F     		.sleb128 -92
 20351 33da 1D       		.uleb128 0x1d
 20352 33db 30000000 		.4byte	.LASF474
 20353 33df 01       		.byte	0x1
 20354 33e0 A90F     		.2byte	0xfa9
 20355 33e2 D2000000 		.4byte	0xd2
 20356 33e6 03       		.uleb128 0x3
 20357 33e7 91       		.byte	0x91
 20358 33e8 A07F     		.sleb128 -96
 20359 33ea 1D       		.uleb128 0x1d
 20360 33eb A70C0000 		.4byte	.LASF479
 20361 33ef 01       		.byte	0x1
 20362 33f0 AA0F     		.2byte	0xfaa
 20363 33f2 DD000000 		.4byte	0xdd
 20364 33f6 02       		.uleb128 0x2
 20365 33f7 91       		.byte	0x91
 20366 33f8 6C       		.sleb128 -20
 20367 33f9 1D       		.uleb128 0x1d
 20368 33fa 0A070000 		.4byte	.LASF475
 20369 33fe 01       		.byte	0x1
 20370 33ff AB0F     		.2byte	0xfab
 20371 3401 D2000000 		.4byte	0xd2
 20372 3405 02       		.uleb128 0x2
 20373 3406 91       		.byte	0x91
 20374 3407 64       		.sleb128 -28
 20375 3408 1D       		.uleb128 0x1d
 20376 3409 0F0B0000 		.4byte	.LASF534
 20377 340d 01       		.byte	0x1
 20378 340e AB0F     		.2byte	0xfab
 20379 3410 D2000000 		.4byte	0xd2
 20380 3414 02       		.uleb128 0x2
 20381 3415 91       		.byte	0x91
 20382 3416 68       		.sleb128 -24
 20383 3417 1D       		.uleb128 0x1d
 20384 3418 4A040000 		.4byte	.LASF480
 20385 341c 01       		.byte	0x1
 20386 341d AC0F     		.2byte	0xfac
 20387 341f 0E010000 		.4byte	0x10e
 20388 3423 02       		.uleb128 0x2
 20389 3424 91       		.byte	0x91
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 435


 20390 3425 73       		.sleb128 -13
 20391 3426 2B       		.uleb128 0x2b
 20392 3427 D6000000 		.4byte	.LASF535
 20393 342b 01       		.byte	0x1
 20394 342c 3C10     		.2byte	0x103c
 20395 342e 52040000 		.4byte	.L713
 20396 3432 00       		.byte	0
 20397 3433 0B       		.uleb128 0xb
 20398 3434 04       		.byte	0x4
 20399 3435 1C0C0000 		.4byte	0xc1c
 20400 3439 0B       		.uleb128 0xb
 20401 343a 04       		.byte	0x4
 20402 343b 9A0C0000 		.4byte	0xc9a
 20403 343f 22       		.uleb128 0x22
 20404 3440 FC100000 		.4byte	.LASF536
 20405 3444 01       		.byte	0x1
 20406 3445 4910     		.2byte	0x1049
 20407 3447 E8000000 		.4byte	0xe8
 20408 344b 00000000 		.4byte	.LFB120
 20409 344f 48020000 		.4byte	.LFE120-.LFB120
 20410 3453 01       		.uleb128 0x1
 20411 3454 9C       		.byte	0x9c
 20412 3455 2A350000 		.4byte	0x352a
 20413 3459 1B       		.uleb128 0x1b
 20414 345a 2B100000 		.4byte	.LASF537
 20415 345e 01       		.byte	0x1
 20416 345f 4910     		.2byte	0x1049
 20417 3461 2A350000 		.4byte	0x352a
 20418 3465 03       		.uleb128 0x3
 20419 3466 91       		.byte	0x91
 20420 3467 E47E     		.sleb128 -156
 20421 3469 1B       		.uleb128 0x1b
 20422 346a E4180000 		.4byte	.LASF538
 20423 346e 01       		.byte	0x1
 20424 346f 4910     		.2byte	0x1049
 20425 3471 A4160000 		.4byte	0x16a4
 20426 3475 03       		.uleb128 0x3
 20427 3476 91       		.byte	0x91
 20428 3477 E07E     		.sleb128 -160
 20429 3479 1D       		.uleb128 0x1d
 20430 347a 85020000 		.4byte	.LASF539
 20431 347e 01       		.byte	0x1
 20432 347f 5810     		.2byte	0x1058
 20433 3481 DD000000 		.4byte	0xdd
 20434 3485 02       		.uleb128 0x2
 20435 3486 91       		.byte	0x91
 20436 3487 64       		.sleb128 -28
 20437 3488 1D       		.uleb128 0x1d
 20438 3489 94190000 		.4byte	.LASF540
 20439 348d 01       		.byte	0x1
 20440 348e 5810     		.2byte	0x1058
 20441 3490 DD000000 		.4byte	0xdd
 20442 3494 02       		.uleb128 0x2
 20443 3495 91       		.byte	0x91
 20444 3496 60       		.sleb128 -32
 20445 3497 1D       		.uleb128 0x1d
 20446 3498 F9010000 		.4byte	.LASF541
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 436


 20447 349c 01       		.byte	0x1
 20448 349d 5910     		.2byte	0x1059
 20449 349f 4F080000 		.4byte	0x84f
 20450 34a3 02       		.uleb128 0x2
 20451 34a4 91       		.byte	0x91
 20452 34a5 54       		.sleb128 -44
 20453 34a6 1D       		.uleb128 0x1d
 20454 34a7 F9080000 		.4byte	.LASF542
 20455 34ab 01       		.byte	0x1
 20456 34ac 5910     		.2byte	0x1059
 20457 34ae 4F080000 		.4byte	0x84f
 20458 34b2 02       		.uleb128 0x2
 20459 34b3 91       		.byte	0x91
 20460 34b4 48       		.sleb128 -56
 20461 34b5 1D       		.uleb128 0x1d
 20462 34b6 B1150000 		.4byte	.LASF543
 20463 34ba 01       		.byte	0x1
 20464 34bb 5A10     		.2byte	0x105a
 20465 34bd B1080000 		.4byte	0x8b1
 20466 34c1 03       		.uleb128 0x3
 20467 34c2 91       		.byte	0x91
 20468 34c3 B47F     		.sleb128 -76
 20469 34c5 1D       		.uleb128 0x1d
 20470 34c6 4A130000 		.4byte	.LASF544
 20471 34ca 01       		.byte	0x1
 20472 34cb 5B10     		.2byte	0x105b
 20473 34cd 65090000 		.4byte	0x965
 20474 34d1 03       		.uleb128 0x3
 20475 34d2 91       		.byte	0x91
 20476 34d3 EC7E     		.sleb128 -148
 20477 34d5 1D       		.uleb128 0x1d
 20478 34d6 A70C0000 		.4byte	.LASF479
 20479 34da 01       		.byte	0x1
 20480 34db 5C10     		.2byte	0x105c
 20481 34dd DD000000 		.4byte	0xdd
 20482 34e1 02       		.uleb128 0x2
 20483 34e2 91       		.byte	0x91
 20484 34e3 6C       		.sleb128 -20
 20485 34e4 1D       		.uleb128 0x1d
 20486 34e5 95060000 		.4byte	.LASF545
 20487 34e9 01       		.byte	0x1
 20488 34ea 5D10     		.2byte	0x105d
 20489 34ec DD000000 		.4byte	0xdd
 20490 34f0 02       		.uleb128 0x2
 20491 34f1 91       		.byte	0x91
 20492 34f2 68       		.sleb128 -24
 20493 34f3 1D       		.uleb128 0x1d
 20494 34f4 7B020000 		.4byte	.LASF546
 20495 34f8 01       		.byte	0x1
 20496 34f9 5F10     		.2byte	0x105f
 20497 34fb 40350000 		.4byte	0x3540
 20498 34ff 05       		.uleb128 0x5
 20499 3500 03       		.byte	0x3
 20500 3501 D8010000 		.4byte	SeqA.7192
 20501 3505 1D       		.uleb128 0x1d
 20502 3506 80020000 		.4byte	.LASF547
 20503 350a 01       		.byte	0x1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 437


 20504 350b 6310     		.2byte	0x1063
 20505 350d 45350000 		.4byte	0x3545
 20506 3511 05       		.uleb128 0x5
 20507 3512 03       		.byte	0x3
 20508 3513 DC010000 		.4byte	SeqB.7193
 20509 3517 1D       		.uleb128 0x1d
 20510 3518 23140000 		.4byte	.LASF548
 20511 351c 01       		.byte	0x1
 20512 351d 6C10     		.2byte	0x106c
 20513 351f 5A350000 		.4byte	0x355a
 20514 3523 05       		.uleb128 0x5
 20515 3524 03       		.byte	0x3
 20516 3525 E0010000 		.4byte	SeqBB.7194
 20517 3529 00       		.byte	0
 20518 352a 0B       		.uleb128 0xb
 20519 352b 04       		.byte	0x4
 20520 352c D70C0000 		.4byte	0xcd7
 20521 3530 0D       		.uleb128 0xd
 20522 3531 AC080000 		.4byte	0x8ac
 20523 3535 40350000 		.4byte	0x3540
 20524 3539 0E       		.uleb128 0xe
 20525 353a 9E000000 		.4byte	0x9e
 20526 353e 00       		.byte	0
 20527 353f 00       		.byte	0
 20528 3540 0C       		.uleb128 0xc
 20529 3541 30350000 		.4byte	0x3530
 20530 3545 0C       		.uleb128 0xc
 20531 3546 30350000 		.4byte	0x3530
 20532 354a 0D       		.uleb128 0xd
 20533 354b AC080000 		.4byte	0x8ac
 20534 354f 5A350000 		.4byte	0x355a
 20535 3553 0E       		.uleb128 0xe
 20536 3554 9E000000 		.4byte	0x9e
 20537 3558 01       		.byte	0x1
 20538 3559 00       		.byte	0
 20539 355a 0C       		.uleb128 0xc
 20540 355b 4A350000 		.4byte	0x354a
 20541 355f 14       		.uleb128 0x14
 20542 3560 45160000 		.4byte	.LASF549
 20543 3564 01       		.byte	0x1
 20544 3565 37       		.byte	0x37
 20545 3566 0E010000 		.4byte	0x10e
 20546 356a 05       		.uleb128 0x5
 20547 356b 03       		.byte	0x3
 20548 356c 00000000 		.4byte	bIsS2silicon
 20549 3570 2D       		.uleb128 0x2d
 20550 3571 18010000 		.4byte	.LASF554
 20551 3575 01       		.byte	0x1
 20552 3576 69       		.byte	0x69
 20553 3577 EB0F0000 		.4byte	0xfeb
 20554 357b 05       		.uleb128 0x5
 20555 357c 03       		.byte	0x3
 20556 357d 00000000 		.4byte	SeqGenDB
 20557 3581 00       		.byte	0
 20558              		.section	.debug_abbrev,"",%progbits
 20559              	.Ldebug_abbrev0:
 20560 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 438


 20561 0001 11       		.uleb128 0x11
 20562 0002 01       		.byte	0x1
 20563 0003 25       		.uleb128 0x25
 20564 0004 0E       		.uleb128 0xe
 20565 0005 13       		.uleb128 0x13
 20566 0006 0B       		.uleb128 0xb
 20567 0007 03       		.uleb128 0x3
 20568 0008 0E       		.uleb128 0xe
 20569 0009 1B       		.uleb128 0x1b
 20570 000a 0E       		.uleb128 0xe
 20571 000b 55       		.uleb128 0x55
 20572 000c 17       		.uleb128 0x17
 20573 000d 11       		.uleb128 0x11
 20574 000e 01       		.uleb128 0x1
 20575 000f 10       		.uleb128 0x10
 20576 0010 17       		.uleb128 0x17
 20577 0011 00       		.byte	0
 20578 0012 00       		.byte	0
 20579 0013 02       		.uleb128 0x2
 20580 0014 24       		.uleb128 0x24
 20581 0015 00       		.byte	0
 20582 0016 0B       		.uleb128 0xb
 20583 0017 0B       		.uleb128 0xb
 20584 0018 3E       		.uleb128 0x3e
 20585 0019 0B       		.uleb128 0xb
 20586 001a 03       		.uleb128 0x3
 20587 001b 08       		.uleb128 0x8
 20588 001c 00       		.byte	0
 20589 001d 00       		.byte	0
 20590 001e 03       		.uleb128 0x3
 20591 001f 24       		.uleb128 0x24
 20592 0020 00       		.byte	0
 20593 0021 0B       		.uleb128 0xb
 20594 0022 0B       		.uleb128 0xb
 20595 0023 3E       		.uleb128 0x3e
 20596 0024 0B       		.uleb128 0xb
 20597 0025 03       		.uleb128 0x3
 20598 0026 0E       		.uleb128 0xe
 20599 0027 00       		.byte	0
 20600 0028 00       		.byte	0
 20601 0029 04       		.uleb128 0x4
 20602 002a 16       		.uleb128 0x16
 20603 002b 00       		.byte	0
 20604 002c 03       		.uleb128 0x3
 20605 002d 0E       		.uleb128 0xe
 20606 002e 3A       		.uleb128 0x3a
 20607 002f 0B       		.uleb128 0xb
 20608 0030 3B       		.uleb128 0x3b
 20609 0031 0B       		.uleb128 0xb
 20610 0032 49       		.uleb128 0x49
 20611 0033 13       		.uleb128 0x13
 20612 0034 00       		.byte	0
 20613 0035 00       		.byte	0
 20614 0036 05       		.uleb128 0x5
 20615 0037 0F       		.uleb128 0xf
 20616 0038 00       		.byte	0
 20617 0039 0B       		.uleb128 0xb
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 439


 20618 003a 0B       		.uleb128 0xb
 20619 003b 00       		.byte	0
 20620 003c 00       		.byte	0
 20621 003d 06       		.uleb128 0x6
 20622 003e 16       		.uleb128 0x16
 20623 003f 00       		.byte	0
 20624 0040 03       		.uleb128 0x3
 20625 0041 0E       		.uleb128 0xe
 20626 0042 3A       		.uleb128 0x3a
 20627 0043 0B       		.uleb128 0xb
 20628 0044 3B       		.uleb128 0x3b
 20629 0045 05       		.uleb128 0x5
 20630 0046 49       		.uleb128 0x49
 20631 0047 13       		.uleb128 0x13
 20632 0048 00       		.byte	0
 20633 0049 00       		.byte	0
 20634 004a 07       		.uleb128 0x7
 20635 004b 04       		.uleb128 0x4
 20636 004c 01       		.byte	0x1
 20637 004d 0B       		.uleb128 0xb
 20638 004e 0B       		.uleb128 0xb
 20639 004f 49       		.uleb128 0x49
 20640 0050 13       		.uleb128 0x13
 20641 0051 3A       		.uleb128 0x3a
 20642 0052 0B       		.uleb128 0xb
 20643 0053 3B       		.uleb128 0x3b
 20644 0054 05       		.uleb128 0x5
 20645 0055 01       		.uleb128 0x1
 20646 0056 13       		.uleb128 0x13
 20647 0057 00       		.byte	0
 20648 0058 00       		.byte	0
 20649 0059 08       		.uleb128 0x8
 20650 005a 28       		.uleb128 0x28
 20651 005b 00       		.byte	0
 20652 005c 03       		.uleb128 0x3
 20653 005d 0E       		.uleb128 0xe
 20654 005e 1C       		.uleb128 0x1c
 20655 005f 0B       		.uleb128 0xb
 20656 0060 00       		.byte	0
 20657 0061 00       		.byte	0
 20658 0062 09       		.uleb128 0x9
 20659 0063 13       		.uleb128 0x13
 20660 0064 01       		.byte	0x1
 20661 0065 0B       		.uleb128 0xb
 20662 0066 0B       		.uleb128 0xb
 20663 0067 3A       		.uleb128 0x3a
 20664 0068 0B       		.uleb128 0xb
 20665 0069 3B       		.uleb128 0x3b
 20666 006a 05       		.uleb128 0x5
 20667 006b 01       		.uleb128 0x1
 20668 006c 13       		.uleb128 0x13
 20669 006d 00       		.byte	0
 20670 006e 00       		.byte	0
 20671 006f 0A       		.uleb128 0xa
 20672 0070 0D       		.uleb128 0xd
 20673 0071 00       		.byte	0
 20674 0072 03       		.uleb128 0x3
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 440


 20675 0073 0E       		.uleb128 0xe
 20676 0074 3A       		.uleb128 0x3a
 20677 0075 0B       		.uleb128 0xb
 20678 0076 3B       		.uleb128 0x3b
 20679 0077 05       		.uleb128 0x5
 20680 0078 49       		.uleb128 0x49
 20681 0079 13       		.uleb128 0x13
 20682 007a 38       		.uleb128 0x38
 20683 007b 0B       		.uleb128 0xb
 20684 007c 00       		.byte	0
 20685 007d 00       		.byte	0
 20686 007e 0B       		.uleb128 0xb
 20687 007f 0F       		.uleb128 0xf
 20688 0080 00       		.byte	0
 20689 0081 0B       		.uleb128 0xb
 20690 0082 0B       		.uleb128 0xb
 20691 0083 49       		.uleb128 0x49
 20692 0084 13       		.uleb128 0x13
 20693 0085 00       		.byte	0
 20694 0086 00       		.byte	0
 20695 0087 0C       		.uleb128 0xc
 20696 0088 26       		.uleb128 0x26
 20697 0089 00       		.byte	0
 20698 008a 49       		.uleb128 0x49
 20699 008b 13       		.uleb128 0x13
 20700 008c 00       		.byte	0
 20701 008d 00       		.byte	0
 20702 008e 0D       		.uleb128 0xd
 20703 008f 01       		.uleb128 0x1
 20704 0090 01       		.byte	0x1
 20705 0091 49       		.uleb128 0x49
 20706 0092 13       		.uleb128 0x13
 20707 0093 01       		.uleb128 0x1
 20708 0094 13       		.uleb128 0x13
 20709 0095 00       		.byte	0
 20710 0096 00       		.byte	0
 20711 0097 0E       		.uleb128 0xe
 20712 0098 21       		.uleb128 0x21
 20713 0099 00       		.byte	0
 20714 009a 49       		.uleb128 0x49
 20715 009b 13       		.uleb128 0x13
 20716 009c 2F       		.uleb128 0x2f
 20717 009d 0B       		.uleb128 0xb
 20718 009e 00       		.byte	0
 20719 009f 00       		.byte	0
 20720 00a0 0F       		.uleb128 0xf
 20721 00a1 13       		.uleb128 0x13
 20722 00a2 01       		.byte	0x1
 20723 00a3 0B       		.uleb128 0xb
 20724 00a4 0B       		.uleb128 0xb
 20725 00a5 3A       		.uleb128 0x3a
 20726 00a6 0B       		.uleb128 0xb
 20727 00a7 3B       		.uleb128 0x3b
 20728 00a8 0B       		.uleb128 0xb
 20729 00a9 01       		.uleb128 0x1
 20730 00aa 13       		.uleb128 0x13
 20731 00ab 00       		.byte	0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 441


 20732 00ac 00       		.byte	0
 20733 00ad 10       		.uleb128 0x10
 20734 00ae 0D       		.uleb128 0xd
 20735 00af 00       		.byte	0
 20736 00b0 03       		.uleb128 0x3
 20737 00b1 0E       		.uleb128 0xe
 20738 00b2 3A       		.uleb128 0x3a
 20739 00b3 0B       		.uleb128 0xb
 20740 00b4 3B       		.uleb128 0x3b
 20741 00b5 0B       		.uleb128 0xb
 20742 00b6 49       		.uleb128 0x49
 20743 00b7 13       		.uleb128 0x13
 20744 00b8 0B       		.uleb128 0xb
 20745 00b9 0B       		.uleb128 0xb
 20746 00ba 0D       		.uleb128 0xd
 20747 00bb 0B       		.uleb128 0xb
 20748 00bc 0C       		.uleb128 0xc
 20749 00bd 0B       		.uleb128 0xb
 20750 00be 38       		.uleb128 0x38
 20751 00bf 0B       		.uleb128 0xb
 20752 00c0 00       		.byte	0
 20753 00c1 00       		.byte	0
 20754 00c2 11       		.uleb128 0x11
 20755 00c3 0D       		.uleb128 0xd
 20756 00c4 00       		.byte	0
 20757 00c5 03       		.uleb128 0x3
 20758 00c6 0E       		.uleb128 0xe
 20759 00c7 3A       		.uleb128 0x3a
 20760 00c8 0B       		.uleb128 0xb
 20761 00c9 3B       		.uleb128 0x3b
 20762 00ca 0B       		.uleb128 0xb
 20763 00cb 49       		.uleb128 0x49
 20764 00cc 13       		.uleb128 0x13
 20765 00cd 38       		.uleb128 0x38
 20766 00ce 0B       		.uleb128 0xb
 20767 00cf 00       		.byte	0
 20768 00d0 00       		.byte	0
 20769 00d1 12       		.uleb128 0x12
 20770 00d2 2E       		.uleb128 0x2e
 20771 00d3 01       		.byte	0x1
 20772 00d4 3F       		.uleb128 0x3f
 20773 00d5 19       		.uleb128 0x19
 20774 00d6 03       		.uleb128 0x3
 20775 00d7 0E       		.uleb128 0xe
 20776 00d8 3A       		.uleb128 0x3a
 20777 00d9 0B       		.uleb128 0xb
 20778 00da 3B       		.uleb128 0x3b
 20779 00db 0B       		.uleb128 0xb
 20780 00dc 27       		.uleb128 0x27
 20781 00dd 19       		.uleb128 0x19
 20782 00de 11       		.uleb128 0x11
 20783 00df 01       		.uleb128 0x1
 20784 00e0 12       		.uleb128 0x12
 20785 00e1 06       		.uleb128 0x6
 20786 00e2 40       		.uleb128 0x40
 20787 00e3 18       		.uleb128 0x18
 20788 00e4 9742     		.uleb128 0x2117
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 442


 20789 00e6 19       		.uleb128 0x19
 20790 00e7 01       		.uleb128 0x1
 20791 00e8 13       		.uleb128 0x13
 20792 00e9 00       		.byte	0
 20793 00ea 00       		.byte	0
 20794 00eb 13       		.uleb128 0x13
 20795 00ec 05       		.uleb128 0x5
 20796 00ed 00       		.byte	0
 20797 00ee 03       		.uleb128 0x3
 20798 00ef 0E       		.uleb128 0xe
 20799 00f0 3A       		.uleb128 0x3a
 20800 00f1 0B       		.uleb128 0xb
 20801 00f2 3B       		.uleb128 0x3b
 20802 00f3 0B       		.uleb128 0xb
 20803 00f4 49       		.uleb128 0x49
 20804 00f5 13       		.uleb128 0x13
 20805 00f6 02       		.uleb128 0x2
 20806 00f7 18       		.uleb128 0x18
 20807 00f8 00       		.byte	0
 20808 00f9 00       		.byte	0
 20809 00fa 14       		.uleb128 0x14
 20810 00fb 34       		.uleb128 0x34
 20811 00fc 00       		.byte	0
 20812 00fd 03       		.uleb128 0x3
 20813 00fe 0E       		.uleb128 0xe
 20814 00ff 3A       		.uleb128 0x3a
 20815 0100 0B       		.uleb128 0xb
 20816 0101 3B       		.uleb128 0x3b
 20817 0102 0B       		.uleb128 0xb
 20818 0103 49       		.uleb128 0x49
 20819 0104 13       		.uleb128 0x13
 20820 0105 02       		.uleb128 0x2
 20821 0106 18       		.uleb128 0x18
 20822 0107 00       		.byte	0
 20823 0108 00       		.byte	0
 20824 0109 15       		.uleb128 0x15
 20825 010a 2E       		.uleb128 0x2e
 20826 010b 01       		.byte	0x1
 20827 010c 03       		.uleb128 0x3
 20828 010d 0E       		.uleb128 0xe
 20829 010e 3A       		.uleb128 0x3a
 20830 010f 0B       		.uleb128 0xb
 20831 0110 3B       		.uleb128 0x3b
 20832 0111 0B       		.uleb128 0xb
 20833 0112 27       		.uleb128 0x27
 20834 0113 19       		.uleb128 0x19
 20835 0114 49       		.uleb128 0x49
 20836 0115 13       		.uleb128 0x13
 20837 0116 11       		.uleb128 0x11
 20838 0117 01       		.uleb128 0x1
 20839 0118 12       		.uleb128 0x12
 20840 0119 06       		.uleb128 0x6
 20841 011a 40       		.uleb128 0x40
 20842 011b 18       		.uleb128 0x18
 20843 011c 9742     		.uleb128 0x2117
 20844 011e 19       		.uleb128 0x19
 20845 011f 01       		.uleb128 0x1
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 443


 20846 0120 13       		.uleb128 0x13
 20847 0121 00       		.byte	0
 20848 0122 00       		.byte	0
 20849 0123 16       		.uleb128 0x16
 20850 0124 34       		.uleb128 0x34
 20851 0125 00       		.byte	0
 20852 0126 03       		.uleb128 0x3
 20853 0127 08       		.uleb128 0x8
 20854 0128 3A       		.uleb128 0x3a
 20855 0129 0B       		.uleb128 0xb
 20856 012a 3B       		.uleb128 0x3b
 20857 012b 0B       		.uleb128 0xb
 20858 012c 49       		.uleb128 0x49
 20859 012d 13       		.uleb128 0x13
 20860 012e 02       		.uleb128 0x2
 20861 012f 18       		.uleb128 0x18
 20862 0130 00       		.byte	0
 20863 0131 00       		.byte	0
 20864 0132 17       		.uleb128 0x17
 20865 0133 2E       		.uleb128 0x2e
 20866 0134 01       		.byte	0x1
 20867 0135 03       		.uleb128 0x3
 20868 0136 0E       		.uleb128 0xe
 20869 0137 3A       		.uleb128 0x3a
 20870 0138 0B       		.uleb128 0xb
 20871 0139 3B       		.uleb128 0x3b
 20872 013a 0B       		.uleb128 0xb
 20873 013b 27       		.uleb128 0x27
 20874 013c 19       		.uleb128 0x19
 20875 013d 49       		.uleb128 0x49
 20876 013e 13       		.uleb128 0x13
 20877 013f 11       		.uleb128 0x11
 20878 0140 01       		.uleb128 0x1
 20879 0141 12       		.uleb128 0x12
 20880 0142 06       		.uleb128 0x6
 20881 0143 40       		.uleb128 0x40
 20882 0144 18       		.uleb128 0x18
 20883 0145 9642     		.uleb128 0x2116
 20884 0147 19       		.uleb128 0x19
 20885 0148 01       		.uleb128 0x1
 20886 0149 13       		.uleb128 0x13
 20887 014a 00       		.byte	0
 20888 014b 00       		.byte	0
 20889 014c 18       		.uleb128 0x18
 20890 014d 2E       		.uleb128 0x2e
 20891 014e 01       		.byte	0x1
 20892 014f 03       		.uleb128 0x3
 20893 0150 0E       		.uleb128 0xe
 20894 0151 3A       		.uleb128 0x3a
 20895 0152 0B       		.uleb128 0xb
 20896 0153 3B       		.uleb128 0x3b
 20897 0154 0B       		.uleb128 0xb
 20898 0155 27       		.uleb128 0x27
 20899 0156 19       		.uleb128 0x19
 20900 0157 11       		.uleb128 0x11
 20901 0158 01       		.uleb128 0x1
 20902 0159 12       		.uleb128 0x12
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 444


 20903 015a 06       		.uleb128 0x6
 20904 015b 40       		.uleb128 0x40
 20905 015c 18       		.uleb128 0x18
 20906 015d 9742     		.uleb128 0x2117
 20907 015f 19       		.uleb128 0x19
 20908 0160 01       		.uleb128 0x1
 20909 0161 13       		.uleb128 0x13
 20910 0162 00       		.byte	0
 20911 0163 00       		.byte	0
 20912 0164 19       		.uleb128 0x19
 20913 0165 2E       		.uleb128 0x2e
 20914 0166 01       		.byte	0x1
 20915 0167 03       		.uleb128 0x3
 20916 0168 0E       		.uleb128 0xe
 20917 0169 3A       		.uleb128 0x3a
 20918 016a 0B       		.uleb128 0xb
 20919 016b 3B       		.uleb128 0x3b
 20920 016c 0B       		.uleb128 0xb
 20921 016d 27       		.uleb128 0x27
 20922 016e 19       		.uleb128 0x19
 20923 016f 11       		.uleb128 0x11
 20924 0170 01       		.uleb128 0x1
 20925 0171 12       		.uleb128 0x12
 20926 0172 06       		.uleb128 0x6
 20927 0173 40       		.uleb128 0x40
 20928 0174 18       		.uleb128 0x18
 20929 0175 9642     		.uleb128 0x2116
 20930 0177 19       		.uleb128 0x19
 20931 0178 01       		.uleb128 0x1
 20932 0179 13       		.uleb128 0x13
 20933 017a 00       		.byte	0
 20934 017b 00       		.byte	0
 20935 017c 1A       		.uleb128 0x1a
 20936 017d 2E       		.uleb128 0x2e
 20937 017e 01       		.byte	0x1
 20938 017f 3F       		.uleb128 0x3f
 20939 0180 19       		.uleb128 0x19
 20940 0181 03       		.uleb128 0x3
 20941 0182 0E       		.uleb128 0xe
 20942 0183 3A       		.uleb128 0x3a
 20943 0184 0B       		.uleb128 0xb
 20944 0185 3B       		.uleb128 0x3b
 20945 0186 05       		.uleb128 0x5
 20946 0187 27       		.uleb128 0x27
 20947 0188 19       		.uleb128 0x19
 20948 0189 11       		.uleb128 0x11
 20949 018a 01       		.uleb128 0x1
 20950 018b 12       		.uleb128 0x12
 20951 018c 06       		.uleb128 0x6
 20952 018d 40       		.uleb128 0x40
 20953 018e 18       		.uleb128 0x18
 20954 018f 9742     		.uleb128 0x2117
 20955 0191 19       		.uleb128 0x19
 20956 0192 01       		.uleb128 0x1
 20957 0193 13       		.uleb128 0x13
 20958 0194 00       		.byte	0
 20959 0195 00       		.byte	0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 445


 20960 0196 1B       		.uleb128 0x1b
 20961 0197 05       		.uleb128 0x5
 20962 0198 00       		.byte	0
 20963 0199 03       		.uleb128 0x3
 20964 019a 0E       		.uleb128 0xe
 20965 019b 3A       		.uleb128 0x3a
 20966 019c 0B       		.uleb128 0xb
 20967 019d 3B       		.uleb128 0x3b
 20968 019e 05       		.uleb128 0x5
 20969 019f 49       		.uleb128 0x49
 20970 01a0 13       		.uleb128 0x13
 20971 01a1 02       		.uleb128 0x2
 20972 01a2 18       		.uleb128 0x18
 20973 01a3 00       		.byte	0
 20974 01a4 00       		.byte	0
 20975 01a5 1C       		.uleb128 0x1c
 20976 01a6 2E       		.uleb128 0x2e
 20977 01a7 01       		.byte	0x1
 20978 01a8 3F       		.uleb128 0x3f
 20979 01a9 19       		.uleb128 0x19
 20980 01aa 03       		.uleb128 0x3
 20981 01ab 0E       		.uleb128 0xe
 20982 01ac 3A       		.uleb128 0x3a
 20983 01ad 0B       		.uleb128 0xb
 20984 01ae 3B       		.uleb128 0x3b
 20985 01af 05       		.uleb128 0x5
 20986 01b0 27       		.uleb128 0x27
 20987 01b1 19       		.uleb128 0x19
 20988 01b2 49       		.uleb128 0x49
 20989 01b3 13       		.uleb128 0x13
 20990 01b4 11       		.uleb128 0x11
 20991 01b5 01       		.uleb128 0x1
 20992 01b6 12       		.uleb128 0x12
 20993 01b7 06       		.uleb128 0x6
 20994 01b8 40       		.uleb128 0x40
 20995 01b9 18       		.uleb128 0x18
 20996 01ba 9742     		.uleb128 0x2117
 20997 01bc 19       		.uleb128 0x19
 20998 01bd 01       		.uleb128 0x1
 20999 01be 13       		.uleb128 0x13
 21000 01bf 00       		.byte	0
 21001 01c0 00       		.byte	0
 21002 01c1 1D       		.uleb128 0x1d
 21003 01c2 34       		.uleb128 0x34
 21004 01c3 00       		.byte	0
 21005 01c4 03       		.uleb128 0x3
 21006 01c5 0E       		.uleb128 0xe
 21007 01c6 3A       		.uleb128 0x3a
 21008 01c7 0B       		.uleb128 0xb
 21009 01c8 3B       		.uleb128 0x3b
 21010 01c9 05       		.uleb128 0x5
 21011 01ca 49       		.uleb128 0x49
 21012 01cb 13       		.uleb128 0x13
 21013 01cc 02       		.uleb128 0x2
 21014 01cd 18       		.uleb128 0x18
 21015 01ce 00       		.byte	0
 21016 01cf 00       		.byte	0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 446


 21017 01d0 1E       		.uleb128 0x1e
 21018 01d1 34       		.uleb128 0x34
 21019 01d2 00       		.byte	0
 21020 01d3 03       		.uleb128 0x3
 21021 01d4 08       		.uleb128 0x8
 21022 01d5 3A       		.uleb128 0x3a
 21023 01d6 0B       		.uleb128 0xb
 21024 01d7 3B       		.uleb128 0x3b
 21025 01d8 05       		.uleb128 0x5
 21026 01d9 49       		.uleb128 0x49
 21027 01da 13       		.uleb128 0x13
 21028 01db 02       		.uleb128 0x2
 21029 01dc 18       		.uleb128 0x18
 21030 01dd 00       		.byte	0
 21031 01de 00       		.byte	0
 21032 01df 1F       		.uleb128 0x1f
 21033 01e0 2E       		.uleb128 0x2e
 21034 01e1 01       		.byte	0x1
 21035 01e2 03       		.uleb128 0x3
 21036 01e3 0E       		.uleb128 0xe
 21037 01e4 3A       		.uleb128 0x3a
 21038 01e5 0B       		.uleb128 0xb
 21039 01e6 3B       		.uleb128 0x3b
 21040 01e7 05       		.uleb128 0x5
 21041 01e8 27       		.uleb128 0x27
 21042 01e9 19       		.uleb128 0x19
 21043 01ea 49       		.uleb128 0x49
 21044 01eb 13       		.uleb128 0x13
 21045 01ec 11       		.uleb128 0x11
 21046 01ed 01       		.uleb128 0x1
 21047 01ee 12       		.uleb128 0x12
 21048 01ef 06       		.uleb128 0x6
 21049 01f0 40       		.uleb128 0x40
 21050 01f1 18       		.uleb128 0x18
 21051 01f2 9742     		.uleb128 0x2117
 21052 01f4 19       		.uleb128 0x19
 21053 01f5 01       		.uleb128 0x1
 21054 01f6 13       		.uleb128 0x13
 21055 01f7 00       		.byte	0
 21056 01f8 00       		.byte	0
 21057 01f9 20       		.uleb128 0x20
 21058 01fa 05       		.uleb128 0x5
 21059 01fb 00       		.byte	0
 21060 01fc 03       		.uleb128 0x3
 21061 01fd 08       		.uleb128 0x8
 21062 01fe 3A       		.uleb128 0x3a
 21063 01ff 0B       		.uleb128 0xb
 21064 0200 3B       		.uleb128 0x3b
 21065 0201 05       		.uleb128 0x5
 21066 0202 49       		.uleb128 0x49
 21067 0203 13       		.uleb128 0x13
 21068 0204 02       		.uleb128 0x2
 21069 0205 18       		.uleb128 0x18
 21070 0206 00       		.byte	0
 21071 0207 00       		.byte	0
 21072 0208 21       		.uleb128 0x21
 21073 0209 0B       		.uleb128 0xb
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 447


 21074 020a 01       		.byte	0x1
 21075 020b 11       		.uleb128 0x11
 21076 020c 01       		.uleb128 0x1
 21077 020d 12       		.uleb128 0x12
 21078 020e 06       		.uleb128 0x6
 21079 020f 00       		.byte	0
 21080 0210 00       		.byte	0
 21081 0211 22       		.uleb128 0x22
 21082 0212 2E       		.uleb128 0x2e
 21083 0213 01       		.byte	0x1
 21084 0214 3F       		.uleb128 0x3f
 21085 0215 19       		.uleb128 0x19
 21086 0216 03       		.uleb128 0x3
 21087 0217 0E       		.uleb128 0xe
 21088 0218 3A       		.uleb128 0x3a
 21089 0219 0B       		.uleb128 0xb
 21090 021a 3B       		.uleb128 0x3b
 21091 021b 05       		.uleb128 0x5
 21092 021c 27       		.uleb128 0x27
 21093 021d 19       		.uleb128 0x19
 21094 021e 49       		.uleb128 0x49
 21095 021f 13       		.uleb128 0x13
 21096 0220 11       		.uleb128 0x11
 21097 0221 01       		.uleb128 0x1
 21098 0222 12       		.uleb128 0x12
 21099 0223 06       		.uleb128 0x6
 21100 0224 40       		.uleb128 0x40
 21101 0225 18       		.uleb128 0x18
 21102 0226 9642     		.uleb128 0x2116
 21103 0228 19       		.uleb128 0x19
 21104 0229 01       		.uleb128 0x1
 21105 022a 13       		.uleb128 0x13
 21106 022b 00       		.byte	0
 21107 022c 00       		.byte	0
 21108 022d 23       		.uleb128 0x23
 21109 022e 0B       		.uleb128 0xb
 21110 022f 01       		.byte	0x1
 21111 0230 11       		.uleb128 0x11
 21112 0231 01       		.uleb128 0x1
 21113 0232 12       		.uleb128 0x12
 21114 0233 06       		.uleb128 0x6
 21115 0234 01       		.uleb128 0x1
 21116 0235 13       		.uleb128 0x13
 21117 0236 00       		.byte	0
 21118 0237 00       		.byte	0
 21119 0238 24       		.uleb128 0x24
 21120 0239 2E       		.uleb128 0x2e
 21121 023a 01       		.byte	0x1
 21122 023b 3F       		.uleb128 0x3f
 21123 023c 19       		.uleb128 0x19
 21124 023d 03       		.uleb128 0x3
 21125 023e 0E       		.uleb128 0xe
 21126 023f 3A       		.uleb128 0x3a
 21127 0240 0B       		.uleb128 0xb
 21128 0241 3B       		.uleb128 0x3b
 21129 0242 05       		.uleb128 0x5
 21130 0243 27       		.uleb128 0x27
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 448


 21131 0244 19       		.uleb128 0x19
 21132 0245 11       		.uleb128 0x11
 21133 0246 01       		.uleb128 0x1
 21134 0247 12       		.uleb128 0x12
 21135 0248 06       		.uleb128 0x6
 21136 0249 40       		.uleb128 0x40
 21137 024a 18       		.uleb128 0x18
 21138 024b 9642     		.uleb128 0x2116
 21139 024d 19       		.uleb128 0x19
 21140 024e 01       		.uleb128 0x1
 21141 024f 13       		.uleb128 0x13
 21142 0250 00       		.byte	0
 21143 0251 00       		.byte	0
 21144 0252 25       		.uleb128 0x25
 21145 0253 2E       		.uleb128 0x2e
 21146 0254 01       		.byte	0x1
 21147 0255 03       		.uleb128 0x3
 21148 0256 0E       		.uleb128 0xe
 21149 0257 3A       		.uleb128 0x3a
 21150 0258 0B       		.uleb128 0xb
 21151 0259 3B       		.uleb128 0x3b
 21152 025a 05       		.uleb128 0x5
 21153 025b 27       		.uleb128 0x27
 21154 025c 19       		.uleb128 0x19
 21155 025d 49       		.uleb128 0x49
 21156 025e 13       		.uleb128 0x13
 21157 025f 11       		.uleb128 0x11
 21158 0260 01       		.uleb128 0x1
 21159 0261 12       		.uleb128 0x12
 21160 0262 06       		.uleb128 0x6
 21161 0263 40       		.uleb128 0x40
 21162 0264 18       		.uleb128 0x18
 21163 0265 9642     		.uleb128 0x2116
 21164 0267 19       		.uleb128 0x19
 21165 0268 01       		.uleb128 0x1
 21166 0269 13       		.uleb128 0x13
 21167 026a 00       		.byte	0
 21168 026b 00       		.byte	0
 21169 026c 26       		.uleb128 0x26
 21170 026d 2E       		.uleb128 0x2e
 21171 026e 01       		.byte	0x1
 21172 026f 03       		.uleb128 0x3
 21173 0270 0E       		.uleb128 0xe
 21174 0271 3A       		.uleb128 0x3a
 21175 0272 0B       		.uleb128 0xb
 21176 0273 3B       		.uleb128 0x3b
 21177 0274 05       		.uleb128 0x5
 21178 0275 27       		.uleb128 0x27
 21179 0276 19       		.uleb128 0x19
 21180 0277 11       		.uleb128 0x11
 21181 0278 01       		.uleb128 0x1
 21182 0279 12       		.uleb128 0x12
 21183 027a 06       		.uleb128 0x6
 21184 027b 40       		.uleb128 0x40
 21185 027c 18       		.uleb128 0x18
 21186 027d 9642     		.uleb128 0x2116
 21187 027f 19       		.uleb128 0x19
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 449


 21188 0280 01       		.uleb128 0x1
 21189 0281 13       		.uleb128 0x13
 21190 0282 00       		.byte	0
 21191 0283 00       		.byte	0
 21192 0284 27       		.uleb128 0x27
 21193 0285 2E       		.uleb128 0x2e
 21194 0286 00       		.byte	0
 21195 0287 3F       		.uleb128 0x3f
 21196 0288 19       		.uleb128 0x19
 21197 0289 03       		.uleb128 0x3
 21198 028a 0E       		.uleb128 0xe
 21199 028b 3A       		.uleb128 0x3a
 21200 028c 0B       		.uleb128 0xb
 21201 028d 3B       		.uleb128 0x3b
 21202 028e 05       		.uleb128 0x5
 21203 028f 27       		.uleb128 0x27
 21204 0290 19       		.uleb128 0x19
 21205 0291 49       		.uleb128 0x49
 21206 0292 13       		.uleb128 0x13
 21207 0293 11       		.uleb128 0x11
 21208 0294 01       		.uleb128 0x1
 21209 0295 12       		.uleb128 0x12
 21210 0296 06       		.uleb128 0x6
 21211 0297 40       		.uleb128 0x40
 21212 0298 18       		.uleb128 0x18
 21213 0299 9642     		.uleb128 0x2116
 21214 029b 19       		.uleb128 0x19
 21215 029c 00       		.byte	0
 21216 029d 00       		.byte	0
 21217 029e 28       		.uleb128 0x28
 21218 029f 2E       		.uleb128 0x2e
 21219 02a0 00       		.byte	0
 21220 02a1 3F       		.uleb128 0x3f
 21221 02a2 19       		.uleb128 0x19
 21222 02a3 03       		.uleb128 0x3
 21223 02a4 0E       		.uleb128 0xe
 21224 02a5 3A       		.uleb128 0x3a
 21225 02a6 0B       		.uleb128 0xb
 21226 02a7 3B       		.uleb128 0x3b
 21227 02a8 05       		.uleb128 0x5
 21228 02a9 27       		.uleb128 0x27
 21229 02aa 19       		.uleb128 0x19
 21230 02ab 11       		.uleb128 0x11
 21231 02ac 01       		.uleb128 0x1
 21232 02ad 12       		.uleb128 0x12
 21233 02ae 06       		.uleb128 0x6
 21234 02af 40       		.uleb128 0x40
 21235 02b0 18       		.uleb128 0x18
 21236 02b1 9642     		.uleb128 0x2116
 21237 02b3 19       		.uleb128 0x19
 21238 02b4 00       		.byte	0
 21239 02b5 00       		.byte	0
 21240 02b6 29       		.uleb128 0x29
 21241 02b7 0B       		.uleb128 0xb
 21242 02b8 01       		.byte	0x1
 21243 02b9 55       		.uleb128 0x55
 21244 02ba 17       		.uleb128 0x17
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 450


 21245 02bb 00       		.byte	0
 21246 02bc 00       		.byte	0
 21247 02bd 2A       		.uleb128 0x2a
 21248 02be 13       		.uleb128 0x13
 21249 02bf 01       		.byte	0x1
 21250 02c0 03       		.uleb128 0x3
 21251 02c1 0E       		.uleb128 0xe
 21252 02c2 0B       		.uleb128 0xb
 21253 02c3 0B       		.uleb128 0xb
 21254 02c4 3A       		.uleb128 0x3a
 21255 02c5 0B       		.uleb128 0xb
 21256 02c6 3B       		.uleb128 0x3b
 21257 02c7 05       		.uleb128 0x5
 21258 02c8 01       		.uleb128 0x1
 21259 02c9 13       		.uleb128 0x13
 21260 02ca 00       		.byte	0
 21261 02cb 00       		.byte	0
 21262 02cc 2B       		.uleb128 0x2b
 21263 02cd 0A       		.uleb128 0xa
 21264 02ce 00       		.byte	0
 21265 02cf 03       		.uleb128 0x3
 21266 02d0 0E       		.uleb128 0xe
 21267 02d1 3A       		.uleb128 0x3a
 21268 02d2 0B       		.uleb128 0xb
 21269 02d3 3B       		.uleb128 0x3b
 21270 02d4 05       		.uleb128 0x5
 21271 02d5 11       		.uleb128 0x11
 21272 02d6 01       		.uleb128 0x1
 21273 02d7 00       		.byte	0
 21274 02d8 00       		.byte	0
 21275 02d9 2C       		.uleb128 0x2c
 21276 02da 0B       		.uleb128 0xb
 21277 02db 01       		.byte	0x1
 21278 02dc 55       		.uleb128 0x55
 21279 02dd 17       		.uleb128 0x17
 21280 02de 01       		.uleb128 0x1
 21281 02df 13       		.uleb128 0x13
 21282 02e0 00       		.byte	0
 21283 02e1 00       		.byte	0
 21284 02e2 2D       		.uleb128 0x2d
 21285 02e3 34       		.uleb128 0x34
 21286 02e4 00       		.byte	0
 21287 02e5 03       		.uleb128 0x3
 21288 02e6 0E       		.uleb128 0xe
 21289 02e7 3A       		.uleb128 0x3a
 21290 02e8 0B       		.uleb128 0xb
 21291 02e9 3B       		.uleb128 0x3b
 21292 02ea 0B       		.uleb128 0xb
 21293 02eb 49       		.uleb128 0x49
 21294 02ec 13       		.uleb128 0x13
 21295 02ed 3F       		.uleb128 0x3f
 21296 02ee 19       		.uleb128 0x19
 21297 02ef 02       		.uleb128 0x2
 21298 02f0 18       		.uleb128 0x18
 21299 02f1 00       		.byte	0
 21300 02f2 00       		.byte	0
 21301 02f3 00       		.byte	0
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 451


 21302              		.section	.debug_aranges,"",%progbits
 21303 0000 D4030000 		.4byte	0x3d4
 21304 0004 0200     		.2byte	0x2
 21305 0006 00000000 		.4byte	.Ldebug_info0
 21306 000a 04       		.byte	0x4
 21307 000b 00       		.byte	0
 21308 000c 0000     		.2byte	0
 21309 000e 0000     		.2byte	0
 21310 0010 00000000 		.4byte	.LFB1
 21311 0014 50000000 		.4byte	.LFE1-.LFB1
 21312 0018 00000000 		.4byte	.LFB2
 21313 001c 58000000 		.4byte	.LFE2-.LFB2
 21314 0020 00000000 		.4byte	.LFB3
 21315 0024 24000000 		.4byte	.LFE3-.LFB3
 21316 0028 00000000 		.4byte	.LFB4
 21317 002c 70000000 		.4byte	.LFE4-.LFB4
 21318 0030 00000000 		.4byte	.LFB5
 21319 0034 5C000000 		.4byte	.LFE5-.LFB5
 21320 0038 00000000 		.4byte	.LFB6
 21321 003c 9C000000 		.4byte	.LFE6-.LFB6
 21322 0040 00000000 		.4byte	.LFB7
 21323 0044 58000000 		.4byte	.LFE7-.LFB7
 21324 0048 00000000 		.4byte	.LFB8
 21325 004c 3C000000 		.4byte	.LFE8-.LFB8
 21326 0050 00000000 		.4byte	.LFB9
 21327 0054 38000000 		.4byte	.LFE9-.LFB9
 21328 0058 00000000 		.4byte	.LFB10
 21329 005c 7C000000 		.4byte	.LFE10-.LFB10
 21330 0060 00000000 		.4byte	.LFB11
 21331 0064 4C000000 		.4byte	.LFE11-.LFB11
 21332 0068 00000000 		.4byte	.LFB12
 21333 006c 58010000 		.4byte	.LFE12-.LFB12
 21334 0070 00000000 		.4byte	.LFB13
 21335 0074 48010000 		.4byte	.LFE13-.LFB13
 21336 0078 00000000 		.4byte	.LFB14
 21337 007c B8020000 		.4byte	.LFE14-.LFB14
 21338 0080 00000000 		.4byte	.LFB15
 21339 0084 F4020000 		.4byte	.LFE15-.LFB15
 21340 0088 00000000 		.4byte	.LFB16
 21341 008c 1C000000 		.4byte	.LFE16-.LFB16
 21342 0090 00000000 		.4byte	.LFB17
 21343 0094 C0000000 		.4byte	.LFE17-.LFB17
 21344 0098 00000000 		.4byte	.LFB18
 21345 009c D6000000 		.4byte	.LFE18-.LFB18
 21346 00a0 00000000 		.4byte	.LFB19
 21347 00a4 88000000 		.4byte	.LFE19-.LFB19
 21348 00a8 00000000 		.4byte	.LFB20
 21349 00ac 4C000000 		.4byte	.LFE20-.LFB20
 21350 00b0 00000000 		.4byte	.LFB21
 21351 00b4 4C000000 		.4byte	.LFE21-.LFB21
 21352 00b8 00000000 		.4byte	.LFB22
 21353 00bc 36010000 		.4byte	.LFE22-.LFB22
 21354 00c0 00000000 		.4byte	.LFB23
 21355 00c4 C8000000 		.4byte	.LFE23-.LFB23
 21356 00c8 00000000 		.4byte	.LFB24
 21357 00cc 60000000 		.4byte	.LFE24-.LFB24
 21358 00d0 00000000 		.4byte	.LFB25
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 452


 21359 00d4 42000000 		.4byte	.LFE25-.LFB25
 21360 00d8 00000000 		.4byte	.LFB26
 21361 00dc 28000000 		.4byte	.LFE26-.LFB26
 21362 00e0 00000000 		.4byte	.LFB27
 21363 00e4 42000000 		.4byte	.LFE27-.LFB27
 21364 00e8 00000000 		.4byte	.LFB28
 21365 00ec 52000000 		.4byte	.LFE28-.LFB28
 21366 00f0 00000000 		.4byte	.LFB29
 21367 00f4 5C000000 		.4byte	.LFE29-.LFB29
 21368 00f8 00000000 		.4byte	.LFB30
 21369 00fc 68000000 		.4byte	.LFE30-.LFB30
 21370 0100 00000000 		.4byte	.LFB31
 21371 0104 E4000000 		.4byte	.LFE31-.LFB31
 21372 0108 00000000 		.4byte	.LFB32
 21373 010c 38000000 		.4byte	.LFE32-.LFB32
 21374 0110 00000000 		.4byte	.LFB33
 21375 0114 34000000 		.4byte	.LFE33-.LFB33
 21376 0118 00000000 		.4byte	.LFB34
 21377 011c B8000000 		.4byte	.LFE34-.LFB34
 21378 0120 00000000 		.4byte	.LFB35
 21379 0124 AA000000 		.4byte	.LFE35-.LFB35
 21380 0128 00000000 		.4byte	.LFB36
 21381 012c DE000000 		.4byte	.LFE36-.LFB36
 21382 0130 00000000 		.4byte	.LFB37
 21383 0134 2A000000 		.4byte	.LFE37-.LFB37
 21384 0138 00000000 		.4byte	.LFB38
 21385 013c 0E010000 		.4byte	.LFE38-.LFB38
 21386 0140 00000000 		.4byte	.LFB39
 21387 0144 36000000 		.4byte	.LFE39-.LFB39
 21388 0148 00000000 		.4byte	.LFB40
 21389 014c 54000000 		.4byte	.LFE40-.LFB40
 21390 0150 00000000 		.4byte	.LFB41
 21391 0154 4E000000 		.4byte	.LFE41-.LFB41
 21392 0158 00000000 		.4byte	.LFB42
 21393 015c 98000000 		.4byte	.LFE42-.LFB42
 21394 0160 00000000 		.4byte	.LFB43
 21395 0164 9C000000 		.4byte	.LFE43-.LFB43
 21396 0168 00000000 		.4byte	.LFB44
 21397 016c 3C000000 		.4byte	.LFE44-.LFB44
 21398 0170 00000000 		.4byte	.LFB45
 21399 0174 F8000000 		.4byte	.LFE45-.LFB45
 21400 0178 00000000 		.4byte	.LFB46
 21401 017c 24000000 		.4byte	.LFE46-.LFB46
 21402 0180 00000000 		.4byte	.LFB47
 21403 0184 26000000 		.4byte	.LFE47-.LFB47
 21404 0188 00000000 		.4byte	.LFB48
 21405 018c C0000000 		.4byte	.LFE48-.LFB48
 21406 0190 00000000 		.4byte	.LFB49
 21407 0194 22000000 		.4byte	.LFE49-.LFB49
 21408 0198 00000000 		.4byte	.LFB50
 21409 019c C6000000 		.4byte	.LFE50-.LFB50
 21410 01a0 00000000 		.4byte	.LFB51
 21411 01a4 3A000000 		.4byte	.LFE51-.LFB51
 21412 01a8 00000000 		.4byte	.LFB52
 21413 01ac 3A000000 		.4byte	.LFE52-.LFB52
 21414 01b0 00000000 		.4byte	.LFB53
 21415 01b4 3A000000 		.4byte	.LFE53-.LFB53
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 453


 21416 01b8 00000000 		.4byte	.LFB54
 21417 01bc B0000000 		.4byte	.LFE54-.LFB54
 21418 01c0 00000000 		.4byte	.LFB55
 21419 01c4 40000000 		.4byte	.LFE55-.LFB55
 21420 01c8 00000000 		.4byte	.LFB56
 21421 01cc 92000000 		.4byte	.LFE56-.LFB56
 21422 01d0 00000000 		.4byte	.LFB57
 21423 01d4 3C000000 		.4byte	.LFE57-.LFB57
 21424 01d8 00000000 		.4byte	.LFB58
 21425 01dc 8C000000 		.4byte	.LFE58-.LFB58
 21426 01e0 00000000 		.4byte	.LFB59
 21427 01e4 3E000000 		.4byte	.LFE59-.LFB59
 21428 01e8 00000000 		.4byte	.LFB60
 21429 01ec 3E000000 		.4byte	.LFE60-.LFB60
 21430 01f0 00000000 		.4byte	.LFB61
 21431 01f4 44000000 		.4byte	.LFE61-.LFB61
 21432 01f8 00000000 		.4byte	.LFB62
 21433 01fc 48000000 		.4byte	.LFE62-.LFB62
 21434 0200 00000000 		.4byte	.LFB63
 21435 0204 46000000 		.4byte	.LFE63-.LFB63
 21436 0208 00000000 		.4byte	.LFB64
 21437 020c 1E000000 		.4byte	.LFE64-.LFB64
 21438 0210 00000000 		.4byte	.LFB65
 21439 0214 7E000000 		.4byte	.LFE65-.LFB65
 21440 0218 00000000 		.4byte	.LFB66
 21441 021c 88000000 		.4byte	.LFE66-.LFB66
 21442 0220 00000000 		.4byte	.LFB67
 21443 0224 82000000 		.4byte	.LFE67-.LFB67
 21444 0228 00000000 		.4byte	.LFB68
 21445 022c 3A000000 		.4byte	.LFE68-.LFB68
 21446 0230 00000000 		.4byte	.LFB69
 21447 0234 1E000000 		.4byte	.LFE69-.LFB69
 21448 0238 00000000 		.4byte	.LFB70
 21449 023c 14000000 		.4byte	.LFE70-.LFB70
 21450 0240 00000000 		.4byte	.LFB71
 21451 0244 A2000000 		.4byte	.LFE71-.LFB71
 21452 0248 00000000 		.4byte	.LFB72
 21453 024c 62000000 		.4byte	.LFE72-.LFB72
 21454 0250 00000000 		.4byte	.LFB73
 21455 0254 3E000000 		.4byte	.LFE73-.LFB73
 21456 0258 00000000 		.4byte	.LFB74
 21457 025c 12000000 		.4byte	.LFE74-.LFB74
 21458 0260 00000000 		.4byte	.LFB75
 21459 0264 2A000000 		.4byte	.LFE75-.LFB75
 21460 0268 00000000 		.4byte	.LFB76
 21461 026c 42000000 		.4byte	.LFE76-.LFB76
 21462 0270 00000000 		.4byte	.LFB77
 21463 0274 AC000000 		.4byte	.LFE77-.LFB77
 21464 0278 00000000 		.4byte	.LFB78
 21465 027c 9C000000 		.4byte	.LFE78-.LFB78
 21466 0280 00000000 		.4byte	.LFB79
 21467 0284 1A000000 		.4byte	.LFE79-.LFB79
 21468 0288 00000000 		.4byte	.LFB80
 21469 028c 12000000 		.4byte	.LFE80-.LFB80
 21470 0290 00000000 		.4byte	.LFB81
 21471 0294 0C010000 		.4byte	.LFE81-.LFB81
 21472 0298 00000000 		.4byte	.LFB82
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 454


 21473 029c EE010000 		.4byte	.LFE82-.LFB82
 21474 02a0 00000000 		.4byte	.LFB83
 21475 02a4 40000000 		.4byte	.LFE83-.LFB83
 21476 02a8 00000000 		.4byte	.LFB84
 21477 02ac 44010000 		.4byte	.LFE84-.LFB84
 21478 02b0 00000000 		.4byte	.LFB85
 21479 02b4 78010000 		.4byte	.LFE85-.LFB85
 21480 02b8 00000000 		.4byte	.LFB86
 21481 02bc C0000000 		.4byte	.LFE86-.LFB86
 21482 02c0 00000000 		.4byte	.LFB87
 21483 02c4 5A000000 		.4byte	.LFE87-.LFB87
 21484 02c8 00000000 		.4byte	.LFB88
 21485 02cc 2E000000 		.4byte	.LFE88-.LFB88
 21486 02d0 00000000 		.4byte	.LFB89
 21487 02d4 1A000000 		.4byte	.LFE89-.LFB89
 21488 02d8 00000000 		.4byte	.LFB90
 21489 02dc 40000000 		.4byte	.LFE90-.LFB90
 21490 02e0 00000000 		.4byte	.LFB91
 21491 02e4 30000000 		.4byte	.LFE91-.LFB91
 21492 02e8 00000000 		.4byte	.LFB92
 21493 02ec 44000000 		.4byte	.LFE92-.LFB92
 21494 02f0 00000000 		.4byte	.LFB93
 21495 02f4 18000000 		.4byte	.LFE93-.LFB93
 21496 02f8 00000000 		.4byte	.LFB94
 21497 02fc 18000000 		.4byte	.LFE94-.LFB94
 21498 0300 00000000 		.4byte	.LFB95
 21499 0304 18000000 		.4byte	.LFE95-.LFB95
 21500 0308 00000000 		.4byte	.LFB96
 21501 030c 10000000 		.4byte	.LFE96-.LFB96
 21502 0310 00000000 		.4byte	.LFB97
 21503 0314 18000000 		.4byte	.LFE97-.LFB97
 21504 0318 00000000 		.4byte	.LFB98
 21505 031c 18000000 		.4byte	.LFE98-.LFB98
 21506 0320 00000000 		.4byte	.LFB99
 21507 0324 18000000 		.4byte	.LFE99-.LFB99
 21508 0328 00000000 		.4byte	.LFB100
 21509 032c 18000000 		.4byte	.LFE100-.LFB100
 21510 0330 00000000 		.4byte	.LFB101
 21511 0334 34000000 		.4byte	.LFE101-.LFB101
 21512 0338 00000000 		.4byte	.LFB102
 21513 033c 1A000000 		.4byte	.LFE102-.LFB102
 21514 0340 00000000 		.4byte	.LFB103
 21515 0344 1A000000 		.4byte	.LFE103-.LFB103
 21516 0348 00000000 		.4byte	.LFB104
 21517 034c 1C000000 		.4byte	.LFE104-.LFB104
 21518 0350 00000000 		.4byte	.LFB105
 21519 0354 44000000 		.4byte	.LFE105-.LFB105
 21520 0358 00000000 		.4byte	.LFB106
 21521 035c 48000000 		.4byte	.LFE106-.LFB106
 21522 0360 00000000 		.4byte	.LFB107
 21523 0364 12000000 		.4byte	.LFE107-.LFB107
 21524 0368 00000000 		.4byte	.LFB108
 21525 036c 12000000 		.4byte	.LFE108-.LFB108
 21526 0370 00000000 		.4byte	.LFB109
 21527 0374 1C000000 		.4byte	.LFE109-.LFB109
 21528 0378 00000000 		.4byte	.LFB110
 21529 037c 1E000000 		.4byte	.LFE110-.LFB110
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 455


 21530 0380 00000000 		.4byte	.LFB111
 21531 0384 4A000000 		.4byte	.LFE111-.LFB111
 21532 0388 00000000 		.4byte	.LFB112
 21533 038c 6C000000 		.4byte	.LFE112-.LFB112
 21534 0390 00000000 		.4byte	.LFB113
 21535 0394 28040000 		.4byte	.LFE113-.LFB113
 21536 0398 00000000 		.4byte	.LFB114
 21537 039c 2C020000 		.4byte	.LFE114-.LFB114
 21538 03a0 00000000 		.4byte	.LFB115
 21539 03a4 14000000 		.4byte	.LFE115-.LFB115
 21540 03a8 00000000 		.4byte	.LFB116
 21541 03ac 5A060000 		.4byte	.LFE116-.LFB116
 21542 03b0 00000000 		.4byte	.LFB117
 21543 03b4 D40A0000 		.4byte	.LFE117-.LFB117
 21544 03b8 00000000 		.4byte	.LFB118
 21545 03bc 1C030000 		.4byte	.LFE118-.LFB118
 21546 03c0 00000000 		.4byte	.LFB119
 21547 03c4 78040000 		.4byte	.LFE119-.LFB119
 21548 03c8 00000000 		.4byte	.LFB120
 21549 03cc 48020000 		.4byte	.LFE120-.LFB120
 21550 03d0 00000000 		.4byte	0
 21551 03d4 00000000 		.4byte	0
 21552              		.section	.debug_ranges,"",%progbits
 21553              	.Ldebug_ranges0:
 21554 0000 52000000 		.4byte	.LBB12
 21555 0004 EA000000 		.4byte	.LBE12
 21556 0008 EC000000 		.4byte	.LBB13
 21557 000c EE000000 		.4byte	.LBE13
 21558 0010 00000000 		.4byte	0
 21559 0014 00000000 		.4byte	0
 21560 0018 DE000000 		.4byte	.LBB14
 21561 001c B6010000 		.4byte	.LBE14
 21562 0020 FE030000 		.4byte	.LBB20
 21563 0024 02040000 		.4byte	.LBE20
 21564 0028 00000000 		.4byte	0
 21565 002c 00000000 		.4byte	0
 21566 0030 1E010000 		.4byte	.LBB15
 21567 0034 60010000 		.4byte	.LBE15
 21568 0038 FE030000 		.4byte	.LBB16
 21569 003c 02040000 		.4byte	.LBE16
 21570 0040 00000000 		.4byte	0
 21571 0044 00000000 		.4byte	0
 21572 0048 C0010000 		.4byte	.LBB17
 21573 004c DA030000 		.4byte	.LBE17
 21574 0050 02040000 		.4byte	.LBB21
 21575 0054 08040000 		.4byte	.LBE21
 21576 0058 00000000 		.4byte	0
 21577 005c 00000000 		.4byte	0
 21578 0060 44020000 		.4byte	.LBB18
 21579 0064 6A030000 		.4byte	.LBE18
 21580 0068 02040000 		.4byte	.LBB19
 21581 006c 06040000 		.4byte	.LBE19
 21582 0070 00000000 		.4byte	0
 21583 0074 00000000 		.4byte	0
 21584 0078 48020000 		.4byte	.LBB25
 21585 007c E4020000 		.4byte	.LBE25
 21586 0080 F2020000 		.4byte	.LBB26
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 456


 21587 0084 F4020000 		.4byte	.LBE26
 21588 0088 00000000 		.4byte	0
 21589 008c 00000000 		.4byte	0
 21590 0090 00000000 		.4byte	.LFB1
 21591 0094 50000000 		.4byte	.LFE1
 21592 0098 00000000 		.4byte	.LFB2
 21593 009c 58000000 		.4byte	.LFE2
 21594 00a0 00000000 		.4byte	.LFB3
 21595 00a4 24000000 		.4byte	.LFE3
 21596 00a8 00000000 		.4byte	.LFB4
 21597 00ac 70000000 		.4byte	.LFE4
 21598 00b0 00000000 		.4byte	.LFB5
 21599 00b4 5C000000 		.4byte	.LFE5
 21600 00b8 00000000 		.4byte	.LFB6
 21601 00bc 9C000000 		.4byte	.LFE6
 21602 00c0 00000000 		.4byte	.LFB7
 21603 00c4 58000000 		.4byte	.LFE7
 21604 00c8 00000000 		.4byte	.LFB8
 21605 00cc 3C000000 		.4byte	.LFE8
 21606 00d0 00000000 		.4byte	.LFB9
 21607 00d4 38000000 		.4byte	.LFE9
 21608 00d8 00000000 		.4byte	.LFB10
 21609 00dc 7C000000 		.4byte	.LFE10
 21610 00e0 00000000 		.4byte	.LFB11
 21611 00e4 4C000000 		.4byte	.LFE11
 21612 00e8 00000000 		.4byte	.LFB12
 21613 00ec 58010000 		.4byte	.LFE12
 21614 00f0 00000000 		.4byte	.LFB13
 21615 00f4 48010000 		.4byte	.LFE13
 21616 00f8 00000000 		.4byte	.LFB14
 21617 00fc B8020000 		.4byte	.LFE14
 21618 0100 00000000 		.4byte	.LFB15
 21619 0104 F4020000 		.4byte	.LFE15
 21620 0108 00000000 		.4byte	.LFB16
 21621 010c 1C000000 		.4byte	.LFE16
 21622 0110 00000000 		.4byte	.LFB17
 21623 0114 C0000000 		.4byte	.LFE17
 21624 0118 00000000 		.4byte	.LFB18
 21625 011c D6000000 		.4byte	.LFE18
 21626 0120 00000000 		.4byte	.LFB19
 21627 0124 88000000 		.4byte	.LFE19
 21628 0128 00000000 		.4byte	.LFB20
 21629 012c 4C000000 		.4byte	.LFE20
 21630 0130 00000000 		.4byte	.LFB21
 21631 0134 4C000000 		.4byte	.LFE21
 21632 0138 00000000 		.4byte	.LFB22
 21633 013c 36010000 		.4byte	.LFE22
 21634 0140 00000000 		.4byte	.LFB23
 21635 0144 C8000000 		.4byte	.LFE23
 21636 0148 00000000 		.4byte	.LFB24
 21637 014c 60000000 		.4byte	.LFE24
 21638 0150 00000000 		.4byte	.LFB25
 21639 0154 42000000 		.4byte	.LFE25
 21640 0158 00000000 		.4byte	.LFB26
 21641 015c 28000000 		.4byte	.LFE26
 21642 0160 00000000 		.4byte	.LFB27
 21643 0164 42000000 		.4byte	.LFE27
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 457


 21644 0168 00000000 		.4byte	.LFB28
 21645 016c 52000000 		.4byte	.LFE28
 21646 0170 00000000 		.4byte	.LFB29
 21647 0174 5C000000 		.4byte	.LFE29
 21648 0178 00000000 		.4byte	.LFB30
 21649 017c 68000000 		.4byte	.LFE30
 21650 0180 00000000 		.4byte	.LFB31
 21651 0184 E4000000 		.4byte	.LFE31
 21652 0188 00000000 		.4byte	.LFB32
 21653 018c 38000000 		.4byte	.LFE32
 21654 0190 00000000 		.4byte	.LFB33
 21655 0194 34000000 		.4byte	.LFE33
 21656 0198 00000000 		.4byte	.LFB34
 21657 019c B8000000 		.4byte	.LFE34
 21658 01a0 00000000 		.4byte	.LFB35
 21659 01a4 AA000000 		.4byte	.LFE35
 21660 01a8 00000000 		.4byte	.LFB36
 21661 01ac DE000000 		.4byte	.LFE36
 21662 01b0 00000000 		.4byte	.LFB37
 21663 01b4 2A000000 		.4byte	.LFE37
 21664 01b8 00000000 		.4byte	.LFB38
 21665 01bc 0E010000 		.4byte	.LFE38
 21666 01c0 00000000 		.4byte	.LFB39
 21667 01c4 36000000 		.4byte	.LFE39
 21668 01c8 00000000 		.4byte	.LFB40
 21669 01cc 54000000 		.4byte	.LFE40
 21670 01d0 00000000 		.4byte	.LFB41
 21671 01d4 4E000000 		.4byte	.LFE41
 21672 01d8 00000000 		.4byte	.LFB42
 21673 01dc 98000000 		.4byte	.LFE42
 21674 01e0 00000000 		.4byte	.LFB43
 21675 01e4 9C000000 		.4byte	.LFE43
 21676 01e8 00000000 		.4byte	.LFB44
 21677 01ec 3C000000 		.4byte	.LFE44
 21678 01f0 00000000 		.4byte	.LFB45
 21679 01f4 F8000000 		.4byte	.LFE45
 21680 01f8 00000000 		.4byte	.LFB46
 21681 01fc 24000000 		.4byte	.LFE46
 21682 0200 00000000 		.4byte	.LFB47
 21683 0204 26000000 		.4byte	.LFE47
 21684 0208 00000000 		.4byte	.LFB48
 21685 020c C0000000 		.4byte	.LFE48
 21686 0210 00000000 		.4byte	.LFB49
 21687 0214 22000000 		.4byte	.LFE49
 21688 0218 00000000 		.4byte	.LFB50
 21689 021c C6000000 		.4byte	.LFE50
 21690 0220 00000000 		.4byte	.LFB51
 21691 0224 3A000000 		.4byte	.LFE51
 21692 0228 00000000 		.4byte	.LFB52
 21693 022c 3A000000 		.4byte	.LFE52
 21694 0230 00000000 		.4byte	.LFB53
 21695 0234 3A000000 		.4byte	.LFE53
 21696 0238 00000000 		.4byte	.LFB54
 21697 023c B0000000 		.4byte	.LFE54
 21698 0240 00000000 		.4byte	.LFB55
 21699 0244 40000000 		.4byte	.LFE55
 21700 0248 00000000 		.4byte	.LFB56
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 458


 21701 024c 92000000 		.4byte	.LFE56
 21702 0250 00000000 		.4byte	.LFB57
 21703 0254 3C000000 		.4byte	.LFE57
 21704 0258 00000000 		.4byte	.LFB58
 21705 025c 8C000000 		.4byte	.LFE58
 21706 0260 00000000 		.4byte	.LFB59
 21707 0264 3E000000 		.4byte	.LFE59
 21708 0268 00000000 		.4byte	.LFB60
 21709 026c 3E000000 		.4byte	.LFE60
 21710 0270 00000000 		.4byte	.LFB61
 21711 0274 44000000 		.4byte	.LFE61
 21712 0278 00000000 		.4byte	.LFB62
 21713 027c 48000000 		.4byte	.LFE62
 21714 0280 00000000 		.4byte	.LFB63
 21715 0284 46000000 		.4byte	.LFE63
 21716 0288 00000000 		.4byte	.LFB64
 21717 028c 1E000000 		.4byte	.LFE64
 21718 0290 00000000 		.4byte	.LFB65
 21719 0294 7E000000 		.4byte	.LFE65
 21720 0298 00000000 		.4byte	.LFB66
 21721 029c 88000000 		.4byte	.LFE66
 21722 02a0 00000000 		.4byte	.LFB67
 21723 02a4 82000000 		.4byte	.LFE67
 21724 02a8 00000000 		.4byte	.LFB68
 21725 02ac 3A000000 		.4byte	.LFE68
 21726 02b0 00000000 		.4byte	.LFB69
 21727 02b4 1E000000 		.4byte	.LFE69
 21728 02b8 00000000 		.4byte	.LFB70
 21729 02bc 14000000 		.4byte	.LFE70
 21730 02c0 00000000 		.4byte	.LFB71
 21731 02c4 A2000000 		.4byte	.LFE71
 21732 02c8 00000000 		.4byte	.LFB72
 21733 02cc 62000000 		.4byte	.LFE72
 21734 02d0 00000000 		.4byte	.LFB73
 21735 02d4 3E000000 		.4byte	.LFE73
 21736 02d8 00000000 		.4byte	.LFB74
 21737 02dc 12000000 		.4byte	.LFE74
 21738 02e0 00000000 		.4byte	.LFB75
 21739 02e4 2A000000 		.4byte	.LFE75
 21740 02e8 00000000 		.4byte	.LFB76
 21741 02ec 42000000 		.4byte	.LFE76
 21742 02f0 00000000 		.4byte	.LFB77
 21743 02f4 AC000000 		.4byte	.LFE77
 21744 02f8 00000000 		.4byte	.LFB78
 21745 02fc 9C000000 		.4byte	.LFE78
 21746 0300 00000000 		.4byte	.LFB79
 21747 0304 1A000000 		.4byte	.LFE79
 21748 0308 00000000 		.4byte	.LFB80
 21749 030c 12000000 		.4byte	.LFE80
 21750 0310 00000000 		.4byte	.LFB81
 21751 0314 0C010000 		.4byte	.LFE81
 21752 0318 00000000 		.4byte	.LFB82
 21753 031c EE010000 		.4byte	.LFE82
 21754 0320 00000000 		.4byte	.LFB83
 21755 0324 40000000 		.4byte	.LFE83
 21756 0328 00000000 		.4byte	.LFB84
 21757 032c 44010000 		.4byte	.LFE84
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 459


 21758 0330 00000000 		.4byte	.LFB85
 21759 0334 78010000 		.4byte	.LFE85
 21760 0338 00000000 		.4byte	.LFB86
 21761 033c C0000000 		.4byte	.LFE86
 21762 0340 00000000 		.4byte	.LFB87
 21763 0344 5A000000 		.4byte	.LFE87
 21764 0348 00000000 		.4byte	.LFB88
 21765 034c 2E000000 		.4byte	.LFE88
 21766 0350 00000000 		.4byte	.LFB89
 21767 0354 1A000000 		.4byte	.LFE89
 21768 0358 00000000 		.4byte	.LFB90
 21769 035c 40000000 		.4byte	.LFE90
 21770 0360 00000000 		.4byte	.LFB91
 21771 0364 30000000 		.4byte	.LFE91
 21772 0368 00000000 		.4byte	.LFB92
 21773 036c 44000000 		.4byte	.LFE92
 21774 0370 00000000 		.4byte	.LFB93
 21775 0374 18000000 		.4byte	.LFE93
 21776 0378 00000000 		.4byte	.LFB94
 21777 037c 18000000 		.4byte	.LFE94
 21778 0380 00000000 		.4byte	.LFB95
 21779 0384 18000000 		.4byte	.LFE95
 21780 0388 00000000 		.4byte	.LFB96
 21781 038c 10000000 		.4byte	.LFE96
 21782 0390 00000000 		.4byte	.LFB97
 21783 0394 18000000 		.4byte	.LFE97
 21784 0398 00000000 		.4byte	.LFB98
 21785 039c 18000000 		.4byte	.LFE98
 21786 03a0 00000000 		.4byte	.LFB99
 21787 03a4 18000000 		.4byte	.LFE99
 21788 03a8 00000000 		.4byte	.LFB100
 21789 03ac 18000000 		.4byte	.LFE100
 21790 03b0 00000000 		.4byte	.LFB101
 21791 03b4 34000000 		.4byte	.LFE101
 21792 03b8 00000000 		.4byte	.LFB102
 21793 03bc 1A000000 		.4byte	.LFE102
 21794 03c0 00000000 		.4byte	.LFB103
 21795 03c4 1A000000 		.4byte	.LFE103
 21796 03c8 00000000 		.4byte	.LFB104
 21797 03cc 1C000000 		.4byte	.LFE104
 21798 03d0 00000000 		.4byte	.LFB105
 21799 03d4 44000000 		.4byte	.LFE105
 21800 03d8 00000000 		.4byte	.LFB106
 21801 03dc 48000000 		.4byte	.LFE106
 21802 03e0 00000000 		.4byte	.LFB107
 21803 03e4 12000000 		.4byte	.LFE107
 21804 03e8 00000000 		.4byte	.LFB108
 21805 03ec 12000000 		.4byte	.LFE108
 21806 03f0 00000000 		.4byte	.LFB109
 21807 03f4 1C000000 		.4byte	.LFE109
 21808 03f8 00000000 		.4byte	.LFB110
 21809 03fc 1E000000 		.4byte	.LFE110
 21810 0400 00000000 		.4byte	.LFB111
 21811 0404 4A000000 		.4byte	.LFE111
 21812 0408 00000000 		.4byte	.LFB112
 21813 040c 6C000000 		.4byte	.LFE112
 21814 0410 00000000 		.4byte	.LFB113
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 460


 21815 0414 28040000 		.4byte	.LFE113
 21816 0418 00000000 		.4byte	.LFB114
 21817 041c 2C020000 		.4byte	.LFE114
 21818 0420 00000000 		.4byte	.LFB115
 21819 0424 14000000 		.4byte	.LFE115
 21820 0428 00000000 		.4byte	.LFB116
 21821 042c 5A060000 		.4byte	.LFE116
 21822 0430 00000000 		.4byte	.LFB117
 21823 0434 D40A0000 		.4byte	.LFE117
 21824 0438 00000000 		.4byte	.LFB118
 21825 043c 1C030000 		.4byte	.LFE118
 21826 0440 00000000 		.4byte	.LFB119
 21827 0444 78040000 		.4byte	.LFE119
 21828 0448 00000000 		.4byte	.LFB120
 21829 044c 48020000 		.4byte	.LFE120
 21830 0450 00000000 		.4byte	0
 21831 0454 00000000 		.4byte	0
 21832              		.section	.debug_line,"",%progbits
 21833              	.Ldebug_line0:
 21834 0000 02140000 		.section	.debug_str,"MS",%progbits,1
 21834      02002801 
 21834      00000201 
 21834      FB0E0D00 
 21834      01010101 
 21835              	.LASF328:
 21836 0000 41443539 		.ascii	"AD5940_SWMatrixCfgS\000"
 21836      34305F53 
 21836      574D6174 
 21836      72697843 
 21836      66675300 
 21837              	.LASF368:
 21838 0014 7046696C 		.ascii	"pFiltCfg\000"
 21838      74436667 
 21838      00
 21839              	.LASF297:
 21840 001d 41443539 		.ascii	"AD5940_ReadWrite8B\000"
 21840      34305F52 
 21840      65616457 
 21840      72697465 
 21840      384200
 21841              	.LASF474:
 21842 0030 74696D65 		.ascii	"time_out\000"
 21842      5F6F7574 
 21842      00
 21843              	.LASF367:
 21844 0039 41443539 		.ascii	"AD5940_ADCFilterCfgS\000"
 21844      34305F41 
 21844      44434669 
 21844      6C746572 
 21844      43666753 
 21845              	.LASF67:
 21846 004e 4E737769 		.ascii	"Nswitch\000"
 21846      74636800 
 21847              	.LASF397:
 21848 0056 53746172 		.ascii	"StartAddr\000"
 21848      74416464 
 21848      7200
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 461


 21849              	.LASF478:
 21850 0060 6164635F 		.ascii	"adc_base\000"
 21850      62617365 
 21850      00
 21851              	.LASF34:
 21852 0069 48534441 		.ascii	"HSDACRefEn\000"
 21852      43526566 
 21852      456E00
 21853              	.LASF14:
 21854 0074 73697A65 		.ascii	"sizetype\000"
 21854      74797065 
 21854      00
 21855              	.LASF25:
 21856 007d 426F6F6C 		.ascii	"BoolFlag\000"
 21856      466C6167 
 21856      00
 21857              	.LASF81:
 21858 0086 48734461 		.ascii	"HsDacUpdateRate\000"
 21858      63557064 
 21858      61746552 
 21858      61746500 
 21859              	.LASF42:
 21860 0096 41444350 		.ascii	"ADCPga\000"
 21860      676100
 21861              	.LASF315:
 21862 009d 41666543 		.ascii	"AfeCtrlSet\000"
 21862      74726C53 
 21862      657400
 21863              	.LASF301:
 21864 00a8 52656376 		.ascii	"RecvBuffer\000"
 21864      42756666 
 21864      657200
 21865              	.LASF373:
 21866 00b3 70436F6D 		.ascii	"pCompCfg\000"
 21866      70436667 
 21866      00
 21867              	.LASF133:
 21868 00bc 44667443 		.ascii	"DftCfg\000"
 21868      666700
 21869              	.LASF216:
 21870 00c3 53776565 		.ascii	"SweepEn\000"
 21870      70456E00 
 21871              	.LASF196:
 21872 00cb 6B433256 		.ascii	"kC2V_DAC6B\000"
 21872      5F444143 
 21872      364200
 21873              	.LASF535:
 21874 00d6 4C504441 		.ascii	"LPDACCALERROR\000"
 21874      4343414C 
 21874      4552524F 
 21874      5200
 21875              	.LASF455:
 21876 00e4 41443539 		.ascii	"AD5940_LPModeClkS\000"
 21876      34305F4C 
 21876      504D6F64 
 21876      65436C6B 
 21876      5300
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 462


 21877              	.LASF500:
 21878 00f6 70485354 		.ascii	"pHSTIAOffsetCal\000"
 21878      49414F66 
 21878      66736574 
 21878      43616C00 
 21879              	.LASF20:
 21880 0106 696E7433 		.ascii	"int32_t\000"
 21880      325F7400 
 21881              	.LASF72:
 21882 010e 48737469 		.ascii	"HstiaCtia\000"
 21882      61437469 
 21882      6100
 21883              	.LASF554:
 21884 0118 53657147 		.ascii	"SeqGenDB\000"
 21884      656E4442 
 21884      00
 21885              	.LASF41:
 21886 0121 4144434D 		.ascii	"ADCMuxN\000"
 21886      75784E00 
 21887              	.LASF391:
 21888 0129 6669666F 		.ascii	"fifocon\000"
 21888      636F6E00 
 21889              	.LASF40:
 21890 0131 4144434D 		.ascii	"ADCMuxP\000"
 21890      75785000 
 21891              	.LASF473:
 21892 0139 5F5F4144 		.ascii	"__AD5940_TakeMeasurement\000"
 21892      35393430 
 21892      5F54616B 
 21892      654D6561 
 21892      73757265 
 21893              	.LASF456:
 21894 0152 4C504D6F 		.ascii	"LPModeClk\000"
 21894      6465436C 
 21894      6B00
 21895              	.LASF85:
 21896 015c 4C704461 		.ascii	"LpDacVzeroMux\000"
 21896      63567A65 
 21896      726F4D75 
 21896      7800
 21897              	.LASF94:
 21898 016a 4C70416D 		.ascii	"LpAmpSel\000"
 21898      7053656C 
 21898      00
 21899              	.LASF552:
 21900 0173 433A5C55 		.ascii	"C:\\Users\\Andre Antunes\\Documents\\PSoC Creator\\"
 21900      73657273 
 21900      5C416E64 
 21900      72652041 
 21900      6E74756E 
 21901 01a1 576F726B 		.ascii	"Workspace01\\KNoT FW.cydsn\000"
 21901      73706163 
 21901      6530315C 
 21901      4B4E6F54 
 21901      2046572E 
 21902              	.LASF522:
 21903 01bb 4761696E 		.ascii	"GainRatio\000"
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 463


 21903      52617469 
 21903      6F00
 21904              	.LASF253:
 21905 01c5 70705365 		.ascii	"ppSeqCmd\000"
 21905      71436D64 
 21905      00
 21906              	.LASF78:
 21907 01ce 48535449 		.ascii	"HSTIACfg_Type\000"
 21907      41436667 
 21907      5F547970 
 21907      6500
 21908              	.LASF303:
 21909 01dc 41443539 		.ascii	"AD5940_SPIWriteReg\000"
 21909      34305F53 
 21909      50495772 
 21909      69746552 
 21909      656700
 21910              	.LASF70:
 21911 01ef 48737469 		.ascii	"HstiaBias\000"
 21911      61426961 
 21911      7300
 21912              	.LASF541:
 21913 01f9 7365715F 		.ascii	"seq_cfg\000"
 21913      63666700 
 21914              	.LASF220:
 21915 0201 53776565 		.ascii	"SweepLog\000"
 21915      704C6F67 
 21915      00
 21916              	.LASF299:
 21917 020a 41443539 		.ascii	"AD5940_ReadWrite16B\000"
 21917      34305F52 
 21917      65616457 
 21917      72697465 
 21917      31364200 
 21918              	.LASF156:
 21919 021e 53657152 		.ascii	"SeqRamAddr\000"
 21919      616D4164 
 21919      647200
 21920              	.LASF463:
 21921 0229 6C705F6C 		.ascii	"lp_loop\000"
 21921      6F6F7000 
 21922              	.LASF151:
 21923 0231 53657149 		.ascii	"SeqIgnoreEn\000"
 21923      676E6F72 
 21923      65456E00 
 21924              	.LASF226:
 21925 023d 5265616C 		.ascii	"Real\000"
 21925      00
 21926              	.LASF35:
 21927 0242 48703156 		.ascii	"Hp1V8ThemBuff\000"
 21927      38546865 
 21927      6D427566 
 21927      6600
 21928              	.LASF289:
 21929 0250 41443539 		.ascii	"AD5940_ComplexDivFloat\000"
 21929      34305F43 
 21929      6F6D706C 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 464


 21929      65784469 
 21929      76466C6F 
 21930              	.LASF413:
 21931 0267 70696E5F 		.ascii	"pin_mask\000"
 21931      6D61736B 
 21931      00
 21932              	.LASF431:
 21933 0270 62697439 		.ascii	"bit9\000"
 21933      00
 21934              	.LASF224:
 21935 0275 50686173 		.ascii	"Phase\000"
 21935      6500
 21936              	.LASF546:
 21937 027b 53657141 		.ascii	"SeqA\000"
 21937      00
 21938              	.LASF547:
 21939 0280 53657142 		.ascii	"SeqB\000"
 21939      00
 21940              	.LASF539:
 21941 0285 54696D65 		.ascii	"TimerCount\000"
 21941      72436F75 
 21941      6E7400
 21942              	.LASF502:
 21943 0290 7043616C 		.ascii	"pCalCfg\000"
 21943      43666700 
 21944              	.LASF467:
 21945 0298 41443539 		.ascii	"AD5940_GetADIID\000"
 21945      34305F47 
 21945      65744144 
 21945      49494400 
 21946              	.LASF350:
 21947 02a8 41443539 		.ascii	"AD5940_LPLoopCfgS\000"
 21947      34305F4C 
 21947      504C6F6F 
 21947      70436667 
 21947      5300
 21948              	.LASF206:
 21949 02ba 4C464F53 		.ascii	"LFOSCMeasure_Type\000"
 21949      434D6561 
 21949      73757265 
 21949      5F547970 
 21949      6500
 21950              	.LASF23:
 21951 02cc 6246414C 		.ascii	"bFALSE\000"
 21951      534500
 21952              	.LASF353:
 21953 02d3 704C7044 		.ascii	"pLpDacCfg\000"
 21953      61634366 
 21953      6700
 21954              	.LASF174:
 21955 02dd 41444343 		.ascii	"ADCClkDiv\000"
 21955      6C6B4469 
 21955      7600
 21956              	.LASF491:
 21957 02e7 68736C6F 		.ascii	"hsloop_cfg\000"
 21957      6F705F63 
 21957      666700
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 465


 21958              	.LASF188:
 21959 02f2 41666550 		.ascii	"AfePwrMode\000"
 21959      77724D6F 
 21959      646500
 21960              	.LASF392:
 21961 02fd 41443539 		.ascii	"AD5940_SEQGetCfg\000"
 21961      34305F53 
 21961      45514765 
 21961      74436667 
 21961      00
 21962              	.LASF390:
 21963 030e 70536571 		.ascii	"pSeqCfg\000"
 21963      43666700 
 21964              	.LASF499:
 21965 0316 41443539 		.ascii	"AD5940_HSTIAOffsetCal\000"
 21965      34305F48 
 21965      53544941 
 21965      4F666673 
 21965      65744361 
 21966              	.LASF186:
 21967 032c 62576974 		.ascii	"bWithCtia\000"
 21967      68437469 
 21967      6100
 21968              	.LASF66:
 21969 0336 50737769 		.ascii	"Pswitch\000"
 21969      74636800 
 21970              	.LASF260:
 21971 033e 4379636C 		.ascii	"Cycles\000"
 21971      657300
 21972              	.LASF209:
 21973 0345 50474143 		.ascii	"PGACalType\000"
 21973      616C5479 
 21973      706500
 21974              	.LASF169:
 21975 0350 57757074 		.ascii	"WuptEn\000"
 21975      456E00
 21976              	.LASF173:
 21977 0357 53797343 		.ascii	"SysClkDiv\000"
 21977      6C6B4469 
 21977      7600
 21978              	.LASF293:
 21979 0361 41443539 		.ascii	"AD5940_ComplexDivInt\000"
 21979      34305F43 
 21979      6F6D706C 
 21979      65784469 
 21979      76496E74 
 21980              	.LASF138:
 21981 0376 496E7075 		.ascii	"InputEnSet\000"
 21981      74456E53 
 21981      657400
 21982              	.LASF187:
 21983 0381 4C505254 		.ascii	"LPRTIACal_Type\000"
 21983      49414361 
 21983      6C5F5479 
 21983      706500
 21984              	.LASF117:
 21985 0390 4F666673 		.ascii	"OffsetCalEn\000"
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 466


 21985      65744361 
 21985      6C456E00 
 21986              	.LASF6:
 21987 039c 5F5F7569 		.ascii	"__uint8_t\000"
 21987      6E74385F 
 21987      7400
 21988              	.LASF232:
 21989 03a6 53455147 		.ascii	"SEQGenRegInfo_Type\000"
 21989      656E5265 
 21989      67496E66 
 21989      6F5F5479 
 21989      706500
 21990              	.LASF126:
 21991 03b9 48534C6F 		.ascii	"HSLoopCfg_Type\000"
 21991      6F704366 
 21991      675F5479 
 21991      706500
 21992              	.LASF189:
 21993 03c8 48534441 		.ascii	"HSDACCal_Type\000"
 21993      4343616C 
 21993      5F547970 
 21993      6500
 21994              	.LASF60:
 21995 03d6 41444344 		.ascii	"ADCDigComp_Type\000"
 21995      6967436F 
 21995      6D705F54 
 21995      79706500 
 21996              	.LASF239:
 21997 03e6 436D6457 		.ascii	"CmdWord\000"
 21997      6F726400 
 21998              	.LASF486:
 21999 03ee 6164635F 		.ascii	"adc_filter\000"
 21999      66696C74 
 21999      657200
 22000              	.LASF249:
 22001 03f9 41443539 		.ascii	"AD5940_SEQWriteReg\000"
 22001      34305F53 
 22001      45515772 
 22001      69746552 
 22001      656700
 22002              	.LASF505:
 22003 040c 6473705F 		.ascii	"dsp_cfg\000"
 22003      63666700 
 22004              	.LASF139:
 22005 0414 50756C6C 		.ascii	"PullEnSet\000"
 22005      456E5365 
 22005      7400
 22006              	.LASF501:
 22007 041e 41443539 		.ascii	"AD5940_HSRtiaCal\000"
 22007      34305F48 
 22007      53527469 
 22007      6143616C 
 22007      00
 22008              	.LASF488:
 22009 042f 6761696E 		.ascii	"gain\000"
 22009      00
 22010              	.LASF258:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 467


 22011 0434 41443539 		.ascii	"AD5940_SEQGenFetchSeq\000"
 22011      34305F53 
 22011      45514765 
 22011      6E466574 
 22011      63685365 
 22012              	.LASF480:
 22013 044a 62414443 		.ascii	"bADCClk32MHzMode\000"
 22013      436C6B33 
 22013      324D487A 
 22013      4D6F6465 
 22013      00
 22014              	.LASF234:
 22015 045b 42756666 		.ascii	"BufferSize\000"
 22015      65725369 
 22015      7A6500
 22016              	.LASF341:
 22017 0466 41443539 		.ascii	"AD5940_WGCfgS\000"
 22017      34305F57 
 22017      47436667 
 22017      5300
 22018              	.LASF44:
 22019 0474 41444353 		.ascii	"ADCSinc3Osr\000"
 22019      696E6333 
 22019      4F737200 
 22020              	.LASF179:
 22021 0480 434C4B43 		.ascii	"CLKCfg_Type\000"
 22021      66675F54 
 22021      79706500 
 22022              	.LASF113:
 22023 048c 53696E50 		.ascii	"SinPhaseWord\000"
 22023      68617365 
 22023      576F7264 
 22023      00
 22024              	.LASF96:
 22025 0499 4C705469 		.ascii	"LpTiaRload\000"
 22025      61526C6F 
 22025      616400
 22026              	.LASF10:
 22027 04a4 6C6F6E67 		.ascii	"long int\000"
 22027      20696E74 
 22027      00
 22028              	.LASF313:
 22029 04ad 52656754 		.ascii	"RegTable\000"
 22029      61626C65 
 22029      00
 22030              	.LASF193:
 22031 04b6 4C504441 		.ascii	"LPDACCal_Type\000"
 22031      4343616C 
 22031      5F547970 
 22031      6500
 22032              	.LASF231:
 22033 04c4 52656756 		.ascii	"RegValue\000"
 22033      616C7565 
 22033      00
 22034              	.LASF490:
 22035 04cd 69646561 		.ascii	"ideal_pga_gain\000"
 22035      6C5F7067 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 468


 22035      615F6761 
 22035      696E00
 22036              	.LASF312:
 22037 04dc 7265675F 		.ascii	"reg_data\000"
 22037      64617461 
 22037      00
 22038              	.LASF164:
 22039 04e5 53657147 		.ascii	"SeqGpioTrig_Cfg\000"
 22039      70696F54 
 22039      7269675F 
 22039      43666700 
 22040              	.LASF441:
 22041 04f5 41443539 		.ascii	"AD5940_AGPIOCfg\000"
 22041      34305F41 
 22041      4750494F 
 22041      43666700 
 22042              	.LASF176:
 22043 0505 48664F53 		.ascii	"HfOSC32MHzMode\000"
 22043      4333324D 
 22043      487A4D6F 
 22043      646500
 22044              	.LASF352:
 22045 0514 41443539 		.ascii	"AD5940_LPDACCfgS\000"
 22045      34305F4C 
 22045      50444143 
 22045      43666753 
 22045      00
 22046              	.LASF24:
 22047 0525 62545255 		.ascii	"bTRUE\000"
 22047      4500
 22048              	.LASF338:
 22049 052b 70487354 		.ascii	"pHsTiaCfg\000"
 22049      69614366 
 22049      6700
 22050              	.LASF142:
 22051 0535 4649464F 		.ascii	"FIFOEn\000"
 22051      456E00
 22052              	.LASF296:
 22053 053c 41443539 		.ascii	"AD5940_ComplexPhase\000"
 22053      34305F43 
 22053      6F6D706C 
 22053      65785068 
 22053      61736500 
 22054              	.LASF246:
 22055 0550 41443539 		.ascii	"AD5940_SEQReadReg\000"
 22055      34305F53 
 22055      45515265 
 22055      61645265 
 22055      6700
 22056              	.LASF288:
 22057 0562 66566F6C 		.ascii	"fVolt\000"
 22057      7400
 22058              	.LASF175:
 22059 0568 48464F53 		.ascii	"HFOSCEn\000"
 22059      43456E00 
 22060              	.LASF495:
 22061 0570 6572726F 		.ascii	"error\000"
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 469


 22061      7200
 22062              	.LASF444:
 22063 0576 75694366 		.ascii	"uiCfgSet\000"
 22063      67536574 
 22063      00
 22064              	.LASF324:
 22065 057f 41443539 		.ascii	"AD5940_REFCfgS\000"
 22065      34305F52 
 22065      45464366 
 22065      675300
 22066              	.LASF107:
 22067 058e 57475472 		.ascii	"WGTrapzSlope1\000"
 22067      61707A53 
 22067      6C6F7065 
 22067      3100
 22068              	.LASF108:
 22069 059c 57475472 		.ascii	"WGTrapzSlope2\000"
 22069      61707A53 
 22069      6C6F7065 
 22069      3200
 22070              	.LASF65:
 22071 05aa 44737769 		.ascii	"Dswitch\000"
 22071      74636800 
 22072              	.LASF84:
 22073 05b2 4C704461 		.ascii	"LpDacSrc\000"
 22073      63537263 
 22073      00
 22074              	.LASF527:
 22075 05bb 41443539 		.ascii	"AD5940_HSDACCal\000"
 22075      34305F48 
 22075      53444143 
 22075      43616C00 
 22076              	.LASF387:
 22077 05cb 4669666F 		.ascii	"FifoEn\000"
 22077      456E00
 22078              	.LASF158:
 22079 05d2 57726974 		.ascii	"WriteSRAM\000"
 22079      65535241 
 22079      4D00
 22080              	.LASF31:
 22081 05dc 4C704261 		.ascii	"LpBandgapEn\000"
 22081      6E646761 
 22081      70456E00 
 22082              	.LASF252:
 22083 05e8 70427566 		.ascii	"pBuffer\000"
 22083      66657200 
 22084              	.LASF310:
 22085 05f0 41443539 		.ascii	"AD5940_Initialize\000"
 22085      34305F49 
 22085      6E697469 
 22085      616C697A 
 22085      6500
 22086              	.LASF3:
 22087 0602 7369676E 		.ascii	"signed char\000"
 22087      65642063 
 22087      68617200 
 22088              	.LASF18:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 470


 22089 060e 75696E74 		.ascii	"uint8_t\000"
 22089      385F7400 
 22090              	.LASF98:
 22091 0616 4C70416D 		.ascii	"LpAmpPwrMod\000"
 22091      70507772 
 22091      4D6F6400 
 22092              	.LASF348:
 22093 0622 41443539 		.ascii	"AD5940_WGFreqWordCal\000"
 22093      34305F57 
 22093      47467265 
 22093      71576F72 
 22093      6443616C 
 22094              	.LASF39:
 22095 0637 41464552 		.ascii	"AFERefCfg_Type\000"
 22095      65664366 
 22095      675F5479 
 22095      706500
 22096              	.LASF509:
 22097 0646 48705274 		.ascii	"HpRtiaTable\000"
 22097      69615461 
 22097      626C6500 
 22098              	.LASF62:
 22099 0652 53746174 		.ascii	"StatSample\000"
 22099      53616D70 
 22099      6C6500
 22100              	.LASF242:
 22101 065d 41443539 		.ascii	"AD5940_SEQGenSearchReg\000"
 22101      34305F53 
 22101      45514765 
 22101      6E536561 
 22101      72636852 
 22102              	.LASF516:
 22103 0674 7265675F 		.ascii	"reg_afecon\000"
 22103      61666563 
 22103      6F6E00
 22104              	.LASF329:
 22105 067f 7053774D 		.ascii	"pSwMatrix\000"
 22105      61747269 
 22105      7800
 22106              	.LASF514:
 22107 0689 70414443 		.ascii	"pADCBaseCfg\000"
 22107      42617365 
 22107      43666700 
 22108              	.LASF545:
 22109 0695 57757074 		.ascii	"WuptPeriod\000"
 22109      50657269 
 22109      6F6400
 22110              	.LASF4:
 22111 06a0 756E7369 		.ascii	"unsigned char\000"
 22111      676E6564 
 22111      20636861 
 22111      7200
 22112              	.LASF58:
 22113 06ae 4144434D 		.ascii	"ADCMax\000"
 22113      617800
 22114              	.LASF103:
 22115 06b5 57475472 		.ascii	"WGTrapzDCLevel1\000"
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 471


 22115      61707A44 
 22115      434C6576 
 22115      656C3100 
 22116              	.LASF104:
 22117 06c5 57475472 		.ascii	"WGTrapzDCLevel2\000"
 22117      61707A44 
 22117      434C6576 
 22117      656C3200 
 22118              	.LASF469:
 22119 06d5 41443539 		.ascii	"AD5940_SoftRst\000"
 22119      34305F53 
 22119      6F667452 
 22119      737400
 22120              	.LASF235:
 22121 06e4 70536571 		.ascii	"pSeqBuff\000"
 22121      42756666 
 22121      00
 22122              	.LASF221:
 22123 06ed 53776565 		.ascii	"SweepIndex\000"
 22123      70496E64 
 22123      657800
 22124              	.LASF417:
 22125 06f8 70577570 		.ascii	"pWuptCfg\000"
 22125      74436667 
 22125      00
 22126              	.LASF207:
 22127 0701 56526566 		.ascii	"VRef1p82\000"
 22127      31703832 
 22127      00
 22128              	.LASF475:
 22129 070a 41444343 		.ascii	"ADCCode\000"
 22129      6F646500 
 22130              	.LASF215:
 22131 0712 436C6B73 		.ascii	"ClksCalInfo_Type\000"
 22131      43616C49 
 22131      6E666F5F 
 22131      54797065 
 22131      00
 22132              	.LASF311:
 22133 0723 7265675F 		.ascii	"reg_addr\000"
 22133      61646472 
 22133      00
 22134              	.LASF254:
 22135 072c 70536571 		.ascii	"pSeqLen\000"
 22135      4C656E00 
 22136              	.LASF320:
 22137 0734 44697353 		.ascii	"DisSet\000"
 22137      657400
 22138              	.LASF553:
 22139 073b 5F63616C 		.ascii	"_cal_registers\000"
 22139      5F726567 
 22139      69737465 
 22139      727300
 22140              	.LASF504:
 22141 074a 68735F6C 		.ascii	"hs_loop\000"
 22141      6F6F7000 
 22142              	.LASF79:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 472


 22143 0752 45786369 		.ascii	"ExcitBufGain\000"
 22143      74427566 
 22143      4761696E 
 22143      00
 22144              	.LASF440:
 22145 075f 41443539 		.ascii	"AD5940_INTCGetFlag\000"
 22145      34305F49 
 22145      4E544347 
 22145      6574466C 
 22145      616700
 22146              	.LASF263:
 22147 0772 7461626C 		.ascii	"table\000"
 22147      6500
 22148              	.LASF49:
 22149 0778 42705369 		.ascii	"BpSinc3\000"
 22149      6E633300 
 22150              	.LASF285:
 22151 0780 41443539 		.ascii	"AD5940_ADCCode2Volt\000"
 22151      34305F41 
 22151      4443436F 
 22151      64653256 
 22151      6F6C7400 
 22152              	.LASF484:
 22153 0794 6F666673 		.ascii	"offset_reg\000"
 22153      65745F72 
 22153      656700
 22154              	.LASF15:
 22155 079f 63686172 		.ascii	"char\000"
 22155      00
 22156              	.LASF349:
 22157 07a4 5F5F4249 		.ascii	"__BITWIDTH_WGFCW\000"
 22157      54574944 
 22157      54485F57 
 22157      47464357 
 22157      00
 22158              	.LASF211:
 22159 07b5 4C505449 		.ascii	"LPTIAOffsetCal_Type\000"
 22159      414F6666 
 22159      73657443 
 22159      616C5F54 
 22159      79706500 
 22160              	.LASF411:
 22161 07c9 7265675F 		.ascii	"reg_ei1con\000"
 22161      65693163 
 22161      6F6E00
 22162              	.LASF50:
 22163 07d4 53696E63 		.ascii	"Sinc2NotchEnable\000"
 22163      324E6F74 
 22163      6368456E 
 22163      61626C65 
 22163      00
 22164              	.LASF307:
 22165 07e5 75695265 		.ascii	"uiReadCount\000"
 22165      6164436F 
 22165      756E7400 
 22166              	.LASF205:
 22167 07f1 53797374 		.ascii	"SystemClkFreq\000"
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 473


 22167      656D436C 
 22167      6B467265 
 22167      7100
 22168              	.LASF37:
 22169 07ff 44697363 		.ascii	"Disc1V8Cap\000"
 22169      31563843 
 22169      617000
 22170              	.LASF91:
 22171 080a 44616344 		.ascii	"DacData12Bit\000"
 22171      61746131 
 22171      32426974 
 22171      00
 22172              	.LASF304:
 22173 0817 41443539 		.ascii	"AD5940_SPIReadReg\000"
 22173      34305F53 
 22173      50495265 
 22173      61645265 
 22173      6700
 22174              	.LASF7:
 22175 0829 5F5F7569 		.ascii	"__uint16_t\000"
 22175      6E743136 
 22175      5F7400
 22176              	.LASF345:
 22177 0834 53696E46 		.ascii	"SinFreqHz\000"
 22177      72657148 
 22177      7A00
 22178              	.LASF112:
 22179 083e 53696E4F 		.ascii	"SinOffsetWord\000"
 22179      66667365 
 22179      74576F72 
 22179      6400
 22180              	.LASF29:
 22181 084c 4C703156 		.ascii	"Lp1V8BuffEn\000"
 22181      38427566 
 22181      66456E00 
 22182              	.LASF143:
 22183 0858 4649464F 		.ascii	"FIFOMode\000"
 22183      4D6F6465 
 22183      00
 22184              	.LASF157:
 22185 0861 5365714C 		.ascii	"SeqLen\000"
 22185      656E00
 22186              	.LASF485:
 22187 0868 63616C5F 		.ascii	"cal_registers\000"
 22187      72656769 
 22187      73746572 
 22187      7300
 22188              	.LASF48:
 22189 0876 42704E6F 		.ascii	"BpNotch\000"
 22189      74636800 
 22190              	.LASF497:
 22191 087e 41444350 		.ascii	"ADCPGACALERROR_TIMEOUT\000"
 22191      47414341 
 22191      4C455252 
 22191      4F525F54 
 22191      494D454F 
 22192              	.LASF439:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 474


 22193 0895 41443539 		.ascii	"AD5940_INTCTestFlag\000"
 22193      34305F49 
 22193      4E544354 
 22193      65737446 
 22193      6C616700 
 22194              	.LASF122:
 22195 08a9 53574D61 		.ascii	"SWMatCfg\000"
 22195      74436667 
 22195      00
 22196              	.LASF482:
 22197 08b2 72656761 		.ascii	"regaddr_offset\000"
 22197      6464725F 
 22197      6F666673 
 22197      657400
 22198              	.LASF436:
 22199 08c1 41443539 		.ascii	"AD5940_INTCGetCfg\000"
 22199      34305F49 
 22199      4E544347 
 22199      65744366 
 22199      6700
 22200              	.LASF68:
 22201 08d3 54737769 		.ascii	"Tswitch\000"
 22201      74636800 
 22202              	.LASF88:
 22203 08db 4C704461 		.ascii	"LpDacRef\000"
 22203      63526566 
 22203      00
 22204              	.LASF276:
 22205 08e4 646C5F35 		.ascii	"dl_50\000"
 22205      3000
 22206              	.LASF129:
 22207 08ea 4C504C6F 		.ascii	"LPLoopCfg_Type\000"
 22207      6F704366 
 22207      675F5479 
 22207      706500
 22208              	.LASF542:
 22209 08f9 7365715F 		.ascii	"seq_cfg_backup\000"
 22209      6366675F 
 22209      6261636B 
 22209      757000
 22210              	.LASF127:
 22211 0908 4C704461 		.ascii	"LpDacCfg\000"
 22211      63436667 
 22211      00
 22212              	.LASF428:
 22213 0911 5264434C 		.ascii	"RdCLKEN1\000"
 22213      4B454E31 
 22213      00
 22214              	.LASF22:
 22215 091a 41443539 		.ascii	"AD5940Err\000"
 22215      34304572 
 22215      7200
 22216              	.LASF314:
 22217 0924 41443539 		.ascii	"AD5940_AFECtrlS\000"
 22217      34305F41 
 22217      46454374 
 22217      726C5300 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 475


 22218              	.LASF228:
 22219 0934 66496D70 		.ascii	"fImpCar_Type\000"
 22219      4361725F 
 22219      54797065 
 22219      00
 22220              	.LASF361:
 22221 0941 41443539 		.ascii	"AD5940_DSPCfgS\000"
 22221      34305F44 
 22221      53504366 
 22221      675300
 22222              	.LASF437:
 22223 0950 41443539 		.ascii	"AD5940_INTCClrFlag\000"
 22223      34305F49 
 22223      4E544343 
 22223      6C72466C 
 22223      616700
 22224              	.LASF146:
 22225 0963 4649464F 		.ascii	"FIFOThresh\000"
 22225      54687265 
 22225      736800
 22226              	.LASF77:
 22227 096e 48737469 		.ascii	"HstiaDe1Rload\000"
 22227      61446531 
 22227      526C6F61 
 22227      6400
 22228              	.LASF294:
 22229 097c 41443539 		.ascii	"AD5940_ComplexMulInt\000"
 22229      34305F43 
 22229      6F6D706C 
 22229      65784D75 
 22229      6C496E74 
 22230              	.LASF418:
 22231 0991 41443539 		.ascii	"AD5940_WUPTCtrl\000"
 22231      34305F57 
 22231      55505443 
 22231      74726C00 
 22232              	.LASF43:
 22233 09a1 41444342 		.ascii	"ADCBaseCfg_Type\000"
 22233      61736543 
 22233      66675F54 
 22233      79706500 
 22234              	.LASF376:
 22235 09b1 41443539 		.ascii	"AD5940_ADCRepeatCfgS\000"
 22235      34305F41 
 22235      44435265 
 22235      70656174 
 22235      43666753 
 22236              	.LASF273:
 22237 09c6 73696E63 		.ascii	"sinc2osr_table\000"
 22237      326F7372 
 22237      5F746162 
 22237      6C6500
 22238              	.LASF447:
 22239 09d5 41443539 		.ascii	"AD5940_AGPIOIen\000"
 22239      34305F41 
 22239      4750494F 
 22239      49656E00 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 476


 22240              	.LASF389:
 22241 09e5 41443539 		.ascii	"AD5940_SEQCfg\000"
 22241      34305F53 
 22241      45514366 
 22241      6700
 22242              	.LASF268:
 22243 09f3 646C5F35 		.ascii	"dl_50Hz\000"
 22243      30487A00 
 22244              	.LASF308:
 22245 09fb 41443539 		.ascii	"AD5940_WriteReg\000"
 22245      34305F57 
 22245      72697465 
 22245      52656700 
 22246              	.LASF325:
 22247 0a0b 70427566 		.ascii	"pBufCfg\000"
 22247      43666700 
 22248              	.LASF97:
 22249 0a13 4C705469 		.ascii	"LpTiaRtia\000"
 22249      61527469 
 22249      6100
 22250              	.LASF223:
 22251 0a1d 4D61676E 		.ascii	"Magnitude\000"
 22251      69747564 
 22251      6500
 22252              	.LASF343:
 22253 0a27 41443539 		.ascii	"AD5940_WGDACCodeS\000"
 22253      34305F57 
 22253      47444143 
 22253      436F6465 
 22253      5300
 22254              	.LASF269:
 22255 0a39 41443539 		.ascii	"AD5940_Notch60HzAvailable\000"
 22255      34305F4E 
 22255      6F746368 
 22255      3630487A 
 22255      41766169 
 22256              	.LASF154:
 22257 0a53 53455143 		.ascii	"SEQCfg_Type\000"
 22257      66675F54 
 22257      79706500 
 22258              	.LASF124:
 22259 0a5f 57674366 		.ascii	"WgCfg\000"
 22259      6700
 22260              	.LASF521:
 22261 0a65 41444350 		.ascii	"ADCPgaGainRcal\000"
 22261      67614761 
 22261      696E5263 
 22261      616C00
 22262              	.LASF137:
 22263 0a74 4F757470 		.ascii	"OutputEnSet\000"
 22263      7574456E 
 22263      53657400 
 22264              	.LASF110:
 22265 0a80 53696E46 		.ascii	"SinFreqWord\000"
 22265      72657157 
 22265      6F726400 
 22266              	.LASF450:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 477


 22267 0a8c 41443539 		.ascii	"AD5940_AGPIOSet\000"
 22267      34305F41 
 22267      4750494F 
 22267      53657400 
 22268              	.LASF451:
 22269 0a9c 41443539 		.ascii	"AD5940_AGPIOClr\000"
 22269      34305F41 
 22269      4750494F 
 22269      436C7200 
 22270              	.LASF111:
 22271 0aac 53696E41 		.ascii	"SinAmplitudeWord\000"
 22271      6D706C69 
 22271      74756465 
 22271      576F7264 
 22271      00
 22272              	.LASF434:
 22273 0abd 41464549 		.ascii	"AFEIntSrc\000"
 22273      6E745372 
 22273      6300
 22274              	.LASF403:
 22275 0ac7 70536571 		.ascii	"pSeqInfo\000"
 22275      496E666F 
 22275      00
 22276              	.LASF74:
 22277 0ad0 48737469 		.ascii	"HstiaDeRtia\000"
 22277      61446552 
 22277      74696100 
 22278              	.LASF172:
 22279 0adc 41444343 		.ascii	"ADCCLkSrc\000"
 22279      4C6B5372 
 22279      6300
 22280              	.LASF170:
 22281 0ae6 57555054 		.ascii	"WUPTCfg_Type\000"
 22281      4366675F 
 22281      54797065 
 22281      00
 22282              	.LASF181:
 22283 0af3 66526361 		.ascii	"fRcal\000"
 22283      6C00
 22284              	.LASF32:
 22285 0af9 4C705265 		.ascii	"LpRefBufEn\000"
 22285      66427566 
 22285      456E00
 22286              	.LASF425:
 22287 0b04 7265675F 		.ascii	"reg_osccon\000"
 22287      6F736363 
 22287      6F6E00
 22288              	.LASF534:
 22289 0b0f 41444343 		.ascii	"ADCCodeVref1p1\000"
 22289      6F646556 
 22289      72656631 
 22289      703100
 22290              	.LASF119:
 22291 0b1e 53696E43 		.ascii	"SinCfg\000"
 22291      666700
 22292              	.LASF230:
 22293 0b25 52656741 		.ascii	"RegAddr\000"
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 478


 22293      64647200 
 22294              	.LASF406:
 22295 0b2d 41443539 		.ascii	"AD5940_FIFOGetCnt\000"
 22295      34305F46 
 22295      49464F47 
 22295      6574436E 
 22295      7400
 22296              	.LASF28:
 22297 0b3f 48703156 		.ascii	"Hp1V1BuffEn\000"
 22297      31427566 
 22297      66456E00 
 22298              	.LASF407:
 22299 0b4b 41443539 		.ascii	"AD5940_SEQTimeOutRd\000"
 22299      34305F53 
 22299      45515469 
 22299      6D654F75 
 22299      74526400 
 22300              	.LASF476:
 22301 0b5f 41443539 		.ascii	"AD5940_ADCPGACal\000"
 22301      34305F41 
 22301      44435047 
 22301      4143616C 
 22301      00
 22302              	.LASF363:
 22303 0b70 41443539 		.ascii	"AD5940_ReadAfeResult\000"
 22303      34305F52 
 22303      65616441 
 22303      66655265 
 22303      73756C74 
 22304              	.LASF46:
 22305 0b85 41444341 		.ascii	"ADCAvgNum\000"
 22305      76674E75 
 22305      6D00
 22306              	.LASF134:
 22307 0b8f 53746174 		.ascii	"StatCfg\000"
 22307      43666700 
 22308              	.LASF317:
 22309 0b97 74656D70 		.ascii	"tempreg\000"
 22309      72656700 
 22310              	.LASF204:
 22311 0b9f 43616C44 		.ascii	"CalDuration\000"
 22311      75726174 
 22311      696F6E00 
 22312              	.LASF71:
 22313 0bab 48737469 		.ascii	"HstiaRtiaSel\000"
 22313      61527469 
 22313      6153656C 
 22313      00
 22314              	.LASF264:
 22315 0bb8 696E6465 		.ascii	"index\000"
 22315      7800
 22316              	.LASF76:
 22317 0bbe 48737469 		.ascii	"HstiaDe1Rtia\000"
 22317      61446531 
 22317      52746961 
 22317      00
 22318              	.LASF532:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 479


 22319 0bcb 44414343 		.ascii	"DACCALERROR_TIMEOUT\000"
 22319      414C4552 
 22319      524F525F 
 22319      54494D45 
 22319      4F555400 
 22320              	.LASF408:
 22321 0bdf 41443539 		.ascii	"AD5940_SEQGpioTrigCfg\000"
 22321      34305F53 
 22321      45514770 
 22321      696F5472 
 22321      69674366 
 22322              	.LASF291:
 22323 0bf5 41443539 		.ascii	"AD5940_ComplexAddFloat\000"
 22323      34305F43 
 22323      6F6D706C 
 22323      65784164 
 22323      64466C6F 
 22324              	.LASF238:
 22325 0c0c 4C617374 		.ascii	"LastError\000"
 22325      4572726F 
 22325      7200
 22326              	.LASF194:
 22327 0c16 6B433256 		.ascii	"kC2V_DAC12B\000"
 22327      5F444143 
 22327      31324200 
 22328              	.LASF161:
 22329 0c22 50696E53 		.ascii	"PinSel\000"
 22329      656C00
 22330              	.LASF452:
 22331 0c29 41443539 		.ascii	"AD5940_AGPIOToggle\000"
 22331      34305F41 
 22331      4750494F 
 22331      546F6767 
 22331      6C6500
 22332              	.LASF346:
 22333 0c3c 5747436C 		.ascii	"WGClock\000"
 22333      6F636B00 
 22334              	.LASF244:
 22335 0c44 70526567 		.ascii	"pRegData\000"
 22335      44617461 
 22335      00
 22336              	.LASF378:
 22337 0c4d 41443539 		.ascii	"AD5940_DFTCfgS\000"
 22337      34305F44 
 22337      46544366 
 22337      675300
 22338              	.LASF190:
 22339 0c5c 41444352 		.ascii	"ADCRefVolt\000"
 22339      6566566F 
 22339      6C7400
 22340              	.LASF383:
 22341 0c67 70466966 		.ascii	"pFifoCfg\000"
 22341      6F436667 
 22341      00
 22342              	.LASF498:
 22343 0c70 4C505449 		.ascii	"LPTIAOFFSETCALERROR\000"
 22343      414F4646 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 480


 22343      53455443 
 22343      414C4552 
 22343      524F5200 
 22344              	.LASF47:
 22345 0c84 41444352 		.ascii	"ADCRate\000"
 22345      61746500 
 22346              	.LASF12:
 22347 0c8c 6C6F6E67 		.ascii	"long unsigned int\000"
 22347      20756E73 
 22347      69676E65 
 22347      6420696E 
 22347      7400
 22348              	.LASF356:
 22349 0c9e 44617461 		.ascii	"Data6Bit\000"
 22349      36426974 
 22349      00
 22350              	.LASF479:
 22351 0ca7 494E5443 		.ascii	"INTCCfg\000"
 22351      43666700 
 22352              	.LASF148:
 22353 0caf 5365714D 		.ascii	"SeqMemSize\000"
 22353      656D5369 
 22353      7A6500
 22354              	.LASF233:
 22355 0cba 456E6769 		.ascii	"EngineStart\000"
 22355      6E655374 
 22355      61727400 
 22356              	.LASF203:
 22357 0cc6 43616C53 		.ascii	"CalSeqAddr\000"
 22357      65714164 
 22357      647200
 22358              	.LASF171:
 22359 0cd1 53797343 		.ascii	"SysClkSrc\000"
 22359      6C6B5372 
 22359      6300
 22360              	.LASF290:
 22361 0cdb 41443539 		.ascii	"AD5940_ComplexMulFloat\000"
 22361      34305F43 
 22361      6F6D706C 
 22361      65784D75 
 22361      6C466C6F 
 22362              	.LASF375:
 22363 0cf2 70537461 		.ascii	"pStatCfg\000"
 22363      74436667 
 22363      00
 22364              	.LASF453:
 22365 0cfb 41443539 		.ascii	"AD5940_LPModeEnS\000"
 22365      34305F4C 
 22365      504D6F64 
 22365      65456E53 
 22365      00
 22366              	.LASF140:
 22367 0d0c 4F757456 		.ascii	"OutVal\000"
 22367      616C00
 22368              	.LASF167:
 22369 0d13 53657178 		.ascii	"SeqxSleepTime\000"
 22369      536C6565 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 481


 22369      7054696D 
 22369      6500
 22370              	.LASF292:
 22371 0d21 41443539 		.ascii	"AD5940_ComplexSubFloat\000"
 22371      34305F43 
 22371      6F6D706C 
 22371      65785375 
 22371      62466C6F 
 22372              	.LASF433:
 22373 0d38 41666549 		.ascii	"AfeIntcSel\000"
 22373      6E746353 
 22373      656C00
 22374              	.LASF218:
 22375 0d43 53776565 		.ascii	"SweepStop\000"
 22375      7053746F 
 22375      7000
 22376              	.LASF321:
 22377 0d4d 41443539 		.ascii	"AD5940_AFEPwrBW\000"
 22377      34305F41 
 22377      46455077 
 22377      72425700 
 22378              	.LASF335:
 22379 0d5d 4465526C 		.ascii	"DeRload\000"
 22379      6F616400 
 22380              	.LASF295:
 22381 0d65 41443539 		.ascii	"AD5940_ComplexMag\000"
 22381      34305F43 
 22381      6F6D706C 
 22381      65784D61 
 22381      6700
 22382              	.LASF182:
 22383 0d77 53797343 		.ascii	"SysClkFreq\000"
 22383      6C6B4672 
 22383      657100
 22384              	.LASF442:
 22385 0d82 70416770 		.ascii	"pAgpioCfg\000"
 22385      696F4366 
 22385      6700
 22386              	.LASF518:
 22387 0d8c 4C705274 		.ascii	"LpRtiaTable\000"
 22387      69615461 
 22387      626C6500 
 22388              	.LASF83:
 22389 0d98 4C706461 		.ascii	"LpdacSel\000"
 22389      6353656C 
 22389      00
 22390              	.LASF371:
 22391 0da1 41443539 		.ascii	"AD5940_ADCMuxCfgS\000"
 22391      34305F41 
 22391      44434D75 
 22391      78436667 
 22391      5300
 22392              	.LASF395:
 22393 0db3 41443539 		.ascii	"AD5940_SEQMmrTrig\000"
 22393      34305F53 
 22393      45514D6D 
 22393      72547269 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 482


 22393      6700
 22394              	.LASF322:
 22395 0dc5 41666550 		.ascii	"AfePwr\000"
 22395      777200
 22396              	.LASF102:
 22397 0dcc 4C50416D 		.ascii	"LPAmpCfg_Type\000"
 22397      70436667 
 22397      5F547970 
 22397      6500
 22398              	.LASF278:
 22399 0dda 41443539 		.ascii	"AD5940_SweepNext\000"
 22399      34305F53 
 22399      77656570 
 22399      4E657874 
 22399      00
 22400              	.LASF75:
 22401 0deb 48737469 		.ascii	"HstiaDeRload\000"
 22401      61446552 
 22401      6C6F6164 
 22401      00
 22402              	.LASF109:
 22403 0df8 57475472 		.ascii	"WGTrapzCfg_Type\000"
 22403      61707A43 
 22403      66675F54 
 22403      79706500 
 22404              	.LASF342:
 22405 0e08 70574749 		.ascii	"pWGInit\000"
 22405      6E697400 
 22406              	.LASF180:
 22407 0e10 66467265 		.ascii	"fFreq\000"
 22407      7100
 22408              	.LASF483:
 22409 0e16 6761696E 		.ascii	"gain_reg\000"
 22409      5F726567 
 22409      00
 22410              	.LASF468:
 22411 0e1f 41443539 		.ascii	"AD5940_GetChipID\000"
 22411      34305F47 
 22411      65744368 
 22411      69704944 
 22411      00
 22412              	.LASF432:
 22413 0e30 41443539 		.ascii	"AD5940_INTCCfg\000"
 22413      34305F49 
 22413      4E544343 
 22413      666700
 22414              	.LASF517:
 22415 0e3f 6244434D 		.ascii	"bDCMode\000"
 22415      6F646500 
 22416              	.LASF550:
 22417 0e47 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 22417      43313120 
 22417      352E342E 
 22417      31203230 
 22417      31363036 
 22418 0e7a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 22418      20726576 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 483


 22418      6973696F 
 22418      6E203233 
 22418      37373135 
 22419 0ead 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 22419      66756E63 
 22419      74696F6E 
 22419      2D736563 
 22419      74696F6E 
 22420              	.LASF351:
 22421 0ed5 704C704C 		.ascii	"pLpLoopCfg\000"
 22421      6F6F7043 
 22421      666700
 22422              	.LASF326:
 22423 0ee0 41443539 		.ascii	"AD5940_HSLoopCfgS\000"
 22423      34305F48 
 22423      534C6F6F 
 22423      70436667 
 22423      5300
 22424              	.LASF420:
 22425 0ef2 41443539 		.ascii	"AD5940_WUPTTime\000"
 22425      34305F57 
 22425      55505454 
 22425      696D6500 
 22426              	.LASF56:
 22427 0f02 4144434D 		.ascii	"ADCMin\000"
 22427      696E00
 22428              	.LASF33:
 22429 0f09 4C705265 		.ascii	"LpRefBoostEn\000"
 22429      66426F6F 
 22429      7374456E 
 22429      00
 22430              	.LASF330:
 22431 0f16 41443539 		.ascii	"AD5940_HSDacCfgS\000"
 22431      34305F48 
 22431      53446163 
 22431      43666753 
 22431      00
 22432              	.LASF11:
 22433 0f27 5F5F7569 		.ascii	"__uint32_t\000"
 22433      6E743332 
 22433      5F7400
 22434              	.LASF163:
 22435 0f32 62456E61 		.ascii	"bEnable\000"
 22435      626C6500 
 22436              	.LASF366:
 22437 0f3a 70414443 		.ascii	"pADCInit\000"
 22437      496E6974 
 22437      00
 22438              	.LASF1:
 22439 0f43 6C6F6E67 		.ascii	"long long int\000"
 22439      206C6F6E 
 22439      6720696E 
 22439      7400
 22440              	.LASF520:
 22441 0f51 41444350 		.ascii	"ADCPgaGainRtia\000"
 22441      67614761 
 22441      696E5274 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 484


 22441      696100
 22442              	.LASF344:
 22443 0f60 41443539 		.ascii	"AD5940_WGFreqCtrlS\000"
 22443      34305F57 
 22443      47467265 
 22443      71437472 
 22443      6C5300
 22444              	.LASF327:
 22445 0f73 7048734C 		.ascii	"pHsLoopCfg\000"
 22445      6F6F7043 
 22445      666700
 22446              	.LASF494:
 22447 0f7e 704C5054 		.ascii	"pLPTIAOffsetCal\000"
 22447      49414F66 
 22447      66736574 
 22447      43616C00 
 22448              	.LASF399:
 22449 0f8e 436D6443 		.ascii	"CmdCnt\000"
 22449      6E7400
 22450              	.LASF523:
 22451 0f95 52746961 		.ascii	"RtiaVolt\000"
 22451      566F6C74 
 22451      00
 22452              	.LASF458:
 22453 0f9e 536C704B 		.ascii	"SlpKey\000"
 22453      657900
 22454              	.LASF219:
 22455 0fa5 53776565 		.ascii	"SweepPoints\000"
 22455      70506F69 
 22455      6E747300 
 22456              	.LASF271:
 22457 0fb1 41443539 		.ascii	"AD5940_ClksCalculate\000"
 22457      34305F43 
 22457      6C6B7343 
 22457      616C6375 
 22457      6C617465 
 22458              	.LASF16:
 22459 0fc6 646F7562 		.ascii	"double\000"
 22459      6C6500
 22460              	.LASF36:
 22461 0fcd 48703156 		.ascii	"Hp1V8Ilimit\000"
 22461      38496C69 
 22461      6D697400 
 22462              	.LASF145:
 22463 0fd9 4649464F 		.ascii	"FIFOSrc\000"
 22463      53726300 
 22464              	.LASF272:
 22465 0fe1 70436C6F 		.ascii	"pClocks\000"
 22465      636B7300 
 22466              	.LASF55:
 22467 0fe9 44465443 		.ascii	"DFTCfg_Type\000"
 22467      66675F54 
 22467      79706500 
 22468              	.LASF251:
 22469 0ff5 41443539 		.ascii	"AD5940_SEQGenInit\000"
 22469      34305F53 
 22469      45514765 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 485


 22469      6E496E69 
 22469      7400
 22470              	.LASF528:
 22471 1007 4C53425F 		.ascii	"LSB_Numerator\000"
 22471      4E756D65 
 22471      7261746F 
 22471      7200
 22472              	.LASF493:
 22473 1015 41443539 		.ascii	"AD5940_LPTIAOffsetCal\000"
 22473      34305F4C 
 22473      50544941 
 22473      4F666673 
 22473      65744361 
 22474              	.LASF537:
 22475 102b 70436667 		.ascii	"pCfg\000"
 22475      00
 22476              	.LASF105:
 22477 1030 57475472 		.ascii	"WGTrapzDelay1\000"
 22477      61707A44 
 22477      656C6179 
 22477      3100
 22478              	.LASF106:
 22479 103e 57475472 		.ascii	"WGTrapzDelay2\000"
 22479      61707A44 
 22479      656C6179 
 22479      3200
 22480              	.LASF217:
 22481 104c 53776565 		.ascii	"SweepStart\000"
 22481      70537461 
 22481      727400
 22482              	.LASF178:
 22483 1057 48465854 		.ascii	"HFXTALEn\000"
 22483      414C456E 
 22483      00
 22484              	.LASF281:
 22485 1060 66726571 		.ascii	"frequency\000"
 22485      75656E63 
 22485      7900
 22486              	.LASF464:
 22487 106a 41443539 		.ascii	"AD5940_WakeUp\000"
 22487      34305F57 
 22487      616B6555 
 22487      7000
 22488              	.LASF57:
 22489 1078 4144434D 		.ascii	"ADCMinHys\000"
 22489      696E4879 
 22489      7300
 22490              	.LASF319:
 22491 1082 456E5365 		.ascii	"EnSet\000"
 22491      7400
 22492              	.LASF17:
 22493 1088 666C6F61 		.ascii	"float\000"
 22493      7400
 22494              	.LASF183:
 22495 108e 41646343 		.ascii	"AdcClkFreq\000"
 22495      6C6B4672 
 22495      657100
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 486


 22496              	.LASF445:
 22497 1099 41443539 		.ascii	"AD5940_AGPIOOen\000"
 22497      34305F41 
 22497      4750494F 
 22497      4F656E00 
 22498              	.LASF466:
 22499 10a9 636F756E 		.ascii	"count\000"
 22499      7400
 22500              	.LASF121:
 22501 10af 57474366 		.ascii	"WGCfg_Type\000"
 22501      675F5479 
 22501      706500
 22502              	.LASF446:
 22503 10ba 75695069 		.ascii	"uiPinSet\000"
 22503      6E536574 
 22503      00
 22504              	.LASF115:
 22505 10c3 57675479 		.ascii	"WgType\000"
 22505      706500
 22506              	.LASF120:
 22507 10ca 5767436F 		.ascii	"WgCode\000"
 22507      646500
 22508              	.LASF0:
 22509 10d1 756E7369 		.ascii	"unsigned int\000"
 22509      676E6564 
 22509      20696E74 
 22509      00
 22510              	.LASF430:
 22511 10de 62697438 		.ascii	"bit8\000"
 22511      00
 22512              	.LASF61:
 22513 10e3 53746174 		.ascii	"StatDev\000"
 22513      44657600 
 22514              	.LASF385:
 22515 10eb 41443539 		.ascii	"AD5940_FIFOCtrlS\000"
 22515      34305F46 
 22515      49464F43 
 22515      74726C53 
 22515      00
 22516              	.LASF536:
 22517 10fc 41443539 		.ascii	"AD5940_LFOSCMeasure\000"
 22517      34305F4C 
 22517      464F5343 
 22517      4D656173 
 22517      75726500 
 22518              	.LASF419:
 22519 1110 456E6162 		.ascii	"Enable\000"
 22519      6C6500
 22520              	.LASF165:
 22521 1117 57757074 		.ascii	"WuptEndSeq\000"
 22521      456E6453 
 22521      657100
 22522              	.LASF277:
 22523 1122 646C5F36 		.ascii	"dl_60\000"
 22523      3000
 22524              	.LASF388:
 22525 1128 41443539 		.ascii	"AD5940_FIFOThrshSet\000"
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 487


 22525      34305F46 
 22525      49464F54 
 22525      68727368 
 22525      53657400 
 22526              	.LASF210:
 22527 113c 41444350 		.ascii	"ADCPGACal_Type\000"
 22527      47414361 
 22527      6C5F5479 
 22527      706500
 22528              	.LASF168:
 22529 114b 53657178 		.ascii	"SeqxWakeupTime\000"
 22529      57616B65 
 22529      75705469 
 22529      6D6500
 22530              	.LASF402:
 22531 115a 41443539 		.ascii	"AD5940_SEQInfoGet\000"
 22531      34305F53 
 22531      4551496E 
 22531      666F4765 
 22531      7400
 22532              	.LASF116:
 22533 116c 4761696E 		.ascii	"GainCalEn\000"
 22533      43616C45 
 22533      6E00
 22534              	.LASF191:
 22535 1176 53657474 		.ascii	"SettleTime10us\000"
 22535      6C655469 
 22535      6D653130 
 22535      757300
 22536              	.LASF533:
 22537 1185 41443539 		.ascii	"AD5940_LPDACCal\000"
 22537      34305F4C 
 22537      50444143 
 22537      43616C00 
 22538              	.LASF89:
 22539 1195 44617461 		.ascii	"DataRst\000"
 22539      52737400 
 22540              	.LASF184:
 22541 119d 62506F6C 		.ascii	"bPolarResult\000"
 22541      61725265 
 22541      73756C74 
 22541      00
 22542              	.LASF198:
 22543 11aa 6B563243 		.ascii	"kV2C_DAC12B\000"
 22543      5F444143 
 22543      31324200 
 22544              	.LASF132:
 22545 11b6 41444344 		.ascii	"ADCDigCompCfg\000"
 22545      6967436F 
 22545      6D704366 
 22545      6700
 22546              	.LASF422:
 22547 11c4 57616B65 		.ascii	"WakeupTime\000"
 22547      75705469 
 22547      6D6500
 22548              	.LASF250:
 22549 11cf 41443539 		.ascii	"AD5940_SEQGenInsert\000"
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 488


 22549      34305F53 
 22549      45514765 
 22549      6E496E73 
 22549      65727400 
 22550              	.LASF69:
 22551 11e3 53574D61 		.ascii	"SWMatrixCfg_Type\000"
 22551      74726978 
 22551      4366675F 
 22551      54797065 
 22551      00
 22552              	.LASF323:
 22553 11f4 41666542 		.ascii	"AfeBw\000"
 22553      7700
 22554              	.LASF208:
 22555 11fa 56526566 		.ascii	"VRef1p11\000"
 22555      31703131 
 22555      00
 22556              	.LASF462:
 22557 1203 61666572 		.ascii	"aferef_cfg\000"
 22557      65665F63 
 22557      666700
 22558              	.LASF372:
 22559 120e 41443539 		.ascii	"AD5940_ADCDigCompCfgS\000"
 22559      34305F41 
 22559      44434469 
 22559      67436F6D 
 22559      70436667 
 22560              	.LASF63:
 22561 1224 53746174 		.ascii	"StatEnable\000"
 22561      456E6162 
 22561      6C6500
 22562              	.LASF195:
 22563 122f 62433256 		.ascii	"bC2V_DAC12B\000"
 22563      5F444143 
 22563      31324200 
 22564              	.LASF160:
 22565 123b 53455149 		.ascii	"SEQInfo_Type\000"
 22565      6E666F5F 
 22565      54797065 
 22565      00
 22566              	.LASF64:
 22567 1248 53746174 		.ascii	"StatCfg_Type\000"
 22567      4366675F 
 22567      54797065 
 22567      00
 22568              	.LASF229:
 22569 1255 69496D70 		.ascii	"iImpCar_Type\000"
 22569      4361725F 
 22569      54797065 
 22569      00
 22570              	.LASF507:
 22571 1262 45786369 		.ascii	"ExcitVolt\000"
 22571      74566F6C 
 22571      7400
 22572              	.LASF306:
 22573 126c 41443539 		.ascii	"AD5940_FIFORd\000"
 22573      34305F46 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 489


 22573      49464F52 
 22573      6400
 22574              	.LASF30:
 22575 127a 4C703156 		.ascii	"Lp1V1BuffEn\000"
 22575      31427566 
 22575      66456E00 
 22576              	.LASF136:
 22577 1286 46756E63 		.ascii	"FuncSet\000"
 22577      53657400 
 22578              	.LASF477:
 22579 128e 70414443 		.ascii	"pADCPGACal\000"
 22579      50474143 
 22579      616C00
 22580              	.LASF283:
 22581 1299 70537472 		.ascii	"pStruct\000"
 22581      75637400 
 22582              	.LASF426:
 22583 12a1 41443539 		.ascii	"AD5940_HFOSC32MHzCtrl\000"
 22583      34305F48 
 22583      464F5343 
 22583      33324D48 
 22583      7A437472 
 22584              	.LASF354:
 22585 12b7 41443539 		.ascii	"AD5940_LPDACWriteS\000"
 22585      34305F4C 
 22585      50444143 
 22585      57726974 
 22585      655300
 22586              	.LASF360:
 22587 12ca 704C7041 		.ascii	"pLpAmpCfg\000"
 22587      6D704366 
 22587      6700
 22588              	.LASF503:
 22589 12d4 70526573 		.ascii	"pResult\000"
 22589      756C7400 
 22590              	.LASF45:
 22591 12dc 41444353 		.ascii	"ADCSinc2Osr\000"
 22591      696E6332 
 22591      4F737200 
 22592              	.LASF53:
 22593 12e8 44667453 		.ascii	"DftSrc\000"
 22593      726300
 22594              	.LASF87:
 22595 12ef 4C704461 		.ascii	"LpDacSW\000"
 22595      63535700 
 22596              	.LASF287:
 22597 12f7 6B466163 		.ascii	"kFactor\000"
 22597      746F7200 
 22598              	.LASF86:
 22599 12ff 4C704461 		.ascii	"LpDacVbiasMux\000"
 22599      63566269 
 22599      61734D75 
 22599      7800
 22600              	.LASF2:
 22601 130d 6C6F6E67 		.ascii	"long double\000"
 22601      20646F75 
 22601      626C6500 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 490


 22602              	.LASF73:
 22603 1319 44696F64 		.ascii	"DiodeClose\000"
 22603      65436C6F 
 22603      736500
 22604              	.LASF149:
 22605 1324 53657145 		.ascii	"SeqEnable\000"
 22605      6E61626C 
 22605      6500
 22606              	.LASF153:
 22607 132e 53657157 		.ascii	"SeqWrTimer\000"
 22607      7254696D 
 22607      657200
 22608              	.LASF461:
 22609 1339 41443539 		.ascii	"AD5940_ShutDownS\000"
 22609      34305F53 
 22609      68757444 
 22609      6F776E53 
 22609      00
 22610              	.LASF544:
 22611 134a 77757074 		.ascii	"wupt_cfg\000"
 22611      5F636667 
 22611      00
 22612              	.LASF247:
 22613 1353 52656749 		.ascii	"RegIndex\000"
 22613      6E646578 
 22613      00
 22614              	.LASF416:
 22615 135c 41443539 		.ascii	"AD5940_WUPTCfg\000"
 22615      34305F57 
 22615      55505443 
 22615      666700
 22616              	.LASF424:
 22617 136b 70436C6B 		.ascii	"pClkCfg\000"
 22617      43666700 
 22618              	.LASF551:
 22619 1373 61643539 		.ascii	"ad5940.c\000"
 22619      34302E63 
 22619      00
 22620              	.LASF386:
 22621 137c 4669666F 		.ascii	"FifoSrc\000"
 22621      53726300 
 22622              	.LASF470:
 22623 1384 41443539 		.ascii	"AD5940_HWReset\000"
 22623      34305F48 
 22623      57526573 
 22623      657400
 22624              	.LASF166:
 22625 1393 57757074 		.ascii	"WuptOrder\000"
 22625      4F726465 
 22625      7200
 22626              	.LASF359:
 22627 139d 41443539 		.ascii	"AD5940_LPAMPCfgS\000"
 22627      34305F4C 
 22627      50414D50 
 22627      43666753 
 22627      00
 22628              	.LASF393:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 491


 22629 13ae 41443539 		.ascii	"AD5940_SEQCtrlS\000"
 22629      34305F53 
 22629      45514374 
 22629      726C5300 
 22630              	.LASF454:
 22631 13be 4C504D6F 		.ascii	"LPModeEn\000"
 22631      6465456E 
 22631      00
 22632              	.LASF13:
 22633 13c7 6C6F6E67 		.ascii	"long long unsigned int\000"
 22633      206C6F6E 
 22633      6720756E 
 22633      7369676E 
 22633      65642069 
 22634              	.LASF159:
 22635 13de 70536571 		.ascii	"pSeqCmd\000"
 22635      436D6400 
 22636              	.LASF489:
 22637 13e6 45787065 		.ascii	"ExpectedGainCode\000"
 22637      63746564 
 22637      4761696E 
 22637      436F6465 
 22637      00
 22638              	.LASF202:
 22639 13f7 4C504441 		.ascii	"LPDACPara_Type\000"
 22639      43506172 
 22639      615F5479 
 22639      706500
 22640              	.LASF259:
 22641 1406 41443539 		.ascii	"AD5940_SEQCycleTime\000"
 22641      34305F53 
 22641      45514379 
 22641      636C6554 
 22641      696D6500 
 22642              	.LASF19:
 22643 141a 75696E74 		.ascii	"uint16_t\000"
 22643      31365F74 
 22643      00
 22644              	.LASF548:
 22645 1423 53657142 		.ascii	"SeqBB\000"
 22645      4200
 22646              	.LASF284:
 22647 1429 53747275 		.ascii	"StructSize\000"
 22647      63745369 
 22647      7A6500
 22648              	.LASF369:
 22649 1434 41443539 		.ascii	"AD5940_ADCPowerCtrlS\000"
 22649      34305F41 
 22649      4443506F 
 22649      77657243 
 22649      74726C53 
 22650              	.LASF331:
 22651 1449 70487344 		.ascii	"pHsDacCfg\000"
 22651      61634366 
 22651      6700
 22652              	.LASF222:
 22653 1453 536F6674 		.ascii	"SoftSweepCfg_Type\000"
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 492


 22653      53776565 
 22653      70436667 
 22653      5F547970 
 22653      6500
 22654              	.LASF101:
 22655 1465 4C705469 		.ascii	"LpTiaPwrEn\000"
 22655      61507772 
 22655      456E00
 22656              	.LASF243:
 22657 1470 41443539 		.ascii	"AD5940_SEQGenGetRegDefault\000"
 22657      34305F53 
 22657      45514765 
 22657      6E476574 
 22657      52656744 
 22658              	.LASF465:
 22659 148b 54727943 		.ascii	"TryCount\000"
 22659      6F756E74 
 22659      00
 22660              	.LASF381:
 22661 1494 7265675F 		.ascii	"reg_adcfilter\000"
 22661      61646366 
 22661      696C7465 
 22661      7200
 22662              	.LASF511:
 22663 14a2 44667452 		.ascii	"DftRcal\000"
 22663      63616C00 
 22664              	.LASF262:
 22665 14aa 76616C75 		.ascii	"value\000"
 22665      6500
 22666              	.LASF316:
 22667 14b0 53746174 		.ascii	"State\000"
 22667      6500
 22668              	.LASF525:
 22669 14b6 6F666673 		.ascii	"offset_rcal\000"
 22669      65745F72 
 22669      63616C00 
 22670              	.LASF318:
 22671 14c2 41443539 		.ascii	"AD5940_LPModeCtrlS\000"
 22671      34305F4C 
 22671      504D6F64 
 22671      65437472 
 22671      6C5300
 22672              	.LASF248:
 22673 14d5 41443539 		.ascii	"AD5940_SEQRegInfoInsert\000"
 22673      34305F53 
 22673      45515265 
 22673      67496E66 
 22673      6F496E73 
 22674              	.LASF496:
 22675 14ed 6C706C6F 		.ascii	"lploop_cfg\000"
 22675      6F705F63 
 22675      666700
 22676              	.LASF370:
 22677 14f8 41443539 		.ascii	"AD5940_ADCConvtCtrlS\000"
 22677      34305F41 
 22677      4443436F 
 22677      6E767443 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 493


 22677      74726C53 
 22678              	.LASF347:
 22679 150d 66726571 		.ascii	"freq_word\000"
 22679      5F776F72 
 22679      6400
 22680              	.LASF412:
 22681 1517 70696E5F 		.ascii	"pin_count\000"
 22681      636F756E 
 22681      7400
 22682              	.LASF213:
 22683 1521 44617461 		.ascii	"DataCount\000"
 22683      436F756E 
 22683      7400
 22684              	.LASF279:
 22685 152b 70537765 		.ascii	"pSweepCfg\000"
 22685      65704366 
 22685      6700
 22686              	.LASF27:
 22687 1535 48703156 		.ascii	"Hp1V8BuffEn\000"
 22687      38427566 
 22687      66456E00 
 22688              	.LASF401:
 22689 1541 70536571 		.ascii	"pSeq\000"
 22689      00
 22690              	.LASF510:
 22691 1546 5767416D 		.ascii	"WgAmpWord\000"
 22691      70576F72 
 22691      6400
 22692              	.LASF340:
 22693 1550 48535449 		.ascii	"HSTIARtia\000"
 22693      41527469 
 22693      6100
 22694              	.LASF52:
 22695 155a 4466744E 		.ascii	"DftNum\000"
 22695      756D00
 22696              	.LASF459:
 22697 1561 41443539 		.ascii	"AD5940_SEQHaltS\000"
 22697      34305F53 
 22697      45514861 
 22697      6C745300 
 22698              	.LASF214:
 22699 1571 52617469 		.ascii	"RatioSys2AdcClk\000"
 22699      6F537973 
 22699      32416463 
 22699      436C6B00 
 22700              	.LASF526:
 22701 1581 6F666673 		.ascii	"offset_rtia\000"
 22701      65745F72 
 22701      74696100 
 22702              	.LASF257:
 22703 158d 62466C61 		.ascii	"bFlag\000"
 22703      6700
 22704              	.LASF460:
 22705 1593 41443539 		.ascii	"AD5940_EnterSleepS\000"
 22705      34305F45 
 22705      6E746572 
 22705      536C6565 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 494


 22705      705300
 22706              	.LASF38:
 22707 15a6 44697363 		.ascii	"Disc1V1Cap\000"
 22707      31563143 
 22707      617000
 22708              	.LASF543:
 22709 15b1 73657169 		.ascii	"seqinfo\000"
 22709      6E666F00 
 22710              	.LASF449:
 22711 15b9 41443539 		.ascii	"AD5940_AGPIOPen\000"
 22711      34305F41 
 22711      4750494F 
 22711      50656E00 
 22712              	.LASF421:
 22713 15c9 536C6565 		.ascii	"SleepTime\000"
 22713      7054696D 
 22713      6500
 22714              	.LASF423:
 22715 15d3 41443539 		.ascii	"AD5940_CLKCfg\000"
 22715      34305F43 
 22715      4C4B4366 
 22715      6700
 22716              	.LASF237:
 22717 15e1 52656743 		.ascii	"RegCount\000"
 22717      6F756E74 
 22717      00
 22718              	.LASF410:
 22719 15ea 7265675F 		.ascii	"reg_ei0con\000"
 22719      65693063 
 22719      6F6E00
 22720              	.LASF286:
 22721 15f5 636F6465 		.ascii	"code\000"
 22721      00
 22722              	.LASF95:
 22723 15fa 4C705469 		.ascii	"LpTiaRf\000"
 22723      61526600 
 22724              	.LASF471:
 22725 1602 5F5F4144 		.ascii	"__AD5940_ReferenceON\000"
 22725      35393430 
 22725      5F526566 
 22725      6572656E 
 22725      63654F4E 
 22726              	.LASF487:
 22727 1617 45787065 		.ascii	"ExpectedCode\000"
 22727      63746564 
 22727      436F6465 
 22727      00
 22728              	.LASF435:
 22729 1624 72656761 		.ascii	"regaddr\000"
 22729      64647200 
 22730              	.LASF513:
 22731 162c 41443539 		.ascii	"AD5940_LPRtiaCal\000"
 22731      34305F4C 
 22731      50527469 
 22731      6143616C 
 22731      00
 22732              	.LASF472:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 495


 22733 163d 7265665F 		.ascii	"ref_cfg\000"
 22733      63666700 
 22734              	.LASF549:
 22735 1645 62497353 		.ascii	"bIsS2silicon\000"
 22735      3273696C 
 22735      69636F6E 
 22735      00
 22736              	.LASF99:
 22737 1652 4C705469 		.ascii	"LpTiaSW\000"
 22737      61535700 
 22738              	.LASF400:
 22739 165a 41443539 		.ascii	"AD5940_SEQInfoCfg\000"
 22739      34305F53 
 22739      4551496E 
 22739      666F4366 
 22739      6700
 22740              	.LASF141:
 22741 166c 41475049 		.ascii	"AGPIOCfg_Type\000"
 22741      4F436667 
 22741      5F547970 
 22741      6500
 22742              	.LASF199:
 22743 167a 62563243 		.ascii	"bV2C_DAC12B\000"
 22743      5F444143 
 22743      31324200 
 22744              	.LASF245:
 22745 1686 52656744 		.ascii	"RegData\000"
 22745      61746100 
 22746              	.LASF305:
 22747 168e 44617461 		.ascii	"Data\000"
 22747      00
 22748              	.LASF398:
 22749 1693 70436F6D 		.ascii	"pCommand\000"
 22749      6D616E64 
 22749      00
 22750              	.LASF530:
 22751 169c 41444350 		.ascii	"ADCPGA_Sel\000"
 22751      47415F53 
 22751      656C00
 22752              	.LASF5:
 22753 16a7 73686F72 		.ascii	"short int\000"
 22753      7420696E 
 22753      7400
 22754              	.LASF357:
 22755 16b1 41443539 		.ascii	"AD5940_LPDAC0WriteS\000"
 22755      34305F4C 
 22755      50444143 
 22755      30577269 
 22755      74655300 
 22756              	.LASF394:
 22757 16c5 53657145 		.ascii	"SeqEn\000"
 22757      6E00
 22758              	.LASF409:
 22759 16cb 70536571 		.ascii	"pSeqGpioTrigCfg\000"
 22759      4770696F 
 22759      54726967 
 22759      43666700 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 496


 22760              	.LASF414:
 22761 16db 6D6F6465 		.ascii	"mode\000"
 22761      00
 22762              	.LASF150:
 22763 16e0 53657142 		.ascii	"SeqBreakEn\000"
 22763      7265616B 
 22763      456E00
 22764              	.LASF365:
 22765 16eb 41443539 		.ascii	"AD5940_ADCBaseCfgS\000"
 22765      34305F41 
 22765      44434261 
 22765      73654366 
 22765      675300
 22766              	.LASF382:
 22767 16fe 41443539 		.ascii	"AD5940_FIFOCfg\000"
 22767      34305F46 
 22767      49464F43 
 22767      666700
 22768              	.LASF364:
 22769 170d 41666552 		.ascii	"AfeResultSel\000"
 22769      6573756C 
 22769      7453656C 
 22769      00
 22770              	.LASF377:
 22771 171a 4E756D62 		.ascii	"Number\000"
 22771      657200
 22772              	.LASF59:
 22773 1721 4144434D 		.ascii	"ADCMaxHys\000"
 22773      61784879 
 22773      7300
 22774              	.LASF274:
 22775 172b 73696E63 		.ascii	"sinc3osr_table\000"
 22775      336F7372 
 22775      5F746162 
 22775      6C6500
 22776              	.LASF506:
 22777 173a 45786369 		.ascii	"ExcitBuffGain\000"
 22777      74427566 
 22777      66476169 
 22777      6E00
 22778              	.LASF255:
 22779 1748 6C617374 		.ascii	"lasterror\000"
 22779      6572726F 
 22779      7200
 22780              	.LASF144:
 22781 1752 4649464F 		.ascii	"FIFOSize\000"
 22781      53697A65 
 22781      00
 22782              	.LASF508:
 22783 175b 52746961 		.ascii	"RtiaVal\000"
 22783      56616C00 
 22784              	.LASF270:
 22785 1763 646C5F36 		.ascii	"dl_60Hz\000"
 22785      30487A00 
 22786              	.LASF332:
 22787 176b 5F5F4144 		.ascii	"__AD5940_SetDExRTIA\000"
 22787      35393430 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 497


 22787      5F536574 
 22787      44457852 
 22787      54494100 
 22788              	.LASF337:
 22789 177f 41443539 		.ascii	"AD5940_HSTIACfgS\000"
 22789      34305F48 
 22789      53544941 
 22789      43666753 
 22789      00
 22790              	.LASF261:
 22791 1790 5F69735F 		.ascii	"_is_value_in_table\000"
 22791      76616C75 
 22791      655F696E 
 22791      5F746162 
 22791      6C6500
 22792              	.LASF128:
 22793 17a3 4C70416D 		.ascii	"LpAmpCfg\000"
 22793      70436667 
 22793      00
 22794              	.LASF457:
 22795 17ac 41443539 		.ascii	"AD5940_SleepKeyCtrlS\000"
 22795      34305F53 
 22795      6C656570 
 22795      4B657943 
 22795      74726C53 
 22796              	.LASF275:
 22797 17c1 66696C74 		.ascii	"filter\000"
 22797      657200
 22798              	.LASF236:
 22799 17c8 70526567 		.ascii	"pRegInfo\000"
 22799      496E666F 
 22799      00
 22800              	.LASF358:
 22801 17d1 41443539 		.ascii	"AD5940_LPDAC1WriteS\000"
 22801      34305F4C 
 22801      50444143 
 22801      31577269 
 22801      74655300 
 22802              	.LASF131:
 22803 17e5 41444346 		.ascii	"ADCFilterCfg\000"
 22803      696C7465 
 22803      72436667 
 22803      00
 22804              	.LASF280:
 22805 17f2 704E6578 		.ascii	"pNextFreq\000"
 22805      74467265 
 22805      7100
 22806              	.LASF519:
 22807 17fc 41444350 		.ascii	"ADCPGAGainTable\000"
 22807      47414761 
 22807      696E5461 
 22807      626C6500 
 22808              	.LASF429:
 22809 180c 52644850 		.ascii	"RdHPOSCCON\000"
 22809      4F534343 
 22809      4F4E00
 22810              	.LASF415:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 498


 22811 1817 6269745F 		.ascii	"bit_position\000"
 22811      706F7369 
 22811      74696F6E 
 22811      00
 22812              	.LASF333:
 22813 1824 44457850 		.ascii	"DExPin\000"
 22813      696E00
 22814              	.LASF212:
 22815 182b 44617461 		.ascii	"DataType\000"
 22815      54797065 
 22815      00
 22816              	.LASF267:
 22817 1834 61766169 		.ascii	"available_sinc2_osr\000"
 22817      6C61626C 
 22817      655F7369 
 22817      6E63325F 
 22817      6F737200 
 22818              	.LASF443:
 22819 1848 41443539 		.ascii	"AD5940_AGPIOFuncCfg\000"
 22819      34305F41 
 22819      4750494F 
 22819      46756E63 
 22819      43666700 
 22820              	.LASF177:
 22821 185c 4C464F53 		.ascii	"LFOSCEn\000"
 22821      43456E00 
 22822              	.LASF118:
 22823 1864 54726170 		.ascii	"TrapzCfg\000"
 22823      7A436667 
 22823      00
 22824              	.LASF240:
 22825 186d 70496E64 		.ascii	"pIndex\000"
 22825      657800
 22826              	.LASF529:
 22827 1874 4C45425F 		.ascii	"LEB_Denominator\000"
 22827      44656E6F 
 22827      6D696E61 
 22827      746F7200 
 22828              	.LASF21:
 22829 1884 75696E74 		.ascii	"uint32_t\000"
 22829      33325F74 
 22829      00
 22830              	.LASF374:
 22831 188d 41443539 		.ascii	"AD5940_StatisticCfgS\000"
 22831      34305F53 
 22831      74617469 
 22831      73746963 
 22831      43666753 
 22832              	.LASF201:
 22833 18a2 62563243 		.ascii	"bV2C_DAC6B\000"
 22833      5F444143 
 22833      364200
 22834              	.LASF302:
 22835 18ad 41443539 		.ascii	"AD5940_ReadWrite32B\000"
 22835      34305F52 
 22835      65616457 
 22835      72697465 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 499


 22835      33324200 
 22836              	.LASF92:
 22837 18c1 44616344 		.ascii	"DacData6Bit\000"
 22837      61746136 
 22837      42697400 
 22838              	.LASF448:
 22839 18cd 41443539 		.ascii	"AD5940_AGPIOIn\000"
 22839      34305F41 
 22839      4750494F 
 22839      496E00
 22840              	.LASF90:
 22841 18dc 506F7765 		.ascii	"PowerEn\000"
 22841      72456E00 
 22842              	.LASF538:
 22843 18e4 70467265 		.ascii	"pFreq\000"
 22843      7100
 22844              	.LASF225:
 22845 18ea 66496D70 		.ascii	"fImpPol_Type\000"
 22845      506F6C5F 
 22845      54797065 
 22845      00
 22846              	.LASF123:
 22847 18f7 48734461 		.ascii	"HsDacCfg\000"
 22847      63436667 
 22847      00
 22848              	.LASF512:
 22849 1900 44667452 		.ascii	"DftRtia\000"
 22849      74696100 
 22850              	.LASF438:
 22851 1908 41666549 		.ascii	"AfeIntSrcSel\000"
 22851      6E745372 
 22851      6353656C 
 22851      00
 22852              	.LASF265:
 22853 1915 41443539 		.ascii	"AD5940_Notch50HzAvailable\000"
 22853      34305F4E 
 22853      6F746368 
 22853      3530487A 
 22853      41766169 
 22854              	.LASF8:
 22855 192f 73686F72 		.ascii	"short unsigned int\000"
 22855      7420756E 
 22855      7369676E 
 22855      65642069 
 22855      6E7400
 22856              	.LASF266:
 22857 1942 7046696C 		.ascii	"pFilterInfo\000"
 22857      74657249 
 22857      6E666F00 
 22858              	.LASF185:
 22859 194e 48535254 		.ascii	"HSRTIACal_Type\000"
 22859      49414361 
 22859      6C5F5479 
 22859      706500
 22860              	.LASF51:
 22861 195d 41444346 		.ascii	"ADCFilterCfg_Type\000"
 22861      696C7465 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 500


 22861      72436667 
 22861      5F547970 
 22861      6500
 22862              	.LASF355:
 22863 196f 44617461 		.ascii	"Data12Bit\000"
 22863      31324269 
 22863      7400
 22864              	.LASF54:
 22865 1979 48616E57 		.ascii	"HanWinEn\000"
 22865      696E456E 
 22865      00
 22866              	.LASF515:
 22867 1982 70535743 		.ascii	"pSWCfg\000"
 22867      666700
 22868              	.LASF300:
 22869 1989 53656E64 		.ascii	"SendBuffer\000"
 22869      42756666 
 22869      657200
 22870              	.LASF540:
 22871 1994 54696D65 		.ascii	"TimerCount2\000"
 22871      72436F75 
 22871      6E743200 
 22872              	.LASF481:
 22873 19a0 72656761 		.ascii	"regaddr_gain\000"
 22873      6464725F 
 22873      6761696E 
 22873      00
 22874              	.LASF155:
 22875 19ad 53657149 		.ascii	"SeqId\000"
 22875      6400
 22876              	.LASF162:
 22877 19b3 53657150 		.ascii	"SeqPinTrigMode\000"
 22877      696E5472 
 22877      69674D6F 
 22877      646500
 22878              	.LASF152:
 22879 19c2 53657143 		.ascii	"SeqCntCRCClr\000"
 22879      6E744352 
 22879      43436C72 
 22879      00
 22880              	.LASF9:
 22881 19cf 5F5F696E 		.ascii	"__int32_t\000"
 22881      7433325F 
 22881      7400
 22882              	.LASF26:
 22883 19d9 48704261 		.ascii	"HpBandgapEn\000"
 22883      6E646761 
 22883      70456E00 
 22884              	.LASF192:
 22885 19e5 54696D65 		.ascii	"TimeOut10us\000"
 22885      4F757431 
 22885      30757300 
 22886              	.LASF200:
 22887 19f1 6B563243 		.ascii	"kV2C_DAC6B\000"
 22887      5F444143 
 22887      364200
 22888              	.LASF241:
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 501


 22889 19fc 74656D70 		.ascii	"temp\000"
 22889      00
 22890              	.LASF114:
 22891 1a01 57475369 		.ascii	"WGSinCfg_Type\000"
 22891      6E436667 
 22891      5F547970 
 22891      6500
 22892              	.LASF339:
 22893 1a0f 41443539 		.ascii	"AD5940_HSRTIACfgS\000"
 22893      34305F48 
 22893      53525449 
 22893      41436667 
 22893      5300
 22894              	.LASF380:
 22895 1a21 7265675F 		.ascii	"reg_dftcon\000"
 22895      64667463 
 22895      6F6E00
 22896              	.LASF135:
 22897 1a2c 44535043 		.ascii	"DSPCfg_Type\000"
 22897      66675F54 
 22897      79706500 
 22898              	.LASF147:
 22899 1a38 4649464F 		.ascii	"FIFOCfg_Type\000"
 22899      4366675F 
 22899      54797065 
 22899      00
 22900              	.LASF379:
 22901 1a45 70446674 		.ascii	"pDftCfg\000"
 22901      43666700 
 22902              	.LASF404:
 22903 1a4d 41443539 		.ascii	"AD5940_SEQGpioCtrlS\000"
 22903      34305F53 
 22903      45514770 
 22903      696F4374 
 22903      726C5300 
 22904              	.LASF82:
 22905 1a61 48534441 		.ascii	"HSDACCfg_Type\000"
 22905      43436667 
 22905      5F547970 
 22905      6500
 22906              	.LASF427:
 22907 1a6f 4D6F6465 		.ascii	"Mode32MHz\000"
 22907      33324D48 
 22907      7A00
 22908              	.LASF334:
 22909 1a79 44655274 		.ascii	"DeRtia\000"
 22909      696100
 22910              	.LASF396:
 22911 1a80 41443539 		.ascii	"AD5940_SEQCmdWrite\000"
 22911      34305F53 
 22911      4551436D 
 22911      64577269 
 22911      746500
 22912              	.LASF197:
 22913 1a93 62433256 		.ascii	"bC2V_DAC6B\000"
 22913      5F444143 
 22913      364200
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 502


 22914              	.LASF298:
 22915 1a9e 64617461 		.ascii	"data\000"
 22915      00
 22916              	.LASF524:
 22917 1aa3 5263616C 		.ascii	"RcalVolt\000"
 22917      566F6C74 
 22917      00
 22918              	.LASF492:
 22919 1aac 48534441 		.ascii	"HSDACCode\000"
 22919      43436F64 
 22919      6500
 22920              	.LASF384:
 22921 1ab6 41443539 		.ascii	"AD5940_FIFOGetCfg\000"
 22921      34305F46 
 22921      49464F47 
 22921      65744366 
 22921      6700
 22922              	.LASF80:
 22923 1ac8 48734461 		.ascii	"HsDacGain\000"
 22923      63476169 
 22923      6E00
 22924              	.LASF531:
 22925 1ad2 6248504D 		.ascii	"bHPMode\000"
 22925      6F646500 
 22926              	.LASF130:
 22927 1ada 41444342 		.ascii	"ADCBaseCfg\000"
 22927      61736543 
 22927      666700
 22928              	.LASF125:
 22929 1ae5 48735469 		.ascii	"HsTiaCfg\000"
 22929      61436667 
 22929      00
 22930              	.LASF282:
 22931 1aee 41443539 		.ascii	"AD5940_StructInit\000"
 22931      34305F53 
 22931      74727563 
 22931      74496E69 
 22931      7400
 22932              	.LASF256:
 22933 1b00 41443539 		.ascii	"AD5940_SEQGenCtrl\000"
 22933      34305F53 
 22933      45514765 
 22933      6E437472 
 22933      6C00
 22934              	.LASF100:
 22935 1b12 4C705061 		.ascii	"LpPaPwrEn\000"
 22935      50777245 
 22935      6E00
 22936              	.LASF362:
 22937 1b1c 70445350 		.ascii	"pDSPCfg\000"
 22937      43666700 
 22938              	.LASF227:
 22939 1b24 496D6167 		.ascii	"Image\000"
 22939      6500
 22940              	.LASF93:
 22941 1b2a 4C504441 		.ascii	"LPDACCfg_Type\000"
 22941      43436667 
ARM GAS  C:\Users\ANDREA~1\AppData\Local\Temp\ccrPnGaI.s 			page 503


 22941      5F547970 
 22941      6500
 22942              	.LASF405:
 22943 1b38 4770696F 		.ascii	"Gpio\000"
 22943      00
 22944              	.LASF309:
 22945 1b3d 41443539 		.ascii	"AD5940_ReadReg\000"
 22945      34305F52 
 22945      65616452 
 22945      656700
 22946              	.LASF336:
 22947 1b4c 44655274 		.ascii	"DeRtiaTable\000"
 22947      69615461 
 22947      626C6500 
 22948              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
